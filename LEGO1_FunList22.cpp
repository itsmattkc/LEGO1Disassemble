#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD __stdcall LEGO1_sub_100C4B50(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	MOV EDI, ECX
loc_100C4B5C:
	MOV ECX,DWORD PTR [EDI+0x10]
	MOV EAX,DWORD PTR [ECX+0x0C]
	TEST EAX, EAX
	JNZ loc_100C4B71
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [ECX+0x0C],EDX
	JMP loc_100C4B77
loc_100C4B71:
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x0C],EAX
loc_100C4B77:
	MOV EAX,DWORD PTR [ECX+0x0C]
	TEST EAX, EAX
	JZ FAR loc_100C4C73
	MOV ECX,DWORD PTR [EAX]
	TEST EAX, EAX
	MOV DWORD PTR [ESP+var_8+0x14],ECX
	JZ FAR loc_100C4C73
	MOV EBX,DWORD PTR [ESP+var_8+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EBX, 0x04
	CMP DWORD PTR [EBX],EAX
	JLE FAR loc_100C4C63
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [ESI+0x0C],ECX
	JLE loc_100C4B5C
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC36C0_sub_100C46C0])
loc_100C4BB8:
	MOV ECX,DWORD PTR [EDI+0x14]
	MOV EAX,DWORD PTR [ECX+0x0C]
	TEST EAX, EAX
	JNZ loc_100C4BCD
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [ECX+0x0C],EDX
	JMP loc_100C4BD3
loc_100C4BCD:
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x0C],EAX
loc_100C4BD3:
	MOV EAX,DWORD PTR [ECX+0x0C]
	TEST EAX, EAX
	JZ loc_100C4B5C
	MOV ECX,DWORD PTR [EAX]
	TEST EAX, EAX
	MOV DWORD PTR [ESP+var_8+0x18],ECX
	JZ FAR loc_100C4B5C
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	MOV ECX,DWORD PTR [ESI]
	CMP DWORD PTR [EAX+0x04],ECX
	JLE FAR loc_100C4B5C
	MOV ECX,DWORD PTR [ESI+0x08]
	CMP DWORD PTR [EAX],ECX
	JGE loc_100C4BB8
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [ESP+var_8+0x18]
	PUSH EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EDX
	MOV EDX,DWORD PTR [ESP+var_8+0x20]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC3980_sub_100C4980])
	MOV EDX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX]
	CMP EAX, ECX
	JG loc_100C4C2B
	MOV EAX, ECX
loc_100C4C2B:
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ESI+0x04]
	CMP EAX, ECX
	JG loc_100C4C39
	MOV EAX, ECX
loc_100C4C39:
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV ECX,DWORD PTR [ESI+0x08]
	CMP EAX, ECX
	JL loc_100C4C48
	MOV EAX, ECX
loc_100C4C48:
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EDX+0x0C]
	CMP ECX, EAX
	JL loc_100C4C57
	MOV ECX, EAX
loc_100C4C57:
	POP EDI
	MOV DWORD PTR [EDX+0x0C],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_100C4C63:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x3C])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_100C4C73:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x3C])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C4C90(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC3D61_proc_100C4D61]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [ECX],EAX
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x18
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	XOR EBX, EBX
	MOV DWORD PTR [ESI+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mC3D40_loc_100C4D40])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C40_ptr]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.mC3DE0_proc_100C4DE0]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C58_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x14],EBX
	MOV DWORD PTR [EDI+0x10],EBX
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C70_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.mC3E80_proc_100C4E80]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C88_ptr]
	JMP_LONG(offset [LEGO1_text.mC3D42_loc_100C4D42])
}
}

__declspec(naked) DWORD LEGO1_proc_100C4D20()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100C4D28()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3D90_loc_100C4D90])
}
}

__declspec(naked) DWORD LEGO1_proc_100C4D30()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3DF0_loc_100C4DF0])
}
}

__declspec(naked) DWORD LEGO1_proc_100C4D38()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3F00_loc_100C4F00])
}
}

__declspec(naked) DWORD LEGO1_loc_100C4D40()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mC3D42_loc_100C4D42])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100C4D42(DWORD arg1, DWORD arg2)
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100C4DD7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C4E73()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3D90_loc_100C4D90])
}
}

__declspec(naked) DWORD LEGO1_sub_100C4EE9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3F00_loc_100C4F00])
}
}

__declspec(naked) DWORD LEGO1_sub_100C4F41()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3DF0_loc_100C4DF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C4FAF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C505B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3D90_loc_100C4D90])
}
}

__declspec(naked) DWORD LEGO1_sub_100C50C9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3DF0_loc_100C4DF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C50E0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC425A_proc_100C525A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x18
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ECX],EAX
	XOR EBX, EBX
	MOV EDX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ECX+0x04],EDX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mC4194_loc_100C5194])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C40_ptr]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.mC3DE0_proc_100C4DE0]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C58_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x14],EBX
	MOV DWORD PTR [EDI+0x10],EBX
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C70_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.mC3E80_proc_100C4E80]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8C88_ptr]
	JMP_LONG(offset [LEGO1_text.mC4196_loc_100C5196])
}
}

__declspec(naked) DWORD LEGO1_proc_100C5174()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100C517C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3D90_loc_100C4D90])
}
}

__declspec(naked) DWORD LEGO1_proc_100C5184()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3DF0_loc_100C4DF0])
}
}

__declspec(naked) DWORD LEGO1_proc_100C518C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3F00_loc_100C4F00])
}
}

__declspec(naked) DWORD LEGO1_loc_100C5194()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mC4196_loc_100C5196])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100C5196(DWORD arg1)
{
	enum{
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH 0x08
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ECX+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000005
	TEST EAX, EAX
	JZ loc_100C51CA
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [ESI]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_100C51D1
loc_100C51CA:
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],0x00000000
loc_100C51D1:
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH 0x0C
	MOV EBX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000006
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100C5211
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_100C5211:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	TEST ESI, ESI
	JZ loc_100C5221
	MOV DWORD PTR [ESI+0x08],EAX
	JMP loc_100C5224
loc_100C5221:
	MOV DWORD PTR [EBX+0x10],EAX
loc_100C5224:
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV DWORD PTR [EBX+0x14],EAX
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	INC DWORD PTR [EBX+0x08]
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_100C5240()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100C524D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C5280(DWORD arg1, DWORD arg2)
{
	enum{
		var_38 = -0x38,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC44DE_proc_100C54DE]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX+0x08]
	SUB ESP, 0x28
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EAX
	XOR EDI, EDI
	MOV ESI, offset [LEGO1_rdata.m8BF8_ptr]
	CALL_LONG(offset [LEGO1_text.mC44F0_sub_100C54F0])
	MOV EAX, 0xFFFFFFFF
	MOV EBX, 0x00000002
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m8C10_ptr]
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(offset [LEGO1_text.mC44F0_sub_100C54F0])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_38+0x4],ESI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m8C10_ptr]
loc_100C5300:
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JNZ loc_100C530D
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100C5313
loc_100C530D:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100C5313:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JZ loc_100C5330
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_100C5330
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x04],ESI
	JL loc_100C5300
loc_100C5330:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ_LONG(offset [LEGO1_text.mC436D_loc_100C536D])
	PUSH 0x08
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EDX, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mC446C_loc_100C546C])
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EDI],ESI
	JMP_LONG(offset [LEGO1_text.mC4467_loc_100C5467])
}
}

__declspec(naked) DWORD LEGO1_proc_100C5360()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100C536D()
{
	enum{
		arg1217211 = 0x4A4AEC,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217214 = 0x4A4AF8,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [EAX]
	CMP ESI, EAX
	JLE loc_100C5378
	MOV ESI, EAX
loc_100C5378:
	MOV EBX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	CMP EBX, EAX
	JLE loc_100C53FD
	XOR EDI, EDI
loc_100C5381:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP EBX, EAX
	JGE loc_100C538D
	MOV EBX, EAX
loc_100C538D:
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC45B0_sub_100C55B0])
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],EDI
	JNZ loc_100C53A6
	MOV EAX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100C53AC
loc_100C53A6:
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100C53AC:
	MOV DWORD PTR [EBP+arg1217214-0x4A4B20],ECX
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],EDI
	JZ loc_100C53D2
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x0C])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mC4A40_sub_100C5A40])
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EDI
loc_100C53D2:
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],EDI
	JZ loc_100C53FD
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],ECX
	JZ loc_100C53FD
	MOV EAX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],ECX
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EDX
	CMP DWORD PTR [EAX],EBX
	JL loc_100C5381
loc_100C53FD:
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],0x00
	PUSH 0x08
	JZ_LONG(offset [LEGO1_text.mC444B_loc_100C544B])
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ECX, 0x00000000
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	TEST EDI, EDI
	JZ loc_100C5426
	MOV ECX, EDI
	MOV DWORD PTR [EDI],ESI
	MOV DWORD PTR [EDI+0x04],EBX
loc_100C5426:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x05
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],0x00
	JZ_LONG(offset [LEGO1_text.mC4482_loc_100C5482])
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC447D_loc_100C547D])
}
}

__declspec(naked) DWORD LEGO1_proc_100C543E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100C544B()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EDX, 0x00000000
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x08
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mC446C_loc_100C546C])
	MOV DWORD PTR [EDI],ESI
	JMP_LONG(offset [LEGO1_text.mC4467_loc_100C5467])
}
}

__declspec(naked) DWORD LEGO1_loc_100C5467()
{
__asm{
	MOV EDX, EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP_LONG(offset [LEGO1_text.mC446C_loc_100C546C])
}
}

__declspec(naked) DWORD LEGO1_loc_100C546C()
{
	enum{
		arg1217215 = 0x4A4AFC,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x05
	MOV EBX,DWORD PTR [ECX+0x14]
	PUSH EBX
	PUSH EDX
	JMP_LONG(offset [LEGO1_text.mC447D_loc_100C547D])
}
}

__declspec(naked) DWORD LEGO1_loc_100C547D()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mC48C0_sub_100C58C0])
	JMP_LONG(offset [LEGO1_text.mC4482_loc_100C5482])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100C5482(DWORD arg1, DWORD arg2)
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x02
	CALL_LONG(offset [LEGO1_text.mC44C6_sub_100C54C6])
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC44E8_sub_100C54E8])
	MOV EAX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_proc_100C54A9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C54C6()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC4560_loc_100C5560])
}
}

__declspec(naked) DWORD LEGO1_sub_100C54E8()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC4560_loc_100C5560])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C54F0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC4544_proc_100C5544]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8C28_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C55A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC3800_loc_100C4800])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C55B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	MOV EDX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [ECX+0x0C],EDX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C55D0()
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC478D_proc_100C578D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x0C
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100C561D
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EDI]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC3C90_sub_100C4C90])
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	JMP loc_100C5624
loc_100C561D:
	MOV DWORD PTR [EBP+var_28+0x4],0x00000000
loc_100C5624:
	MOV EBX, 0xFFFFFFFF
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EDI,DWORD PTR [EDI+0x08]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m8C28_ptr]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m8BF8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m8C10_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
loc_100C5672:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_100C5680
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100C5686
loc_100C5680:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100C5686:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ_LONG(offset [LEGO1_text.mC474D_loc_100C574D])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_30+0x4],ECX
	JZ_LONG(offset [LEGO1_text.mC474D_loc_100C574D])
	PUSH 0x08
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100C56CE
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [ESI+0x04],ECX
	JMP loc_100C56D5
loc_100C56CE:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_100C56D5:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100C570F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_100C570F:
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	TEST ESI, ESI
	JZ loc_100C5725
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP FAR loc_100C5672
loc_100C5725:
	MOV DWORD PTR [EBX+0x10],EAX
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP FAR loc_100C5672
}
}

__declspec(naked) DWORD LEGO1_proc_100C5733()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100C5740()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100C574D()
{
	enum{
		arg1217215 = 0x4A4AFC,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC4785_sub_100C5785])
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C5785()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC4560_loc_100C5560])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C57B0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC48A4_proc_100C58A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	MOV ESI,DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m8C28_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m8BF8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m8C10_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
loc_100C5814:
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	JNZ loc_100C5821
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ESI,DWORD PTR [EAX+0x10]
	JMP loc_100C5827
loc_100C5821:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EAX+0x08]
loc_100C5827:
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_100C587C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	JZ loc_100C587C
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ESI,DWORD PTR [EAX]
	CMP DWORD PTR [EDX+0x08],ESI
	JLE loc_100C586C
	MOV ESI,DWORD PTR [EDX]
	CMP DWORD PTR [EAX+0x04],ESI
	JLE loc_100C5814
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC48AE_sub_100C58AE])
	MOV AL, 0x01
loc_100C585B:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100C586C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC48AE_sub_100C58AE])
	XOR AL, AL
	JMP loc_100C585B
loc_100C587C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC48AE_sub_100C58AE])
	XOR AL, AL
	JMP loc_100C585B
}
}

__declspec(naked) DWORD LEGO1_sub_100C58AE()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC4560_loc_100C5560])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C58C0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC494A_proc_100C594A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100C590E
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],EDX
	MOV DWORD PTR [ESI+0x08],ECX
	JMP loc_100C5916
loc_100C590E:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
loc_100C5916:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EDX, EDX
	JZ loc_100C5926
	MOV DWORD PTR [EDX+0x08],EAX
	JMP loc_100C5929
loc_100C5926:
	MOV DWORD PTR [EDI+0x10],EAX
loc_100C5929:
	TEST ECX, ECX
	JZ loc_100C5945
	MOV DWORD PTR [ECX+0x04],EAX
loc_100C5930:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [EDI+0x08]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_100C5945:
	MOV DWORD PTR [EDI+0x14],EAX
	JMP loc_100C5930
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C5970(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC49FA_proc_100C59FA]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100C59BE
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],ECX
	MOV DWORD PTR [ESI+0x08],EDX
	JMP loc_100C59C6
loc_100C59BE:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
loc_100C59C6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST ECX, ECX
	JZ loc_100C59D6
	MOV DWORD PTR [ECX+0x08],EAX
	JMP loc_100C59D9
loc_100C59D6:
	MOV DWORD PTR [EDI+0x10],EAX
loc_100C59D9:
	TEST EDX, EDX
	JZ loc_100C59F5
	MOV DWORD PTR [EDX+0x04],EAX
loc_100C59E0:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [EDI+0x08]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_100C59F5:
	MOV DWORD PTR [EDI+0x14],EAX
	JMP loc_100C59E0
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C5A20(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C5A40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDI,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_100C5A59
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_100C5A5E
loc_100C5A59:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_100C5A5E:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100C5A6C
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_100C5A72
loc_100C5A6C:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x14],EAX
loc_100C5A72:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C5A90(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	XOR EBP, EBP
	MOV DWORD PTR [ESP+var_8+0x1C],EBP
	MOV DWORD PTR [ESP+var_C+0x1C],EBP
	CMP DWORD PTR [ESP+arg1+0x1C],EBP
	JZ FAR loc_100C5D2E
	MOV EBX,DWORD PTR [ESP+arg2+0x1C]
	CMP EBX, EBP
	JZ FAR loc_100C5D2E
	MOV EDI, EBX
	MOV DWORD PTR [EBX+0x000006A4],EBP
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	MOV ECX, 0x0000001A
	MOV DWORD PTR [EBX+0x000006A0],EBP
	MOV DWORD PTR [EBX+0x000006A8],EBP
	MOV DWORD PTR [EBX+0x000006AC],EBP
	REP MOVSD
	MOV ECX,DWORD PTR [EBX+0x14]
	MOV EAX,DWORD PTR [EBX+0x0C]
	SHL EAX, 0x02
	AND ECX, 0x01
	ADD DWORD PTR [ESP+arg1+0x1C],0x68
	LEA ECX,DWORD PTR [ECX*4+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [ESP+var_4+0x20],EAX
	ADD ESP, 0x04
	CMP EAX, EBP
	JNZ loc_100C5B0B
	MOV EBP, 0xFFFFFFFF
	JMP FAR loc_100C5D06
loc_100C5B0B:
	MOV EDX,DWORD PTR [EBX+0x14]
	MOV EAX,DWORD PTR [EBX+0x0C]
	SHL EAX, 0x02
	AND EDX, 0x01
	MOV EDI,DWORD PTR [ESP+var_4+0x1C]
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	LEA EDX,DWORD PTR [EDX*4+EAX]
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [EBX+0x14]
	MOV ECX,DWORD PTR [EBX+0x0C]
	SHL ECX, 0x02
	AND EAX, 0x01
	MOV DWORD PTR [EBX+0x000006B0],0x00000000
	LEA EAX,DWORD PTR [EAX*4+ECX]
	XOR EDX, EDX
	ADD DWORD PTR [ESP+arg1+0x1C],EAX
	MOV EAX,DWORD PTR [EBX+0x14]
	AND EAX, 0x01
	ADD EAX,DWORD PTR [EBX+0x0C]
	JZ loc_100C5B7F
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
loc_100C5B5E:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EBX+0x000006B0],EAX
	JNB loc_100C5B6E
	MOV DWORD PTR [EBX+0x000006B0],EAX
loc_100C5B6E:
	ADD ECX, 0x04
	INC EDX
	MOV EAX,DWORD PTR [EBX+0x14]
	AND EAX, 0x01
	ADD EAX,DWORD PTR [EBX+0x0C]
	CMP EAX, EDX
	JA loc_100C5B5E
loc_100C5B7F:
	MOV EAX,DWORD PTR [EBX+0x14]
	AND EAX, 0x01
	ADD EAX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [ESP+var_8+0x20],EAX
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ loc_100C5BA3
	MOV EBP, 0xFFFFFFFF
	JMP FAR loc_100C5D06
loc_100C5BA3:
	MOV EAX,DWORD PTR [EBX+0x14]
	MOV EDI,DWORD PTR [ESP+var_8+0x1C]
	AND EAX, 0x01
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	ADD EAX,DWORD PTR [EBX+0x0C]
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [EBX+0x14]
	AND EAX, 0x01
	ADD EAX,DWORD PTR [EBX+0x0C]
	ADD DWORD PTR [ESP+arg1+0x1C],EAX
	MOV EAX,DWORD PTR [EBX+0x34]
	ADD EAX, 0x00001000
	CMP EAX, 0x00002000
	JA loc_100C5BE3
	MOV EAX, 0x00002000
loc_100C5BE3:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [ESP+var_C+0x20],EAX
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ loc_100C5BFE
	MOV EBP, 0xFFFFFFFF
	JMP FAR loc_100C5D06
loc_100C5BFE:
	MOV EAX,DWORD PTR [EBX+0x34]
	MOV EDI,DWORD PTR [ESP+var_C+0x1C]
	ADD EDI, 0x00001000
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	CALL_LONG(offset [LEGO1_text.mCC782_sub_100CD782])
	MOV ECX,DWORD PTR [EBX+0x38]
	ADD ECX,DWORD PTR [EBX+0x3C]
	ADD ECX,DWORD PTR [EBX+0x40]
	ADD ECX,DWORD PTR [EBX+0x44]
	ADD ECX, EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, EAX
	MOV DWORD PTR [EBX+0x000006AC],EAX
	TEST ECX, ECX
	JNZ loc_100C5C4F
	MOV EBP, 0xFFFFFFFF
	JMP FAR loc_100C5D06
loc_100C5C4F:
	MOV EAX,DWORD PTR [EBX+0x44]
	MOV EDX,DWORD PTR [EBX+0x40]
	PUSH EAX
	MOV ESI,DWORD PTR [EBX+0x3C]
	PUSH EDX
	MOV EAX,DWORD PTR [EBX+0x38]
	PUSH ESI
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_C+0x30]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mCC7E8_sub_100CD7E8])
	ADD ESP, 0x18
	MOV ECX,DWORD PTR [EBX+0x08]
	MOV EDX,DWORD PTR [EBX+0x04]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mCF52C_sub_100D052C])
	ADD ESP, 0x08
	LEA ESI,DWORD PTR [EAX+0x20]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ECX, ESI
	MOV DWORD PTR [EBX+0x000006B4],EAX
	SHR ECX, 0x02
	XOR EAX, EAX
	REP STOSD
	MOV ECX, ESI
	AND ECX, 0x03
	REP STOSB
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EBX+0x000006B4]
	ADD ECX, 0x04
	ADD ECX, 0x04
	MOV DWORD PTR [ECX-0x08],0x00000001
	MOV DWORD PTR [ECX-0x04],EAX
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EBX+0x04]
	SHR EAX, 0x02
	ADD ECX, 0x04
	LEA ESI,DWORD PTR [EDX-0x04]
	DB(0x90) 
	MOV DWORD PTR [ECX-0x08],EAX
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EBX+0x08]
	ADD ECX, 0x04
	SHR EAX, 0x02
	MOV DWORD PTR [ECX-0x0C],EAX
	ADD ECX, 0x04
	LEA EAX,DWORD PTR [EDX*2+EDX]
	MOV DWORD PTR [ECX-0x0C],ESI
	MOV DWORD PTR [ECX-0x08],EAX
	ADD ECX, 0x08
	LEA EAX,DWORD PTR [EDX*4+0x00000000]
	MOV DWORD PTR [ECX-0x0C],EDX
	SUB EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ECX-0x08],EAX
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [ECX+0x04],EAX
loc_100C5D06:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EBX+0x000006A4],EAX
	MOV EAX, EBP
	MOV DWORD PTR [EBX+0x000006A0],ECX
	POP EBP
	MOV DWORD PTR [EBX+0x000006A8],EDX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RET
loc_100C5D2E:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C5D40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x000006A0]
	TEST EAX, EAX
	JZ loc_100C5D58
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C5D58:
	MOV EAX,DWORD PTR [ESI+0x000006A4]
	TEST EAX, EAX
	JZ loc_100C5D6B
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C5D6B:
	MOV EAX,DWORD PTR [ESI+0x000006A8]
	TEST EAX, EAX
	JZ loc_100C5D7E
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C5D7E:
	MOV EAX,DWORD PTR [ESI+0x000006AC]
	TEST EAX, EAX
	JZ loc_100C5D91
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C5D91:
	MOV EAX,DWORD PTR [ESI+0x000006B4]
	TEST EAX, EAX
	JZ loc_100C5DA4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C5DA4:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C5DB0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_344 = -0x344,
		var_44 = -0x44,
		var_40 = -0x40,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC5033_proc_100C6033]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x00000334
	MOV EAX,DWORD PTR [ECX+0x08]
	TEST EAX, EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	JLE loc_100C5DE0
	NEG EAX
	MOV DWORD PTR [ECX+0x08],EAX
loc_100C5DE0:
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EAX+0x000006B4]
	CMP BYTE PTR [EBP+arg5+0x4],0x00
	MOV DWORD PTR [ECX+0x04],EDX
	JZ FAR loc_100C5F0B
	MOV EDX,DWORD PTR [EBP+arg4+0x4]
	LEA EBX,DWORD PTR [EBP+var_344+0x4]
	INC EDX
	ADD EAX, 0x70
	MOV WORD PTR SS:[EBP+var_14+0x2],0x0000
	MOV DWORD PTR [EBP+var_20+0x4],EAX
loc_100C5E0F:
	MOV AL,BYTE PTR [EDX]
	TEST AL, 0x80
	JZ loc_100C5E58
	AND AL, 0x7F
	MOV ECX,DWORD PTR [EBP+var_14+0x2]
	INC AL
	AND ECX, 0x0000FFFF
	MOVZX AX,AL
	MOV WORD PTR SS:[EBP+var_1C+0x4],AX
	LEA ESI,DWORD PTR [ECX*2+ECX]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	ADD ESI,DWORD PTR [EBP+var_20+0x4]
	AND EAX, 0x0000FFFF
	MOV EDI, EBX
	INC EDX
	LEA EAX,DWORD PTR [EAX*2+EAX]
	MOV ECX, EAX
	ADD EBX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV AX,WORD PTR SS:[EBP+var_1C+0x4]
	ADD WORD PTR SS:[EBP+var_14+0x2],AX
	JMP loc_100C5EAB
loc_100C5E58:
	TEST AL, 0x40
	JZ loc_100C5E9D
	AND AL, 0x3F
	XOR ECX, ECX
	MOV CL,BYTE PTR [EDX+0x01]
	INC AL
	MOVZX AX,AL
	MOV WORD PTR SS:[EBP+var_1C+0x4],AX
	LEA ESI,DWORD PTR [ECX*2+ECX]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	ADD ESI,DWORD PTR [EBP+var_20+0x4]
	AND EAX, 0x0000FFFF
	MOV EDI, EBX
	ADD EDX, 0x02
	LEA EAX,DWORD PTR [EAX*2+EAX]
	MOV ECX, EAX
	ADD EBX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV AX,WORD PTR SS:[EBP+var_1C+0x4]
	ADD WORD PTR SS:[EBP+var_14+0x2],AX
	JMP loc_100C5EAB
loc_100C5E9D:
	INC WORD PTR SS:[EBP+var_14+0x2]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	ADD EBX, 0x03
	ADD EDX, 0x03
loc_100C5EAB:
	CMP WORD PTR SS:[EBP+var_14+0x2],0x0100
	JB FAR loc_100C5E0F
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	LEA EDX,DWORD PTR [EBP+var_344+0x4]
	ADD ESI, 0x28
loc_100C5EC3:
	MOV CX,WORD PTR DS:[EDX]
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	ADD DWORD PTR [EBP+var_20+0x4],0x03
	MOV WORD PTR DS:[EAX],CX
	ADD ESI, 0x04
	MOV BL,BYTE PTR [EDX+0x02]
	ADD EDX, 0x03
	MOV BYTE PTR [EAX+0x02],BL
	MOV BL,BYTE PTR [EDX-0x01]
	SHL BL, 0x02
	MOV AL,BYTE PTR [EDX-0x02]
	SHL AL, 0x02
	MOV CL,BYTE PTR [EDX-0x03]
	SHL CL, 0x02
	MOV BYTE PTR [ESI-0x04],BL
	MOV BYTE PTR [ESI-0x03],AL
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	MOV BYTE PTR [ESI-0x02],CL
	CMP EDX, EAX
	JB loc_100C5EC3
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg4+0x4]
	MOV CL,BYTE PTR [EAX]
	LEA EDX,DWORD PTR [ECX*4+EAX]
	MOV DWORD PTR [EBP+arg4+0x4],EDX
loc_100C5F0B:
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV ECX,DWORD PTR [EAX+0x000006B4]
	MOV EDX,DWORD PTR [EAX+0x000006AC]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg4+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mCCA83_sub_100CDA83])
	ADD ESP, 0x0C
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	LEA EAX,DWORD PTR [EBP+var_10+0x2]
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV WORD PTR SS:[EBP+var_10+0x2],0x0001
	MOV EDX,DWORD PTR [ECX+0x000006B4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mC5050_sub_100C6050])
	ADD ESP, 0x10
	TEST AL, AL
	JZ FAR loc_100C6013
loc_100C5F54:
	PUSH 0x10
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100C5F8A
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [ESI+0x04],ECX
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [ESI+0x08],EDX
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [ESI+0x0C],EAX
	JMP loc_100C5F91
loc_100C5F8A:
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
loc_100C5F91:
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EBX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ECX, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	TEST EDI, EDI
	JZ loc_100C5FCE
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX, EDI
	MOV DWORD PTR [EDI],EAX
	MOV DWORD PTR [EDI+0x04],EBX
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_100C5FCE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EBX, EBX
	JZ loc_100C5FDE
	MOV DWORD PTR [EBX+0x08],ECX
	JMP loc_100C5FE4
loc_100C5FDE:
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV DWORD PTR [EAX+0x10],ECX
loc_100C5FE4:
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	MOV DWORD PTR [EAX+0x14],ECX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	INC DWORD PTR [EAX+0x08]
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_10+0x2]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV EDX,DWORD PTR [ECX+0x000006B4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mC5050_sub_100C6050])
	ADD ESP, 0x10
	TEST AL, AL
	JNZ FAR loc_100C5F54
loc_100C6013:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100C6026()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C6050(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV AX,WORD PTR DS:[EAX]
	PUSH EBX
	TEST AX, AX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	JNZ loc_100C606D
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
loc_100C606D:
	CMP AX, 0x0001
	MOV ESI,DWORD PTR [ESP+arg3+0x14]
	JNZ loc_100C609C
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCF543_sub_100D0543])
	ADD ESP, 0x08
	TEST AL, AL
	JNZ loc_100C6093
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
loc_100C6093:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV WORD PTR DS:[EAX],0x0002
loc_100C609C:
	MOV EBP,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESI+0x08]
	MOV EBX,DWORD PTR [ESI+0x0C]
	ADD EDI, EBP
	ADD EBX, ECX
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	PUSH ESI
	MOV DWORD PTR [ESP+var_4+0x18],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCF543_sub_100D0543])
	ADD ESP, 0x08
	TEST AL, AL
	JZ loc_100C60EA
loc_100C60C1:
	MOV EAX,DWORD PTR [ESI]
	CMP EBP, EAX
	JBE loc_100C60C9
	MOV EBP, EAX
loc_100C60C9:
	ADD EAX,DWORD PTR [ESI+0x08]
	CMP EDI, EAX
	JNB loc_100C60D2
	MOV EDI, EAX
loc_100C60D2:
	MOV EBX,DWORD PTR [ESI+0x04]
	PUSH ESI
	ADD EBX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCF543_sub_100D0543])
	ADD ESP, 0x08
	TEST AL, AL
	JNZ loc_100C60C1
loc_100C60EA:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [ESP+arg4+0x14]
	MOV WORD PTR DS:[EAX],0x0000
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV AL, 0x01
	MOV DWORD PTR [ECX],EBP
	POP EBP
	MOV DWORD PTR [ECX+0x04],EDX
	MOV DWORD PTR [ECX+0x08],EDI
	MOV DWORD PTR [ECX+0x0C],EBX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_100C6110(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC51FC_proc_100C61FC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH ESI
	PUSH EDI
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC0520_sub_100C1520])
	TEST EAX, EAX
	JZ loc_100C6174
loc_100C6151:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC5206_sub_100C6206])
	MOV EAX, 0xFFFFFFFF
loc_100C6162:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100C6174:
	PUSH 0x24
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100C6197
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mCF730_sub_100D0730])
loc_100C6197:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [ESI+0x28],EAX
	TEST EAX, EAX
	JZ loc_100C6151
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	TEST EAX, EAX
	JNZ loc_100C6151
	MOV EDI,DWORD PTR [ESI+0x28]
	MOV ECX, EDI
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x18])
	PUSH EAX
	MOV EAX,DWORD PTR [EDI+0x18]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCFD80_sub_100D0D80])
	ADD ESP, 0x08
	MOV EDI,DWORD PTR [ESI+0x28]
	MOV ECX, EDI
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x18])
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x64]
	MOV EAX,DWORD PTR [EDI+0x18]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC5780_sub_100C6780])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC5206_sub_100C6206])
	XOR EAX, EAX
	JMP FAR loc_100C6162
}
}

__declspec(naked) DWORD LEGO1_proc_100C61EF()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C6206()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C62FB()
{
	enum{
		arg1217174 = 0x4A4A58,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217174-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCC150_loc_100CD150])
}
}

__declspec(naked) DWORD LEGO1_sub_100C6310()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C63B5()
{
	enum{
		arg1217184 = 0x4A4A80,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217184-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C63C0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC5452_proc_100C6452]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	LEA EBX,DWORD PTR [ESI+0x64]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	XOR EAX, EAX
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
loc_100C63FA:
	MOV EAX,DWORD PTR [EDI+0x00000094]
	MOV ECX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC5F80_sub_100C6F80])
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX, EBX
	PUSH EAX
	PUSH EDI
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mC57B0_sub_100C67B0])
	PUSH 0x00
	LEA ECX,DWORD PTR [ESI+0x3C]
	PUSH EDI
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	TEST EAX, EAX
	JNZ loc_100C63FA
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC545C_sub_100C645C])
	MOV EAX, 0x00000000
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	ADC EAX, -0x01
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C645C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C6470()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC54DF_proc_100C64DF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x20],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8CA0_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI+0x28],EAX
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV DWORD PTR [ESI+0x24],0x00000002
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x30],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100C6530()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC562D_proc_100C662D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8CA0_ptr]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x08]
	TEST ESI, ESI
	JZ FAR loc_100C6606
	MOV EAX,DWORD PTR [ECX+0x24]
	TEST EAX, EAX
	JZ loc_100C6583
	CMP EAX, 0x01
	JZ FAR loc_100C65FD
	CMP EAX, 0x03
	JZ loc_100C65FD
	JMP FAR loc_100C6606
loc_100C6583:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EAX+0x28]
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	SHR EBX, 0x0A
	MOV EDI, EAX
	CMP EBX, 0x40
	JZ loc_100C65A2
	CMP EBX, 0x00000080
	JZ loc_100C65D0
	JMP loc_100C6606
loc_100C65A2:
	SUB ESI,DWORD PTR [EDI+0x14]
	MOV ECX,DWORD PTR [EDI+0x18]
	SHL ECX, 0x0A
	MOV EAX, ESI
	SUB EDX, EDX
	DIV ECX
	MOV ESI, EAX
	MOV EDX, 0x00000001
	AND ESI, -0x19
	AND AL, 0x1F
	SHR ESI, 0x03
	MOV CL, AL
	SHL EDX, CL
	TEST DWORD PTR [EDI+ESI+0x1C],EDX
	JZ loc_100C6606
	XOR DWORD PTR [EDI+ESI+0x1C],EDX
	JMP loc_100C6606
loc_100C65D0:
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EDI+0x24]
	SHL ECX, 0x0A
	SUB EAX,DWORD PTR [EDI+0x20]
	SUB EDX, EDX
	DIV ECX
	MOV ECX, EAX
	MOV EDX, 0x00000001
	AND EAX, -0x19
	AND CL, 0x1F
	SHR EAX, 0x03
	SHL EDX, CL
	TEST DWORD PTR [EDI+EAX+0x28],EDX
	JZ loc_100C6606
	XOR DWORD PTR [EAX+EDI+0x28],EDX
	JMP loc_100C6606
loc_100C65FD:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100C6606:
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x14],ECX
	MOV DWORD PTR [EAX+0x1C],ECX
	CALL_LONG(offset [LEGO1_text.mC5637_sub_100C6637])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C6637()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6640(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217231 = 0x4A4B3C,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0xFFFFFFFF
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0xC]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	TEST ESI, ESI
	JZ loc_100C6667
	CMP ESI, 0x01
	JZ FAR loc_100C6731
	JMP FAR loc_100C6741
loc_100C6667:
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	SHR ECX, 0x0A
	CMP ECX, 0x40
	JZ loc_100C668A
	CMP ECX, 0x00000080
	JZ loc_100C66DF
	XOR ECX, ECX
	MOV DWORD PTR [EDI+0x08],ECX
	JMP FAR loc_100C6741
loc_100C668A:
	XOR EBX, EBX
loc_100C668C:
	MOV EDX, EBX
	MOV EBP, 0x00000001
	AND EDX, -0x19
	MOV ECX, EBX
	SHR EDX, 0x03
	AND CL, 0x1F
	SHL EBP, CL
	TEST DWORD PTR [EAX+EDX+0x1C],EBP
	JZ loc_100C66B6
	INC EBX
	CMP EBX, 0x16
	JB loc_100C668C
	XOR ECX, ECX
	MOV DWORD PTR [EDI+0x08],ECX
	JMP FAR loc_100C6741
loc_100C66B6:
	MOV EBP, EBX
	MOV EDX, 0x00000001
	AND EBP, -0x19
	MOV ECX, EBX
	SHR EBP, 0x03
	AND CL, 0x1F
	SHL EDX, CL
	XOR DWORD PTR [EAX+EBP+arg1217231-0x4A4B20],EDX
	MOV ECX,DWORD PTR [EAX+0x18]
	IMUL ECX,EBX
	SHL ECX, 0x0A
	ADD ECX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x08],ECX
	JMP loc_100C6741
loc_100C66DF:
	XOR EBX, EBX
loc_100C66E1:
	MOV EDX, EBX
	MOV EBP, 0x00000001
	AND EDX, -0x19
	MOV ECX, EBX
	SHR EDX, 0x03
	AND CL, 0x1F
	SHL EBP, CL
	TEST DWORD PTR [EAX+EDX+0x28],EBP
	JZ loc_100C6708
	INC EBX
	CMP EBX, 0x02
	JB loc_100C66E1
	XOR ECX, ECX
	MOV DWORD PTR [EDI+0x08],ECX
	JMP loc_100C6741
loc_100C6708:
	MOV EDX, EBX
	MOV EBP, 0x00000001
	AND EDX, -0x19
	MOV ECX, EBX
	SHR EDX, 0x03
	AND CL, 0x1F
	SHL EBP, CL
	XOR DWORD PTR [EAX+EDX+0x28],EBP
	MOV ECX,DWORD PTR [EAX+0x24]
	IMUL ECX,EBX
	SHL ECX, 0x0A
	ADD ECX,DWORD PTR [EAX+0x20]
	MOV DWORD PTR [EDI+0x08],ECX
	JMP loc_100C6741
loc_100C6731:
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EDI+0x08],EAX
loc_100C6741:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV DWORD PTR [EDI+0x10],EAX
	TEST EAX, EAX
	JZ loc_100C6763
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	MOV DWORD PTR [EDI+0x24],ESI
	MOV DWORD PTR [EDI+0x2C],EAX
	MOV DWORD PTR [EDI+0x28],EAX
	MOV DWORD PTR [ESP+var_4+0x14],0x00000000
loc_100C6763:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6780(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV DWORD PTR [ECX+0x24],0x00000002
	MOV DWORD PTR [ECX+0x10],EAX
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [ECX+0x2C],EAX
	MOV DWORD PTR [ECX+0x28],EAX
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C67B0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217226 = 0x4A4B28,
		arg1217232 = 0x4A4B40,
		arg1217235 = 0x4A4B4C,
		arg1217236 = 0x4A4B50,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],ECX
	PUSH EBX
	PUSH ESI
	MOV EBX, 0xFFFFFFFF
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH EBP
	PUSH 0x00
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x3C]
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	TEST EAX, EAX
	MOV DWORD PTR [ECX+0x30],EAX
	JNZ loc_100C67EA
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x000C
loc_100C67EA:
	MOV EDI,DWORD PTR [ESP+arg3+0x14]
loc_100C67EE:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	CALL_LONG(offset [LEGO1_text.mC5DF0_sub_100C6DF0])
	TEST EAX, EAX
	JZ loc_100C681E
	MOV ECX,DWORD PTR [EDI]
	TEST ECX, ECX
	JNZ loc_100C682C
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	PUSH EDI
	PUSH ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+var_4+0x20]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mC58A0_sub_100C68A0])
	CMP EAX, -0x01
	MOV EBX, EAX
	JZ loc_100C6820
	CMP EBX, 0x01
	JNZ loc_100C67EE
loc_100C681E:
	XOR EBX, EBX
loc_100C6820:
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x000C
loc_100C682C:
	MOV EBP,DWORD PTR [ECX+0x000000A0]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.mC5EF0_sub_100C6EF0])
	TEST EAX, EAX
	JNZ loc_100C6820
	CMP DWORD PTR [EBP+arg1217235-0x4A4B20],0x00
	JNZ loc_100C67EE
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	PUSH EDI
	MOV EDX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ECX+0x30]
	PUSH EDX
	MOV DWORD PTR [EBP+arg1217236-0x4A4B20],EAX
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	PUSH ECX
	PUSH ESI
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.mC58A0_sub_100C68A0])
	MOV EBX, EAX
	TEST EBX, EBX
	JNZ loc_100C6820
	CMP WORD PTR SS:[EBP+arg1217232-0x4A4B20],0x00
	JZ loc_100C6881
	PUSH EBP
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC74A0_sub_100C84A0])
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x000000A0],0x00000000
loc_100C6881:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	MOV DWORD PTR [EDI], 0x00000000
	JMP FAR loc_100C67EE
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C68A0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217233 = 0x4A4B44,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg2+0xC]
	PUSH EBP
	TEST ESI, ESI
	JNZ loc_100C68BA
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
loc_100C68BA:
	MOV EBP,DWORD PTR [ESP+arg3+0x10]
	MOV AX,WORD PTR SS:[EBP+arg1217233-0x4A4B20]
	PUSH EAX
	PUSH ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mC5D00_sub_100C6D00])
	ADD ESP, 0x0C
	MOV EDI, EAX
	TEST EDI, EDI
	JNZ loc_100C68DF
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
loc_100C68DF:
	MOV EAX,DWORD PTR [ESI]
	CMP EAX, 0x624F784D
	JNZ loc_100C68FD
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	PUSH EBP
	MOV ECX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC5960_sub_100C6960])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
loc_100C68FD:
	CMP EAX, 0x6843784D
	JNZ loc_100C6944
	MOV ECX,DWORD PTR [EBX+0x30]
	MOV EAX,DWORD PTR [EDI+0x0C]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x34])
	TEST AL, AL
	JNZ loc_100C6929
	TEST EDI, EDI
	JZ loc_100C6920
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_100C6920:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
loc_100C6929:
	MOV EAX,DWORD PTR [ESP+0x20]
	PUSH EDI
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	PUSH EBP
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mC5A50_sub_100C6A50])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
loc_100C6944:
	TEST EDI, EDI
	JZ loc_100C6950
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_100C6950:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6960(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		r = 0x0,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217232 = 0x4A4B40,
		arg1217233 = 0x4A4B44,
		arg1217235 = 0x4A4B4C,
		arg1217236 = 0x4A4B50,
		arg1217238 = 0x4A4B58,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg3+0x8]
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x30]
	PUSH EBP
	MOV EDI, ECX
	CMP DWORD PTR [EAX+0x000000B0],0x00
	JZ loc_100C698B
	TEST EBX, EBX
	JZ loc_100C6982
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_100C6982:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_100C698B:
	MOV EBP,DWORD PTR [EBX]
	MOV ESI,DWORD PTR [ESP+arg2+0x10]
	MOV ECX, EBX
	MOV EAX,DWORD PTR [ESI+0x20]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217232-0x4A4B20])
	MOV EAX,DWORD PTR [ESI+0x28]
	MOV DWORD PTR [EBX+0x28],EAX
	MOV ECX,DWORD PTR [ESI+0x00000084]
	MOV DWORD PTR [EBX+0x00000084],ECX
	MOV ECX, ESI
	MOV EDX,DWORD PTR [ESI+0x0000008C]
	MOV DWORD PTR [EBX+0x0000008C],EDX
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x3C])
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EBP+arg1217238-0x4A4B20])
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EBP+arg1217236-0x4A4B20])
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EBP+arg1217235-0x4A4B20])
	PUSH EAX
	MOV ECX,DWORD PTR [EDI+0x30]
	CALL_LONG(offset [LEGO1_text.mCC2A0_sub_100CD2A0])
	MOV ESI,DWORD PTR [ESP+r+0x14]
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC0DA0_sub_100C1DA0])
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x2C])
	TEST EAX, EAX
	JZ loc_100C6A03
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_100C6A03:
	MOV EAX,DWORD PTR [EBX+0x3C]
	MOV ECX,DWORD PTR [EDI+0x30]
	MOV DWORD PTR [ECX+0x3C],EAX
	MOV ECX,DWORD PTR [EDI+0x30]
	MOV EDX,DWORD PTR [EBX+0x30]
	MOV DWORD PTR [ECX+0x30],EDX
	MOV ECX, EBX
	MOV ESI,DWORD PTR [EDI+0x30]
	CALL_LONG(DWORD PTR [EBP+arg1217233-0x4A4B20])
	PUSH EAX
	MOV EBX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x28])
	MOV ESI,DWORD PTR [EDI+0x30]
	CMP DWORD PTR [ESI+0x000000B0],0x00
	JNZ FAR loc_100C6982
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100C6A50(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_18 = -0x18,
		arg5 = 0x14,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC5CE2_proc_100C6CE2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x30]
	MOV EDI, ECX
	TEST BYTE PTR [EAX+0x30],0x04
	JZ_LONG(offset [LEGO1_text.mC5AB3_loc_100C6AB3])
	CMP DWORD PTR [EAX+0x000000A8],0x00
	MOV ESI,DWORD PTR [EBP+arg5+0x4]
	JZ_LONG(offset [LEGO1_text.mC5AB6_loc_100C6AB6])
	CMP DWORD PTR [ESI+0x10],0x00
	JGE_LONG(offset [LEGO1_text.mC5AB6_loc_100C6AB6])
	TEST ESI, ESI
	JZ loc_100C6A9E
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100C6A9E:
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mC5AA0_loc_100C6AA0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C6D00(DWORD arg1, DWORD arg2)
{
	enum{
		var_18 = -0x18,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC5DCB_proc_100C6DCB]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	XOR EAX, EAX
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	LEA ECX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [EDI]
	CMP ECX, 0x624F784D
	JZ_LONG(offset [LEGO1_text.mC5D4C_loc_100C6D4C])
	CMP ECX, 0x6843784D
	JZ_LONG(offset [LEGO1_text.mC5D5E_loc_100C6D5E])
	JMP_LONG(offset [LEGO1_text.mC5D3B_loc_100C6D3B])
}
}

__declspec(naked) DWORD LEGO1_sub_100C6DF0()
{
__asm{
	PUSH ESI
	XOR EAX, EAX
	CMP DWORD PTR [ECX+0x0C],EAX
	JZ FAR loc_100C6E7F
loc_100C6DFC:
	MOV ESI,DWORD PTR [ECX+0x0C]
	MOV EDX,DWORD PTR [ESI]
	CMP EDX, 0x5453494C
	JA loc_100C6E21
	JZ loc_100C6E4F
	CMP EDX, 0x46464952
	JZ loc_100C6E4F
loc_100C6E13:
	XOR EAX, EAX
	POP ESI
	MOV DWORD PTR [ECX+0x0C],0x00000000
	MOV DWORD PTR [ECX+0x10],EAX
	RET
loc_100C6E21:
	CMP EDX, 0x624F784D
	JA loc_100C6E35
	JZ loc_100C6E84
	CMP EDX, 0x6144784D
	JZ loc_100C6E57
	JMP loc_100C6E13
loc_100C6E35:
	CMP EDX, 0x6448784D
	JZ loc_100C6E5F
	CMP EDX, 0x6843784D
	JZ loc_100C6E84
	CMP EDX, 0x7453784D
	JZ loc_100C6E57
	JMP loc_100C6E13
loc_100C6E4F:
	ADD ESI, 0x0C
	MOV DWORD PTR [ECX+0x0C],ESI
	JMP loc_100C6E6A
loc_100C6E57:
	ADD ESI, 0x08
	MOV DWORD PTR [ECX+0x0C],ESI
	JMP loc_100C6E6A
loc_100C6E5F:
	MOV EDX,DWORD PTR [ESI+0x04]
	ADD EDX, ESI
	ADD EDX, 0x08
	MOV DWORD PTR [ECX+0x0C],EDX
loc_100C6E6A:
	MOV EDX,DWORD PTR [ECX+0x28]
	ADD EDX,DWORD PTR [ECX+0x08]
	SUB EDX, 0x08
	CMP EDX,DWORD PTR [ECX+0x0C]
	JNB loc_100C6DFC
	MOV DWORD PTR [ECX+0x0C],0x00000000
loc_100C6E7F:
	POP ESI
	MOV DWORD PTR [ECX+0x10],EAX
	RET
loc_100C6E84:
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ESI, EDX
	AND ESI, 0x01
	ADD ESI, EDX
	LEA EDX,DWORD PTR [EAX+ESI]
	MOV ESI,DWORD PTR [ECX+0x28]
	ADD ESI,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX+0x0C],EDX
	ADD EDX, 0x08
	SUB ESI, 0x08
	MOV DWORD PTR [ECX+0x0C],EDX
	CMP ESI, EDX
	JNB loc_100C6E7F
	POP ESI
	MOV DWORD PTR [ECX+0x10],EAX
	MOV DWORD PTR [ECX+0x0C],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6EC0(DWORD arg1)
{
__asm{
	MOV AX,WORD PTR DS:[ECX+0x20]
	TEST AX, AX
	JZ loc_100C6ECF
	DEC AX
	MOV WORD PTR DS:[ECX+0x20],AX
loc_100C6ECF:
	XOR AL, AL
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6EE0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP DWORD PTR [ESP+arg1],0x00
	JZ loc_100C6EEB
	INC WORD PTR DS:[ECX+0x20]
loc_100C6EEB:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6EF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	MOV EDI, 0xFFFFFFFF
	CMP DWORD PTR [EBX+0x24],0x01
	JNZ loc_100C6F74
	MOV EAX,DWORD PTR [EBX+0x2C]
	TEST EAX, EAX
	JZ loc_100C6F74
	CMP DWORD PTR [EBX+0x28],EAX
	JNZ loc_100C6F1B
	MOV ECX,DWORD PTR [ESP+arg1+0x10]
	MOV ESI, ECX
	MOV EBP,DWORD PTR [ECX+0x04]
	ADD EBP, 0x08
	JMP loc_100C6F32
loc_100C6F1B:
	CALL_LONG(offset [LEGO1_text.mBD1E0_sub_100BE1E0])
	MOV ECX,DWORD PTR [ESP+arg1+0x10]
	LEA ESI,DWORD PTR [EAX+ECX+0x08]
	MOV EBP,DWORD PTR [ECX+0x04]
	CALL_LONG(offset [LEGO1_text.mBD1E0_sub_100BE1E0])
	SUB EBP, EAX
loc_100C6F32:
	MOV EAX,DWORD PTR [EBX+0x2C]
	CMP EBP, EAX
	JA loc_100C6F74
	MOV EDI,DWORD PTR [EBX+0x28]
	MOV ECX, EBP
	SHR ECX, 0x02
	SUB EDI, EAX
	ADD EDI,DWORD PTR [EBX+0x08]
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [EBX+0x2C]
	CMP DWORD PTR [EBX+0x28],EAX
	JNZ loc_100C6F6F
	MOV ESI,DWORD PTR [EBX+0x08]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mC21B0_sub_100C31B0])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.mBD1E0_sub_100BE1E0])
	ADD EDI, EAX
	MOV DWORD PTR [ESI+0x04],EDI
loc_100C6F6F:
	XOR EDI, EDI
	SUB DWORD PTR [EBX+0x2C],EBP
loc_100C6F74:
	MOV EAX, EDI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6F80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [ECX+0x28],EAX
	JBE loc_100C6F92
	ADD EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX+0x10],EAX
	MOV DWORD PTR [ECX+0x0C],EAX
loc_100C6F92:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C6FA0(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	TEST EDX, EDX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	JZ loc_100C6FB4
	MOV DWORD PTR [ESP+var_4+0x10],EDX
	JMP loc_100C6FBB
loc_100C6FB4:
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
loc_100C6FBB:
	MOV ESI,DWORD PTR [ECX+0x28]
	MOV EAX,DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [EAX+ESI-0x08]
	CMP DWORD PTR [ESP+var_4+0x10],ECX
	JA FAR loc_100C7076
	MOV ESI, 0x0000000C
	MOV EDI, 0x00000008
loc_100C6FD9:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EAX,DWORD PTR [EAX]
	CMP EAX, 0x5453494C
	JA loc_100C6FFA
	JZ loc_100C7035
	CMP EAX, 0x46464952
	JZ loc_100C7035
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_100C6FFA:
	CMP EAX, 0x624F784D
	JA loc_100C7015
	JZ loc_100C7041
	CMP EAX, 0x6144784D
	JZ loc_100C703B
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_100C7015:
	CMP EAX, 0x6448784D
	JZ loc_100C705F
	CMP EAX, 0x6843784D
	JZ loc_100C7041
	CMP EAX, 0x7453784D
	JZ loc_100C703B
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_100C7035:
	ADD DWORD PTR [ESP+var_4+0x10],ESI
	JMP loc_100C706C
loc_100C703B:
	ADD DWORD PTR [ESP+var_4+0x10],EDI
	JMP loc_100C706C
loc_100C7041:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [ESP+var_4+0x10],EDX
	JNZ loc_100C7081
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV EBX, EAX
	AND EBX, 0x01
	ADD EBX, EAX
	ADD DWORD PTR [ESP+var_4+0x10],EBX
	ADD DWORD PTR [ESP+var_4+0x10],EDI
	JMP loc_100C706C
loc_100C705F:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, EDI
	ADD DWORD PTR [ESP+var_4+0x10],EAX
loc_100C706C:
	CMP DWORD PTR [ESP+var_4+0x10],ECX
	JBE FAR loc_100C6FD9
loc_100C7076:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_100C7081:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7090(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV EAX, 0xFFFFFFFF
	PUSH ESI
	MOV EBX, ECX
	MOV EDX,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	PUSH EBP
	MOV EBP,DWORD PTR [EDX+0x28]
	CMP DWORD PTR [EBX+0x28],EBP
	JB loc_100C70BD
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV ESI,DWORD PTR [EDX+0x08]
	MOV ECX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	XOR EAX, EAX
loc_100C70BD:
	MOV ECX,DWORD PTR [EDX+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EBX+0x1C],ECX
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C70D0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	PUSH EBP
	TEST EBX, EBX
	JZ loc_100C7116
	MOV ESI,DWORD PTR [ESP+arg2+0x10]
	TEST ESI, ESI
	JZ loc_100C7116
	MOV EBP,DWORD PTR [ESI+0x04]
	CALL_LONG(offset [LEGO1_text.mBD1E0_sub_100BE1E0])
	SUB EBP, EAX
	CALL_LONG(offset [LEGO1_text.mBD1E0_sub_100BE1E0])
	MOV ECX,DWORD PTR [EBX+0x04]
	LEA ESI,DWORD PTR [EAX+ESI+0x08]
	LEA EDI,DWORD PTR [EBX+ECX+0x08]
	MOV ECX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	XOR EAX, EAX
	ADD DWORD PTR [EBX+0x04],EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
loc_100C7116:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C7120()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC631E_proc_100C731E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	LEA ESI,DWORD PTR [ECX+0x64]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mBFB90_sub_100C0B90])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH EBX
	PUSH EBX
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV BYTE PTR [ESI],AL
	CALL_LONG(offset [LEGO1_text.mC6330_sub_100C7330])
	PUSH EBX
	MOV DWORD PTR [EDI+0x68],EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH EBX
	LEA ECX,DWORD PTR [EDI+0x74]
	MOV DWORD PTR [EDI+0x6C],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	LEA ESI,DWORD PTR [EDI+0x00000080]
	MOV BYTE PTR [EDI+0x74],AL
	CALL_LONG(offset [LEGO1_text.mC6490_sub_100C7490])
	PUSH EBX
	MOV DWORD PTR [EDI+0x78],EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH EBX
	MOV ECX, ESI
	MOV DWORD PTR [EDI+0x7C],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV BYTE PTR [ESI],AL
	CALL_LONG(offset [LEGO1_text.mC6330_sub_100C7330])
	PUSH EBX
	MOV DWORD PTR [EDI+0x00000084],EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH EBX
	LEA ECX,DWORD PTR [EDI+0x00000090]
	MOV DWORD PTR [EDI+0x00000088],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	MOV BYTE PTR [EDI+0x00000090],AL
	CALL_LONG(offset [LEGO1_text.mC6330_sub_100C7330])
	LEA ECX,DWORD PTR [EDI+0x0000009C]
	LEA ESI,DWORD PTR [EDI+0x000000B8]
	MOV DWORD PTR [EDI+0x00000094],EAX
	MOV DWORD PTR [EDI+0x00000098],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x0E
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x0F
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [ESI],AL
	PUSH EBX
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6330_sub_100C7330])
	MOV DWORD PTR [EDI+0x000000BC],EAX
	MOV DWORD PTR [EDI+0x000000C0],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x13
	MOV WORD PTR DS:[EDI+0x0000008C],BX
	MOV EAX, EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8CB8_ptr]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7330(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_100C734E
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_100C734E:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7490(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_100C74AE
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_100C74AE:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100C7521()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC6420_loc_100C7420])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7530()
{
	enum{
		var_B4 = -0xB4,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6779_proc_100C7779]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8CB8_ptr]
	SUB ESP, 0x000000A4
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000006
	PUSH EBX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV BYTE PTR [ECX+0x000000C4],0x00
	MOV BYTE PTR [ECX+0x70],0x00
	MOV ESI,DWORD PTR [ECX+0x28]
	TEST ESI, ESI
	JZ loc_100C75A5
	LEA ECX,DWORD PTR [EBP+var_B4+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	PUSH EAX
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	CALL_LONG(offset [LEGO1_text.mC65DC_sub_100C75DC])
loc_100C75A5:
	XOR ESI, ESI
loc_100C75A7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x44],ESI
	JZ_LONG(offset [LEGO1_text.mC65E7_loc_100C75E7])
	MOV ECX,DWORD PTR [EAX+0x40]
	MOV EAX,DWORD PTR [ECX]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	PUSH ECX
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x3C
	MOV DWORD PTR [EBP+var_24+0x4],EDX
	CALL_LONG(offset [LEGO1_text.mC04D0_sub_100C14D0])
	CMP DWORD PTR [EBP+var_24+0x4],ESI
	JZ loc_100C75A7
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX])
	JMP loc_100C75A7
}
}

__declspec(naked) DWORD LEGO1_sub_100C75DC()
{
	enum{
		arg1217180 = 0x4A4A70,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217180-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7723()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C772B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000B8
	JMP_LONG(offset [LEGO1_text.mC0010_loc_100C1010])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7739()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000009C
	JMP_LONG(offset [LEGO1_text.mB5D60___1MxCriticalSection__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7747()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000090
	JMP_LONG(offset [LEGO1_text.mC0010_loc_100C1010])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7755()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000080
	JMP_LONG(offset [LEGO1_text.mC0010_loc_100C1010])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7763()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x74
	JMP_LONG(offset [LEGO1_text.mC64E0_loc_100C74E0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C776E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x64
	JMP_LONG(offset [LEGO1_text.mC0010_loc_100C1010])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7783()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC0290_loc_100C1290])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7877()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7890(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6946_proc_100C7946]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	JNZ loc_100C78ED
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6950_sub_100C7950])
	MOV EAX, 0xFFFFFFFF
loc_100C78DA:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100C78ED:
	MOV EAX,DWORD PTR [ESI+0x00000084]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100C7913
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100C7918
loc_100C7913:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C7918:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100C7929
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100C7929:
	MOV ECX, ESI
	INC DWORD PTR [ESI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mC6970_nullsub_6])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6950_sub_100C7950])
	XOR EAX, EAX
	JMP loc_100C78DA
}
}

__declspec(naked) DWORD LEGO1_sub_100C7950()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_nullsub_6()
{
__asm{
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C7980()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6A9F_proc_100C7A9F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EDI
	XOR ESI, ESI
	PUSH EAX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [EDX+0x44],ESI
	JZ FAR loc_100C7A6F
	MOV ECX,DWORD PTR [EDX+0x28]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	XOR ECX, ECX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV CX,WORD PTR DS:[EDX+0x0000008C]
	CMP EAX, ECX
	JLE FAR loc_100C7A6F
	PUSH 0x34
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ESI, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	TEST EDI, EDI
	JZ loc_100C7A01
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC5470_sub_100C6470])
	MOV ESI, EAX
loc_100C7A01:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00
	MOV ECX,DWORD PTR [EDX+0x28]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC5640_sub_100C6640])
	TEST EAX, EAX
	JZ loc_100C7A45
	TEST ESI, ESI
	JZ loc_100C7A2A
loc_100C7A22:
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100C7A2A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6AA9_sub_100C7AA9])
loc_100C7A36:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
loc_100C7A45:
	MOV EDX,DWORD PTR [EBP-0x10]
	MOV ECX, EDX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	TEST EAX, EAX
	JNZ loc_100C7A5C
	TEST ESI, ESI
	JZ loc_100C7A2A
	JMP loc_100C7A22
loc_100C7A5C:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x000000A0],ESI
	INC WORD PTR DS:[EDX+0x0000008C]
loc_100C7A6F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6AA9_sub_100C7AA9])
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_100C7A36
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x28]
	CALL_LONG(offset [LEGO1_text.mD0780_sub_100D1780])
	JMP loc_100C7A36
}
}

__declspec(naked) DWORD LEGO1_proc_100C7A92()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C7AA9()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7BF4()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7CA6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7CB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x000000A0]
	TEST EAX, EAX
	JZ loc_100C7CC5
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC6CE0_sub_100C7CE0])
loc_100C7CC5:
	MOV DWORD PTR [ESI+0x000000A0],0x00000000
	TEST ESI, ESI
	JZ loc_100C7CDB
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100C7CDB:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7CE0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EDX+0x24]
	TEST EAX, EAX
	JZ loc_100C7CF8
	CMP EAX, 0x01
	JZ loc_100C7CFF
	CMP EAX, 0x03
	JZ loc_100C7CFF
	RETN 0x0004
loc_100C7CF8:
	DEC WORD PTR DS:[ECX+0x0000008C]
loc_100C7CFF:
	TEST EDX, EDX
	JZ loc_100C7D0B
	PUSH 0x01
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX])
loc_100C7D0B:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C7D10()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6D9E_proc_100C7D9E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6DB0_sub_100C7DB0])
	MOV EDI, EAX
	TEST EDI, EDI
	JNZ loc_100C7D70
loc_100C7D4F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6DA8_sub_100C7DA8])
	MOV EAX, 0xFFFFFFFF
loc_100C7D60:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
loc_100C7D70:
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC7360_sub_100C8360])
	TEST EAX, EAX
	JZ loc_100C7D8E
	PUSH EDI
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x24])
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	JMP loc_100C7D4F
loc_100C7D8E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6DA8_sub_100C7DA8])
	XOR EAX, EAX
	JMP loc_100C7D60
}
}

__declspec(naked) DWORD LEGO1_sub_100C7DA8()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C7DB0()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6EDC_proc_100C7EDC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EAX,DWORD PTR [ESI+0x4C]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ loc_100C7E43
	MOV ECX,DWORD PTR [ESI+0x68]
loc_100C7DF2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	CMP ECX, EDX
	MOV EDI,DWORD PTR [EAX+0x08]
	JZ loc_100C7E36
	MOV EDX,DWORD PTR [EDI+0x08]
loc_100C7E04:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	CMP DWORD PTR [EBX+0x1C],EDX
	JNZ loc_100C7E2A
	MOV BX,WORD PTR DS:[EDI+0x0C]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP WORD PTR DS:[EAX+0x24],BX
	JNZ loc_100C7E2A
	MOV EBX,DWORD PTR [EDI+0x10]
	CMP DWORD PTR [EAX+0x00000098],EBX
	JZ loc_100C7E62
loc_100C7E2A:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	CMP EBX, ECX
	JNZ loc_100C7E04
loc_100C7E36:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	CMP EDX,DWORD PTR [ESI+0x4C]
	JNZ loc_100C7DF2
loc_100C7E43:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6EE6_sub_100C7EE6])
	XOR EAX, EAX
loc_100C7E51:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_100C7E62:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX+0x04]
	PUSH EDX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [ESI+0x28]
	DEC DWORD PTR [ESI+0x50]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	ADD EAX,DWORD PTR [EDI+0x10]
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	MOV DWORD PTR [EDI+0x10],EAX
	LEA EDI,DWORD PTR [EBP+var_24+0x4]
	MOV EDX,DWORD PTR [ESI+0x4C]
	PUSH EDI
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x48]
	CALL_LONG(offset [LEGO1_text.mC6EF0_sub_100C7EF0])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x04]
	ADD EDX, 0x04
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x6C]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6EE6_sub_100C7EE6])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	JMP FAR loc_100C7E51
}
}

__declspec(naked) DWORD LEGO1_sub_100C7EE6()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7EF0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EDI+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_100C7F11
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_100C7F16
loc_100C7F11:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C7F16:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_100C7F2D
	MOV ECX,DWORD PTR [ESP+arg3+0xC]
	MOV EBX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EBX
loc_100C7F2D:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C7F40(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC6FD3_proc_100C7FD3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	JZ loc_100C7FB5
	MOV EAX,DWORD PTR [ESI+0x68]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100C7F9C
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100C7FA1
loc_100C7F9C:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C7FA1:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100C7FB2
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100C7FB2:
	INC DWORD PTR [ESI+0x6C]
loc_100C7FB5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC6FDD_sub_100C7FDD])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C7FDD()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C8112()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8120(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV ECX,DWORD PTR [EDI+0x28]
	TEST ECX, ECX
	JZ loc_100C813B
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
loc_100C813B:
	ADD EDI, 0x54
loc_100C813E:
	PUSH 0x01
	MOV ECX, EDI
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	TEST EAX, EAX
	JZ loc_100C8156
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX])
	JMP loc_100C813E
loc_100C8156:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C833A()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50410_loc_10051410])
}
}

__declspec(naked) DWORD LEGO1_sub_100C8342()
{
	enum{
		arg1217176 = 0x4A4A60,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217176-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C8357()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8360(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC748C_proc_100C848C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x01
	PUSH EDI
	LEA ECX,DWORD PTR [ESI+0x00000090]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EBX,DWORD PTR [EDI+0x000000A0]
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	MOV ECX, EBX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV EAX,DWORD PTR [EDI+0x00000094]
	SUB EAX,DWORD PTR [EDI+0x00000098]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC5F80_sub_100C6F80])
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	PUSH EDI
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mC57B0_sub_100C67B0])
	CMP WORD PTR DS:[EBX+0x20],0x00
	JZ loc_100C83E7
	PUSH EBX
	MOV ECX, ESI
	MOV DWORD PTR [EDI+0x000000A0],0x00000000
	CALL_LONG(offset [LEGO1_text.mC74A0_sub_100C84A0])
loc_100C83E7:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100C8463
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x000000A0],0x00
	JNZ loc_100C8403
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	JMP loc_100C8463
loc_100C8403:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x1C
	CMP DWORD PTR [EAX],-0x01
	JNZ loc_100C8413
	MOV ECX,DWORD PTR [EDI+0x1C]
	MOV DWORD PTR [EAX],ECX
loc_100C8413:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ESI+0x00000094]
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV ECX,DWORD PTR [EBX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_100C8447
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_100C844C
loc_100C8447:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C844C:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100C845D
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100C845D:
	INC DWORD PTR [ESI+0x00000098]
loc_100C8463:
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC7496_sub_100C8496])
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8496()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C84A0(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC752D_proc_100C852D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EAX,DWORD PTR [ESI+0x78]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100C84F6
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100C84FB
loc_100C84F6:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C84FB:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100C850C
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100C850C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	INC DWORD PTR [ESI+0x7C]
	CALL_LONG(offset [LEGO1_text.mC7537_sub_100C8537])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8537()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C8540()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC7623_proc_100C8623]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EAX,DWORD PTR [ESI+0x78]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ loc_100C85D6
loc_100C857D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP WORD PTR DS:[EBX+0x20],DI
	JNZ loc_100C85C6
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX, ESI
	DEC DWORD PTR [ESI+0x7C]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mC6CE0_sub_100C7CE0])
	JMP loc_100C85CE
loc_100C85C6:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_100C85CE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ESI+0x78],EAX
	JNZ loc_100C857D
loc_100C85D6:
	CMP DWORD PTR [ESI+0x50],0x00
	JNZ loc_100C8607
	CMP DWORD PTR [ESI+0x6C],0x00
	JZ loc_100C8607
	LEA EDI,DWORD PTR [ESI+0x64]
loc_100C85E5:
	MOV EAX,DWORD PTR [ESI+0x68]
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX]
	PUSH EAX
	PUSH ECX
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC04D0_sub_100C14D0])
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	CMP DWORD PTR [ESI+0x6C],0x00
	JNZ loc_100C85E5
loc_100C8607:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC762D_sub_100C862D])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C862D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8670(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC770C_proc_100C870C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x0000009C]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [ESI+0x000000BC]
	LEA EDI,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EBX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_100C86D2
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_100C86D7
loc_100C86D2:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100C86D7:
	MOV DWORD PTR [EDI],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100C86E8
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100C86E8:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	INC DWORD PTR [ESI+0x000000C0]
	CALL_LONG(offset [LEGO1_text.mC7716_sub_100C8716])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8716()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C8720()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC77B3_proc_100C87B3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH ESI
	PUSH EDI
	LEA EAX,DWORD PTR [ECX+0x0000009C]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
loc_100C8755:
	CMP DWORD PTR [ESI+0x000000C0],0x00
	JZ loc_100C8798
	MOV EAX,DWORD PTR [ESI+0x000000BC]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV EDI,DWORD PTR [EAX+0x08]
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX, ESI
	DEC DWORD PTR [ESI+0x000000C0]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mC6CB0_sub_100C7CB0])
	JMP loc_100C8755
loc_100C8798:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC77BD_sub_100C87BD])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C87BD()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C87D0()
{
__asm{
	MOV EAX, ECX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8CF0_ptr]
	MOV DWORD PTR [ECX+0x04],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8830(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ECX+0x04]
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m3B0_WaitForSingleObject])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8850(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH 0x00
	PUSH EAX
	MOV ECX,DWORD PTR [ECX+0x04]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4E0_ReleaseSemaphore])
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8870()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC78C1_proc_100C88C1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC7B40_sub_100C8B40])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8CF8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x000B
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C8A20()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC7A5D_proc_100C8A5D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8CF8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mC7A67_sub_100C8A67])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C8A67()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC7CF0_loc_100C8CF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8A80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, EDI
	JNZ loc_100C8A93
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C8A93:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC7DC0_sub_100C8DC0])
	PUSH ESI
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x44])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8B40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC7BC4_proc_100C8BC4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8D40_ptr]
	MOV DWORD PTR [ESI+0x00000098],EAX
	MOV DWORD PTR [ESI+0x0000009C],EAX
	MOV DWORD PTR [ESI+0x000000A0],EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x000000A4],EAX
	MOV DWORD PTR [ESI+0x000000A8],EAX
	MOV DWORD PTR [ESI+0x000000B4],ECX
	MOV DWORD PTR [ESI+0x000000B0],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x000000AC],0x00000001
	MOV WORD PTR DS:[ESI+0x0C],0x0002
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100C8CF0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC7D43_proc_100C8D43]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8D40_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x00000098]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.mC7D4D_sub_100C8D4D])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C8D4D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8D60(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	MOV EAX,DWORD PTR [EDI+0x00000098]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mC7E80_sub_100C8E80])
	LEA EAX,DWORD PTR [EDI+0x0000009C]
	LEA ECX,DWORD PTR [ESI+0x0000009C]
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EDX,DWORD PTR [EDI+0x000000A4]
	MOV DWORD PTR [ESI+0x000000A4],EDX
	MOV EAX,DWORD PTR [EDI+0x000000A8]
	MOV DWORD PTR [ESI+0x000000A8],EAX
	MOV ECX,DWORD PTR [EDI+0x000000AC]
	MOV DWORD PTR [ESI+0x000000AC],ECX
	MOV EDX,DWORD PTR [EDI+0x000000B0]
	POP EDI
	MOV DWORD PTR [ESI+0x000000B0],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8DC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100C8DD3
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C8DD3:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC7D60_sub_100C8D60])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8E80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000098]
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	CMP ESI, EAX
	JZ loc_100C8EF3
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	TEST ESI, ESI
	JZ loc_100C8EE9
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX, EAX
	MOV DWORD PTR [EBX+0x00000098],EAX
	TEST EDX, EDX
	JZ loc_100C8EF3
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EDX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100C8EE9:
	MOV DWORD PTR [EBX+0x00000098],0x00000000
loc_100C8EF3:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C8F10()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.mACBE0_sub_100ADBE0])
	MOV EBP, EAX
	MOV EDI,DWORD PTR [EBX+0x00000098]
	TEST EDI, EDI
	JZ loc_100C8F36
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	ADD EBP, ECX
	JMP loc_100C8F37
loc_100C8F36:
	INC EBP
loc_100C8F37:
	ADD EBP, 0x18
	MOV ECX, EBX
	MOV ESI, EBP
	CALL_LONG(offset [LEGO1_text.mACBE0_sub_100ADBE0])
	SUB ESI, EAX
	MOV EAX, EBP
	POP EBP
	MOV DWORD PTR [EBX+0x00000094],ESI
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C8F60(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH EBX
	PUSH ESI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mACF70_sub_100ADF70])
	MOV ECX,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mC7E80_sub_100C8E80])
	MOV EDI,DWORD PTR [EBX+0x00000098]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	ADD DWORD PTR [ESI],ECX
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x0000009C],ECX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x000000A0],ECX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x000000A4],ECX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x000000A8],ECX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x000000AC],ECX
	POP EDI
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x000000B0],ECX
	ADD DWORD PTR [ESI],0x04
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100C8FF0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC8041_proc_100C9041]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC7B40_sub_100C8B40])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8D88_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x0003
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C91A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC81DD_proc_100C91DD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8D88_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mC81E7_sub_100C91E7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C91E7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC7CF0_loc_100C8CF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C91F0(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C9200(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, EDI
	JNZ loc_100C9213
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C9213:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC7DC0_sub_100C8DC0])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC81F0_sub_100C91F0])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C92C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC831B_proc_100C931B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC7B40_sub_100C8B40])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8DD0_ptr]
	MOV DWORD PTR [ESI+0x000000BC],0x0000004F
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x0004
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C9470()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC84AD_proc_100C94AD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8DD0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mC84B7_sub_100C94B7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C94B7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC7CF0_loc_100C8CF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C94C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DX,WORD PTR DS:[EAX+0x0C]
	MOV WORD PTR DS:[ECX+0x0C],DX
	MOV EAX,DWORD PTR [EAX+0x000000BC]
	MOV DWORD PTR [ECX+0x000000BC],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C94E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, EDI
	JNZ loc_100C94F3
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C94F3:
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC7DC0_sub_100C8DC0])
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mC84C0_sub_100C94C0])
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C95F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC8641_proc_100C9641]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC7B40_sub_100C8B40])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8E18_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x0008
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C97A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC87DD_proc_100C97DD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8E18_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mC87E7_sub_100C97E7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C97E7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC7CF0_loc_100C8CF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C97F0(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C9800(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100C9813
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C9813:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC7DC0_sub_100C8DC0])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC87F0_sub_100C97F0])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C98C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC8911_proc_100C9911]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC7B40_sub_100C8B40])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8E60_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x000A
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C9A70()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC8AAD_proc_100C9AAD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8E60_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mC8AB7_sub_100C9AB7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C9AB7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC7CF0_loc_100C8CF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C9AC0(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100C9AD0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100C9AE3
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100C9AE3:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC7DC0_sub_100C8DC0])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC8AC0_sub_100C9AC0])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100C9B90()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC8C72_proc_100C9C72]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	PUSH 0x1C
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV WORD PTR DS:[EDI+0x0C],0x0005
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8EF0_ptr]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mC8C38_loc_100C9C38])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8EA8_ptr]
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.mC8D20_proc_100C9D20]
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8EC0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [ESI+0x10],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8ED8_ptr]
	MOV BYTE PTR [ESI+0x18],BL
	JMP_LONG(offset [LEGO1_text.mC8C3A_loc_100C9C3A])
}
}

__declspec(naked) DWORD LEGO1_proc_100C9C20()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100C9C28()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC8CD0_loc_100C9CD0])
}
}

__declspec(naked) DWORD LEGO1_proc_100C9C30()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC8D30_loc_100C9D30])
}
}

__declspec(naked) DWORD LEGO1_loc_100C9C38()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mC8C3A_loc_100C9C3A])
}
}

__declspec(naked) DWORD LEGO1_loc_100C9C3A()
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR [EDI+0x00000098],EAX
	MOV DWORD PTR [EAX+0x0C],offset [LEGO1_text.mC8CB0_proc_100C9CB0]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, EDI
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100C9C65()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100C9D17()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C9DB3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC8CD0_loc_100C9CD0])
}
}

__declspec(naked) DWORD LEGO1_sub_100C9E19()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC8D30_loc_100C9D30])
}
}

__declspec(naked) DWORD LEGO1_sub_100C9E8F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100C9F3B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC8CD0_loc_100C9CD0])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA060()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC90B4_proc_100CA0B4]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8EF0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x00000098]
	TEST ECX, ECX
	JZ loc_100CA09B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CA09B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC90BE_sub_100CA0BE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CA0BE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA0D0(DWORD arg1)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC9243_proc_100CA243]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ECX+0x00000098]
	PUSH EDI
	MOV ESI,DWORD PTR [EBX+0x10]
loc_100CA0FA:
	TEST ESI, ESI
	JZ loc_100CA117
	MOV EDI,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x0C])
	ADD ESP, 0x04
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ESI, EDI
	JMP loc_100CA0FA
loc_100CA117:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBX+0x08],0x00000000
	MOV DWORD PTR [EBX+0x14],0x00000000
	MOV DWORD PTR [EBX+0x10],0x00000000
	MOV ESI,DWORD PTR [EAX+0x00000098]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E68_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
loc_100CA16F:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_100CA17D
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100CA183
loc_100CA17D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100CA183:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ_LONG(offset [LEGO1_text.mC9215_loc_100CA215])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	JZ_LONG(offset [LEGO1_text.mC9215_loc_100CA215])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x2C])
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EBX,DWORD PTR [ECX+0x00000098]
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100CA1E4
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_100CA1E4:
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	TEST ESI, ESI
	JZ loc_100CA1FA
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP FAR loc_100CA16F
loc_100CA1FA:
	MOV DWORD PTR [EBX+0x10],EAX
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP FAR loc_100CA16F
}
}

__declspec(naked) DWORD LEGO1_proc_100CA208()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100CA215(DWORD arg1)
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mC924D_sub_100CA24D])
	MOV EAX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CA24D()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CA260(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100CA273
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100CA273:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC90D0_sub_100CA0D0])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CA35E()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA440()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA53A()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA6B1()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA6C0()
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC979E_proc_100CA79E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.mACBE0_sub_100ADBE0])
	ADD EAX, 0x10
	MOV EBX,DWORD PTR [ESI+0x00000098]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
loc_100CA725:
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JNZ loc_100CA732
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100CA738
loc_100CA732:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100CA738:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_100CA75C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	JZ loc_100CA75C
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x18])
	ADD DWORD PTR [EBP+var_24+0x4],EAX
	JMP loc_100CA725
loc_100CA75C:
	MOV EDI,DWORD PTR [EBP+var_24+0x4]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mACBE0_sub_100ADBE0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	SUB EDI, EAX
	MOV DWORD PTR [ESI+0x00000094],EDI
	CALL_LONG(offset [LEGO1_text.mC97A8_sub_100CA7A8])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CA7A8()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_100CA7B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC989D_proc_100CA89D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mACF70_sub_100ADF70])
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD ECX, 0x0C
	AND EAX, 0x01
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [ESI],ECX
	MOV EDX,DWORD PTR [ECX]
	ADD ECX, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	MOV DWORD PTR [ESI],ECX
	TEST EDX, EDX
	JZ FAR loc_100CA886
	DEC DWORD PTR [EBP+var_18+0x4]
	TEST EDX, EDX
	JZ loc_100CA886
loc_100CA807:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	ADD EAX, 0x08
	PUSH ECX
	PUSH ESI
	MOV EDI,DWORD PTR [EAX-0x04]
	AND EDI, 0x01
	MOV DWORD PTR [ESI],EAX
	CALL_LONG(offset [LEGO1_text.mBEB30_sub_100BFB30])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD DWORD PTR [ESI],EDI
	MOV EDI,DWORD PTR [ECX+0x00000098]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EDI+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	MOV EAX, 0x00000000
	JZ loc_100CA863
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	MOV DWORD PTR [ECX+0x04],EBX
	MOV DWORD PTR [ECX+0x08],0x00000000
loc_100CA863:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EBX, EBX
	JZ loc_100CA873
	MOV DWORD PTR [EBX+0x08],EAX
	JMP loc_100CA876
loc_100CA873:
	MOV DWORD PTR [EDI+0x10],EAX
loc_100CA876:
	MOV DWORD PTR [EDI+0x14],EAX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	INC DWORD PTR [EDI+0x08]
	DEC DWORD PTR [EBP+var_18+0x4]
	TEST EAX, EAX
	JNZ loc_100CA807
loc_100CA886:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	POP EDI
	ADD DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100CA9A8()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA9B0()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA9C2()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CA9D0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC9A9F_proc_100CAA9F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mC8B90_sub_100C9B90])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x10
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8F38_ptr]
	MOV WORD PTR DS:[EDI+0x0C],0x0006
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mC9A65_loc_100CAA65])
	MOV EBX,DWORD PTR [EDI+0x00000098]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3E68_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3E50_ptr]
	JMP_LONG(offset [LEGO1_text.mC9A67_loc_100CAA67])
}
}

__declspec(naked) DWORD LEGO1_proc_100CAA55()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100CAA5D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49D80_loc_1004AD80])
}
}

__declspec(naked) DWORD LEGO1_loc_100CAA65()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mC9A67_loc_100CAA67])
}
}

__declspec(naked) DWORD LEGO1_loc_100CAA67()
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	XOR ECX, ECX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],CL
	MOV DWORD PTR [EDI+0x0000009C],EAX
	MOV DWORD PTR [EDI+0x000000A0],ECX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV EAX, EDI
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100CAA92()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CAC10()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC9C71_proc_100CAC71]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8F38_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x0000009C]
	TEST ECX, ECX
	JZ loc_100CAC4B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CAC4B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x0000009C],0x00000000
	CALL_LONG(offset [LEGO1_text.mC9C7B_sub_100CAC7B])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CAC7B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC9060_sub_100CA060])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CAC90(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CACA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100CACB3
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100CACB3:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC9260_sub_100CA260])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC9C90_sub_100CAC90])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CAE6D()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CAE80()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mC9ED1_proc_100CAED1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mC8B90_sub_100C9B90])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8F80_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x0007
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CB040()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCA07D_proc_100CB07D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8F80_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mCA087_sub_100CB087])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CB087()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mC9060_sub_100CA060])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CB090(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CB0A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100CB0B3
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100CB0B3:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mC9260_sub_100CA260])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mCA090_sub_100CB090])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CB2A5()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB2B0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCA3A5_proc_100CB3A5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mC9E80_sub_100CAE80])
	LEA ECX,DWORD PTR [EDI+0x0000009C]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH 0x18
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m8FC8_ptr]
	MOV WORD PTR DS:[EDI+0x0C],0x0009
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mCA364_loc_100CB364])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m9010_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.mCA470_proc_100CB470]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m9028_ptr]
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [ESI+0x10],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m9040_ptr]
	JMP_LONG(offset [LEGO1_text.mCA366_loc_100CB366])
}
}

__declspec(naked) DWORD LEGO1_proc_100CB34C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100CB354()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA420_loc_100CB420])
}
}

__declspec(naked) DWORD LEGO1_proc_100CB35C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA4C0_loc_100CB4C0])
}
}

__declspec(naked) DWORD LEGO1_loc_100CB364()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mCA366_loc_100CB366])
}
}

__declspec(naked) DWORD LEGO1_loc_100CB366()
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x01
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR [EDI+0x000000AC],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, EDI
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100CB38A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CB403()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB415()
{
	enum{
		arg1217230 = 0x4A4B38,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217230-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB467()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB4A1()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB56B()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB585()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA420_loc_100CB420])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB5EF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB6C3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB6DD()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA420_loc_100CB420])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB8B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA4C0_loc_100CB4C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB8D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCA93B_proc_100CB93B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8FC8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x000000AC]
	TEST ECX, ECX
	JZ loc_100CB90B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CB90B:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mCA92D_sub_100CB92D])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mCA945_sub_100CB945])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CB92D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000009C
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB945()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCA040_sub_100CB040])
}
}

__declspec(naked) DWORD LEGO1_sub_100CB950(DWORD arg1)
{
	enum{
		var_54 = -0x54,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCAB27_proc_100CBB27]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x44
	ADD EAX, 0x0000009C
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH ESI
	PUSH EAX
	ADD ECX, 0x0000009C
	CALL_LONG(offset [LEGO1_text.mAD4B0_sub_100AE4B0])
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	MOV EDX,DWORD PTR [ECX+0x000000AC]
	MOV DWORD PTR [EBP+var_30+0x4],EDX
	MOV EAX,DWORD PTR [EDX+0x10]
loc_100CB992:
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100CB9EE
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_2C+0x4],ESP
	MOV ECX,DWORD PTR [EAX+0x14]
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EDX
	MOV DWORD PTR [EBP+var_44+0x4],ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mCB450_sub_100CC450])
	MOV ESI,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(DWORD PTR [ESI+0x0C])
	ADD ESP, 0x10
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100CB9E9
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mCAB1F_sub_100CBB1F])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100CB9E9:
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	JMP loc_100CB992
loc_100CB9EE:
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EAX+0x08],0x00000000
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV ESI,DWORD PTR [ECX+0x000000AC]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m9070_ptr]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m9058_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
loc_100CBA5B:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_100CBA69
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100CBA6F
loc_100CBA69:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x14]
loc_100CBA6F:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ_LONG(offset [LEGO1_text.mCAADA_loc_100CBADA])
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCB450_sub_100CC450])
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	CALL_LONG(offset [LEGO1_text.mAD4B0_sub_100AE4B0])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	CALL_LONG(offset [LEGO1_text.mCAACA_sub_100CBACA])
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ_LONG(offset [LEGO1_text.mCAADA_loc_100CBADA])
	SUB ESP, 0x10
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ESP
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV ECX,DWORD PTR [EAX+0x000000AC]
	CALL_LONG(offset [LEGO1_text.mCAB40_sub_100CBB40])
	JMP loc_100CBA5B
}
}

__declspec(naked) DWORD LEGO1_sub_100CBACA()
{
	enum{
		arg1217210 = 0x4A4AE8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBAFF()
{
	enum{
		arg1217204 = 0x4A4AD0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217204-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBB17()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCAD00_loc_100CBD00])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBB1F()
{
	enum{
		arg1217209 = 0x4A4AE4,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CBB40(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCABB0_proc_100CBBB0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ESI
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ESP
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB2D0_sub_100CC2D0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mCABBA_sub_100CBBBA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_100CBBBA()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBC29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCAC40_loc_100CBC40])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBC81()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBCE9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBD41()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCAC40_loc_100CBC40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CBD50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JZ loc_100CBD6A
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mCA0A0_sub_100CB0A0])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mCA950_sub_100CB950])
loc_100CBD6A:
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CBEF0()
{
	enum{
		arg1217207 = 0x4A4ADC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBF2B()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CBF4D()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mCAD00_loc_100CBD00])
}
}

__declspec(naked) DWORD LEGO1_sub_100CC29F()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CC2B9()
{
	enum{
		arg1217206 = 0x4A4AD8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CC2D0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCB3A4_proc_100CC3A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.mCB343_loc_100CC343])
	MOV EDI,DWORD PTR [EBP+arg6+0x4]
	MOV ESI,DWORD PTR [EBP+arg5+0x4]
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH ESI
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_1C+0x4],ESP
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mCB3C0_sub_100CC3C0])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP_LONG(offset [LEGO1_text.mCB350_loc_100CC350])
}
}

__declspec(naked) DWORD LEGO1_proc_100CC33B()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_loc_100CC343()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217230 = 0x4A4B38,
		arg1217231 = 0x4A4B3C,
	};

__asm{
	MOV ESI,DWORD PTR [EBP+arg1217230-0x4A4B20]
	MOV EDI,DWORD PTR [EBP+arg1217231-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.mCB350_loc_100CC350])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100CC350(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	TEST ESI, ESI
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	JZ loc_100CC360
	MOV DWORD PTR [ESI+0x14],EAX
	JMP loc_100CC363
loc_100CC360:
	MOV DWORD PTR [EBX+0x10],EAX
loc_100CC363:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	TEST EDI, EDI
	JZ loc_100CC36F
	MOV DWORD PTR [EDI+0x10],EAX
	JMP loc_100CC372
loc_100CC36F:
	MOV DWORD PTR [EBX+0x14],EAX
loc_100CC372:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	INC DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.mCB3AE_sub_100CC3AE])
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
}
}

__declspec(naked) DWORD LEGO1_proc_100CC397()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CC3AE()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CC3C0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCB430_proc_100CC430]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	LEA EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD4B0_sub_100AE4B0])
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EDX,DWORD PTR [EBP+arg6+0x4]
	MOV DWORD PTR [ECX+0x10],EAX
	MOV DWORD PTR [ECX+0x14],EDX
	CALL_LONG(offset [LEGO1_text.mCB43A_sub_100CC43A])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
}
}

__declspec(naked) DWORD LEGO1_sub_100CC43A()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CC450(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCB4A4_proc_100CC4A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	PUSH ESI
	PUSH ECX
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	OR DWORD PTR [EBP+var_14+0x4],0x01
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_100CC495()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217226 = 0x4A4B28,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217220-0x4A4B20],0x01
	JZ loc_100CC4A3
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
loc_100CC4A3:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1___0MxDSFile__QAE_PBDK_Z(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCB571_proc_100CC571]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA EDI,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],EBX
	MOV ECX, EDI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m88C8_ptr]
	MOV DWORD PTR [ESI+0x10],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.mCB800_sub_100CC800])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV WORD PTR DS:[ESI+0x6C],BX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV WORD PTR DS:[ESI+0x6E],BX
	PUSH EAX
	MOV WORD PTR DS:[ESI+0x74],BX
	MOV ECX, EDI
	MOV DWORD PTR [ESI+0x70],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8890_ptr]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x78],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1__Open_MxDSFile__UAEJK_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x24]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EBP, 0x00000001
	MOV EDI, EBX
	XOR EAX, EAX
	MOV ECX, 0x00000012
	REP STOSD
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	MOV ECX,DWORD PTR [ESI+0x1C]
	PUSH EAX
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mCB830_sub_100CC830])
	TEST AX, AX
	JZ loc_100CC5CA
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CC5CA:
	PUSH 0x00
	MOV ECX, EBX
	PUSH 0x00
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mCBBC0_sub_100CCBC0])
	MOV DWORD PTR [ESI+0x10],0x00000000
	CMP DWORD PTR [ESI+0x78],0x00
	JNZ loc_100CC5ED
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB620_sub_100CC620])
	MOV EBP, EAX
loc_100CC5ED:
	TEST EBP, EBP
	JZ loc_100CC601
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV EAX, EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CC601:
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI]
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x24])
	MOV EAX, EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100CC620()
{
	enum{
		var_78 = -0x78,
		var_70 = -0x70,
		var_64 = -0x64,
		var_50 = -0x50,
	};

__asm{
	SUB ESP, 0x78
	MOV DWORD PTR [ESP+var_70+0x78],0x494E4D4F
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ESP+var_78+0x80]
	PUSH EDI
	LEA ESI,DWORD PTR [ECX+0x24]
	MOV EDI, ECX
	PUSH 0x20
	MOV ECX, ESI
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCBE60_sub_100CCE60])
	TEST AX, AX
	JZ loc_100CC654
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x78
	RET
loc_100CC654:
	LEA EAX,DWORD PTR [ESP+var_78+0x84]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_64+0x88]
	PUSH EAX
	MOV DWORD PTR [ESP+var_64+0x8C],0x6448784D
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCBE60_sub_100CCE60])
	TEST AX, AX
	JZ loc_100CC680
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x78
	RET
loc_100CC680:
	LEA EBX,DWORD PTR [EDI+0x6C]
	PUSH 0x0C
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP WORD PTR DS:[EBX],0x02
	JNZ loc_100CC6FE
	CMP WORD PTR DS:[EDI+0x6E],0x02
	JNZ loc_100CC6FE
	LEA EAX,DWORD PTR [ESP+var_78+0x84]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_64+0x88]
	PUSH EAX
	MOV DWORD PTR [ESP+var_64+0x8C],0x664F784D
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCBE60_sub_100CCE60])
	TEST AX, AX
	JZ loc_100CC6C6
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x78
	RET
loc_100CC6C6:
	LEA EBX,DWORD PTR [EDI+0x08]
	PUSH 0x04
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	MOV EAX,DWORD PTR [EBX]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EDI+0x0C]
	SHL EAX, 0x02
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x78
	RET
loc_100CC6FE:
	LEA EAX,DWORD PTR [ESP+var_50+0x84]
	PUSH 0x02
	PUSH 0x02
	PUSH offset [LEGO1_data.m12638_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA EAX,DWORD PTR [ESP+var_50+0x94]
	ADD ESP, 0x10
	PUSH 0x10
	PUSH 0x00
	PUSH EAX
	PUSH 0x00
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m534_MessageBoxA])
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x78
	RET
}
}

__declspec(naked) DWORD LEGO1__Close_MxDSFile__UAEJXZ()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	PUSH EDI
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.mCB8E0_sub_100CC8E0])
	LEA EAX,DWORD PTR [ESI+0x6C]
	MOV DWORD PTR [ESI+0x10],0xFFFFFFFF
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x08],EDI
	CMP DWORD PTR [ESI+0x08],EDI
	JZ loc_100CC778
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESI+0x08],EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x0C],EDI
loc_100CC778:
	XOR EAX, EAX
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__Read_MxDSFile__UAEJPAEK_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0x4]
	PUSH EDI
	MOV EDI, ECX
	PUSH ESI
	PUSH EAX
	LEA ECX,DWORD PTR [EDI+0x24]
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP EAX, ESI
	JZ loc_100CC7A4
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	RETN 0x0008
loc_100CC7A4:
	XOR EAX, EAX
	ADD DWORD PTR [EDI+0x10],ESI
	POP EDI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1__Seek_MxDSFile__UAEJJH_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.mCBA00_sub_100CCA00])
	MOV DWORD PTR [ESI+0x10],EAX
	INC EAX
	POP ESI
	CMP EAX, 0x01
	SBB EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1__GetBufferSize_MxDSFile__UAEKXZ()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x70]
	RET
}
}

__declspec(naked) DWORD LEGO1__GetStreamBuffersNum_MxDSFile__UAEKXZ()
{
__asm{
	MOVSX EAX,WORD PTR [ECX+0x74]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CC800()
{
__asm{
	PUSH EDI
	MOV EDX, ECX
	MOV EDI, EDX
	XOR EAX, EAX
	MOV ECX, 0x00000012
	REP STOSD
	MOV EAX, EDX
	POP EDI
	RET
}
}

__declspec(naked) DWORD LEGO1___1MXIOINFO__QAE_XZ()
{
__asm{
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mCB8E0_sub_100CC8E0])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CC830(DWORD arg1, DWORD arg2)
{
	enum{
		var_88 = -0x88,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x00000088
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	MOV EBX,DWORD PTR [ESP+arg2+0x94]
	LEA ECX,DWORD PTR [ESP+var_88+0x94]
	MOV EDX,DWORD PTR [ESP+arg1+0x94]
	MOV DWORD PTR [ESI+0x28],EDI
	MOV DWORD PTR [ESI+0x2C],EDI
	MOVZX EAX,BX
	PUSH EAX
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4DC_OpenFile])
	MOV DWORD PTR [ESI+0x44],EAX
	CMP EAX, -0x01
	JZ loc_100CC8C2
	TEST EBX,0x00010000
	MOV DWORD PTR [ESI],EBX
	JZ loc_100CC8C6
	MOV EBX,DWORD PTR [ESI+0x14]
	TEST EBX, EBX
	JNZ loc_100CC87F
	MOV EBX, 0x00002000
loc_100CC87F:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ loc_100CC8A8
	MOV DI, 0x0102
	LEA ECX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [ESI+0x14],0x00000000
	AND DWORD PTR [ESI], 0xFFFEFFFF
	MOV DWORD PTR [ECX], 0x00000000
	JMP loc_100CC8B0
loc_100CC8A8:
	LEA ECX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [ECX],EAX
loc_100CC8B0:
	MOV EAX,DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ESI+0x14]
	ADD ECX, EAX
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI+0x24],ECX
	JMP loc_100CC8C6
loc_100CC8C2:
	MOV DI, 0x0103
loc_100CC8C6:
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000088
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CC8E0(DWORD arg1)
{
__asm{
	PUSH ESI
	PUSH EDI
	XOR DI, DI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x44],0x00
	JZ loc_100CC927
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mCBC10_sub_100CCC10])
	MOV DI, AX
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4FC__lclose])
	MOV DWORD PTR [ESI+0x44],0x00000000
	TEST BYTE PTR [ESI+0x02],0x01
	JZ loc_100CC91A
	MOV EAX,DWORD PTR [ESI+0x18]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100CC91A:
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x24],EAX
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI],EAX
loc_100CC927:
	MOV AX, DI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CC930(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	CMP DWORD PTR [EBX+0x18],0x00
	JZ loc_100CC99F
	MOV EAX,DWORD PTR [EBX+0x20]
	MOV EBP,DWORD PTR [ESP+arg2+0x14]
	SUB EAX,DWORD PTR [EBX+0x1C]
loc_100CC951:
	TEST EBP, EBP
	JLE FAR loc_100CC9EA
	TEST EAX, EAX
	JLE loc_100CC981
	CMP EBP, EAX
	JGE loc_100CC963
	MOV EAX, EBP
loc_100CC963:
	MOV EDI,DWORD PTR [ESP+arg1+0x14]
	MOV ESI,DWORD PTR [EBX+0x1C]
	MOV ECX, EAX
	SUB EBP, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	ADD DWORD PTR [EBX+0x1C],EAX
	ADD DWORD PTR [ESP+var_4+0x14],EAX
loc_100CC981:
	TEST EBP, EBP
	JLE loc_100CC9EA
	PUSH 0x00
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mCBD00_sub_100CCD00])
	TEST AX, AX
	JNZ loc_100CC9EA
	MOV EAX,DWORD PTR [EBX+0x20]
	SUB EAX,DWORD PTR [EBX+0x1C]
	TEST EAX, EAX
	JG loc_100CC951
	JMP loc_100CC9EA
loc_100CC99F:
	MOV ECX,DWORD PTR [EBX+0x44]
	TEST ECX, ECX
	JZ loc_100CC9EA
	MOV EBP,DWORD PTR [ESP+arg2+0x14]
	TEST EBP, EBP
	JLE loc_100CC9EA
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	PUSH EBP
	PUSH EAX
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F4__hread]
	PUSH ECX
	CALL_LONG(EBP)
	MOV DWORD PTR [ESP+var_8+0x18],EAX
	CMP EAX, -0x01
	JNZ loc_100CC9E3
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX+0x44]
	PUSH 0x00
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F8__llseek]
	MOV DWORD PTR [ESP+r+0x18],0x00000000
	PUSH EAX
	CALL_LONG(EBP)
	MOV DWORD PTR [EBX+0x2C],EAX
	JMP loc_100CC9EA
loc_100CC9E3:
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	ADD DWORD PTR [EBX+0x2C],EAX
loc_100CC9EA:
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CCA00(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, 0xFFFFFFFF
	PUSH EBP
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX+0x18]
	TEST ECX, ECX
	JZ FAR loc_100CCB6F
	MOV EBP,DWORD PTR [ESP+arg2+0x10]
	CMP EBP, 0x01
	JNZ loc_100CCA41
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [EDI+0x1C]
	TEST ESI, ESI
	JNZ loc_100CCA36
	SUB EAX, ECX
	POP EBP
	ADD EAX,DWORD PTR [EDI+0x28]
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCA36:
	SUB EAX, ECX
	XOR EBP, EBP
	ADD EAX,DWORD PTR [EDI+0x28]
	ADD ESI, EAX
	JMP loc_100CCA56
loc_100CCA41:
	CMP EBP, 0x02
	JNZ loc_100CCA52
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCA52:
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_100CCA56:
	MOV EDX,DWORD PTR [EDI+0x28]
	CMP ESI, EDX
	JL loc_100CCA7A
	MOV EAX,DWORD PTR [EDI+0x14]
	ADD EAX, EDX
	CMP EAX, ESI
	JLE loc_100CCA7A
	MOV EAX, ESI
	MOV EBX, ESI
	SUB EAX, EDX
	POP EBP
	ADD EAX, ECX
	MOV DWORD PTR [EDI+0x1C],EAX
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCA7A:
	CMP DWORD PTR [EDI+0x44],0x00
	JZ FAR loc_100CCBB3
	PUSH 0x00
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mCBC10_sub_100CCC10])
	TEST AX, AX
	JNZ FAR loc_100CCBB3
	PUSH EBP
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH ESI
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F8__llseek]
	PUSH EAX
	CALL_LONG(EBP)
	MOV DWORD PTR [EDI+0x2C],EAX
	CMP EAX, -0x01
	JNZ loc_100CCAC2
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(EBP)
	POP EBP
	MOV DWORD PTR [EDI+0x2C],EAX
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCAC2:
	MOV ECX, ESI
	MOV EAX, ESI
	CDQ
	IDIV DWORD PTR [EDI+0x14]
	SUB ECX, EDX
	MOV DWORD PTR [EDI+0x28],ECX
	CMP ESI, ECX
	JZ loc_100CCAF1
	PUSH 0x00
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH ECX
	PUSH EAX
	CALL_LONG(EBP)
	MOV DWORD PTR [EDI+0x2C],EAX
	CMP EAX, -0x01
	JNZ loc_100CCAF1
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(EBP)
	MOV DWORD PTR [EDI+0x2C],EAX
loc_100CCAF1:
	MOV ECX,DWORD PTR [EDI+0x28]
	CMP DWORD PTR [EDI+0x2C],ECX
	JNZ FAR loc_100CCBB3
	MOV EAX,DWORD PTR [EDI]
	AND EAX, 0x03
	JZ loc_100CCB1E
	CMP EAX, 0x02
	JZ loc_100CCB1E
	MOV EAX,DWORD PTR [EDI+0x18]
	MOV EBX, ESI
	SUB EAX, ECX
	POP EBP
	ADD EAX, ESI
	MOV DWORD PTR [EDI+0x1C],EAX
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCB1E:
	MOV EAX,DWORD PTR [EDI+0x14]
	MOV ECX,DWORD PTR [EDI+0x18]
	PUSH EAX
	MOV EDX,DWORD PTR [EDI+0x44]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F4__hread])
	CMP EAX, -0x01
	JNZ loc_100CCB4B
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(EBP)
	POP EBP
	MOV DWORD PTR [EDI+0x2C],EAX
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCB4B:
	MOV EDX,DWORD PTR [EDI+0x18]
	MOV ECX, ESI
	SUB ECX,DWORD PTR [EDI+0x28]
	ADD DWORD PTR [EDI+0x2C],EAX
	ADD ECX, EDX
	ADD EAX, EDX
	MOV DWORD PTR [EDI+0x1C],ECX
	MOV DWORD PTR [EDI+0x20],EAX
	CMP ECX, EAX
	JNB loc_100CCBB3
	MOV EAX, ESI
	MOV EBX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCB6F:
	MOV EAX,DWORD PTR [EDI+0x44]
	TEST EAX, EAX
	JZ loc_100CCBB3
	MOV EBP,DWORD PTR [ESP+arg2+0x10]
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	CMP EBP, 0x01
	JNZ loc_100CCB91
	TEST ESI, ESI
	JNZ loc_100CCB91
	MOV EAX,DWORD PTR [EDI+0x2C]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100CCB91:
	PUSH EBP
	PUSH ESI
	PUSH EAX
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F8__llseek]
	CALL_LONG(EBP)
	CMP EAX, -0x01
	MOV EBX, EAX
	MOV DWORD PTR [EDI+0x2C],EAX
	JNZ loc_100CCBB3
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x44]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(EBP)
	MOV DWORD PTR [EDI+0x2C],EAX
loc_100CCBB3:
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CCBC0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mCBC10_sub_100CCC10])
	MOV DI, AX
	MOV EAX,DWORD PTR [ESI]
	TEST EAX, 0x00010000
	JZ loc_100CCBEA
	AND EAX, 0xFFFEFFFF
	MOV ECX,DWORD PTR [ESI+0x18]
	PUSH ECX
	MOV DWORD PTR [ESI],EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100CCBEA:
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	MOV DWORD PTR [ESI+0x18],ECX
	MOV DWORD PTR [ESI+0x14],EAX
	ADD EAX, ECX
	MOV DWORD PTR [ESI+0x20],ECX
	MOV DWORD PTR [ESI+0x24],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CCC10(DWORD arg1)
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	XOR DI, DI
	PUSH EBP
	MOV ESI, ECX
	TEST EAX, 0x10000000
	JZ FAR loc_100CCCEE
	CMP DWORD PTR [ESI+0x18],0x00
	JZ FAR loc_100CCCEA
	MOV ECX,DWORD PTR [ESI+0x44]
	TEST ECX, ECX
	JZ FAR loc_100CCCDC
	TEST AL, 0x03
	JZ FAR loc_100CCCDC
	MOV EBX,DWORD PTR [ESI+0x14]
	TEST EBX, EBX
	JLE FAR loc_100CCCEE
	MOV EAX,DWORD PTR [ESI+0x28]
	CMP DWORD PTR [ESI+0x2C],EAX
	JZ loc_100CCC67
	PUSH 0x00
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F8__llseek]
	PUSH EAX
	PUSH ECX
	CALL_LONG(EBP)
	MOV DWORD PTR [ESI+0x2C],EAX
	JMP loc_100CCC6D
loc_100CCC67:
	MOV EBP,DWORD PTR [offset LEGO1_idata.m4F8__llseek]
loc_100CCC6D:
	MOV EAX,DWORD PTR [ESI+0x2C]
	CMP DWORD PTR [ESI+0x28],EAX
	JZ loc_100CCC90
	MOV DI, 0x0107
	PUSH 0x01
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(EBP)
	POP EBP
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCC90:
	PUSH EBX
	MOV EAX,DWORD PTR [ESI+0x18]
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x44]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F0__hwrite])
	CMP EAX, -0x01
	JZ loc_100CCCC1
	CMP EBX, EAX
	JNZ loc_100CCCC1
	POP EBP
	ADD DWORD PTR [ESI+0x2C],EAX
	MOV EAX,DWORD PTR [ESI+0x18]
	AND DWORD PTR [ESI], 0xEFFFFFFF
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCCC1:
	MOV DI, 0x0106
	PUSH 0x01
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(EBP)
	POP EBP
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCCDC:
	MOV DI, 0x0106
	POP EBP
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCCEA:
	MOV DI, 0x010A
loc_100CCCEE:
	MOV AX, DI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CCD00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	XOR DI, DI
	PUSH EBP
	MOV ESI, ECX
	MOV EBP, EAX
	AND EBP, 0x03
	CMP DWORD PTR [ESI+0x18],0x00
	JZ FAR loc_100CCE49
	MOV EBX,DWORD PTR [ESI+0x14]
	CMP EBP, 0x01
	JZ loc_100CCD27
	CMP EBP, 0x02
	JNZ loc_100CCDA5
loc_100CCD27:
	TEST EAX, 0x10000000
	JZ loc_100CCDA5
	TEST BYTE PTR [ESP+arg1+0x10],0x1
	JNZ loc_100CCD3A
	CMP EBP, 0x02
	JNZ loc_100CCDA5
loc_100CCD3A:
	TEST EBX, EBX
	JLE loc_100CCDA5
	MOV EAX,DWORD PTR [ESI+0x28]
	CMP DWORD PTR [ESI+0x2C],EAX
	JZ loc_100CCD56
	PUSH 0x00
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F8__llseek])
	MOV DWORD PTR [ESI+0x2C],EAX
loc_100CCD56:
	MOV EAX,DWORD PTR [ESI+0x28]
	CMP DWORD PTR [ESI+0x2C],EAX
	JZ loc_100CCD64
	MOV DI, 0x0107
	JMP loc_100CCD94
loc_100CCD64:
	PUSH EBX
	MOV EAX,DWORD PTR [ESI+0x18]
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x44]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F0__hwrite])
	CMP EAX, -0x01
	JZ loc_100CCD90
	CMP EBX, EAX
	JNZ loc_100CCD90
	ADD DWORD PTR [ESI+0x2C],EAX
	AND DWORD PTR [ESI], 0xEFFFFFFF
	MOV EAX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI+0x20],EAX
	JMP loc_100CCDA5
loc_100CCD90:
	MOV DI, 0x0106
loc_100CCD94:
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F8__llseek])
	MOV DWORD PTR [ESI+0x2C],EAX
loc_100CCDA5:
	MOV EAX,DWORD PTR [ESI+0x28]
	ADD EAX, EBX
	TEST EBP, EBP
	MOV DWORD PTR [ESI+0x28],EAX
	JZ loc_100CCDBA
	CMP EBP, 0x02
	JNZ FAR loc_100CCE4D
loc_100CCDBA:
	TEST EBX, EBX
	JLE FAR loc_100CCE4D
	CMP DWORD PTR [ESI+0x2C],EAX
	JZ loc_100CCDD7
	PUSH 0x00
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F8__llseek])
	MOV DWORD PTR [ESI+0x2C],EAX
loc_100CCDD7:
	MOV EAX,DWORD PTR [ESI+0x28]
	CMP DWORD PTR [ESI+0x2C],EAX
	JZ loc_100CCDFE
	MOV DI, 0x0107
	PUSH 0x01
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F8__llseek])
	POP EBP
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCDFE:
	PUSH EBX
	MOV EAX,DWORD PTR [ESI+0x18]
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x44]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F4__hread])
	CMP EAX, -0x01
	JNZ loc_100CCE31
	MOV DI, 0x0105
	PUSH 0x01
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4F8__llseek])
	POP EBP
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCE31:
	MOV ECX,DWORD PTR [ESI+0x18]
	POP EBP
	ADD DWORD PTR [ESI+0x2C],EAX
	MOV DWORD PTR [ESI+0x1C],ECX
	ADD EAX, ECX
	MOV DWORD PTR [ESI+0x20],EAX
	MOV AX, DI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100CCE49:
	MOV DI, 0x010A
loc_100CCE4D:
	MOV AX, DI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CCE60(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	XOR BX, BX
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x2C]
	TEST EDI, EDI
	JNZ loc_100CCE82
	MOV AX, 0x0100
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x000C
loc_100CCE82:
	CMP WORD PTR SS:[ESP+arg3+0x2C],0x00
	JNZ loc_100CCEF6
	PUSH 0x08
	MOV ECX, ESI
	MOV DWORD PTR [EDI+0x10],0x00000000
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP EAX, 0x08
	JZ loc_100CCEA9
	MOV BX, 0x0105
	JMP FAR loc_100CD002
loc_100CCEA9:
	MOV EAX,DWORD PTR [ESI+0x18]
	TEST EAX, EAX
	JZ loc_100CCEBD
	MOV ECX,DWORD PTR [ESI+0x1C]
	SUB ECX, EAX
	ADD ECX,DWORD PTR [ESI+0x28]
	MOV DWORD PTR [EDI+0x0C],ECX
	JMP loc_100CCEC3
loc_100CCEBD:
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV DWORD PTR [EDI+0x0C],EAX
loc_100CCEC3:
	MOV EAX,DWORD PTR [EDI]
	CMP EAX, 0x46464952
	JZ loc_100CCED7
	CMP EAX, 0x5453494C
	JNZ FAR loc_100CD002
loc_100CCED7:
	PUSH 0x04
	ADD EDI, 0x08
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP EAX, 0x04
	JZ FAR loc_100CD002
	MOV BX, 0x0105
	JMP FAR loc_100CD002
loc_100CCEF6:
	MOV DWORD PTR [ESP+var_18+0x2C],0x7FFFFFFF
	MOV EAX,DWORD PTR [ESP+arg2+0x2C]
	TEST EAX, EAX
	JZ loc_100CCF10
	MOV ECX,DWORD PTR [EAX+0x04]
	ADD ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESP+var_18+0x2C],ECX
loc_100CCF10:
	MOV EBP, 0x00000001
	XOR EAX, EAX
	MOV DWORD PTR [ESP+var_1C+0x2C],EAX
	MOV DWORD PTR [ESP+var_4+0x2C],EAX
loc_100CCF1F:
	LEA EAX,DWORD PTR [ESP+var_14+0x2C]
	PUSH 0x08
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP EAX, 0x08
	JZ loc_100CCF46
	CMP DWORD PTR [ESP+var_1C+0x2C],0x01
	SBB EBX, EBX
	AND EBX, -0x04
	ADD BX, 0x0109
	JMP FAR loc_100CCFE8
loc_100CCF46:
	MOV DWORD PTR [ESP+var_1C+0x2C],0x00000001
	MOV EAX,DWORD PTR [ESI+0x18]
	TEST EAX, EAX
	JZ loc_100CCF63
	MOV ECX,DWORD PTR [ESI+0x1C]
	SUB ECX, EAX
	ADD ECX,DWORD PTR [ESI+0x28]
	MOV DWORD PTR [ESP+var_8+0x2C],ECX
	JMP loc_100CCF6A
loc_100CCF63:
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV DWORD PTR [ESP+var_8+0x2C],EAX
loc_100CCF6A:
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	CMP EAX,DWORD PTR [ESP+var_8+0x2C]
	JNB loc_100CCF7A
	MOV BX, 0x0109
	JMP loc_100CCFE8
loc_100CCF7A:
	CMP WORD PTR SS:[ESP+arg3+0x2C],0x40
	JNZ loc_100CCF8C
	CMP DWORD PTR [ESP+var_14+0x2C],0x5453494C
	JZ loc_100CCF9E
loc_100CCF8C:
	CMP WORD PTR SS:[ESP+arg3+0x2C],0x20
	JNZ loc_100CCFC2
	CMP DWORD PTR [ESP+var_14+0x2C],0x46464952
	JNZ loc_100CCFC2
loc_100CCF9E:
	LEA EAX,DWORD PTR [ESP+var_C+0x2C]
	PUSH 0x04
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCB930_sub_100CC930])
	CMP EAX, 0x04
	JZ loc_100CCFB7
	MOV BX, 0x0105
	JMP loc_100CCFE8
loc_100CCFB7:
	MOV EAX,DWORD PTR [ESP+var_C+0x2C]
	CMP DWORD PTR [EDI+0x08],EAX
	JNZ loc_100CCFEA
	JMP loc_100CCFE8
loc_100CCFC2:
	MOV EAX,DWORD PTR [ESP+var_14+0x2C]
	CMP DWORD PTR [EDI],EAX
	JZ loc_100CCFE8
	MOV EAX,DWORD PTR [ESP+var_10+0x2C]
	PUSH 0x01
	AND EAX, 0x01
	MOV ECX, ESI
	ADD EAX,DWORD PTR [ESP+var_10+0x30]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCBA00_sub_100CCA00])
	CMP EAX, -0x01
	JNZ loc_100CCFEA
	MOV BX, 0x0107
loc_100CCFE8:
	XOR EBP, EBP
loc_100CCFEA:
	TEST EBP, EBP
	JNZ FAR loc_100CCF1F
	TEST BX, BX
	JNZ loc_100CD002
	LEA ESI,DWORD PTR [ESP+var_14+0x2C]
	MOV ECX, 0x00000005
	REP MOVSD
loc_100CD002:
	MOV AX, BX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CD010(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCC07E_proc_100CD07E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m9088_ptr]
	CALL_LONG(offset [LEGO1_text.mCC1E0_sub_100CD1E0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI+0x00000094],EAX
	MOV DWORD PTR [ESI+0x00000098],EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CD0D0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCC12F_proc_100CD12F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m9088_ptr]
	CALL_LONG(offset [LEGO1_text.mCC1E0_sub_100CD1E0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCC220_sub_100CD220])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_loc_100CD150()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mCC1CA_proc_100CD1CA]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m9088_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x000000A0]
	TEST ECX, ECX
	JZ loc_100CD18B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CD18B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000A4]
	TEST ECX, ECX
	JZ loc_100CD19E
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CD19E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000B0]
	TEST ECX, ECX
	JZ loc_100CD1B1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100CD1B1:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mCC1D4_sub_100CD1D4])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100CD1D4()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100CD1E0()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x00000094],EAX
	MOV DWORD PTR [ECX+0x00000098],EAX
	MOV DWORD PTR [ECX+0x0000009C],EAX
	MOV DWORD PTR [ECX+0x000000A0],EAX
	MOV DWORD PTR [ECX+0x000000A4],EAX
	MOV DWORD PTR [ECX+0x000000A8],EAX
	MOV WORD PTR DS:[ECX+0x000000AC],0x0002
	MOV DWORD PTR [ECX+0x000000B0],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100CD220(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	MOV EAX,DWORD PTR [EDI+0x00000094]
	MOV DWORD PTR [ESI+0x00000094],EAX
	MOV ECX,DWORD PTR [EDI+0x00000098]
	MOV DWORD PTR [ESI+0x00000098],ECX
	MOV EDX,DWORD PTR [EDI+0x0000009C]
	MOV DWORD PTR [ESI+0x0000009C],EDX
	XOR EDX, EDX
	MOV DWORD PTR [ESI+0x000000A0],EDX
	MOV DWORD PTR [ESI+0x000000A4],EDX
	MOV AX,WORD PTR DS:[EDI+0x000000AC]
	MOV WORD PTR DS:[ESI+0x000000AC],AX
	MOV EAX, 0x00000000
	MOV ECX,DWORD PTR [EDI+0x000000A8]
	MOV DWORD PTR [ESI+0x000000A8],ECX
	MOV ECX,DWORD PTR [EDI+0x000000B0]
	TEST ECX, ECX
	JZ loc_100CD28E
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x2C])
loc_100CD28E:
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mCC2A0_sub_100CD2A0])
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

