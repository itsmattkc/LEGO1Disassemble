#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD __stdcall LEGO1_sub_10057FE0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_C = -0xC,
		r = 0x0,
	};

__asm{
	SUB ESP, 0x20
	LEA EAX,DWORD PTR [ESP+var_14+0x20]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_1C+0x28],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_18+0x28],EAX
	MOV ECX,DWORD PTR [ESI+0x34]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_1C+0x2C]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4A8_ptr])
	LEA ECX,DWORD PTR [ESI+0x38]
	LEA EDX,DWORD PTR [ESP+var_18+0x2C]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EDI,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EDI
	MOV EDI,DWORD PTR [ESP+r+0x2C]
	MOV ECX,DWORD PTR [ECX+0x08]
	LEA EAX,DWORD PTR [EDI+0x000000A8]
	PUSH EAX
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_1C+0x2C]
	MOV EAX,DWORD PTR [ESP+var_1C+0x2C]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDX,DWORD PTR [ESP+var_1C+0x2C]
	MOV ECX,DWORD PTR [ESP+var_1C+0x2C]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_1C+0x2C]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FSTP DWORD PTR [ESP+var_24+0x2C]
	FLD DWORD PTR [EDI+0x000000A4]
	FADD DWORD PTR [ESI+0x44]
	FSTP DWORD PTR [ESP+var_C+0x2C]
	FLD DWORD PTR [ESP+var_24+0x2C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4608]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10058093
	FLD DWORD PTR [ESP+var_C+0x2C]
	FMUL DWORD PTR [ESP+var_C+0x2C]
	FCOMP DWORD PTR [ESP+var_24+0x2C]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10058093
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x20
	RETN 0x0004
loc_10058093:
	LEA EAX,DWORD PTR [ESP+0x20]
	LEA ECX,DWORD PTR [ESI+0x64]
	MOV DWORD PTR [ESP+var_24+0x2C],EDI
	LEA EDI,DWORD PTR [ESP+var_24+0x2C]
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m570C0_sub_100580C0])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x20
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100580C0(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EBP, EDX
	MOV ECX, 0x00000001
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_10058105
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX,DWORD PTR [EAX]
loc_100580E4:
	MOV EBP, EBX
	MOV ECX, 0x00000001
	CMP DWORD PTR [EBX+0x0C],EAX
	JG loc_100580F2
	XOR ECX, ECX
loc_100580F2:
	TEST ECX, ECX
	JNZ loc_100580FB
	MOV EBX,DWORD PTR [EBX+0x08]
	JMP loc_100580FD
loc_100580FB:
	MOV EBX,DWORD PTR [EBX]
loc_100580FD:
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	JNZ loc_100580E4
loc_10058105:
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_1005813F
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m573A0_sub_100583A0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1005813F:
	MOV DWORD PTR [ESP+var_4+0x1C],EBP
	TEST ECX, ECX
	JZ loc_10058188
	CMP DWORD PTR [EDX],EBP
	JNZ loc_1005817F
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m573A0_sub_100583A0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1005817F:
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m57330_sub_10058330])
loc_10058188:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [ECX+0x0C],EDX
	JGE FAR loc_1005830A
	PUSH 0x00
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x20],0x00000001
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m57380_sub_10058380])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x3200]
	PUSH ECX
	LEA EDX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x3200]
	PUSH EDX
	MOV DWORD PTR [EDI+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m57980_sub_10058980])
	ADD ESP, 0x08
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EBP
	JZ loc_100581FB
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	JNZ loc_100581FB
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],ECX
	JG loc_100581FB
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10058216
	MOV DWORD PTR [EAX],EDI
	JMP loc_10058216
loc_100581FB:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, EBP
	JZ loc_1005820D
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10058216
	MOV DWORD PTR [EAX],EDI
	JMP loc_10058216
loc_1005820D:
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDI
loc_10058216:
	MOV EBX, EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDI
	JZ FAR loc_100582E6
loc_10058224:
	LEA ECX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [ECX]
	LEA EAX,DWORD PTR [EDX+0x10]
	CMP DWORD PTR [EAX],0x00
	JNZ FAR loc_100582E6
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EDX
	JNZ loc_10058281
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_100582BC
	CMP DWORD PTR [EDX+0x08],EBX
	JNZ loc_1005825A
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57620_sub_10058620])
loc_1005825A:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57680_sub_10058680])
	JMP loc_100582DA
loc_10058281:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_100582BC
	CMP DWORD PTR [EDX],EBX
	JNZ loc_10058295
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57680_sub_10058680])
loc_10058295:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57620_sub_10058620])
	JMP loc_100582DA
loc_100582BC:
	MOV DWORD PTR [EAX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EAX+0x04]
loc_100582DA:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ FAR loc_10058224
loc_100582E6:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX+0x10],0x00000001
	MOV DWORD PTR [EAX],EDI
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1005830A:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],0x00000000
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10058330()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_10058348
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_10058348
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10058348:
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10058365
loc_10058352:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EDX
	JZ loc_10058361
	MOV EAX, EDX
	JMP loc_10058352
loc_10058361:
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10058365:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10058377
loc_1005836C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1005836C
loc_10058377:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10058380(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100583A0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_100583E4
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_100583E4:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_10058414
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JNZ loc_10058414
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x0C],EAX
	JG loc_10058414
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10058436
	MOV DWORD PTR [EAX],EDX
	JMP loc_10058436
loc_10058414:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_10058429
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10058436
	MOV DWORD PTR [EAX],EDX
	JMP loc_10058436
loc_10058429:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10058436:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_100585F9
loc_10058446:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_100585F9
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_10058522
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_100585CF
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_100584B2
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10058492
	MOV DWORD PTR [EAX+0x04],ECX
loc_10058492:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100584AC
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100584AC
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100584AE
loc_100584AC:
	MOV DWORD PTR [EAX],EDX
loc_100584AE:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_100584B2:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_100584E4
	MOV DWORD PTR [EAX+0x04],EDI
loc_100584E4:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10058518
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005850B
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_100585ED
loc_1005850B:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_100585ED
loc_10058518:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	JMP FAR loc_100585CA
loc_10058522:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_100585CF
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1005856A
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10058547
	MOV DWORD PTR [EAX+0x04],ECX
loc_10058547:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10058563
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10058563
	MOV DWORD PTR [EBX],EDX
	JMP loc_10058565
loc_10058563:
	MOV DWORD PTR [EAX],EDX
loc_10058565:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1005856A:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_1005859C
	MOV DWORD PTR [EAX+0x04],EDI
loc_1005859C:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100585C6
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100585BD
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100585ED
loc_100585BD:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100585ED
loc_100585C6:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
loc_100585CA:
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100585ED
loc_100585CF:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_100585ED:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10058446
loc_100585F9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10058620(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_1005863A
	MOV DWORD PTR [EAX+0x04],EDX
loc_1005863A:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10058668
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1005865D
	MOV DWORD PTR [EAX+0x08],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_1005865D:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_10058668:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10058680(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_1005869A
	MOV DWORD PTR [EAX+0x04],ESI
loc_1005869A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_100586CC
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],ESI
	JZ loc_100586C0
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_100586C0:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_100586CC:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100586E0(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x24]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	TEST EBX, EBX
	JZ FAR loc_100587A1
	LEA ESI,DWORD PTR [EDI+0x64]
	LEA EAX,DWORD PTR [ESP+var_C+0x2C]
	PUSH EAX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x30],EBX
	MOV EBP,DWORD PTR [EDI+0x68]
	CALL_LONG(offset [LEGO1_text.m57950_sub_10058950])
	MOV DWORD PTR [ESP+var_18+0x2C],EAX
	MOV ECX,DWORD PTR [EDI+0x68]
	CMP EAX, ECX
	JZ loc_10058723
	MOV EDX,DWORD PTR [ESP+var_C+0x2C]
	CMP DWORD PTR [EAX+0x0C],EDX
	LEA EAX,DWORD PTR [ESP+var_18+0x2C]
	JLE loc_1005872B
loc_10058723:
	LEA EAX,DWORD PTR [ESP+var_10+0x2C]
	MOV DWORD PTR [ESP+var_10+0x2C],ECX
loc_1005872B:
	CMP EBP,DWORD PTR [EAX]
	JZ FAR loc_1005880E
	LEA EAX,DWORD PTR [ESP+var_18+0x2C]
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x2C],EBX
	LEA EBX,DWORD PTR [ESP+var_C+0x2C]
	PUSH EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m578E0_sub_100588E0])
	MOV DWORD PTR [ESP+var_8+0x2C],0x00000000
	MOV EAX,DWORD PTR [ESP+var_14+0x2C]
	MOV EDX,DWORD PTR [ESP+var_18+0x2B]
	MOV DWORD PTR [ESP+var_10+0x2C],EAX
	PUSH EDX
	MOV ECX,DWORD PTR [ESP+var_18+0x30]
	LEA EAX,DWORD PTR [ESP+var_8+0x30]
	MOV DWORD PTR [ESP+var_4+0x30],ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+var_10+0x34]
	MOV EDX,DWORD PTR [ESP+var_4+0x34]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m579A0_sub_100589A0])
	MOV ECX,DWORD PTR [ESP+var_14+0x3C]
	MOV EDX,DWORD PTR [ESP+var_18+0x3C]
	LEA EAX,DWORD PTR [ESP+var_10+0x3C]
	ADD ESP, 0x10
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57820_sub_10058820])
	MOV EAX, 0x00000001
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0004
loc_100587A1:
	MOV EAX,DWORD PTR [EDI+0x68]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_18+0x2C],ECX
	CMP ECX, EAX
	JZ loc_1005880E
	XOR ECX, ECX
loc_100587B0:
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EDX+0x00000080],ECX
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_100587DC
loc_100587C8:
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EDX
	JZ loc_100587D6
	MOV EAX, EDX
	JMP loc_100587C8
loc_100587D6:
	MOV DWORD PTR [ESP+var_18+0x2C],EAX
	JMP loc_10058805
loc_100587DC:
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100587F8
loc_100587E8:
	MOV DWORD PTR [ESP+var_18+0x2C],EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100587E8
loc_100587F8:
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10058805
	MOV DWORD PTR [ESP+var_18+0x2C],EDX
loc_10058805:
	MOV EAX,DWORD PTR [ESP+var_18+0x2C]
	CMP DWORD PTR [EDI+0x68],EAX
	JNZ loc_100587B0
loc_1005880E:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10058820(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x0C],0x00
	JZ loc_1005889A
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV EDI,DWORD PTR [ESP+arg3+0x14]
	CMP DWORD PTR [ECX],EAX
	JNZ loc_1005889E
	CMP EDI, ECX
	JNZ loc_1005889E
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV EDI, EBX
loc_10058846:
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_10058868
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m56180_sub_10057180])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_10058846
loc_10058868:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x3200]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x000C
loc_1005889A:
	MOV EDI,DWORD PTR [ESP+arg3+0x14]
loc_1005889E:
	CMP EDI,DWORD PTR [ESP+arg2+0x14]
	JZ loc_100588CC
loc_100588A4:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	LEA ECX,DWORD PTR [ESP+arg2+0x14]
	MOV DWORD PTR [ESP+var_8+0x14],EAX
	CALL_LONG(offset [LEGO1_text.m55CF0_sub_10056CF0])
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	LEA ECX,DWORD PTR [ESP+var_4+0x14]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m55D30_sub_10056D30])
	CMP EDI,DWORD PTR [ESP+arg2+0x14]
	JNZ loc_100588A4
loc_100588CC:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100588E0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV ECX, EBX
	MOV EDX,DWORD PTR [ESP+arg2+0x14]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV EAX, EDI
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10058914
	MOV ESI,DWORD PTR [EDX]
loc_100588FE:
	CMP DWORD PTR [EAX+0x0C],ESI
	JLE loc_10058909
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_1005890C
loc_10058909:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_1005890C:
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JNZ loc_100588FE
loc_10058914:
	MOV DWORD PTR [ESP+var_4+0x14],ECX
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_10058938
	MOV EAX,DWORD PTR [EDX]
loc_10058922:
	CMP DWORD PTR [EDI+0x0C],EAX
	JL loc_1005892D
	MOV EBX, EDI
	MOV EDI,DWORD PTR [EDI]
	JMP loc_10058930
loc_1005892D:
	MOV EDI,DWORD PTR [EDI+0x08]
loc_10058930:
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x3200]
	JNZ loc_10058922
loc_10058938:
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],ECX
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10058950(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_1005897A
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ECX]
loc_10058964:
	CMP DWORD PTR [EDX+0x0C],ECX
	JL loc_1005896F
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_10058972
loc_1005896F:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_10058972:
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x3200]
	JNZ loc_10058964
loc_1005897A:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10058980(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_10058990
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_10058990:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100589A0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	CMP EDX, ECX
	JZ loc_100589F1
	MOV ESI,DWORD PTR [ESP+arg3+0x4]
loc_100589B1:
	INC DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_100589D4
loc_100589BE:
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],ECX
	JZ loc_100589CC
	MOV EAX, ECX
	JMP loc_100589BE
loc_100589CC:
	CMP EDX, EAX
	MOV ECX, EAX
	JNZ loc_100589B1
	POP ESI
	RET
loc_100589D4:
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_100589E6
loc_100589DC:
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100589DC
loc_100589E6:
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100589ED
	MOV ECX, EAX
loc_100589ED:
	CMP EDX, ECX
	JNZ loc_100589B1
loc_100589F1:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10058A00()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m57A6F_proc_10058A6F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mADF10_sub_100AEF10])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x000000A0]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4638_ptr]
	CALL_LONG(offset [LEGO1_text.m57BD0_sub_10058BD0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10058B50()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m57BB0_proc_10058BB0]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4638_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m57C30_sub_10058C30])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m57BA2_sub_10058BA2])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m57BBA_sub_10058BBA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10058BA2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000A0
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10058BBA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mADFF0_loc_100AEFF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10058BD0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAE080_sub_100AF080])
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x68],EAX
	MOV DWORD PTR [ESI+0x70],EAX
	MOV DWORD PTR [ESI+0x6C],EAX
	MOV DWORD PTR [ESI+0x74],EAX
	MOV DWORD PTR [ESI+0x78],EAX
	MOV DWORD PTR [ESI+0x7C],EAX
	MOV BYTE PTR [ESI+0x00000080],AL
	MOV DWORD PTR [ESI+0x00000088],EAX
	MOV DWORD PTR [ESI+0x0000008C],EAX
	MOV DWORD PTR [ESI+0x00000090],EAX
	MOV DWORD PTR [ESI+0x0000009C],EAX
	MOV DWORD PTR [ESI+0x00000094],EAX
	MOV DWORD PTR [ESI+0x00000098],EAX
	MOV DWORD PTR [ESI+0x00000134],EAX
	MOV BYTE PTR [ESI+0x0000013C],0x01
	MOV DWORD PTR [ESI+0x00000138],EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10058C30()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m57E59_proc_10058E59]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x48]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ESI
	MOV ECX,DWORD PTR [ESI+0x28]
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV ECX,DWORD PTR [ESI+0x78]
	TEST ECX, ECX
	JZ loc_10058C80
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x78],0x00000000
loc_10058C80:
	MOV EDI,DWORD PTR [ESI+0x0000009C]
	TEST EDI, EDI
	JZ loc_10058CA4
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m38720___1LegoGameState__QAE_XZ])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [ESI+0x0000009C],0x00000000
	ADD ESP, 0x04
loc_10058CA4:
	MOV ECX,DWORD PTR [ESI+0x00000094]
	TEST ECX, ECX
	JZ loc_10058CBE
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x00000094],0x00000000
loc_10058CBE:
	MOV EDI,DWORD PTR [ESI+0x0000008C]
	TEST EDI, EDI
	JZ loc_10058CE2
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m82180_sub_10083180])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [ESI+0x0000008C],0x00000000
	ADD ESP, 0x04
loc_10058CE2:
	MOV ECX,DWORD PTR [ESI+0x00000090]
	TEST ECX, ECX
	JZ loc_10058CFC
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x00000090],0x00000000
loc_10058CFC:
	MOV ECX,DWORD PTR [ESI+0x00000098]
	TEST ECX, ECX
	JZ loc_10058D16
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x00000098],0x00000000
loc_10058D16:
	MOV EDI,DWORD PTR [ESI+0x74]
	TEST EDI, EDI
	JZ FAR loc_10058DA6
	MOV EAX,DWORD PTR [EDI+0x0C]
	ADD EDI, 0x08
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP EAX, ECX
	JZ loc_10058D92
loc_10058D30:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EAX+0x10]
	TEST EBX, EBX
	JZ loc_10058D4A
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m64C00_sub_10065C00])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10058D4A:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10058D66
loc_10058D58:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10058D87
	MOV ECX, EAX
	JMP loc_10058D58
loc_10058D66:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10058D7F
loc_10058D71:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10058D71
loc_10058D7F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10058D8A
loc_10058D87:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_10058D8A:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EDI+0x04],EAX
	JNZ loc_10058D30
loc_10058D92:
	MOV ECX,DWORD PTR [ESI+0x74]
	TEST ECX, ECX
	JZ loc_10058D9F
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10058D9F:
	MOV DWORD PTR [ESI+0x74],0x00000000
loc_10058DA6:
	MOV ECX,DWORD PTR [ESI+0x6C]
	TEST ECX, ECX
	JZ loc_10058DBA
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x6C],0x00000000
loc_10058DBA:
	MOV ECX,DWORD PTR [ESI+0x70]
	TEST ECX, ECX
	JZ loc_10058DCE
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x70],0x00000000
loc_10058DCE:
	CALL_LONG(offset [LEGO1_text.m45DE0_sub_10046DE0])
	MOV ECX,DWORD PTR [ESI+0x00000134]
	TEST ECX, ECX
	JZ loc_10058DFC
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
	MOV ECX,DWORD PTR [ESI+0x00000134]
	TEST ECX, ECX
	JZ loc_10058DF2
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10058DF2:
	MOV DWORD PTR [ESI+0x00000134],0x00000000
loc_10058DFC:
	MOV ECX,DWORD PTR [ESI+0x00000138]
	TEST ECX, ECX
	JZ loc_10058E16
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x00000138],0x00000000
loc_10058E16:
	LEA ECX,DWORD PTR [ESI+0x000000C0]
	CALL_LONG(offset [LEGO1_text.mAC7E0_sub_100AD7E0])
	CALL_LONG(offset [LEGO1_text.m520C0_sub_100530C0])
	MOV EAX,DWORD PTR [ESI+0x68]
	TEST EAX, EAX
	JZ loc_10058E36
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10058E36:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAEE90_sub_100AFE90])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m57E63_sub_10058E63])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10058E63()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10059275()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100598C0()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10059947()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100599E3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58900_loc_10059900])
}
}

__declspec(naked) DWORD LEGO1_sub_10059A59()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58A70_loc_10059A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10059AB1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58960_loc_10059960])
}
}

__declspec(naked) DWORD LEGO1_sub_10059B1F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10059BCB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58900_loc_10059900])
}
}

__declspec(naked) DWORD LEGO1_sub_10059C39()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58960_loc_10059960])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10059C50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	TEST EAX, EAX
	JGE loc_10059C5A
	XOR EAX, EAX
loc_10059C5A:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10059C70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	ADD EAX, 0x14
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10059C80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10059C90(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	ADD EAX, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10059CA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	ADD EAX, 0x08
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10059D80()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059D9E
loc_10059D8D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059D9B
	MOV EDX, EAX
	JMP loc_10059D8D
loc_10059D9B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10059D9E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10059DB2
loc_10059DA6:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10059DA6
loc_10059DB2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10059DBB
	MOV DWORD PTR [ECX],EDX
loc_10059DBB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10059DC0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059DF0
loc_10059DDC:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059DEA
	MOV ECX, EAX
	JMP loc_10059DDC
loc_10059DEA:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	JMP loc_10059E19
loc_10059DF0:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_10059E0C
loc_10059DFC:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10059DFC
loc_10059E0C:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10059E19
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_10059E19:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059E4D
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059E49
loc_10059E34:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059E42
	MOV EDX, EAX
	JMP loc_10059E34
loc_10059E42:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10059E57
loc_10059E49:
	MOV EDX, EBX
	JMP loc_10059E57
loc_10059E4D:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10059E57:
	CMP DWORD PTR [ESP+var_4+0x14],ECX
	JNZ FAR loc_10059EF0
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10059E81
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10059E81
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10059E83
loc_10059E81:
	MOV DWORD PTR [EAX],EDX
loc_10059E83:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10059EB4
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x100]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10059EAB
	MOV EAX, EDX
loc_10059E99:
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059EA7
	MOV EAX, EDI
	JMP loc_10059E99
loc_10059EA7:
	MOV DWORD PTR [EBX],EAX
	JMP loc_10059EB4
loc_10059EAB:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10059EB4:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_10059F4E
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x100]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10059EE5
	MOV EAX, EDX
loc_10059ED2:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059EE1
	MOV EAX, EBX
	JMP loc_10059ED2
loc_10059EE1:
	MOV DWORD PTR [EDI],EAX
	JMP loc_10059F4E
loc_10059EE5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_10059F4E
loc_10059EF0:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_10059F04
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10059F19
loc_10059F04:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10059F19:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10059F33
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10059F33
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10059F35
loc_10059F33:
	MOV DWORD PTR [EAX],ECX
loc_10059F35:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ECX+0x14],EBX
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EBP
loc_10059F4E:
	CMP DWORD PTR [ECX+0x14],0x01
	JNZ FAR loc_1005A1EE
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_1005A1E7
loc_10059F64:
	CMP DWORD PTR [EDX+0x14],0x01
	JNZ FAR loc_1005A1E7
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_10059FEF
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_10059FD4
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EAX+0x08],EDI
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_10059FAB
	MOV DWORD PTR [EDI+0x04],EAX
loc_10059FAB:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_10059FC7
	MOV EDI,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10059FC7
	MOV DWORD PTR [EDI+0x08],EBP
	JMP loc_10059FC9
loc_10059FC7:
	MOV DWORD PTR [EDI],EBP
loc_10059FC9:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10059FD4:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1005A078
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1005A078
	JMP loc_1005A05E
loc_10059FEF:
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_1005A045
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A01C
	MOV DWORD PTR [EAX+0x04],EDI
loc_1005A01C:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A039
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A039
	MOV EAX,DWORD PTR [EDI+0x04]
loc_1005A039:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1005A045:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1005A138
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1005A138
loc_1005A05E:
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10059F64
	JMP FAR loc_1005A1E7
loc_1005A078:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_1005A0D3
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A0A6
	MOV DWORD PTR [EAX+0x04],EDI
loc_1005A0A6:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A0C5
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A0C5
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1005A0C7
loc_1005A0C5:
	MOV DWORD PTR [EAX],EBX
loc_1005A0C7:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1005A0D3:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A105
	MOV DWORD PTR [EAX+0x04],EBX
loc_1005A105:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1005A12F
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1005A126
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_1005A1E4
loc_1005A126:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_1005A1E4
loc_1005A12F:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_1005A1E4
loc_1005A138:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_1005A18E
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A166
	MOV DWORD PTR [EAX+0x04],EDI
loc_1005A166:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A182
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1005A182
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1005A184
loc_1005A182:
	MOV DWORD PTR [EAX],EBX
loc_1005A184:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_1005A18E:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A1BF
	MOV DWORD PTR [EAX+0x04],EBX
loc_1005A1BF:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1005A1DF
	MOV EAX,DWORD PTR [EBX+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JNZ loc_1005A1DF
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_1005A1E1
loc_1005A1DF:
	MOV DWORD PTR [EAX],EDI
loc_1005A1E1:
	MOV DWORD PTR [EDI+0x08],EBX
loc_1005A1E4:
	MOV DWORD PTR [EBX+0x04],EDI
loc_1005A1E7:
	MOV DWORD PTR [EDX+0x14],0x00000001
loc_1005A1EE:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005A210(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1005A243
loc_1005A223:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m59210_sub_1005A210])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x100]
	JNZ loc_1005A223
loc_1005A243:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005A301()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m58CB0_loc_10059CB0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A3EF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x08
	JMP_LONG(offset [LEGO1_text.m59400_loc_1005A400])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A441()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m59450_loc_1005A450])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A491()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m592C0_loc_1005A2C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A571()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m594A0_loc_1005A4A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A5E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m59250_loc_1005A250])
}
}

__declspec(naked) DWORD LEGO1_sub_1005A5F0()
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m59C23_proc_1005AC23]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH 0x00000214
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1005A647
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV ESI, 0x00000012
loc_1005A635:
	MOV ECX, EDI
	ADD EDI, 0x1C
	CALL_LONG(offset [LEGO1_text.m59C40_sub_1005AC40])
	DEC ESI
	JNS loc_1005A635
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	JMP loc_1005A649
loc_1005A647:
	XOR EDX, EDX
loc_1005A649:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBX+0x68],EDX
	TEST EDX, EDX
	JNZ loc_1005A66D
	MOV EAX, 0xFFFFFFFF
loc_1005A65C:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_1005A66D:
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_2C+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	SUB EAX, EAX
	MOV DWORD PTR [EDX], 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EDX+0x04]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX, offset LEGO1_data + 0x67B0
	MOV DWORD PTR [EDX+0x18],ECX
	TEST EAX, EAX
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000000
	JZ loc_1005A6DC
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A6DC:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV EDX,DWORD PTR [EBX+0x68]
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EDX+0x1C],EAX
	ADD EDX, 0x1C
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EDX+0x04]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX, offset [LEGO1_data.m67A8_str]
	MOV DWORD PTR [EDX+0x18],ECX
	TEST EAX, EAX
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000001
	JZ loc_1005A74B
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A74B:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4548]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x38
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000002
	MOV ECX, offset [LEGO1_data.m67A0_str]
	TEST ECX, ECX
	JZ loc_1005A794
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A794:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x454C]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x54
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000003
	MOV ECX, offset LEGO1_data + 0x6798
	TEST ECX, ECX
	JZ loc_1005A7DD
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A7DD:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4550]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x70
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000004
	MOV ECX, offset [LEGO1_data.m6790_str]
	TEST ECX, ECX
	JZ loc_1005A826
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A826:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4540]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x0000008C
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000005
	MOV ECX, offset [LEGO1_data.m6788_str]
	TEST ECX, ECX
	JZ loc_1005A872
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A872:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4544]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000000A8
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000006
	MOV ECX, offset LEGO1_data + 0x6780
	TEST ECX, ECX
	JZ loc_1005A8BE
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A8BE:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4558]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000000C4
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000007
	MOV ECX, offset [LEGO1_data.m6778_str]
	TEST ECX, ECX
	JZ loc_1005A90A
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A90A:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x455C]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000000E0
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000008
	MOV ECX, offset [LEGO1_data.m6770_str]
	TEST ECX, ECX
	JZ loc_1005A956
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A956:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4560]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000000FC
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000009
	MOV ECX, offset LEGO1_data + 0x6768
	TEST ECX, ECX
	JZ loc_1005A9A2
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A9A2:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x451C]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x00000118
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000A
	MOV ECX, offset LEGO1_data + 0x6760
	TEST ECX, ECX
	JZ loc_1005A9EE
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005A9EE:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4520]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x00000134
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000B
	MOV ECX, offset LEGO1_data + 0x6758
	TEST ECX, ECX
	JZ loc_1005AA3A
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AA3A:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4524]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x00000150
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000C
	MOV ECX, offset LEGO1_data + 0x6750
	TEST ECX, ECX
	JZ loc_1005AA86
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AA86:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4528]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x0000016C
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000D
	MOV ECX, offset LEGO1_data + 0x6748
	TEST ECX, ECX
	JZ loc_1005AAD2
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AAD2:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x452C]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x00000188
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000E
	MOV ECX, offset LEGO1_data + 0x6740
	TEST ECX, ECX
	JZ loc_1005AB1E
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AB1E:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4534]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000001A4
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x0000000F
	MOV ECX, offset LEGO1_data + 0x6738
	TEST ECX, ECX
	JZ loc_1005AB6A
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AB6A:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4564]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000001C0
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000010
	MOV ECX, offset LEGO1_data + 0x6730
	TEST ECX, ECX
	JZ loc_1005ABB6
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005ABB6:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4568]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000001DC
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000011
	MOV ECX, offset LEGO1_data + 0x6728
	TEST ECX, ECX
	JZ loc_1005AC02
	MOV EDI, ECX
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1005AC02:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4578]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBX+0x68]
	ADD ECX, 0x000001F8
	CALL_LONG(offset [LEGO1_text.m59C50_sub_1005AC50])
	XOR EAX, EAX
	JMP FAR loc_1005A65C
}
}

__declspec(naked) DWORD LEGO1_sub_1005AC40()
{
__asm{
	MOV EAX, ECX
	MOV DWORD PTR [ECX], 0xFFFFFFFF
	MOV DWORD PTR [ECX+0x18],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005AC50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV EDX, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0x4]
	PUSH ESI
	PUSH EDI
	MOV ECX, 0xFFFFFFFF
	MOV EAX,DWORD PTR [EBX]
	LEA EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDX],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EDX+0x04]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV ECX,DWORD PTR [EBX+0x18]
	MOV EAX, EDX
	POP EDI
	MOV DWORD PTR [EDX+0x18],ECX
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1__CreateInstance_LegoOmni__SAXXZ()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m59CF8_proc_1005ACF8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mAF690__DestroyInstance_MxOmni__SAXXZ])
	PUSH 0x00000140
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1005ACDA
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m57A00_sub_10058A00])
loc_1005ACDA:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAE0B0_sub_100AF0B0])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1__GetInstance_LegoOmni__SAPAV1_XZ()
{
__asm{
	JMP_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005AD20(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m59D99_proc_1005AD99]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x78]
	PUSH 0x0C
	MOV EBX,DWORD PTR [ESI+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	XOR ECX, ECX
	MOV EAX, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	TEST EDI, EDI
	JZ loc_1005AD6E
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV DWORD PTR [EDI+0x08],ECX
loc_1005AD6E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EBX, EBX
	JZ loc_1005AD94
	MOV DWORD PTR [EBX+0x08],EAX
loc_1005AD7C:
	POP EDI
	MOV DWORD PTR [ESI+0x14],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [ESI+0x08]
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1005AD94:
	MOV DWORD PTR [ESI+0x10],EAX
	JMP loc_1005AD7C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005ADB0(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m59EF6_proc_1005AEF6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x78]
	TEST ESI, ESI
	JZ FAR loc_1005AECC
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35B8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3588_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35A0_ptr]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_1005AE50
loc_1005AE2E:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_1005AE50
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_1005AE2E
loc_1005AE50:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1005AEC0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	LEA ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX],0x00
	JZ loc_1005AE73
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1005AE7F
loc_1005AE73:
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV EBX,DWORD PTR [EDX+0x08]
	ADD EDX, 0x08
	MOV DWORD PTR [EDI+0x10],EBX
loc_1005AE7F:
	MOV EDX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ECX]
	TEST EDX, EDX
	JZ loc_1005AE8C
	MOV DWORD PTR [EDX+0x04],EAX
	JMP loc_1005AE8F
loc_1005AE8C:
	MOV DWORD PTR [EDI+0x14],EAX
loc_1005AE8F:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	DEC DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	CMP DWORD PTR [EAX+0x7C],ESI
	JNZ loc_1005AEB4
	MOV DWORD PTR [EAX+0x7C],0x00000000
loc_1005AEB4:
	TEST ESI, ESI
	JZ loc_1005AEC0
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_1005AEC0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m59F00_sub_1005AF00])
loc_1005AECC:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005AF00()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA60_loc_1003EA60])
}
}

__declspec(naked) DWORD __stdcall LEGO1__RemoveWorld_LegoOmni__QAEXABVMxAtomId__J_Z(DWORD arg1, DWORD arg2)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5A0A9_proc_1005B0A9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV EBX,DWORD PTR [ECX+0x78]
	MOV EDI, ECX
	TEST EBX, EBX
	JZ FAR loc_1005B05F
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35B8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3588_ptr]
	MOV EBX, 0x00000003
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35A0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EDI,DWORD PTR [EDI+0x78]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_2C+0x4],EDI
	MOV DWORD PTR [EBP+var_28+0x4],ESI
	MOV DWORD PTR [EBP+var_34+0x4],offset [LEGO1_rdata.m35B8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_34+0x4],offset [LEGO1_rdata.m3588_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_34+0x4],offset [LEGO1_rdata.m35A0_ptr]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1005AFC6:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1005B04A
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1005B04A
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	CMP EBX, -0x01
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	JZ loc_1005B000
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EAX+0x08],EBX
	JNZ loc_1005B033
loc_1005B000:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1005B00E
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [ECX+0x0C],EAX
	JNZ loc_1005B033
loc_1005B00E:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1005B022
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5A740_sub_1005B740])
	MOV DWORD PTR [EBP+var_14+0x4],ESI
loc_1005B022:
	CMP DWORD PTR [EBP+var_24+0x4],ESI
	JZ loc_1005B033
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005B033:
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	JMP FAR loc_1005AFC6
loc_1005B04A:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m5A089_sub_1005B089])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5A0B3_sub_1005B0B3])
loc_1005B05F:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1005B089()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA60_loc_1003EA60])
}
}

__declspec(naked) DWORD LEGO1_sub_1005B0B3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA60_loc_1003EA60])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B0C0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5A1BC_proc_1005B1BC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x78]
	XOR ESI, ESI
	TEST EDI, EDI
	JZ FAR loc_1005B190
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35B8_ptr]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3588_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m35A0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1005B130:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1005B13D
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [EAX+0x10]
	JMP loc_1005B143
loc_1005B13D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1005B143:
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1005B184
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	JZ loc_1005B184
	CMP EDX, -0x01
	JZ loc_1005B165
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EAX+0x08],EDX
	JNZ loc_1005B130
loc_1005B165:
	MOV EAX,DWORD PTR [ECX]
	TEST EAX, EAX
	JZ loc_1005B173
	MOV EDI,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EDI+0x0C],EAX
	JNZ loc_1005B130
loc_1005B173:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5A1C6_sub_1005B1C6])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	JMP loc_1005B192
loc_1005B184:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5A1C6_sub_1005B1C6])
loc_1005B190:
	XOR EAX, EAX
loc_1005B192:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1005B1C6()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA60_loc_1003EA60])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B270(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	MOV EAX,DWORD PTR [ECX+0x2C]
	PUSH EBX
	MOV ECX,DWORD PTR [EAX+0x68]
	PUSH ESI
	PUSH EDI
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	MOV ESI,DWORD PTR [EDX+0x00000088]
	ADD ESI, 0x08
	TEST EDI, EDI
	JZ loc_1005B2D6
	CMP BYTE PTR [EDI],0x00
	JZ loc_1005B2D6
	CMP DWORD PTR [ESI+0x08],0x00
	JBE loc_1005B2D6
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EAX, ECX
	JZ loc_1005B2D6
loc_1005B2A8:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	TEST EAX, EAX
	JZ loc_1005B2C7
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005B2E1
loc_1005B2C7:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],ECX
	CMP DWORD PTR [ESI+0x04],ECX
	JNZ loc_1005B2A8
loc_1005B2D6:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1005B2E1:
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005B35E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1__GetCurrPathInfo_LegoOmni__SAHPAPAVLegoPathBoundary__AAH_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JNZ loc_1005B40F
	MOV EAX, 0xFFFFFFFF
	RET
loc_1005B40F:
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ESP+arg1]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1F120_sub_10020120])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B430(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x68]
	XOR ESI, ESI
	MOV ECX, EDX
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
loc_1005B43C:
	CMP DWORD PTR [ECX],EAX
	JZ loc_1005B44F
	ADD ECX, 0x1C
	INC ESI
	CMP ESI, 0x13
	JL loc_1005B43C
	XOR EAX, EAX
	POP ESI
	RETN 0x0004
loc_1005B44F:
	LEA EAX,DWORD PTR [ESI*8+0x00000000]
	SUB EAX, ESI
	POP ESI
	LEA EAX,DWORD PTR [EAX*4+EDX+0x04]
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B460(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x68]
	XOR ESI, ESI
	MOV ECX, EDX
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
loc_1005B46C:
	CMP DWORD PTR [ECX],EAX
	JZ loc_1005B47F
	ADD ECX, 0x1C
	INC ESI
	CMP ESI, 0x13
	JL loc_1005B46C
	XOR EAX, EAX
	POP ESI
	RETN 0x0004
loc_1005B47F:
	LEA EAX,DWORD PTR [ESI*8+0x00000000]
	SUB EAX, ESI
	POP ESI
	MOV EAX,DWORD PTR [EAX*4+EDX+0x18]
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B490(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH EBP
	MOV EDI, ECX
	XOR ESI, ESI
	MOV EBP,DWORD PTR [ESP+arg1+0x10]
loc_1005B49E:
	MOV EAX,DWORD PTR [EDI+0x68]
	ADD EAX, ESI
	CMP EAX, -0x04
	JZ loc_1005B4B9
	PUSH EBP
	ADD EAX, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005B4D1
loc_1005B4B9:
	ADD ESI, 0x1C
	INC EBX
	CMP ESI, 0x00000214
	JL loc_1005B49E
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1005B4D1:
	LEA EAX,DWORD PTR [EBX*8+0x00000000]
	MOV ECX,DWORD PTR [EDI+0x68]
	SUB EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	MOV EAX,DWORD PTR [EAX*4+ECX]
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B4F0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CMP BYTE PTR [ESP+arg1],0x00
	PUSH ESI
	MOV ESI, ECX
	JZ loc_1005B538
	MOV CX,WORD PTR SS:[ESP+arg2+0x4]
	TEST CL,0x01
	JZ loc_1005B515
	MOV EAX,DWORD PTR [ESI+0x70]
	MOV BYTE PTR [EAX+0x00000088],0x01
	MOV BYTE PTR [EAX+0x00000336],0x00
loc_1005B515:
	TEST CL,0x02
	JZ loc_1005B524
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV BYTE PTR [EAX+0x000000E4],0x00
loc_1005B524:
	TEST CL,0x04
	JZ loc_1005B55A
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV ECX,DWORD PTR [EAX+0x58]
	CALL_LONG(offset [LEGO1_text.mB9640_sub_100BA640])
	POP ESI
	RETN 0x0008
loc_1005B538:
	MOV ECX,DWORD PTR [ESI+0x70]
	CALL_LONG(offset [LEGO1_text.m5BFF0_sub_1005CFF0])
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	MOV BYTE PTR [EAX+0x000000E4],0x01
	MOV ECX,DWORD PTR [ESI+0x2C]
	PUSH 0x00
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x34])
loc_1005B55A:
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1__CreateBackgroundAudio_LegoOmni__QAEXXZ()
{
__asm{
	MOV ECX,DWORD PTR [ECX+0x00000134]
	TEST ECX, ECX
	JZ loc_1005B577
	PUSH 0x64
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x456C]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
loc_1005B577:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005B727()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x08
	JMP_LONG(offset [LEGO1_text.m59400_loc_1005A400])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005B740(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDI,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_1005B759
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1005B75E
loc_1005B759:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_1005B75E:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1005B76C
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_1005B772
loc_1005B76C:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x14],EAX
loc_1005B772:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005B790()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5A899_proc_1005B899]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA ECX,DWORD PTR [ESI+0x20]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EDI, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mD38_ptr]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	LEA ECX,DWORD PTR [ESI+0x40]
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4760_ptr]
	MOV DWORD PTR [ESI+0x5C],EBX
	MOV DWORD PTR [ESI+0x64],EBX
	MOV DWORD PTR [ESI+0x60],EBX
	MOV DWORD PTR [ESI+0x68],EBX
	MOV BYTE PTR [ESI+0x00000080],BL
	MOV DWORD PTR [ESI+0x78],EBX
	MOV DWORD PTR [ESI+0x6C],EBX
	MOV DWORD PTR [ESI+0x70],EBX
	MOV DWORD PTR [ESI+0x00000084],EBX
	MOV BYTE PTR [ESI+0x00000081],BL
	MOV BYTE PTR [ESI+0x00000088],BL
	MOV DWORD PTR [ESI+0x0000008C],EBX
	MOV DWORD PTR [ESI+0x00000090],EBX
	MOV BYTE PTR [ESI+0x00000094],BL
	MOV BYTE PTR [ESI+0x00000195],BL
	MOV DWORD PTR [ESI+0x00000198],EDI
	MOV DWORD PTR [ESI+0x0000019C],EDI
	MOV BYTE PTR [ESI+0x00000334],BL
	MOV BYTE PTR [ESI+0x00000335],BL
	MOV EAX, ESI
	MOV BYTE PTR [ESI+0x00000336],BL
	MOV DWORD PTR [ESI+0x74],0x00000019
	MOV DWORD PTR [ESI+0x7C],0x000003E8
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	POP EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005B8F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5A94D_proc_1005B94D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4760_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m5AFE0_sub_1005BFE0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5A942_sub_1005B942])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5A957_sub_1005B957])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005B942()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x40
	JMP_LONG(offset [LEGO1_text.mB5D60___1MxCriticalSection__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005B957()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAF00___1MxPresenter__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005B960()
{
	enum{
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5AB64_proc_1005BB64]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	PUSH 0x60
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1005B9A4
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m27520_sub_10028520])
loc_1005B9A4:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CMP DWORD PTR [ESI+0x5C],0x00
	MOV DWORD PTR [ESI+0x00000084],EAX
	JNZ_LONG(offset [LEGO1_text.m5AA5B_loc_1005BA5B])
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5AA4F_loc_1005BA4F])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2A20_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m278B0_proc_100288B0]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2A38_ptr]
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2A50_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m278B0_proc_100288B0]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2A68_ptr]
	JMP_LONG(offset [LEGO1_text.m5AA51_loc_1005BA51])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BA2F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BA37()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m27860_loc_10028860])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BA3F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m278C0_loc_100288C0])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BA47()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m279C0_loc_100289C0])
}
}

__declspec(naked) DWORD LEGO1_loc_1005BA4F()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5AA51_loc_1005BA51])
}
}

__declspec(naked) DWORD LEGO1_loc_1005BA51()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x5C],EAX
	JMP_LONG(offset [LEGO1_text.m5AA5B_loc_1005BA5B])
}
}

__declspec(naked) DWORD LEGO1_loc_1005BA5B()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	CMP DWORD PTR [ESI+0x68],0x00
	JNZ_LONG(offset [LEGO1_text.m5AB0F_loc_1005BB0F])
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000006
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5AB03_loc_1005BB03])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x08
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x09
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m47B8_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m5AC30_proc_1005BC30]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0A
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m47D0_ptr]
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x06
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m47E8_ptr]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4800_ptr]
	JMP_LONG(offset [LEGO1_text.m5AB05_loc_1005BB05])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BAD6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005BAE3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BAEB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5ABE0_loc_1005BBE0])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BAF3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5AC80_loc_1005BC80])
}
}

__declspec(naked) DWORD LEGO1_proc_1005BAFB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5AF20_loc_1005BF20])
}
}

__declspec(naked) DWORD LEGO1_loc_1005BB03()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5AB05_loc_1005BB05])
}
}

__declspec(naked) DWORD LEGO1_loc_1005BB05()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x68],EAX
	JMP_LONG(offset [LEGO1_text.m5AB0F_loc_1005BB0F])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1005BB0F(DWORD arg1)
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5B030_sub_1005C030])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5B240_sub_1005C240])
	CMP DWORD PTR [ESI+0x5C],0x00
	JZ loc_1005BB36
	CMP DWORD PTR [ESI+0x68],0x00
	JZ loc_1005BB36
	CMP DWORD PTR [ESI+0x00000090],0x00
	JNZ loc_1005BB42
loc_1005BB36:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	MOV EBX, 0xFFFFFFFF
	CALL_LONG(DWORD PTR [EAX+0x38])
loc_1005BB42:
	MOV EAX, EBX
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1005BB57()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005BBC3()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BBD5()
{
	enum{
		arg1217234 = 0x4A4B48,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217234-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BC27()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BC61()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BD2B()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BD45()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5ABE0_loc_1005BBE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BDAF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BE83()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BE9D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5ABE0_loc_1005BBE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BF09()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5AF20_loc_1005BF20])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BF61()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5AC80_loc_1005BC80])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BFC9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5AC80_loc_1005BC80])
}
}

__declspec(naked) DWORD LEGO1_sub_1005BFE0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m5B0A0_sub_1005C0A0])
	MOV ECX,DWORD PTR [ESI+0x5C]
	TEST ECX, ECX
	JZ loc_1005BFF5
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005BFF5:
	MOV DWORD PTR [ESI+0x5C],0x00000000
	MOV ECX,DWORD PTR [ESI+0x68]
	TEST ECX, ECX
	JZ loc_1005C009
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005C009:
	MOV DWORD PTR [ESI+0x68],0x00000000
	MOV ECX,DWORD PTR [ESI+0x00000084]
	TEST ECX, ECX
	JZ loc_1005C020
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005C020:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005C030(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x0000008C]
	PUSH EDI
	MOV ESI, ECX
	PUSH -0x06
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m510_GetWindowLongA])
	PUSH 0x00
	PUSH EBX
	PUSH 0x00000500
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m97F98_j_DirectInputCreateA])
	TEST EAX, EAX
	JNZ loc_1005C094
	MOV EAX,DWORD PTR [EBX]
	ADD ESI, 0x00000090
	PUSH 0x00
	PUSH ESI
	PUSH offset LEGO1_rdata + 0x76E0
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x0C])
	TEST EAX, EAX
	JNZ loc_1005C094
	MOV EAX,DWORD PTR [ESI]
	PUSH 0x06
	MOV EBX,DWORD PTR [EAX]
	PUSH EDI
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x34])
	MOV EAX,DWORD PTR [ESI]
	PUSH offset [LEGO1_text.m97F80_proc_10098F80]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x2C])
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x1C])
loc_1005C094:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005C0A0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000090]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_1005C0C9
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV EAX,DWORD PTR [ESI+0x00000090]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x00000090],0x00000000
loc_1005C0C9:
	MOV EAX,DWORD PTR [ESI+0x0000008C]
	TEST EAX, EAX
	JZ loc_1005C0E3
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x0000008C],0x00000000
loc_1005C0E3:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005C0F0()
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000090]
	PUSH EDI
	MOV BYTE PTR [ECX+0x00000094],0x00
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_1005C158
	LEA EDI,DWORD PTR [ESI+0x00000095]
	PUSH EDI
	PUSH 0x00000100
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x24])
	CMP EAX, 0x8007001E
	MOV EBX, EAX
	JZ loc_1005C129
	CMP EBX, 0x8007000C
	JNZ loc_1005C14D
loc_1005C129:
	MOV EAX,DWORD PTR [ESI+0x00000090]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	TEST EAX, EAX
	JNZ loc_1005C14D
	MOV EAX,DWORD PTR [ESI+0x00000090]
	PUSH EDI
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00000100
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x24])
	MOV EBX, EAX
loc_1005C14D:
	TEST EBX, EBX
	JNZ loc_1005C158
	MOV BYTE PTR [ESI+0x00000094],0x01
loc_1005C158:
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005C160(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m5B0F0_sub_1005C0F0])
	CMP BYTE PTR [EDI+0x00000094],0x00
	JNZ loc_1005C17C
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	RETN 0x0004
loc_1005C17C:
	CMP BYTE PTR [offset LEGO1_data + 0x67B8],0x00
	JZ loc_1005C1C5
	TEST BYTE PTR [EDI+0x00000160],0x80
	JZ loc_1005C1A6
	PUSH 0x25
	MOV ESI,DWORD PTR [offset LEGO1_idata.m50C_GetAsyncKeyState]
	CALL_LONG(ESI)
	TEST AX, AX
	JNZ loc_1005C1AC
	MOV BYTE PTR [EDI+0x00000160],0x00
	JMP loc_1005C1AC
loc_1005C1A6:
	MOV ESI,DWORD PTR [offset LEGO1_idata.m50C_GetAsyncKeyState]
loc_1005C1AC:
	TEST BYTE PTR [EDI+0x00000162],0x80
	JZ loc_1005C1C5
	PUSH 0x27
	CALL_LONG(ESI)
	TEST AX, AX
	JNZ loc_1005C1C5
	MOV BYTE PTR [EDI+0x00000162],0x00
loc_1005C1C5:
	XOR ECX, ECX
	MOV AL,BYTE PTR [EDI+0x0000015D]
	OR AL,BYTE PTR [EDI+0x000000DD]
	TEST AL, 0x80
	JZ loc_1005C1DC
	MOV ECX, 0x00000004
loc_1005C1DC:
	MOV AL,BYTE PTR [EDI+0x000000E5]
	OR AL,BYTE PTR [EDI+0x00000165]
	TEST AL, 0x80
	JZ loc_1005C1EF
	OR ECX, 0x08
loc_1005C1EF:
	MOV AL,BYTE PTR [EDI+0x000000E0]
	OR AL,BYTE PTR [EDI+0x00000160]
	TEST AL, 0x80
	JZ loc_1005C202
	OR ECX, 0x01
loc_1005C202:
	MOV AL,BYTE PTR [EDI+0x000000E2]
	OR AL,BYTE PTR [EDI+0x00000162]
	TEST AL, 0x80
	JZ loc_1005C215
	OR ECX, 0x02
loc_1005C215:
	MOV AL,BYTE PTR [EDI+0x000000B2]
	OR AL,BYTE PTR [EDI+0x00000132]
	TEST AL, 0x80
	JZ loc_1005C228
	OR ECX, 0x10
loc_1005C228:
	MOV EAX,DWORD PTR [ESP+r+0xC]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005C240()
{
	enum{
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
	};

__asm{
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP BYTE PTR [ESI+0x00000334],0x00
	JZ FAR loc_1005C2F6
	MOV EDI,DWORD PTR [ESI+0x0000019C]
	TEST EDI, EDI
	JL loc_1005C2B3
	LEA EAX,DWORD PTR [ESP+var_34+0x44]
	MOV EBX,DWORD PTR [offset LEGO1_idata.m588_joyGetPosEx]
	MOV DWORD PTR [ESP+var_34+0x44],0x00000034
	MOV DWORD PTR [ESP+var_30+0x44],0x000000FF
	PUSH EAX
	PUSH EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ loc_1005C2AB
	PUSH 0x00000194
	LEA EAX,DWORD PTR [ESI+0x000001A0]
	PUSH EAX
	MOV EBP,DWORD PTR [offset LEGO1_idata.m584_joyGetDevCapsA]
	PUSH EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1005C2BF
	XOR EAX, EAX
	POP EBP
	MOV DWORD PTR [ESI+0x00000198],EDI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RET
loc_1005C2AB:
	MOV EBP,DWORD PTR [offset LEGO1_idata.m584_joyGetDevCapsA]
	JMP loc_1005C2BF
loc_1005C2B3:
	MOV EBP,DWORD PTR [offset LEGO1_idata.m584_joyGetDevCapsA]
	MOV EBX,DWORD PTR [offset LEGO1_idata.m588_joyGetPosEx]
loc_1005C2BF:
	XOR EDI, EDI
loc_1005C2C1:
	MOV DWORD PTR [ESP+var_3C+0x4C],0x00000034
	MOV DWORD PTR [ESP+var_38+0x4C],0x000000FF
	LEA EAX,DWORD PTR [ESP+var_3C+0x4C]
	PUSH EAX
	PUSH EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ loc_1005C2F0
	PUSH 0x00000194
	LEA EAX,DWORD PTR [ESI+0x000001A0]
	PUSH EAX
	PUSH EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JZ loc_1005C303
loc_1005C2F0:
	INC EDI
	CMP EDI, 0x10
	JL loc_1005C2C1
loc_1005C2F6:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RET
loc_1005C303:
	XOR EAX, EAX
	POP EBP
	MOV DWORD PTR [ESI+0x00000198],EDI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005C320(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x00000334],0x00
	JZ FAR loc_1005C45A
	CMP DWORD PTR [ESI+0x00000198],0x00
	JGE loc_1005C35D
	CALL_LONG(offset [LEGO1_text.m5B240_sub_1005C240])
	CMP EAX, -0x01
	JNZ loc_1005C35D
	MOV EAX, 0xFFFFFFFF
	POP EDI
	MOV BYTE PTR [ESI+0x00000334],0x00
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x0010
loc_1005C35D:
	MOV DWORD PTR [ESP+var_34+0x40],0x00000034
	MOV DWORD PTR [ESP+var_30+0x40],0x00000083
	MOV EAX,DWORD PTR [ESI+0x00000200]
	TEST AL, 0x10
	JZ loc_1005C38B
	MOV DWORD PTR [ESP+var_30+0x40],0x000000C3
	TEST AL, 0x40
	JZ loc_1005C38B
	MOV DWORD PTR [ESP+var_30+0x40],0x000002C3
loc_1005C38B:
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	MOV ECX,DWORD PTR [ESI+0x00000198]
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m588_joyGetPosEx])
	TEST EAX, EAX
	JNZ FAR loc_1005C45A
	MOV ECX,DWORD PTR [ESP+var_1C+0x48]
	MOV EAX,DWORD PTR [ESP+arg1+0x48]
	MOV DWORD PTR [EAX],ECX
	MOV ECX,DWORD PTR [ESI+0x000001C4]
	MOV EDI,DWORD PTR [ESI+0x000001D0]
	MOV EAX,DWORD PTR [ESP+var_34+0x48]
	SUB EDI,DWORD PTR [ESI+0x000001CC]
	SUB EAX, ECX
	SHL EAX, 0x02
	MOV EBX,DWORD PTR [ESI+0x000001C8]
	SUB EBX, ECX
	LEA EDX,DWORD PTR [EAX*4+EAX]
	MOV ECX,DWORD PTR [ESP+var_4+0x48]
	LEA EAX,DWORD PTR [EDX*4+EDX]
	SUB EDX, EDX
	DIV EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [ESP+var_30+0x48]
	SUB EAX,DWORD PTR [ESI+0x000001CC]
	MOV ECX,DWORD PTR [ESP+r+0x48]
	SHL EAX, 0x02
	LEA EDX,DWORD PTR [EAX*4+EAX]
	LEA EAX,DWORD PTR [EDX*4+EDX]
	SUB EDX, EDX
	DIV EDI
	MOV DWORD PTR [ECX],EAX
	TEST BYTE PTR [ESI+0x00000200],0x60
	JZ loc_1005C445
	CMP DWORD PTR [ESP+var_14+0x48],0x0000FFFF
	JNZ loc_1005C427
	MOV ECX,DWORD PTR [ESP+arg2+0x48]
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX], 0xFFFFFFFF
	ADD ESP, 0x34
	RETN 0x0010
loc_1005C427:
	MOV ECX, 0x00000064
	MOV EAX,DWORD PTR [ESP+var_14+0x48]
	SUB EDX, EDX
	DIV ECX
	MOV EDX,DWORD PTR [ESP+arg2+0x48]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [EDX],EAX
	XOR EAX, EAX
	ADD ESP, 0x34
	RETN 0x0010
loc_1005C445:
	MOV ECX,DWORD PTR [ESP+0x50]
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX], 0xFFFFFFFF
	ADD ESP, 0x34
	RETN 0x0010
loc_1005C45A:
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1__Register_LegoInputManager__QAEXPAVMxCore___Z(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5B5A4_proc_1005C5A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x40]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EDI,DWORD PTR [ESI+0x5C]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2AC0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2AD8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2AA8_ptr]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP ECX, EBX
	JZ loc_1005C509
loc_1005C4E7:
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_1005C509
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP ECX, EBX
	JNZ loc_1005C4E7
loc_1005C509:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_1005C54B
	MOV EBX,DWORD PTR [ESI+0x5C]
	PUSH 0x0C
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	TEST EAX, EAX
	JZ loc_1005C538
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x08],0x00000000
	JMP loc_1005C53A
loc_1005C538:
	XOR EAX, EAX
loc_1005C53A:
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	TEST ESI, ESI
	JZ loc_1005C572
	MOV DWORD PTR [ESI+0x08],EAX
loc_1005C545:
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
loc_1005C54B:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5B59C_sub_1005C59C])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5B5AE_sub_1005C5AE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1005C572:
	MOV DWORD PTR [EBX+0x10],EAX
	JMP loc_1005C545
}
}

__declspec(naked) DWORD LEGO1_proc_1005C577()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005C59C()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C5AE()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1__UnRegister_LegoInputManager__QAEXPAVMxCore___Z(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5B6E9_proc_1005C6E9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x40]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EDI,DWORD PTR [ESI+0x5C]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AC0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AD8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AA8_ptr]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_1005C659
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
loc_1005C637:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_1005C659
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_1005C637
loc_1005C659:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1005C6A2
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_1005C678
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1005C67D
loc_1005C678:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_1005C67D:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1005C68A
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_1005C68F
loc_1005C68A:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_1005C68F:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_1005C6A2:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5B6E1_sub_1005C6E1])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5B6F3_sub_1005C6F3])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005C6E1()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C6F3()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005C700(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x60],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005C710()
{
__asm{
	MOV DWORD PTR [ECX+0x60],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005C720(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x64],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005C730()
{
__asm{
	MOV DWORD PTR [ECX+0x64],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__QueueEvent_LegoInputManager__QAEXW4NotificationId__EJJE_Z(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5B800_proc_1005C800]
	XOR EDX, EDX
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m16E8_ptr]
	PUSH ESI
	MOV DWORD PTR [EBP+var_8+0x4],EDX
	MOV ESI,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	MOV AL,BYTE PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV BYTE PTR [EBP+var_24+0x4],AL
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV EAX,DWORD PTR [EBP+arg4+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m2AA0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	CMP BYTE PTR [ECX+0x00000088],DL
	MOV AL,BYTE PTR [EBP+arg5+0x4]
	MOV BYTE PTR [EBP+var_18+0x4],AL
	JZ loc_1005C7CB
	CMP BYTE PTR [ECX+0x00000335],DL
	JZ loc_1005C7BE
	CMP DWORD PTR [EBP+var_2C+0x4],0x09
	JZ loc_1005C7CB
loc_1005C7BE:
	CMP BYTE PTR [ECX+0x00000336],0x00
	JZ loc_1005C7D4
	CMP AL, 0x20
	JNZ loc_1005C7D4
loc_1005C7CB:
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5B9C0_sub_1005C9C0])
loc_1005C7D4:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5B80A_sub_1005C80A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RETN 0x0014
}
}

__declspec(naked) DWORD LEGO1_sub_1005C80A()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C820()
{
	enum{
		var_68 = -0x68,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5B9A0_proc_1005C9A0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	LEA EAX,DWORD PTR [ECX+0x40]
	SUB ESP, 0x58
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_40+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_3C+0x4],EAX
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV DWORD PTR [EBP+var_40+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_40+0x4],offset [LEGO1_rdata.m2AA0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
loc_1005C876:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x68]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x10]
	CMP ECX, 0x01
	SBB AL, AL
	INC AL
	TEST ECX, ECX
	MOV BYTE PTR [EBP+var_10+0x3],AL
	JZ FAR loc_1005C93C
	LEA EAX,DWORD PTR [EBP+var_68+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5C010_sub_1005D010])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_38+0x4],EDX
	MOV CL,BYTE PTR [EAX+0x0C]
	MOV BYTE PTR [EBP+var_34+0x4],CL
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_30+0x4],EDX
	MOV ECX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	MOV DL,BYTE PTR [EAX+0x18]
	MOV BYTE PTR [EBP+var_28+0x4],DL
	MOV EAX,DWORD PTR [EAX+0x1C]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m5B980_sub_1005C980])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	MOV ECX,DWORD PTR [EDX+0x20]
	TEST ECX, ECX
	JZ loc_1005C8EF
	MOV EAX,DWORD PTR [EDX+0x24]
	ADD EDX, 0x24
	MOV DWORD PTR [ECX+0x24],EAX
	JMP loc_1005C8FE
loc_1005C8EF:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EDX+0x24]
	ADD EDX, 0x24
	MOV DWORD PTR [ECX+0x10],EAX
loc_1005C8FE:
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	TEST ECX, ECX
	MOV EDX,DWORD PTR [EAX+0x20]
	JZ loc_1005C90F
	MOV DWORD PTR [ECX+0x20],EDX
	JMP loc_1005C915
loc_1005C90F:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ECX+0x14],EDX
loc_1005C915:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_1005C936
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m5B978_sub_1005C978])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005C936:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	DEC DWORD PTR [ECX+0x08]
loc_1005C93C:
	CMP BYTE PTR [EBP+var_10+0x3],0x00
	JZ loc_1005C956
	LEA EAX,DWORD PTR [EBP+var_40+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5B9C0_sub_1005C9C0])
	TEST AL, AL
	JZ FAR loc_1005C876
loc_1005C956:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5B998_sub_1005C998])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5B9AA_sub_1005C9AA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005C978()
{
	enum{
		arg1217207 = 0x4A4ADC,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C980()
{
	enum{
		arg1217199 = 0x4A4ABC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217199-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C998()
{
	enum{
		arg1217209 = 0x4A4AE4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C9AA()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005C9C0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5BDDE_proc_1005CDDE]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [EDI+0x04],0x07
	JNZ_LONG(offset [LEGO1_text.m5BB16_loc_1005CB16])
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x40])
	TEST AL, AL
	JZ loc_1005CA07
	CMP BYTE PTR [EDI+0x18],0x13
	JNZ_LONG(offset [LEGO1_text.m5BAE1_loc_1005CAE1])
loc_1005CA07:
	CMP BYTE PTR [EDI+0x18],0x10
	JNZ loc_1005CA49
	CMP BYTE PTR [ESI+0x00000195],0x00
	JZ loc_1005CA31
	MOV BYTE PTR [ESI+0x00000080],0x00
	MOV DWORD PTR [EDI+0x04],0x0000000E
	MOV ECX,DWORD PTR [ESI+0x60]
	TEST ECX, ECX
	JZ loc_1005CA31
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
loc_1005CA31:
	CMP BYTE PTR [ESI+0x00000195],0x01
	SBB AL, AL
	NEG AL
	MOV BYTE PTR [ESI+0x00000195],AL
	MOV AL, 0x01
	JMP_LONG(offset [LEGO1_text.m5BAE3_loc_1005CAE3])
loc_1005CA49:
	MOV EBX,DWORD PTR [ESI+0x5C]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AC0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AD8_ptr]
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AA8_ptr]
loc_1005CA8E:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1005CA9B
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1005CAA1
loc_1005CA9B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1005CAA1:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1005CAD5
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1005CAD5
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x04])
	TEST EAX, EAX
	JZ loc_1005CA8E
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5BB0E_sub_1005CB0E])
	MOV AL, 0x01
	JMP_LONG(offset [LEGO1_text.m5BAE3_loc_1005CAE3])
loc_1005CAD5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5BB0E_sub_1005CB0E])
	JMP_LONG(offset [LEGO1_text.m5BAE1_loc_1005CAE1])
}
}

__declspec(naked) DWORD LEGO1_sub_1005CB0E()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005CDC6()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005CDE8()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005CDF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR BL, BL
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	MOV ECX,DWORD PTR [ESI+0x04]
	SUB ECX, 0x08
	CMP ECX, 0x07
	JA_LONG(offset [LEGO1_text.m5BF7D_loc_1005CF7D])
	XOR EAX, EAX
	MOV AL,BYTE PTR [offset LEGO1_text.m5BF9C_proc_1005CF9C+ECX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m5BF88_proc_1005CF88+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1005CFB0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	PUSH 0x00
	MOV ECX,DWORD PTR [ESI+0x7C]
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH 0x01
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m508_SetTimer])
	MOV DWORD PTR [ESI+0x78],EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005CFD0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x78],0x00
	JZ loc_1005CFEC
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [ESI+0x78]
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m514_KillTimer])
loc_1005CFEC:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005CFF0()
{
__asm{
	XOR EAX, EAX
	MOV BYTE PTR [ECX+0x00000088],AL
	MOV DWORD PTR [offset LEGO1_data + 0x31B0],0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x31B4], EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005D010(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5C0A8_proc_1005D0A8]
	XOR EDX, EDX
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m16E8_ptr]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m16E0_ptr]
	MOV AL,BYTE PTR [ECX+0x0C]
	MOV BYTE PTR [ESI+0x0C],AL
	MOV EAX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ESI+0x10],EAX
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV BYTE PTR [EBP+var_8+0x4],DL
	MOV AL,BYTE PTR [ECX+0x18]
	MOV BYTE PTR [ESI+0x18],AL
	MOV EAX, ESI
	MOV ECX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [ESI+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	OR DWORD PTR [EBP+var_14+0x4],0x01
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2AA0_ptr]
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005D0D0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5C260_proc_1005D260]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	CMP DWORD PTR [EBP+arg1+0x4],EBX
	JZ FAR loc_1005D1B2
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x4848
	MOV DWORD PTR [ESI+0x00000190],offset LEGO1_rdata + 0x4840
	MOV DWORD PTR [ESI+0x000001AC],offset LEGO1_rdata + 0x4830
	LEA ECX,DWORD PTR [ESI+0x38]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV BYTE PTR [ESI+0x00000194],AL
	MOV DWORD PTR [ESI+0x00000198],EBX
	MOV DWORD PTR [ESI+0x0000019C],EBX
	MOV DWORD PTR [ESI+0x000001A0],EBX
	OR DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EAX,DWORD PTR [ESI+0x00000190]
	MOV DWORD PTR [ESI+0x0000018C],offset [LEGO1_rdata.m1510_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+ECX+0x00000190],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x00000190]
	PUSH EBX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX+0x0000018C],ECX
	LEA ECX,DWORD PTR [ESI+0x000001A8]
	OR DWORD PTR [EBP+var_18+0x4],0x02
	MOV WORD PTR DS:[ESI+0x000001A4],0xFFFF
	CALL_LONG(offset [LEGO1_text.m135D0_sub_100145D0])
	OR DWORD PTR [EBP+var_18+0x4],0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
loc_1005D1B2:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m493C_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m4870_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m4860_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m4858_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x34]
	MOV DWORD PTR [ESI+EAX],ECX
	XOR EAX, EAX
	MOV BYTE PTR [ESI+0x08],AL
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	TEST ESI, ESI
	JZ loc_1005D207
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [ESI+ECX+0x04]
loc_1005D207:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27E10_sub_10028E10])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
	TEST BYTE PTR [EBP-0x14],0x08
	JZ loc_1005D243
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD ECX, 0x000001AC
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1005D243:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005D2B0()
{
__asm{
	MOV EAX,DWORD PTR [ECX-0x34]
	MOV DWORD PTR [ECX-0x38],offset [LEGO1_rdata.m493C_ptr]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+EDX-0x34],offset [LEGO1_rdata.m4870_ptr]
	MOV EAX,DWORD PTR [ECX-0x34]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+EDX-0x34],offset [LEGO1_rdata.m4860_ptr]
	MOV EAX,DWORD PTR [ECX-0x34]
	CMP ECX, 0x38
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ECX+EDX-0x34],offset [LEGO1_rdata.m4858_ptr]
	MOV EAX,DWORD PTR [ECX-0x34]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x34]
	MOV DWORD PTR [ECX+EAX-0x38],EDX
	MOV EAX, 0x00000000
	JZ loc_1005D302
	MOV EAX,DWORD PTR [ECX-0x34]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [ECX+EDX-0x34]
loc_1005D302:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005D310(DWORD arg1)
{
	enum{
		var_104 = -0x104,
		var_100 = -0x100,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000100
	MOV EAX, DWORD PTR [offset LEGO1_data.m1208C_ptr]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10C]
	LEA ECX,DWORD PTR [ESP+var_100+0x10C]
	PUSH EDI
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1005D359
	LEA EAX,DWORD PTR [ESP+var_100+0x10C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B180_sub_1007C180])
	MOV ECX, EAX
	MOV EBX, EAX
	PUSH 0x00
	MOV EAX,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV DWORD PTR [ESI-0x2C],EBX
loc_1005D359:
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m12090_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x110]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ FAR loc_1005D478
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	LEA ECX,DWORD PTR [ESP+var_104+0x110]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D398
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x24]
	ADD ESP, 0x04
loc_1005D398:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D3B8
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x20]
	ADD ESP, 0x04
loc_1005D3B8:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D3D8
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x1C]
	ADD ESP, 0x04
loc_1005D3D8:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D3F8
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x18]
	ADD ESP, 0x04
loc_1005D3F8:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D418
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x14]
	ADD ESP, 0x04
loc_1005D418:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D438
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x10]
	ADD ESP, 0x04
loc_1005D438:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D458
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x0C]
	ADD ESP, 0x04
loc_1005D458:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1005D478
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESI-0x08]
	ADD ESP, 0x04
loc_1005D478:
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1005D495
	PUSH offset [LEGO1_data.m67BC_str]
	PUSH offset [LEGO1_data.m514_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI-0x28],EAX
loc_1005D495:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000100
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005D550(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX-0x2C]
	TEST ECX, ECX
	JNZ loc_1005D565
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	RETN 0x0004
loc_1005D565:
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	CMP DWORD PTR [EDI+0x04],0x11
	JNZ loc_1005D5AE
	MOV EAX,DWORD PTR [ESI-0x28]
	MOV EDX,DWORD PTR [EDI+0x20]
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],EDX
	JNZ loc_1005D5AE
	CMP WORD PTR DS:[EDI+0x28],0x01
	JNZ loc_1005D5A3
	LEA ECX,DWORD PTR [ESI-0x38]
	MOV BYTE PTR [ESI-0x30],0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV ECX,DWORD PTR [ESI-0x2C]
	PUSH 0x01
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x54])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	RETN 0x0004
loc_1005D5A3:
	MOV BYTE PTR [ESI-0x30],0x00
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_1005D5AE:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005D660()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5C6C3_proc_1005D6C3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	XOR EAX, EAX
	PUSH ESI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x00000100],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4958_ptr]
	MOV DWORD PTR [ESI+0x000000FC],EAX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005D830()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5C8BD_proc_1005D8BD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4958_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],EDX
	JNZ loc_1005D874
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_1005D874:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5C8C7_sub_1005D8C7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005D8C7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005DA70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	CMP WORD PTR DS:[EAX+0x28],0x01
	MOV ESI, ECX
	JNZ_LONG(offset [LEGO1_text.m5CDA8_loc_1005DDA8])
	MOV EAX,DWORD PTR [EAX+0x20]
	CMP EAX, 0x03
	JZ loc_1005DAA2
	CMP EAX, 0x04
	JZ_LONG(offset [LEGO1_text.m5CC0A_loc_1005DC0A])
	CMP EAX, 0x05
	JZ_LONG(offset [LEGO1_text.m5CD72_loc_1005DD72])
	MOV AL, 0x01
	POP ESI
	RETN 0x0004
loc_1005DAA2:
	MOV ECX,DWORD PTR [ESI+0x000000FC]
	MOV EAX,DWORD PTR [ECX+0x08]
	ADD ECX, 0x08
	CMP EAX, 0x05
	JA_LONG(offset [LEGO1_text.m5CDA8_loc_1005DDA8])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m5CDB0_proc_1005DDB0+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1005DE80()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5CED2_proc_1005DED2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB2310_sub_100B3310])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m49E0_ptr]
	CALL_LONG(offset [LEGO1_text.m5CF70_sub_1005DF70])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005DF59()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB2420_loc_100B3420])
}
}

__declspec(naked) DWORD LEGO1_sub_1005DF70()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x68],EAX
	MOV DWORD PTR [ECX+0x6C],EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005E130()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5D1B9_proc_1005E1B9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x000000F8]
	CALL_LONG(offset LEGO1_text + 0x2B850)
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4A80_ptr]
	MOV DWORD PTR [ESI+0x00000108],0x00000000
	MOV DWORD PTR [ESI+0x0000010C],0x00000000
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005E320()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5D3C4_proc_1005E3C4]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4A80_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],ECX
	JNZ loc_1005E364
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_1005E364:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5D3B6_sub_1005E3B6])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5D3CE_sub_1005E3CE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005E3B6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000F8
	JMP_LONG(offset [LEGO1_text.m2B990_loc_1002C990])
}
}

__declspec(naked) DWORD LEGO1_sub_1005E3CE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005E550(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	CMP WORD PTR DS:[EAX+0x28],0x01
	MOV ESI, ECX
	JNZ_LONG(offset [LEGO1_text.m5D680_loc_1005E680])
	MOV EAX,DWORD PTR [EAX+0x20]
	DEC EAX
	CMP EAX, 0x04
	JA_LONG(offset [LEGO1_text.m5D680_loc_1005E680])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m5D68C_proc_1005E68C+EAX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005E6A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [ESI+0x000000F8]
	MOV EDI,DWORD PTR [EAX+0x0C]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	TEST EAX, EAX
	JNZ loc_1005E6E8
	MOV EAX,DWORD PTR [EDI+0x20]
	CMP DWORD PTR [ESI+0x0C],EAX
	JNZ loc_1005E6E8
	MOV EAX,DWORD PTR [ESI+0x00000108]
	ADD EAX, 0x0C
	CMP DWORD PTR [EAX],0x01
	JNZ loc_1005E6E1
	POP EDI
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0004
loc_1005E6E1:
	XOR EAX, EAX
	POP EDI
	POP ESI
	RETN 0x0004
loc_1005E6E8:
	XOR EAX, EAX
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005E6F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [EAX+0x18],0x20
	JNZ loc_1005E735
	MOV EAX,DWORD PTR [ESI+0x00000108]
	CMP DWORD PTR [EAX+0x0C],0x01
	JNZ loc_1005E735
	PUSH 0x000001F5
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH 0x000001F4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV EAX,DWORD PTR [ESI+0x00000108]
	MOV DWORD PTR [EAX+0x0C],0x00000000
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0004
loc_1005E735:
	XOR EAX, EAX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005E7C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5D840_proc_1005E840]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4AF0_ptr]
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	XOR EAX, EDX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	SUB EAX, EDX
	CMP EAX, 0x01
	MOV EAX, 0x000001F5
	ADC EAX, -0x01
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005E97F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_1005EA40()
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5DB2D_proc_1005EB2D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	CMP DWORD PTR [ECX+0x0C],0x01
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ FAR loc_1005EB17
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x60])
	XOR ECX, ECX
	MOV CL, AL
	CMP ECX, 0x04
	JZ loc_1005EAA2
	CMP ECX, 0x05
	JZ loc_1005EAA9
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EAX+0x08]
	LEA ECX,DWORD PTR [ESI+0xFFFFFE0B]
	CMP ECX, 0x01
	SBB ECX, ECX
	ADD ECX, 0x000001F5
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1005EAB4
loc_1005EAA2:
	MOV ESI, 0x000001F5
	JMP loc_1005EAAE
loc_1005EAA9:
	MOV ESI, 0x000001F4
loc_1005EAAE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x08],ESI
loc_1005EAB4:
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x455C]
	MOV DWORD PTR [EBP+var_90+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m5DB25_sub_1005EB25])
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m5DB37_sub_1005EB37])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x0C],0x00000001
loc_1005EB17:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005EB25()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005EB37()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1__configureLegoAnimationManager_LegoAnimationManager__SAXH_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x74F8], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005EB60()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5DC61_proc_1005EC61]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	LEA EAX,DWORD PTR [ESI+0x00000444]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI+0x0000043C],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x0000043C],offset [LEGO1_rdata.m300_ptr]
	LEA EDX,DWORD PTR [ESI+0x000004D4]
	MOV DWORD PTR [ESI+0x00000440],EAX
	LEA EAX,DWORD PTR [ESI+0x0000048C]
	MOV DWORD PTR [ESI+0x000004D0],EDX
	MOV DWORD PTR [ESI+0x00000484],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x00000484],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x000004CC],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x00000488],EAX
	MOV DWORD PTR [ESI+0x000004FC],ECX
	LEA EAX,DWORD PTR [ESI+0x000004EC]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C18_ptr]
	MOV DWORD PTR [ESI+0x000004E8],EAX
	MOV DWORD PTR [ESI+0x1C],ECX
	MOV DWORD PTR [ESI+0x00000420],ECX
	MOV DWORD PTR [ESI+0x00000424],ECX
	MOV DWORD PTR [ESI+0x000004CC],offset [LEGO1_rdata.m1E8_ptr]
	MOV DWORD PTR [ESI+0x000004E4],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000004E4],offset [LEGO1_rdata.m1E8_ptr]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5E130_sub_1005F130])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x0A
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005ED30()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5DE68_proc_1005EE68]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4C18_ptr]
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m60010_sub_10061010])
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	ADD ESI, 0x3C
loc_1005ED7E:
	MOV EDI,DWORD PTR [ESI]
	TEST EDI, EDI
	JZ loc_1005EDE4
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	MOV EBX, 0x00000000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	TEST EAX, EAX
	JZ loc_1005EDAA
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EBX,DWORD PTR [EAX+EDX+0x04]
loc_1005EDAA:
	TEST EBX, EBX
	JZ loc_1005EDD7
	CMP DWORD PTR [EBX+0x00000138],0x00
	JZ loc_1005EDD7
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ loc_1005EDD7
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV DWORD PTR [EBX+0x00000138],0x00000000
loc_1005EDD7:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
loc_1005EDE4:
	ADD ESI, 0x18
	INC DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],0x28
	JL loc_1005ED7E
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x20]
	TEST ECX, ECX
	JZ loc_1005EE00
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005EE00:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x24]
	TEST ECX, ECX
	JZ loc_1005EE10
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005EE10:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m5F3C0_sub_100603C0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x00000424],0x00
	JZ loc_1005EE3C
	CALL_LONG(offset [LEGO1_text.m62AA0_sub_10063AA0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x00000424]
	TEST ECX, ECX
	JZ loc_1005EE3C
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005EE3C:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5DE72_sub_1005EE72])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005EE72()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005EE80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ESP+arg1],0x00
	PUSH EBX
	PUSH ESI
	MOV BYTE PTR [ECX+0x00000402],0x00
	MOV ESI, ECX
	JZ loc_1005EEA1
	MOV ECX,DWORD PTR [ESI+0x00000420]
	TEST ECX, ECX
	JZ loc_1005EEA1
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
loc_1005EEA1:
	MOV BL,BYTE PTR [ESI+0x0000042B]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5DF10_sub_1005EF10])
	MOV ECX,DWORD PTR [ESI+0x20]
	TEST ECX, ECX
	JZ loc_1005EEBB
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005EEBB:
	MOV ECX,DWORD PTR [ESI+0x24]
	TEST ECX, ECX
	JZ loc_1005EEC8
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005EEC8:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5F3C0_sub_100603C0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5E130_sub_1005F130])
	MOV AL,BYTE PTR [ESI+0x3A]
	MOV CL,BYTE PTR [ESI+0x00000400]
	MOV DL,BYTE PTR [ESI+0x00000402]
	MOV BYTE PTR [ESI+0x0000042B],BL
	MOV BYTE PTR [ESI+0x00000428],AL
	MOV BYTE PTR [ESI+0x00000429],CL
	MOV BYTE PTR [ESI+0x0000042A],DL
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005EF10()
{
	enum{
		var_8 = -0x8,
		arg1217302 = 0x4A4C58,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH offset [LEGO1_data.m460_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x00000420],EAX
	TEST EAX, EAX
	JNZ loc_1005EF4B
	PUSH offset [LEGO1_data.m460_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV DWORD PTR [ESI+0x00000420],EAX
loc_1005EF4B:
	CMP DWORD PTR [ESI+0x08],0x00
	JNZ loc_1005EF6E
	MOV EAX,DWORD PTR [ESI+0x000003FC]
	MOV ECX,DWORD PTR [ESI+0x14]
	PUSH EAX
	PUSH ECX
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESI+0x00000420]
	MOV AX,WORD PTR DS:[ESI+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64240_sub_10065240])
loc_1005EF6E:
	CMP BYTE PTR [ESI+0x0000042B],0x00
	JNZ FAR loc_1005F0A7
	MOV AL,BYTE PTR [ESI+0x3A]
	MOV CL,BYTE PTR [ESI+0x00000400]
	MOV DL,BYTE PTR [ESI+0x00000402]
	PUSH 0x00
	MOV BYTE PTR [ESI+0x00000428],AL
	MOV BYTE PTR [ESI+0x00000429],CL
	MOV ECX, ESI
	LEA EDI,DWORD PTR [ESI+0x3C]
	MOV BYTE PTR [ESI+0x0000042B],0x01
	MOV BYTE PTR [ESI+0x00000402],0x00
	MOV BYTE PTR [ESI+0x0000042A],DL
	CALL_LONG(offset [LEGO1_text.m60010_sub_10061010])
	MOV DWORD PTR [ESP+var_8+0x18],0x00000028
loc_1005EFBE:
	MOV EBX,DWORD PTR [EDI]
	TEST EBX, EBX
	JZ loc_1005F015
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	MOV EBP, 0x00000000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	TEST EAX, EAX
	JZ loc_1005EFEA
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EBP,DWORD PTR [EAX+EDX+0x04]
loc_1005EFEA:
	TEST EBP, EBP
	JZ loc_1005F008
	MOV ECX,DWORD PTR [EBP+arg1217302-0x4A4B20]
	TEST ECX, ECX
	JZ loc_1005F008
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV DWORD PTR [EBP+arg1217302-0x4A4B20],0x00000000
loc_1005F008:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
loc_1005F015:
	CMP BYTE PTR [EDI+0x14],0x00
	JZ loc_1005F056
	MOV BYTE PTR [EDI+0x14],0x00
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+ECX*8]
	TEST EAX, EAX
	JL loc_1005F056
	SHL EAX, 0x03
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX],0x00
	MOV ECX,DWORD PTR [offset LEGO1_data.m6D20_ptr+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A270_sub_1005B270])
	TEST EAX, EAX
	JZ loc_1005F056
	MOV BYTE PTR [EAX+0x0C],0x00
loc_1005F056:
	MOV DWORD PTR [EDI], 0x00000000
	ADD EDI, 0x18
	DEC DWORD PTR [ESP+var_8+0x18]
	MOV DWORD PTR [EDI-0x14],0xFFFFFFFF
	MOV DWORD PTR [EDI-0x08],0xBF800000
	JNZ FAR loc_1005EFBE
	XOR EAX, EAX
	MOV WORD PTR DS:[ESI+0x18],AX
	MOV BYTE PTR [ESI+0x1A],AL
	MOV BYTE PTR [ESI+0x3A],AL
	MOV BYTE PTR [ESI+0x00000400],AL
	MOV DWORD PTR [ESI+0x00000414],EAX
	MOV BYTE PTR [ESI+0x00000401],AL
	MOV EAX, offset [LEGO1_data.m704C]
loc_1005F09A:
	MOV BYTE PTR [EAX],0x00
	ADD EAX, 0x18
	CMP EAX, offset LEGO1_data + 0x74B4
	JB loc_1005F09A
loc_1005F0A7:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005F0B0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x0000042B],0x00
	JZ loc_1005F121
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	LEA EDX,DWORD PTR [ESI+0x00000404]
	JZ loc_1005F0D6
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [EDX],EAX
	JMP loc_1005F0E1
loc_1005F0D6:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX],ECX
loc_1005F0E1:
	MOV EAX,DWORD PTR [EDX]
	MOV CL,BYTE PTR [ESI+0x00000428]
	MOV DL,BYTE PTR [ESI+0x00000429]
	MOV DWORD PTR [ESI+0x0000040C],EAX
	MOV DWORD PTR [ESI+0x00000408],EAX
	MOV BYTE PTR [ESI+0x3A],CL
	MOV AL,BYTE PTR [ESI+0x0000042A]
	MOV BYTE PTR [ESI+0x00000400],DL
	MOV DWORD PTR [ESI+0x00000410],0x00001388
	MOV BYTE PTR [ESI+0x0000042B],0x00
	MOV BYTE PTR [ESI+0x00000402],AL
loc_1005F121:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005F130()
{
	enum{
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5E33A_proc_1005F33A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	XOR EAX, EAX
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV WORD PTR DS:[ECX+0x0C],AX
	MOV BYTE PTR [ECX+0x00000402],AL
	MOV WORD PTR DS:[ECX+0x18],AX
	MOV DWORD PTR [ECX+0x14],EAX
	PUSH EDI
	MOV ESI, ECX
	MOV BYTE PTR [ESI+0x1A],AL
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x08],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x24],EAX
	MOV EAX, 0x00000014
	CMP DWORD PTR [offset LEGO1_data + 0x74F8],0x01
	JG loc_1005F186
	MOV EAX, 0x0000000A
loc_1005F186:
	LEA ECX,DWORD PTR [ESI+0x28]
	XOR EDX, EDX
	MOV DWORD PTR [ESI+0x0000041C],EAX
	MOV EAX, 0x00000002
loc_1005F196:
	MOV DWORD PTR [ECX],EDX
	ADD ECX, 0x04
	DEC EAX
	MOV DWORD PTR [ECX+0x04],EDX
	JNZ loc_1005F196
	LEA ECX,DWORD PTR [ESI+0x3C]
	MOV EAX, 0x00000028
	MOV EDI, 0xFFFFFFFF
	MOV EBX, 0xBF800000
	XOR EDX, EDX
loc_1005F1B5:
	MOV DWORD PTR [ECX],EDX
	ADD ECX, 0x18
	DEC EAX
	MOV DWORD PTR [ECX-0x14],EDI
	MOV DWORD PTR [ECX-0x08],EBX
	MOV BYTE PTR [ECX-0x04],DL
	JNZ loc_1005F1B5
	MOV BYTE PTR [ESI+0x3A],0x01
	MOV DWORD PTR [ESI+0x00000418],0x00000005
	XOR EBX, EBX
	MOV BYTE PTR [ESI+0x38],BL
	MOV BYTE PTR [ESI+0x39],BL
	MOV WORD PTR DS:[ESI+0x0E],BX
	MOV DWORD PTR [ESI+0x000003FC],EBX
	MOV WORD PTR DS:[ESI+0x10],BX
	MOV BYTE PTR [ESI+0x00000400],BL
	MOV DWORD PTR [ESI+0x00000414],EBX
	MOV BYTE PTR [ESI+0x00000401],BL
	MOV BYTE PTR [ESI+0x0000042B],BL
	MOV BYTE PTR [ESI+0x00000430],BL
	MOV DWORD PTR [ESI+0x0000042C],EBX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	LEA EDX,DWORD PTR [ESI+0x00000404]
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_1005F227
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [EDX],EAX
	JMP loc_1005F232
loc_1005F227:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX],ECX
loc_1005F232:
	MOV EAX,DWORD PTR [EDX]
	XOR ECX, ECX
	MOV DWORD PTR [ESI+0x0000040C],EAX
	MOV DWORD PTR [ESI+0x00000408],EAX
	MOV DWORD PTR [ESI+0x00000410],0x00001388
	MOV EAX, offset LEGO1_data + 0x705C
loc_1005F251:
	MOV BYTE PTR [EAX],CL
	ADD EAX, 0x18
	CMP EAX, offset LEGO1_data + 0x74C4
	MOV BYTE PTR [EAX-0x28],CL
	JB loc_1005F251
	MOV EAX, offset [LEGO1_data.m6D24]
	XOR ECX, ECX
loc_1005F267:
	MOV BYTE PTR [EAX],CL
	ADD EAX, 0x08
	CMP EAX, offset [LEGO1_data.m6D5C_ptr]
	MOV BYTE PTR [EAX-0x07],CL
	JB loc_1005F267
	CMP DWORD PTR [ESI+0x00000424],0x00
	JZ loc_1005F296
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m62AA0_sub_10063AA0])
	MOV ECX,DWORD PTR [ESI+0x00000424]
	TEST ECX, ECX
	JZ loc_1005F296
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1005F296:
	PUSH 0x18
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5E31B_loc_1005F31B])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4C30_ptr]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4C48_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x14],EBX
	MOV DWORD PTR [EDI+0x10],EBX
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4C60_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4C78_ptr]
	JMP_LONG(offset [LEGO1_text.m5E31D_loc_1005F31D])
}
}

__declspec(naked) DWORD LEGO1_proc_1005F2FB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1005F303()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E390_loc_1005F390])
}
}

__declspec(naked) DWORD LEGO1_proc_1005F30B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E3F0_loc_1005F3F0])
}
}

__declspec(naked) DWORD LEGO1_proc_1005F313()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E4F0_loc_1005F4F0])
}
}

__declspec(naked) DWORD LEGO1_loc_1005F31B()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5E31D_loc_1005F31D])
}
}

__declspec(naked) DWORD LEGO1_loc_1005F31D()
{
	enum{
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	POP EDI
	MOV DWORD PTR [ESI+0x00000424],EAX
	MOV EAX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005F3D7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F473()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E390_loc_1005F390])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F4D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E4F0_loc_1005F4F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F531()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E3F0_loc_1005F3F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F59F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F64B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E390_loc_1005F390])
}
}

__declspec(naked) DWORD LEGO1_sub_1005F6B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E3F0_loc_1005F3F0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005F6D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ECX+0x0000042B],0x00
	MOV AL,BYTE PTR [ESP+arg1]
	JZ loc_1005F6E6
	MOV BYTE PTR [ECX+0x00000429],AL
	RETN 0x0004
loc_1005F6E6:
	MOV BYTE PTR [ECX+0x00000400],AL
	TEST AL, AL
	JNZ loc_1005F6F7
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m617D0_sub_100627D0])
loc_1005F6F7:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1005F700(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ECX+0x0000042B],0x00
	MOV AL,BYTE PTR [ESP+arg1]
	JZ loc_1005F716
	MOV BYTE PTR [ECX+0x00000428],AL
	RETN 0x0004
loc_1005F716:
	MOV BYTE PTR [ECX+0x3A],AL
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1005F720(DWORD arg1)
{
	enum{
		var_30 = -0x30,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5EDD3_proc_1005FDD3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000004A8
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	CMP DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [EBP+var_18+0x4],0xFFFFFFFF
	PUSH ESI
	PUSH EDI
	JZ_LONG(offset [LEGO1_text.m5E851_loc_1005F851])
	MOV ECX,DWORD PTR [ECX+0x20]
	TEST ECX, ECX
	JZ loc_1005F76E
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x20],0x00000000
loc_1005F76E:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX+0x24]
	TEST ECX, ECX
	JZ loc_1005F788
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x24],0x00000000
loc_1005F788:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX, 0x00000002
	ADD EDX, 0x28
	XOR ECX, ECX
loc_1005F795:
	MOV DWORD PTR [EDX],ECX
	ADD EDX, 0x04
	DEC EAX
	MOV DWORD PTR [EDX+0x04],ECX
	JNZ loc_1005F795
	XOR EAX, EAX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EDX+0x38],AL
	MOV BYTE PTR [EDX+0x39],AL
	MOV BYTE PTR [EDX+0x00000430],AL
	MOV DWORD PTR [EDX+0x0000042C],EAX
	MOV EAX, offset LEGO1_data + 0x705C
loc_1005F7BC:
	MOV BYTE PTR [EAX],0x00
	ADD EAX, 0x18
	CMP EAX, offset LEGO1_data + 0x74C4
	JB loc_1005F7BC
	PUSH offset [LEGO1_data.m460_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	TEST EAX, EAX
	MOV DWORD PTR [EDX+0x00000420],EAX
	JNZ loc_1005F801
	PUSH offset [LEGO1_data.m460_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x00000420],EAX
loc_1005F801:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EDX+0x08],0x00
	JNZ loc_1005F827
	MOV EAX,DWORD PTR [EDX+0x000003FC]
	MOV ECX,DWORD PTR [EDX+0x14]
	PUSH EAX
	PUSH ECX
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EDX+0x00000420]
	MOV AX,WORD PTR DS:[EDX+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64240_sub_10065240])
loc_1005F827:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m5F3C0_sub_100603C0])
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m981C0_sub_100991C0])
	XOR EAX, EAX
	CMP DWORD PTR [EBP+arg1+0x4],-0x01
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	JNZ_LONG(offset [LEGO1_text.m5E875_loc_1005F875])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	JMP_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
}
}

__declspec(naked) DWORD LEGO1_loc_1005F845()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5EDDD_sub_1005FDDD])
	JMP_LONG(offset [LEGO1_text.m5E851_loc_1005F851])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1005F851(DWORD arg1)
{
	enum{
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
	};

__asm{
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],-0x01
	JNZ loc_1005F85F
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m5F3C0_sub_100603C0])
loc_1005F85F:
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_loc_1005F875()
{
	enum{
		arg1216923 = 0x4A466C,
		arg1217179 = 0x4A4A6C,
		arg1217211 = 0x4A4AEC,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A430_sub_1005B430])
	PUSH EAX
	PUSH offset [LEGO1_data.m7544_str]
	LEA EAX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	CALL_LONG(offset [LEGO1_text.mAF900__GetHD_MxOmni__SAPBDXZ])
	PUSH EAX
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH offset LEGO1_data + 0x31A0
	LEA EAX,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EBP+ECX+arg1216923-0x4A4B22],0x5C
	JZ loc_1005F903
	MOV EDI, offset LEGO1_data + 0x4050
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_1005F903:
	LEA EDI,DWORD PTR [EBP+arg1217179-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B570_sub_1008C570])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ FAR loc_1005FA08
	CALL_LONG(offset [LEGO1_text.mAF940__GetCD_MxOmni__SAPBDXZ])
	PUSH EAX
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH offset LEGO1_data + 0x31A0
	LEA EAX,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EBP+ECX+arg1216923-0x4A4B22],0x5C
	JZ loc_1005F9BA
	MOV EDI, offset LEGO1_data + 0x4050
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_1005F9BA:
	LEA EDI,DWORD PTR [EBP+arg1217179-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+arg1216923-0x4A4B20]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B570_sub_1008C570])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
loc_1005FA08:
	PUSH 0x01
	LEA EAX,DWORD PTR [EBP+arg1216923-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m983A0_sub_100993A0])
	CMP EAX, -0x01
	JZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m982C0_sub_100992C0])
	CMP EAX, -0x01
	JZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
	CMP DWORD PTR [EBP+arg1217211-0x4A4B20],0x03
	JZ loc_1005FA53
	PUSH 0x00
	PUSH offset [LEGO1_data.m7520_str]
	CALL_LONG(offset [LEGO1_text.mB61E0_sub_100B71E0])
	ADD ESP, 0x08
	JMP_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
loc_1005FA53:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x02
	ADD EDX, 0x0C
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	PUSH EDX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EDX
	CALL_LONG(offset [LEGO1_text.m982C0_sub_100992C0])
	CMP EAX, -0x01
	JZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV AX,WORD PTR DS:[ECX]
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV DWORD PTR [EDX+0x14],EAX
	XOR EAX, EAX
	MOV EDI,DWORD PTR [EDX+0x14]
	MOV AX,WORD PTR DS:[ECX]
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	XOR EAX, EAX
	SHR ECX, 0x02
	REP STOSD
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	CMP WORD PTR DS:[ECX],AX
	JBE FAR loc_1005FBF2
	XOR EBX, EBX
loc_1005FAB6:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV EAX,DWORD PTR [EDX+0x14]
	ADD EAX, EBX
	PUSH EAX
	PUSH ECX
	MOV ECX, EDX
	CALL_LONG(offset [LEGO1_text.m5F180_sub_10060180])
	CMP EAX, -0x01
	JZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	MOV ESI,DWORD PTR [EDX+0x14]
	ADD ESI, EBX
	SUB EAX, EAX
	MOV EDX,DWORD PTR [ESI]
	MOV EDI, EDX
	REPNE SCAS
	NOT ECX
	LEA EAX,DWORD PTR [EDX+ECX-0x01]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m61360_sub_10062360])
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV BYTE PTR [ESI+0x28],AL
	XOR ESI, ESI
	MOV ECX,DWORD PTR [EDX+0x14]
	MOV BYTE PTR [EBX+ECX+0x29],0x00
	MOV ECX, 0xFFFFFFFF
loc_1005FB0F:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	INC ESI
	MOV EAX,DWORD PTR [EDX+0x14]
	ADD EAX, EBX
	CMP ESI, 0x03
	MOV BYTE PTR [ESI+EAX+0x29],CL
	JL loc_1005FB0F
	MOV EAX,DWORD PTR [EDX+0x14]
	ADD EAX, EBX
	CMP WORD PTR DS:[EAX+0x08],-0x01
	JNZ loc_1005FB73
	XOR EDI, EDI
	CMP BYTE PTR [EAX+0x20],0x00
	JBE loc_1005FB73
	XOR ESI, ESI
loc_1005FB37:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [EDX+0x14]
	MOV ECX,DWORD PTR [EBX+EAX+0x24]
	MOV EDX,DWORD PTR [ESI+ECX]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m61360_sub_10062360])
	MOVSX EAX,AL
	TEST EAX, EAX
	JL loc_1005FB5F
	LEA EAX,DWORD PTR [EAX*2+EAX]
	MOV BYTE PTR [offset LEGO1_data + 0x705C+EAX*8],0x01
loc_1005FB5F:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	XOR EAX, EAX
	ADD ESI, 0x30
	INC EDI
	MOV ECX,DWORD PTR [EDX+0x14]
	MOV AL,BYTE PTR [EBX+ECX+0x20]
	CMP EAX, EDI
	JG loc_1005FB37
loc_1005FB73:
	XOR EDI, EDI
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EDX+0x14]
	CMP BYTE PTR [EBX+EAX+0x20],0x00
	JBE loc_1005FBDB
	XOR ESI, ESI
loc_1005FB87:
	LEA EAX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x14]
	MOV EAX,DWORD PTR [EBX+ECX+0x24]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [ESI+EAX]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m5F140_sub_10060140])
	TEST AL, AL
	JZ loc_1005FBC4
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EDX+0x14]
	ADD ECX, EBX
	MOV EDX,DWORD PTR [ECX+0x24]
	CMP BYTE PTR [ESI+EDX+0x2C],0x00
	JZ loc_1005FBC4
	MOV AL,BYTE PTR [EBP+arg1217212-0x4A4B20]
	INC EDI
	CMP EDI, 0x03
	MOV BYTE PTR [EDI+ECX+0x29],AL
	JG loc_1005FBDB
loc_1005FBC4:
	ADD ESI, 0x30
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EDX+0x14]
	XOR EAX, EAX
	INC DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV AL,BYTE PTR [EBX+ECX+0x20]
	CMP EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JG loc_1005FB87
loc_1005FBDB:
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	INC DWORD PTR [EBP+arg1217218-0x4A4B20]
	ADD EBX, 0x30
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ECX]
	CMP EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JG FAR loc_1005FAB6
loc_1005FBF2:
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x18
	MOV EBX, 0x00000001
	XOR EDI, EDI
	MOV DWORD PTR [EDX+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m5EC85_loc_1005FC85])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x02
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x03
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x04
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4CA8_ptr]
	MOV DWORD PTR [ESI+0x08],EDI
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5EE50_proc_1005FE50]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x05
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4CC0_ptr]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x14],EDI
	MOV DWORD PTR [ESI+0x10],EDI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4CD8_ptr]
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5EE50_proc_1005FE50]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C90_ptr]
	JMP_LONG(offset [LEGO1_text.m5EC87_loc_1005FC87])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FC65()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FC6D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE00_loc_1005FE00])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FC75()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE60_loc_1005FE60])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FC7D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EF60_loc_1005FF60])
}
}

__declspec(naked) DWORD LEGO1_loc_1005FC85()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5EC87_loc_1005FC87])
}
}

__declspec(naked) DWORD LEGO1_loc_1005FC87()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x18
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV EBX, 0x00000006
	MOV DWORD PTR [EDX+0x20],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5ED25_loc_1005FD25])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x08
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x09
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4CA8_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m5EE50_proc_1005FE50]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0A
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4CC0_ptr]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4CD8_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m5EE50_proc_1005FE50]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4C90_ptr]
	JMP_LONG(offset [LEGO1_text.m5ED27_loc_1005FD27])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FD05()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FD0D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE00_loc_1005FE00])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FD15()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE60_loc_1005FE60])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FD1D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EF60_loc_1005FF60])
}
}

__declspec(naked) DWORD LEGO1_loc_1005FD25()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5ED27_loc_1005FD27])
}
}

__declspec(naked) DWORD LEGO1_loc_1005FD27()
{
	enum{
		arg1217217 = 0x4A4B04,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	XOR EBX, EBX
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV ECX, EDX
	MOV DWORD PTR [EDX+0x24],EAX
	LEA EAX,DWORD PTR [EDX+0x10]
	PUSH EAX
	LEA EAX,DWORD PTR [EDX+0x0E]
	PUSH EAX
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m607C0_sub_100617C0])
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EBX
	MOV BYTE PTR [EDX+0x00000402],0x01
	CMP BYTE PTR [EDX+0x0000042B],BL
	JZ loc_1005FD83
	MOV BYTE PTR [EDX+0x0000042A],0x01
	MOV AL,BYTE PTR [EDX+0x3A]
	MOV BYTE PTR [EDX+0x00000402],BL
	MOV BYTE PTR [EDX+0x00000428],AL
	MOV BYTE PTR [EDX+0x3A],BL
	MOV AL,BYTE PTR [EDX+0x00000400]
	MOV BYTE PTR [EDX+0x00000429],AL
	MOV BYTE PTR [EDX+0x00000400],BL
loc_1005FD83:
	CMP DWORD PTR [EBP+arg1217226-0x4A4B20],0x00
	JNZ_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD EAX, 0x000003FC
	MOV ECX,DWORD PTR [EDX+0x14]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH ECX
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDX]
	MOV EBX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x00000420]
	CALL_LONG(offset [LEGO1_text.m641D0_sub_100651D0])
	JMP_LONG(offset [LEGO1_text.m5E845_loc_1005F845])
}
}

__declspec(naked) DWORD LEGO1_proc_1005FDB9()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005FDC6()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1005FDDD()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98250_loc_10099250])
}
}

__declspec(naked) DWORD LEGO1_sub_1005FE47()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1005FEE3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE00_loc_1005FE00])
}
}

__declspec(naked) DWORD LEGO1_sub_1005FF49()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EF60_loc_1005FF60])
}
}

__declspec(naked) DWORD LEGO1_sub_1005FFA1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE60_loc_1005FE60])
}
}

__declspec(naked) DWORD LEGO1_sub_1006000F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100600BB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE00_loc_1005FE00])
}
}

__declspec(naked) DWORD LEGO1_sub_10060129()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5EE60_loc_1005FE60])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060140(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, offset [LEGO1_data.m6D20_ptr]
	XOR EDI, EDI
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
loc_1006014E:
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10060172
	ADD EBX, 0x08
	INC EDI
	CMP EBX, offset [LEGO1_data.m6D58_ptr]
	JB loc_1006014E
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_10060172:
	MOV EAX,DWORD PTR [ESP+arg2+0xC]
	MOV DWORD PTR [EAX],EDI
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060180(DWORD arg1, DWORD arg2)
{
	enum{
		var_10 = -0x10,
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x0C
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV DWORD PTR [ESP+var_4+0x10],ECX
	PUSH ESI
	MOV DWORD PTR [ESP+var_8+0x14],0xFFFFFFFF
	PUSH EDI
	MOV ECX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [ESP+var_8+0x17]
	PUSH EBP
	MOV EDI,DWORD PTR [ECX+0x04]
	PUSH 0x01
	MOV ECX,DWORD PTR [ESP+arg1+0x20]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_10+0x23]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ESI,DWORD PTR [ESP+arg1+0x24]
	ADD ESP, 0x04
	MOV DWORD PTR [ESI],EAX
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_10+0x23]
	MOV ECX,DWORD PTR [ESI]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x24]
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	XOR ECX, ECX
	MOV EAX,DWORD PTR [ESI]
	MOV CL,BYTE PTR [ESP+var_10+0x23]
	PUSH 0x04
	LEA EDX,DWORD PTR [ESI+0x04]
	MOV BYTE PTR [EAX+ECX],0x00
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EDX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	PUSH 0x02
	LEA EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0A]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0B]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0D]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ FAR loc_100602FA
	XOR EBP, EBP
	LEA EBX,DWORD PTR [ESI+0x10]
loc_10060270:
	MOV ECX,DWORD PTR [ESP+var_4+0x24]
	PUSH 0x04
	PUSH EBX
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ loc_100602FA
	ADD EBX, 0x04
	INC EBP
	CMP EBP, 0x04
	JL loc_10060270
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x20]
	MOV ECX,DWORD PTR [ESP+r+0x24]
	PUSH EAX
	CALL_LONG(EDI)
	CMP EAX, -0x01
	JZ loc_100602FA
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x20]
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x24],EAX
	XOR EAX, EAX
	MOV EDI,DWORD PTR [ESI+0x24]
	MOV AL,BYTE PTR [ESI+0x20]
	XOR EBX, EBX
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	XOR EAX, EAX
	SHR ECX, 0x02
	REP STOSD
	XOR EDI, EDI
	CMP BYTE PTR [ESI+0x20],BL
	JBE loc_100602F2
loc_100602CC:
	MOV EAX,DWORD PTR [ESI+0x24]
	MOV ECX,DWORD PTR [ESP+var_4+0x24]
	ADD EAX, EBX
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_4+0x24]
	CALL_LONG(offset [LEGO1_text.m5F310_sub_10060310])
	CMP EAX, -0x01
	JZ loc_100602FA
	ADD EBX, 0x30
	INC EDI
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x20]
	CMP EAX, EDI
	JG loc_100602CC
loc_100602F2:
	MOV DWORD PTR [ESP+var_10+0x24],0x00000000
loc_100602FA:
	MOV EAX,DWORD PTR [ESP+var_10+0x24]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060310(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EBP, 0xFFFFFFFF
	MOV EDI,DWORD PTR [ESP+arg1+0x14]
	LEA ECX,DWORD PTR [ESP+r+0x13]
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	MOV ESI,DWORD PTR [EAX+0x04]
	CALL_LONG(ESI)
	CMP EAX, EBP
	JZ loc_100603B0
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EBX,DWORD PTR [ESP+arg1+0x1C]
	ADD ESP, 0x04
	MOV DWORD PTR [EBX],EAX
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	MOV ECX,DWORD PTR [EBX]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(ESI)
	CMP EAX, EBP
	JZ loc_100603B0
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBX]
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	PUSH 0x01
	LEA EDX,DWORD PTR [EBX+0x04]
	MOV BYTE PTR [ECX+EAX],0x00
	PUSH EDX
	MOV ECX, EDI
	CALL_LONG(ESI)
	CMP EAX, EBP
	JZ loc_100603B0
	PUSH 0x0C
	LEA EAX,DWORD PTR [EBX+0x08]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_100603B0
	PUSH 0x0C
	LEA EAX,DWORD PTR [EBX+0x14]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_100603B0
	PUSH 0x0C
	LEA EAX,DWORD PTR [EBX+0x20]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_100603B0
	PUSH 0x01
	ADD EBX, 0x2C
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(ESI)
	CMP EAX, EBP
	JZ loc_100603B0
	XOR EBP, EBP
loc_100603B0:
	MOV EAX, EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100603C0()
{
	enum{
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV AL,BYTE PTR [ECX+0x0000042B]
	PUSH EDI
	PUSH EBP
	MOV EBX, ECX
	MOV BYTE PTR [ESP+var_4+0x17],AL
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_10060466
	MOV DWORD PTR [ESP+var_4+0x18],0x00000000
	CMP WORD PTR DS:[EBX+0x0C],0x00
	JBE loc_1006045A
	XOR ESI, ESI
loc_100603EE:
	MOV EAX,DWORD PTR [EBX+0x14]
	MOV ECX,DWORD PTR [ESI+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBX+0x14]
	ADD EAX, ESI
	CMP DWORD PTR [EAX+0x24],0x00
	JZ loc_10060447
	XOR EBP, EBP
	CMP BYTE PTR [EAX+0x20],0x00
	JBE loc_10060437
	XOR EDI, EDI
loc_10060412:
	MOV EAX,DWORD PTR [EBX+0x14]
	ADD EDI, 0x30
	INC EBP
	MOV ECX,DWORD PTR [ESI+EAX+0x24]
	MOV EDX,DWORD PTR [EDI+ECX-0x30]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBX+0x14]
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+ECX+0x20]
	CMP EAX, EBP
	JG loc_10060412
loc_10060437:
	MOV EAX,DWORD PTR [EBX+0x14]
	MOV ECX,DWORD PTR [ESI+EAX+0x24]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10060447:
	ADD ESI, 0x30
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EBX+0x0C]
	INC DWORD PTR [ESP+var_4+0x18]
	CMP EAX,DWORD PTR [ESP+var_4+0x18]
	JG loc_100603EE
loc_1006045A:
	MOV EAX,DWORD PTR [EBX+0x14]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10060466:
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m5E130_sub_1005F130])
	MOV AL,BYTE PTR [ESP+var_4+0x17]
	POP EBP
	POP EDI
	MOV BYTE PTR [EBX+0x0000042B],AL
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060480(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0x8]
	PUSH EDI
	PUSH EBP
	TEST ESI, ESI
	JZ loc_100604C1
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
loc_10060490:
	MOV EBP, offset [LEGO1_data.m7048_ptr]
	MOV EBX, 0x00000001
loc_1006049A:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100604B0
	MOV BYTE PTR [EBP+arg1217226-0x4A4B20],BL
loc_100604B0:
	ADD EBP, 0x18
	CMP EBP, offset LEGO1_data + 0x74B0
	JB loc_1006049A
	ADD EDI, 0x04
	DEC ESI
	JNZ loc_10060490
loc_100604C1:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100604D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX, offset LEGO1_data + 0x7050
	MOV CL,BYTE PTR [ESP+arg1]
loc_100604D9:
	MOV BYTE PTR [EAX],CL
	ADD EAX, 0x18
	CMP EAX, offset LEGO1_data + 0x74B8
	JB loc_100604D9
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100604F0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg2+0x8]
	PUSH EDI
	PUSH EBP
	TEST EBX, EBX
	JZ loc_1006052E
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_10060500:
	XOR EDX, EDX
	CMP WORD PTR DS:[ECX+0x0C],DX
	JBE loc_10060528
	XOR EDI, EDI
loc_1006050A:
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV EBP,DWORD PTR [ESI]
	ADD EAX, EDI
	CMP DWORD PTR [EAX+0x04],EBP
	JNZ loc_1006051A
	MOV BYTE PTR [EAX+0x29],0x01
loc_1006051A:
	ADD EDI, 0x30
	INC EDX
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ECX+0x0C]
	CMP EAX, EDX
	JG loc_1006050A
loc_10060528:
	ADD ESI, 0x04
	DEC EBX
	JNZ loc_10060500
loc_1006052E:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060540(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	XOR EDI, EDI
	XOR ESI, ESI
	CMP WORD PTR DS:[ECX+0x0C],DI
	JBE loc_10060565
	MOV DL,BYTE PTR [ESP+arg1+0x8]
loc_10060550:
	MOV EAX,DWORD PTR [ECX+0x14]
	ADD EDI, 0x30
	INC ESI
	MOV BYTE PTR [EDI+EAX-0x07],DL
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ECX+0x0C]
	CMP EAX, ESI
	JG loc_10060550
loc_10060565:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060570(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	XOR ECX, ECX
	MOV BYTE PTR [ESI+0x39],CL
	MOV BYTE PTR [ESI+0x00000430],CL
	MOV DWORD PTR [ESI+0x0000042C],ECX
	CMP BYTE PTR [ESI+0x1A],AL
	JZ loc_100605D1
	MOV BYTE PTR [ESI+0x1A],AL
	TEST AL, AL
	JZ loc_100605D1
loc_10060594:
	PUSH 0x01
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ESI+0x18]
	PUSH 0x01
	PUSH 0x01
	MOV ECX, ESI
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x00
	PUSH 0x01
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5F5E0_sub_100605E0])
	CMP EAX, -0x01
	JNZ loc_100605D1
	MOV AX,WORD PTR DS:[ESI+0x18]
	INC AX
	MOV WORD PTR DS:[ESI+0x18],AX
	CMP WORD PTR DS:[ESI+0x0C],AX
	JA loc_10060594
	MOV BYTE PTR [ESI+0x1A],0x00
	MOV WORD PTR DS:[ESI+0x18],0x0000
loc_100605D1:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100605E0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8)
{
	enum{
		var_B8 = -0xB8,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5F9D8_proc_100609D8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000001A8
	MOV DWORD PTR [EBP+var_24+0x4],0xFFFFFFFF
	PUSH EBX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [ECX+0x08],-0x01
	PUSH ESI
	PUSH EDI
	JZ_LONG(offset [LEGO1_text.m5F9AD_loc_100609AD])
	XOR EAX, EAX
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV AX,WORD PTR DS:[ECX+0x0C]
	CMP EAX, ESI
	JBE_LONG(offset [LEGO1_text.m5F9AD_loc_100609AD])
	CMP DWORD PTR [ECX+0x20],0x00
	JZ_LONG(offset [LEGO1_text.m5F9AD_loc_100609AD])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m617D0_sub_100627D0])
	SHL ESI, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m61770_sub_10062770])
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	LEA ESI,DWORD PTR [ESI*2+ESI]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EDX+0x14]
	ADD EAX, ESI
	CMP BYTE PTR [EBP+arg4+0x4],0x00
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	JNZ loc_100606D2
	CMP BYTE PTR [EDX+0x39],0x00
	JNZ loc_100606BC
	CMP BYTE PTR [EAX+0x29],0x00
	JZ loc_100606BC
	PUSH EAX
	MOV ECX, EDX
	CALL_LONG(offset [LEGO1_text.m613A0_sub_100623A0])
	TEST AL, AL
	JZ loc_10060696
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5F9E2_sub_100609E2])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m5F9B0_loc_100609B0])
loc_10060696:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m61710_sub_10062710])
	TEST AL, AL
	JZ loc_100606D2
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5F9E2_sub_100609E2])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m5F9B0_loc_100609B0])
loc_100606BC:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5F9E2_sub_100609E2])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m5F9B0_loc_100609B0])
loc_100606D2:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m61580_sub_10062580])
	PUSH 0x78
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EDX, 0x00000001
	XOR EAX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],DL
	TEST EDI, EDI
	JZ loc_10060744
	LEA ECX,DWORD PTR [EDI+0x2C]
	LEA EBX,DWORD PTR [EDI+0x34]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EDI+0x30],EBX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV DWORD PTR [EDI+0x08],EAX
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV BYTE PTR [EDI+0x10],AL
	MOV WORD PTR DS:[EDI+0x12],0xFFFF
	MOV BYTE PTR [EDI+0x14],AL
	MOV DWORD PTR [EDI+0x1C],EAX
	MOV DWORD PTR [EDI+0x20],EAX
	MOV DWORD PTR [EDI+0x24],EAX
	MOV BYTE PTR [EDI+0x15],DL
	MOV BYTE PTR [EDI+0x28],DL
	MOV BYTE PTR [EDI+0x29],DL
	MOV DWORD PTR [EDI+0x74],EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x24])
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	JMP loc_1006074B
loc_10060744:
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
loc_1006074B:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV ECX,DWORD PTR [EDX+0x1C]
	INC ECX
	MOV DWORD PTR [EDX+0x1C],ECX
	MOV DWORD PTR [EAX+0x04],ECX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	MOV BYTE PTR [EAX+0x10],0x00
	MOV DWORD PTR [EAX+0x08],ECX
	MOV EBX,DWORD PTR [EDX+0x14]
	MOV DL,BYTE PTR [EBP+arg2+0x4]
	MOV CX,WORD PTR DS:[ESI+EBX+0x08]
	MOV WORD PTR DS:[EAX+0x12],CX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+arg3+0x4],0x00
	MOV BYTE PTR [EAX+0x14],DL
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV CL,BYTE PTR [EBP+arg6+0x4]
	MOV DWORD PTR [EAX+0x18],EDX
	MOV BYTE PTR [EAX+0x15],CL
	JZ loc_100607DF
	PUSH 0x48
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV ECX, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	TEST EBX, EBX
	JZ loc_100607D5
	LEA EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m300_ptr]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV ECX, EBX
loc_100607D5:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EAX+0x0C],ECX
loc_100607DF:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x28
	MOV DL,BYTE PTR [EBP+arg7+0x4]
	MOV DWORD PTR [EAX+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x30
	MOV DWORD PTR [EAX+0x20],ECX
	MOV CL,BYTE PTR [EBP+arg8+0x4]
	MOV BYTE PTR [EAX+0x28],DL
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EAX+0x29],CL
	MOV EDI,DWORD PTR [EDX+0x20]
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5F85B_loc_1006085B])
	MOV EBX,DWORD PTR [EDI+0x14]
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m5F844_loc_10060844])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],EBX
	MOV DWORD PTR [ESI+0x08],0x00000000
	JMP_LONG(offset [LEGO1_text.m5F846_loc_10060846])
}
}

