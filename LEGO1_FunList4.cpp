#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD __stdcall LEGO1_sub_10025720(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	INC BYTE PTR [ECX+0x00000108]
	MOV ESI, ECX
	MOV WORD PTR DS:[ECX+0x0000010A],0x0000
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x10],0x01
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
	JNZ_LONG(offset [LEGO1_text.m249C6_loc_100259C6])
	CMP EAX, 0x06
	JA loc_10025752
	JMP_LONG(DWORD PTR [offset LEGO1_text.m24C30_proc_10025C30+EAX*4])
loc_10025752:
	POP EDI
	DEC BYTE PTR [ESI+0x00000108]
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10025D10(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x00000344]
	MOV EDI, ECX
	CMP EAX, -0x01
	JZ loc_10025D3A
	PUSH 0x00
	PUSH EAX
	LEA EAX,DWORD PTR [EDI+0x0C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	MOV DWORD PTR [EDI+0x00000344],0xFFFFFFFF
	ADD ESP, 0x10
loc_10025D3A:
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, -0x01
	JZ loc_10025D66
	MOV DWORD PTR [EDI+0x00000344],ESI
	ADD EDI, 0x0C
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	PUSH 0x00
	PUSH ESI
	PUSH EDI
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_10025D66:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10025D70()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x0000032C]
	MOV CL, 0x03
	MOV AL,BYTE PTR [EAX+0x4C]
	SUB AH, AH
	DIV CL
	XOR ECX, ECX
	MOV CL, AH
	CMP ECX, 0x01
	JZ loc_10025D95
	CMP ECX, 0x02
	JZ loc_10025D9B
	CMP ECX, 0x03
	JZ loc_10025DA1
	XOR EAX, EAX
	RET
loc_10025D95:
	MOV EAX, 0x00000001
	RET
loc_10025D9B:
	MOV EAX, 0x00000002
	RET
loc_10025DA1:
	MOV EAX, 0x00000003
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10025DB0(DWORD arg1, DWORD arg2)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV DI, 0x0001
	PUSH EAX
	PUSH offset [LEGO1_data.m514_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, 0x00000005
	SUB EDX, EDX
	MOV DWORD PTR [ESI+0x0000033C],EAX
	MOV EAX,DWORD PTR [ESP+r+0x10]
	DIV ECX
	AND AX, DI
	MOV ECX,DWORD PTR [ESI+0x0000033C]
	SUB DI, AX
	CMP DWORD PTR [ESI+0x000002DC],ECX
	JNZ loc_10025E0A
	CMP DI,WORD PTR DS:[offset LEGO1_data + 0x11CC]
	JZ loc_10025E2D
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m24010_sub_10025010])
	MOV WORD PTR DS:[offset LEGO1_data + 0x11CC],DI
	POP EDI
	POP ESI
	RETN 0x0008
loc_10025E0A:
	CMP WORD PTR DS:[ECX+0x4E],DI
	JZ loc_10025E16
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
loc_10025E16:
	MOV WORD PTR DS:[offset LEGO1_data + 0x11CC],0xFFFF
	MOV AL,BYTE PTR [ESI+0x00000348]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m23FA0_sub_10024FA0])
loc_10025E2D:
	POP EDI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10025E40()
{
__asm{
	PUSH ESI
	MOV AL,BYTE PTR [ECX+0x00000348]
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m23FA0_sub_10024FA0])
	MOV ECX,DWORD PTR [ESI+0x0000033C]
	TEST ECX, ECX
	JZ loc_10025E68
	CMP DWORD PTR [ESI+0x000002DC],ECX
	JZ loc_10025E68
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
loc_10025E68:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10025EE0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	DEC EAX
	CMP EAX, 0x03
	JA loc_10025EF1
	JMP_LONG(DWORD PTR [offset LEGO1_text.m24F1C_proc_10025F1C+EAX*4])
loc_10025EF1:
	MOV EAX, 0xFFFFFFFF
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10025F30(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m24FDD_proc_10025FDD]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	LEA EBX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	MOV EDI, 0x00000003
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
loc_10025F74:
	MOV ECX, EBX
	ADD EBX, 0x0C
	CALL_LONG(offset [LEGO1_text.m16C00_sub_10017C00])
	DEC EDI
	JNS loc_10025F74
	LEA EDI,DWORD PTR [ESI+0x38]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m26E0_ptr]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV BYTE PTR [ESI+0x4C],AL
	POP EDI
	MOV BYTE PTR [ESI+0x4D],AL
	MOV BYTE PTR [ESI+0x4E],AL
	MOV BYTE PTR [ESI+0x4F],AL
	MOV EAX, ESI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100260FC()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x38
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10026111()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_10026220()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m25272_proc_10026272]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2758_ptr]
	CALL_LONG(offset [LEGO1_text.m25330_sub_10026330])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100262C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m25312_proc_10026312]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2758_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x3188]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m2531C_sub_1002631C])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002631C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10026330()
{
__asm{
	PUSH ESI
	MOV EAX, ECX
	PUSH EDI
	MOV ESI, offset LEGO1_data + 0x16C8
	MOV EDI, offset LEGO1_data + 0x13180
	MOV ECX, 0x000006A5
	REP MOVSD
	XOR ECX, ECX
	POP EDI
	POP ESI
	MOV BYTE PTR [EAX+0x0C],CL
	MOV DWORD PTR [EAX+0x08],0xFFFFFFFF
	MOV BYTE PTR [EAX+0x24],CL
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026360(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV DWORD PTR [ECX+0x08],ESI
	PUSH EBP
	MOV EDI, ECX
	XOR EBP, EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EBX, EAX
loc_10026376:
	PUSH ESI
	MOV ECX, EDI
	PUSH EBX
	PUSH EBP
	INC EBP
	CALL_LONG(offset [LEGO1_text.m25590_sub_10026590])
	CMP EBP, 0x51
	JB loc_10026376
	MOV BYTE PTR [EDI+0x0C],0x00
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100263A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4580]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x57
	PUSH 0x0A
	XOR EDI, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	MOVSX EAX,BYTE PTR [ESI+0x24]
	ADD ESP, 0x0C
	TEST EAX, EAX
	JZ loc_100263DB
	LEA EBX,DWORD PTR [ESI+0x10]
loc_100263C4:
	MOV EAX,DWORD PTR [EBX]
	ADD EBX, 0x04
	PUSH EAX
	INC EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOVSX EAX,BYTE PTR [ESI+0x24]
	ADD ESP, 0x04
	CMP EAX, EDI
	JA loc_100263C4
loc_100263DB:
	XOR EBX, EBX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV BYTE PTR [ESI+0x24],0x00
loc_100263E5:
	PUSH EDI
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m256C0_sub_100266C0])
	INC EBX
	CMP EBX, 0x51
	JB loc_100263E5
	MOV DWORD PTR [ESI+0x08],0xFFFFFFFF
	MOV BYTE PTR [ESI+0x0C],0x00
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10026410()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1217225 = 0x4A4B24,
		arg1217230 = 0x4A4B38,
	};

__asm{
	SUB ESP, 0x20
	MOV DWORD PTR [ESP+var_4+0x20],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [ESP+var_C+0x30],EAX
	TEST EAX, EAX
	JNZ loc_10026435
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RET
loc_10026435:
	MOV ESI, offset LEGO1_data + 0x131AC
loc_1002643A:
	CMP DWORD PTR [ESI-0x2C],0x00
	JZ FAR loc_1002654F
	MOV EAX,DWORD PTR [ESI-0x14]
	TEST EAX, EAX
	JZ FAR loc_1002654F
	MOV ECX,DWORD PTR [ESP+var_C+0x30]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1F020_sub_10020020])
	MOV EDI, EAX
	MOV DWORD PTR [ESI],EAX
	TEST EDI, EDI
	JZ FAR loc_1002654F
	LEA EAX,DWORD PTR [ESP+var_18+0x30]
	MOV ECX,DWORD PTR [ESI-0x0C]
	MOV EDX,DWORD PTR [ESI-0x08]
	MOV DWORD PTR [ESP+var_1C+0x30],EAX
	MOV EAX,DWORD PTR [ESI-0x04]
	MOV DWORD PTR [ESP+var_18+0x30],ECX
	MOV DWORD PTR [ESP+var_14+0x30],EDX
	MOV DWORD PTR [ESP+var_10+0x30],EAX
	MOV DWORD PTR [ESP+var_20+0x30],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_8+0x30],0x00000000
	CMP BYTE PTR [EDI+0x04],0x00
	JBE loc_100264E0
	XOR EBX, EBX
loc_1002649A:
	MOV EBP,DWORD PTR [EDI+0x2C]
	MOV ECX,DWORD PTR [ESP+var_1C+0x30]
	ADD EBP, EBX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x34]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_20+0x38]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2718]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_100264DA
	ADD EBX, 0x18
	XOR EAX, EAX
	MOV AL,BYTE PTR [EDI+0x04]
	INC DWORD PTR [ESP+var_C+0x34]
	CMP EAX,DWORD PTR [ESP+var_C+0x34]
	JG loc_1002649A
	JMP loc_100264E0
loc_100264DA:
	MOV DWORD PTR [ESI], 0x00000000
loc_100264E0:
	MOV EDI,DWORD PTR [ESI]
	TEST EDI, EDI
	JZ loc_1002654F
	MOV EBX,DWORD PTR [EDI+0x18]
	ADD EDI, 0x14
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	PUSH EBX
	MOV EBP,DWORD PTR [ESP+var_20+0x34]
	LEA ECX,DWORD PTR [ESP+var_20+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FADD DWORD PTR [EBX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2720]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10026531
	MOV EBX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	LEA ECX,DWORD PTR [ESP+var_24+0x34]
	PUSH EBX
	MOV EBP,DWORD PTR [ESP+var_20+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FADD DWORD PTR [EBX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2718]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1002654F
loc_10026531:
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ECX+0x08]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FADD DWORD PTR [ECX+0x0C]
	FDIV DWORD PTR [ECX+0x04]
	FCHS
	FSTP DWORD PTR [ESI-0x08]
loc_1002654F:
	ADD ESI, 0x54
	CMP ESI, offset LEGO1_data + 0x14C40
	JB FAR loc_1002643A
	MOV EAX,DWORD PTR [ESP+var_8+0x34]
	POP EBP
	POP EDI
	POP ESI
	MOV BYTE PTR [EAX+0x0C],0x01
	XOR EAX, EAX
	POP EBX
	ADD ESP, 0x20
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026570(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ECX+0x0C],0x00
	JNZ loc_1002657B
	CALL_LONG(offset [LEGO1_text.m25410_sub_10026410])
loc_1002657B:
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX], 0x00000051
	MOV EAX, offset LEGO1_data + 0x13180
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026590(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_224 = -0x224,
		var_220 = -0x220,
		var_21C = -0x21C,
		var_218 = -0x218,
		var_214 = -0x214,
		var_210 = -0x210,
		var_200 = -0x200,
		var_100 = -0x100,
		arg1 = 0x4,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x00000218
	PUSH ESI
	PUSH EDI
	XOR EDI, EDI
	CMP EDX, 0x51
	JNB FAR loc_100266A9
	LEA EAX,DWORD PTR [EDX*4+EDX]
	LEA ECX,DWORD PTR [EAX*4+EDX]
	MOV EAX, 0x00000001
	LEA ESI,DWORD PTR [ECX*4+0x00000000]
	MOV CL,BYTE PTR [ESP+arg3+0x220]
	SHL EAX, CL
	TEST DWORD PTR [offset LEGO1_data + 0x13184+ESI],EAX
	JZ FAR loc_100266A9
	CMP BYTE PTR [offset LEGO1_data + 0x13196+ESI],0x00
	JZ FAR loc_100266A9
	MOV EDI,DWORD PTR [offset LEGO1_data + 0x13180+ESI]
	TEST EDI, EDI
	JNZ FAR loc_100266A9
	LEA EAX,DWORD PTR [ESP+var_100+0x220]
	PUSH EDX
	PUSH offset [LEGO1_data.m31A4_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_data + 0x13188+ESI]
	XOR EAX, EAX
	MOV AL,BYTE PTR [offset LEGO1_data + 0x13195+ESI]
	LEA ECX,DWORD PTR [ECX*4+ECX]
	ADD ECX, EAX
	LEA EAX,DWORD PTR [ESP+var_200+0x220]
	MOV EDX,DWORD PTR [offset LEGO1_data.m1660_ptr+ECX*4]
	PUSH EDX
	PUSH offset LEGO1_data + 0x31A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA ECX,DWORD PTR [ESP+var_200+0x22C]
	LEA EDX,DWORD PTR [ESP+var_100+0x22C]
	ADD ESP, 0x0C
	PUSH 0x01
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	MOV BYTE PTR [EAX+0x0C],0x01
	MOV EDI,DWORD PTR [EAX+0x00000104]
	LEA ECX,DWORD PTR [offset LEGO1_data + 0x131C8+ESI]
	LEA EAX,DWORD PTR [offset LEGO1_data + 0x131BC+ESI]
	LEA EDX,DWORD PTR [offset LEGO1_data + 0x131B0+ESI]
	MOV DWORD PTR [ESP+var_220+0x22C],ECX
	MOV DWORD PTR [ESP+var_218+0x22C],EAX
	MOV ECX, offset [LEGO1_rdata.m518_ptr]
	PUSH 0x00
	LEA EAX,DWORD PTR [ESP+var_21C+0x230]
	MOV DWORD PTR [ESP+var_224+0x230],ECX
	MOV DWORD PTR [ESP+var_21C+0x230],ECX
	MOV DWORD PTR [ESP+var_210+0x230],EDX
	LEA EDX,DWORD PTR [ESP+var_214+0x230]
	MOV DWORD PTR [ESP+var_214+0x230],ECX
	LEA ECX,DWORD PTR [ESP+var_224+0x230]
	PUSH ECX
	PUSH EAX
	PUSH EDX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
	PUSH 0x02
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m104E0_sub_100114E0])
	MOV DWORD PTR [offset LEGO1_data + 0x13180+ESI],EDI
loc_100266A9:
	MOV EAX, EDI
	POP EDI
	POP ESI
	ADD ESP, 0x00000218
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100266C0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	CMP EAX, 0x51
	JNB loc_1002670E
	LEA ECX,DWORD PTR [EAX*4+EAX]
	LEA EAX,DWORD PTR [ECX*4+EAX]
	MOV CL,BYTE PTR [ESP+arg2+0x4]
	LEA ESI,DWORD PTR [EAX*4+0x00000000]
	MOV EAX, 0x00000001
	SHL EAX, CL
	TEST DWORD PTR [offset LEGO1_data + 0x13184+ESI],EAX
	JZ loc_1002670E
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x13180+ESI]
	TEST EAX, EAX
	JZ loc_1002670E
	MOV EAX,DWORD PTR [EAX+0x54]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82F10_sub_10083F10])
	MOV DWORD PTR [offset LEGO1_data + 0x13180+ESI],0x00000000
loc_1002670E:
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026720(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, offset LEGO1_data + 0x13180
	PUSH EBP
	MOV EDI, 0xFFFFFFFF
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [ESI]
	MOV EBP,DWORD PTR [EAX+0x08]
loc_10026737:
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x08]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	PUSH 0x04
	LEA EAX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	PUSH 0x04
	LEA EAX,DWORD PTR [EBX+0x10]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x14]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x15]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x17]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_10026798
	ADD EBX, 0x54
	CMP EBX, offset LEGO1_data + 0x14C14
	JB loc_10026737
	XOR EDI, EDI
loc_10026798:
	MOV EAX, EDI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100267B0(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	MOV DWORD PTR [ESP+var_8+0x10],0xFFFFFFFF
	PUSH EDI
	PUSH EBP
	MOV EDI, offset LEGO1_data + 0x13180
	MOV EBP,DWORD PTR [ESP+arg1+0x18]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ESI,DWORD PTR [EAX+0x04]
loc_100267D4:
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x08]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	PUSH 0x04
	LEA EAX,DWORD PTR [EDI+0x0C]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	PUSH 0x04
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x14]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x15]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x16]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002684C
	MOV AL,BYTE PTR [EDI+0x16]
	PUSH EBX
	MOV BYTE PTR [EDI+0x17],AL
	MOV ECX,DWORD PTR [ESP+var_8+0x20]
	ADD EDI, 0x54
	CALL_LONG(offset [LEGO1_text.m25860_sub_10026860])
	INC EBX
	CMP EDI, offset LEGO1_data + 0x14C14
	JB loc_100267D4
	MOV DWORD PTR [ESP+var_10+0x20],0x00000000
loc_1002684C:
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026860(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	PUSH EBX
	LEA ECX,DWORD PTR [EAX*4+EAX]
	LEA ECX,DWORD PTR [ECX*4+EAX]
	SHL ECX, 0x02
	MOV AL,BYTE PTR [offset LEGO1_data + 0x13196+ECX]
	MOV BL,BYTE PTR [offset LEGO1_data + 0x13188+ECX]
	TEST AL, AL
	JL loc_100268B4
	XOR EDX, EDX
	MOV DL, BL
	XOR EBX, EBX
	MOVSX EAX,AL
	MOV BL,BYTE PTR [offset LEGO1_data + 0x16C0+EDX]
	SUB EBX, EAX
	MOV DWORD PTR [ESP+var_4+0x8],EBX
	FILD DWORD PTR [ESP+var_4+0x8]
	POP EBX
	ADD ESP, 0x04
	FMUL DWORD PTR [offset LEGO1_data.m16B0+EDX*4]
	FSUBR DWORD PTR [offset LEGO1_data + 0x16FC+ECX]
	FSTP DWORD PTR [offset LEGO1_data + 0x131B4+ECX]
	RETN 0x0004
loc_100268B4:
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x16FC+ECX]
	POP EBX
	ADD ESP, 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x131B4+ECX],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100268D0()
{
__asm{
	MOV EAX, 0x00000051
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100268E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR EDX, EDX
	MOV EAX, offset LEGO1_data + 0x13180
	MOV ECX,DWORD PTR [ESP+arg1]
loc_100268EB:
	CMP DWORD PTR [EAX],ECX
	JZ loc_100268FA
	ADD EAX, 0x54
	INC EDX
	CMP EAX, offset LEGO1_data + 0x14C14
	JB loc_100268EB
loc_100268FA:
	CMP EDX, 0x51
	JNB loc_1002690F
	LEA EAX,DWORD PTR [EDX*4+EDX]
	LEA ECX,DWORD PTR [EAX*4+EDX]
	LEA EAX,DWORD PTR [offset LEGO1_data + 0x13180+ECX*4]
	RETN 0x0004
loc_1002690F:
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026920(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JNZ loc_10026937
	XOR AL, AL
	POP EDI
	POP ESI
	RETN 0x0004
loc_10026937:
	MOV ESI,DWORD PTR [ESI+0x54]
	MOV CL,BYTE PTR [EAX+0x15]
	INC CL
	MOV BYTE PTR [EAX+0x15],CL
	CMP CL, 0x04
	JBE loc_1002694B
	MOV BYTE PTR [EAX+0x15],0x00
loc_1002694B:
	XOR ECX, ECX
	XOR EDX, EDX
	MOV CL,BYTE PTR [EAX+0x08]
	MOV DL,BYTE PTR [EAX+0x15]
	LEA ECX,DWORD PTR [ECX*4+ECX]
	ADD ECX, EDX
	LEA EAX,DWORD PTR [offset LEGO1_data.m1660_ptr+ECX*4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	CMP DWORD PTR [ESI+0x000000E0],0x00
	MOV EDI, EAX
	JL loc_10026990
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EDX+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
loc_10026990:
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_100269A5
	DEC DWORD PTR [ECX+0x10]
	JNZ loc_100269A5
	PUSH ECX
	MOV ECX,DWORD PTR [ECX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100269A5:
	MOV DWORD PTR [ESI+0x08],EDI
	TEST EDI, EDI
	JZ loc_100269AF
	INC DWORD PTR [EDI+0x10]
loc_100269AF:
	MOV EAX,DWORD PTR [EDI+0x10]
	DEC EAX
	MOV DWORD PTR [EDI+0x10],EAX
	JNZ loc_100269C1
	PUSH EDI
	MOV ECX,DWORD PTR [EDI+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100269C1:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84870_sub_10085870])
	MOV AL, 0x01
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100269E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ FAR loc_10026ABA
	CMP BYTE PTR [ESI+0x16],0xFF
	JNZ FAR loc_10026ABA
	MOV EDI,DWORD PTR [EDI+0x54]
	MOV AL,BYTE PTR [ESI+0x08]
	INC AL
	MOV BYTE PTR [ESI+0x08],AL
	CMP AL, 0x03
	JBE loc_10026A14
	MOV BYTE PTR [ESI+0x08],0x00
loc_10026A14:
	XOR ECX, ECX
	XOR EAX, EAX
	MOV CL,BYTE PTR [ESI+0x08]
	MOV AL,BYTE PTR [ESI+0x15]
	LEA ECX,DWORD PTR [ECX*4+ECX]
	ADD ECX, EAX
	LEA EDX,DWORD PTR [offset LEGO1_data.m1660_ptr+ECX*4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	CMP DWORD PTR [EDI+0x000000E0],0x00
	MOV EBX, EAX
	JL loc_10026A59
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EDI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EDX+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
loc_10026A59:
	MOV EAX,DWORD PTR [EDI+0x08]
	TEST EAX, EAX
	JZ loc_10026A6E
	DEC DWORD PTR [EAX+0x10]
	JNZ loc_10026A6E
	PUSH EAX
	MOV ECX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_10026A6E:
	MOV DWORD PTR [EDI+0x08],EBX
	TEST EBX, EBX
	JZ loc_10026A78
	INC DWORD PTR [EBX+0x10]
loc_10026A78:
	MOV EAX,DWORD PTR [EBX+0x10]
	DEC EAX
	MOV DWORD PTR [EBX+0x10],EAX
	JNZ loc_10026A8A
	PUSH EBX
	MOV ECX,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_10026A8A:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84870_sub_10085870])
	MOV EAX,DWORD PTR [ESI+0x10]
	TEST EAX, EAX
	JZ loc_10026AB2
	XOR ECX, ECX
	MOV CL,BYTE PTR [ESI+0x08]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x3168+ECX*4]
	CMP ECX, EAX
	JA loc_10026AB2
	DEC ECX
	MOV DWORD PTR [ESI+0x10],ECX
loc_10026AB2:
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10026ABA:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026AD0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	XOR BL, BL
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JZ loc_10026AF9
	MOV ECX,DWORD PTR [EAX+0x0C]
	INC ECX
	MOV DWORD PTR [EAX+0x0C],ECX
	CMP DWORD PTR [offset LEGO1_data + 0x315C],ECX
	JA loc_10026AF7
	MOV DWORD PTR [EAX+0x0C],0x00000000
loc_10026AF7:
	MOV BL, 0x01
loc_10026AF9:
	MOV AL, BL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026B00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	XOR BL, BL
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JZ loc_10026B2F
	MOV ECX,DWORD PTR [EAX+0x10]
	XOR EDX, EDX
	INC ECX
	MOV DWORD PTR [EAX+0x10],ECX
	MOV DL,BYTE PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3168+EDX*4],ECX
	JA loc_10026B2D
	MOV DWORD PTR [EAX+0x10],0x00000000
loc_10026B2D:
	MOV BL, 0x01
loc_10026B2F:
	MOV AL, BL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026B40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	XOR BL, BL
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JZ loc_10026B63
	MOV CL,BYTE PTR [EAX+0x14]
	INC CL
	MOV BYTE PTR [EAX+0x14],CL
	CMP CL, 0x03
	JBE loc_10026B61
	MOV BYTE PTR [EAX+0x14],BL
loc_10026B61:
	MOV BL, 0x01
loc_10026B63:
	MOV AL, BL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026B70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JZ loc_10026B92
	XOR ECX, ECX
	MOV CL,BYTE PTR [EAX+0x08]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x3178+ECX*4]
	ADD ECX,DWORD PTR [EAX+0x10]
	MOV EAX, ECX
	RETN 0x0004
loc_10026B92:
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026BA0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	CMP BYTE PTR [ESP+arg2],0x00
	JZ loc_10026BC4
	MOV CL,BYTE PTR [EAX+0x14]
	XOR EAX, EAX
	AND CL, 0x01
	MOV AL, CL
	ADD EAX,DWORD PTR [offset LEGO1_data + 0x3164]
	RETN 0x0008
loc_10026BC4:
	TEST EAX, EAX
	JZ loc_10026BD4
	MOV EAX,DWORD PTR [EAX+0x0C]
	ADD EAX,DWORD PTR [offset LEGO1_data + 0x3160]
	RETN 0x0008
loc_10026BD4:
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10026BE0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x3188]
	PUSH EDI
	TEST EAX, EAX
	JZ loc_10026BF4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10026BF4:
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	TEST ESI, ESI
	JZ loc_10026C41
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [offset LEGO1_data + 0x3188], EAX
	ADD ESP, 0x04
	MOV EDX, EAX
	TEST EDX, EDX
	JZ loc_10026C4B
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EDX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	RET
loc_10026C41:
	MOV DWORD PTR [offset LEGO1_data + 0x3188],0x00000000
loc_10026C4B:
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026C50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JNZ loc_10026C67
	XOR AL, AL
	POP ESI
	RETN 0x0004
loc_10026C67:
	SUB EAX, offset LEGO1_data + 0x13180
	MOV ECX, 0x00000054
	CDQ
	IDIV ECX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m25C80_sub_10026C80])
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026C80(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x18
	CMP EAX, 0x51
	PUSH EBX
	PUSH ESI
	PUSH EDI
	JB loc_10026C9A
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0004
loc_10026C9A:
	LEA EDX,DWORD PTR [EAX*4+EAX]
	LEA EAX,DWORD PTR [EDX*4+EAX]
	LEA ESI,DWORD PTR [offset LEGO1_data + 0x13180+EAX*4]
	TEST ESI, ESI
	JNZ loc_10026CB6
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0004
loc_10026CB6:
	CMP BYTE PTR [ESI+0x16],0x00
	MOV BL, 0x01
	JGE loc_10026CCC
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x08]
	MOV AL,BYTE PTR [offset LEGO1_data + 0x16C0+EAX]
	MOV BYTE PTR [ESI+0x16],AL
loc_10026CCC:
	MOV AL,BYTE PTR [ESI+0x16]
	TEST AL, AL
	JG loc_10026CE0
	XOR BL, BL
	POP EDI
	MOV AL, BL
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0004
loc_10026CE0:
	MOV EDX,DWORD PTR [ESI]
	DEC AL
	CMP AL, 0x01
	MOV EDX,DWORD PTR [EDX+0x54]
	MOV BYTE PTR [ESI+0x16],AL
	JNZ loc_10026CF2
	MOV BYTE PTR [ESI+0x16],0x00
loc_10026CF2:
	CMP BYTE PTR [ESI+0x16],0x00
	JNZ loc_10026D07
	MOV AL, BL
	POP EDI
	MOV BYTE PTR [EDX+0x0C],0x00
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0004
loc_10026D07:
	MOV EAX, ESI
	MOV EDI, 0x00000054
	SUB EAX, offset LEGO1_data + 0x13180
	CDQ
	IDIV EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m25860_sub_10026860])
	LEA ECX,DWORD PTR [ESI+0x48]
	LEA EAX,DWORD PTR [ESI+0x3C]
	LEA EDX,DWORD PTR [ESI+0x30]
	MOV DWORD PTR [ESP+var_14+0x24],ECX
	MOV ECX, offset [LEGO1_rdata.m518_ptr]
	PUSH 0x00
	MOV DWORD PTR [ESP+var_18+0x28],ECX
	MOV DWORD PTR [ESP+var_C+0x28],EAX
	LEA EAX,DWORD PTR [ESP+var_10+0x28]
	MOV DWORD PTR [ESP+var_10+0x28],ECX
	MOV DWORD PTR [ESP+var_4+0x28],EDX
	MOV DWORD PTR [ESP+var_8+0x28],ECX
	LEA ECX,DWORD PTR [ESP+var_18+0x28]
	LEA EDX,DWORD PTR [ESP+var_8+0x28]
	PUSH ECX
	PUSH EAX
	PUSH EDX
	MOV ECX,DWORD PTR [ESI]
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
	MOV AL, BL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10026D70(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	CMP BYTE PTR [ESI+0x24],0x00
	MOV DWORD PTR [ESI+0x28],EAX
	JNZ loc_10026D92
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x32
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
loc_10026D92:
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOVSX ECX,BYTE PTR [ESI+0x24]
	ADD ESP, 0x04
	MOV DWORD PTR [ECX*4+ESI+0x10],EAX
	MOV CL,BYTE PTR [ESI+0x24]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOVSX EAX,CL
	INC CL
	MOV EBX,DWORD PTR [EAX*4+ESI+0x10]
	MOV BYTE PTR [ESI+0x24],CL
	MOV DWORD PTR [EBX],EDI
	MOV EAX,DWORD PTR [EDI+0x54]
	MOV DWORD PTR [EBX+0x04],EAX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_10026DD2
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_10026DDB
loc_10026DD2:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
loc_10026DDB:
	ADD ECX,DWORD PTR [ESP+r+0x14]
	PUSH -0x01
	ADD ECX, 0x000003E8
	PUSH EDI
	MOV DWORD PTR [EBX+0x08],ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m261B0_sub_100271B0])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10027120()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x1C
	MOV DWORD PTR [ESP+var_1C+0x1C],ECX
	PUSH EBX
	PUSH ESI
	MOV EBX, 0xFFFFFFFF
	PUSH EDI
	XOR ESI, ESI
	PUSH EBP
	MOV EDI, offset LEGO1_data + 0x13180
	MOV EBP, offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
loc_10027141:
	MOV ECX,DWORD PTR [ESP+var_1C+0x2C]
	PUSH ESI
	MOV BYTE PTR [EDI+0x16],BL
	MOV BYTE PTR [EDI+0x17],BL
	CALL_LONG(offset [LEGO1_text.m25860_sub_10026860])
	MOV ECX,DWORD PTR [EDI]
	TEST ECX, ECX
	JZ loc_1002718E
	LEA EAX,DWORD PTR [EDI+0x48]
	LEA EDX,DWORD PTR [EDI+0x3C]
	MOV DWORD PTR [ESP+var_14+0x2C],EAX
	PUSH 0x00
	LEA EAX,DWORD PTR [EDI+0x30]
	MOV DWORD PTR [ESP+var_18+0x30],EBP
	MOV DWORD PTR [ESP+var_C+0x30],EDX
	MOV DWORD PTR [ESP+var_10+0x30],EBP
	LEA EDX,DWORD PTR [ESP+var_18+0x30]
	MOV DWORD PTR [ESP+var_4+0x30],EAX
	LEA EAX,DWORD PTR [ESP+var_10+0x30]
	PUSH EDX
	LEA EDX,DWORD PTR [ESP+var_8+0x34]
	PUSH EAX
	MOV DWORD PTR [ESP+var_8+0x38],EBP
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
loc_1002718E:
	ADD EDI, 0x54
	INC ESI
	CMP EDI, offset LEGO1_data + 0x14C14
	JB loc_10027141
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100271B0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m258E0_sub_100268E0])
	TEST EAX, EAX
	JZ loc_100271EF
	CMP BYTE PTR [EAX+0x16],0x00
	JGE loc_100271D2
	XOR ECX, ECX
	MOV CL,BYTE PTR [EAX+0x08]
	MOV CL,BYTE PTR [offset LEGO1_data + 0x16C0+ECX]
	MOV BYTE PTR [EAX+0x16],CL
loc_100271D2:
	MOV DL,BYTE PTR [EAX+0x16]
	TEST DL, DL
	JLE loc_100271EF
	MOV ECX,DWORD PTR [ESP+arg2]
	ADD DL, CL
	MOV BYTE PTR [EAX+0x16],DL
	CMP DL, 0x01
	JG loc_100271EF
	TEST ECX, ECX
	JGE loc_100271EF
	MOV BYTE PTR [EAX+0x16],0x00
loc_100271EF:
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10027200()
{
__asm{
	MOV EAX, offset LEGO1_data + 0x13197
loc_10027205:
	MOV CL,BYTE PTR [EAX-0x01]
	ADD EAX, 0x54
	CMP EAX, offset LEGO1_data + 0x14C2B
	MOV BYTE PTR [EAX-0x54],CL
	JB loc_10027205
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10027220(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m26343_proc_10027343]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, ECX
	JZ loc_10027268
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x2788
	LEA ECX,DWORD PTR [ESI+0x20]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_1C+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
loc_10027268:
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	XOR ECX, ECX
	MOV BYTE PTR [ESI+0x08],AL
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [ESI+0x10],ECX
	MOV DWORD PTR [ESI+0x14],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1510_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV WORD PTR DS:[ESI+0x18],0xFFFF
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2860_ptr]
	TEST ESI, ESI
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m2790_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX],EDX
	JZ loc_100272E2
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESI+EDX+0x04]
loc_100272E2:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_10027309()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217218-0x4A4B20],0x01
	JZ loc_1002731A
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1002731A:
	RET
	TEST BYTE PTR [EBP-0x18],0x02
	JZ loc_1002732C
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1002732C:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10027360()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	MOV DWORD PTR [ECX-0x20],offset [LEGO1_rdata.m2860_ptr]
	PUSH offset [LEGO1_text.m263E0_proc_100273E0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX-0x1C]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+ECX-0x1C],offset [LEGO1_rdata.m2790_ptr]
	MOV EAX,DWORD PTR [EDX-0x1C]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [EDX+EAX-0x20],ECX
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	CMP EDX, 0x20
	JZ loc_100273BA
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX-0x1C]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EDX+ECX-0x1C]
loc_100273BA:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m263EA_sub_100273EA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100273EA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD LEGO1_sub_10027690()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100276B0(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	LEA EAX,DWORD PTR [ESP+var_4+0xC]
	PUSH ESI
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_100276DF
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_100276DF:
	MOV EAX,DWORD PTR [ESP+var_4+0xC]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EDI],EAX
	MOV ECX,DWORD PTR [EDI]
	PUSH ESI
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	PUSH 0x01
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_10027713
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_10027713:
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x04]
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_10027736
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_10027736:
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x08]
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_10027759
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_10027759:
	LEA EAX,DWORD PTR [ESP+var_4+0xC]
	PUSH ESI
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_1002777D
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1002777D:
	MOV EAX,DWORD PTR [ESP+var_4+0xC]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV ECX,DWORD PTR [EDI+0x0C]
	PUSH ESI
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	PUSH 0x01
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_100277B3
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_100277B3:
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH 0x03
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x03
	JZ loc_100277D6
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_100277D6:
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x1C]
	PUSH 0x03
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x03
	JZ loc_100277F9
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_100277F9:
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x28]
	PUSH 0x03
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x03
	JZ loc_1002781C
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1002781C:
	PUSH ESI
	ADD EDI, 0x34
	PUSH 0x01
	PUSH 0x01
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	DEC EAX
	CMP EAX, 0x01
	MOV EAX, 0x00000000
	ADC EAX, -0x01
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10027850(DWORD arg1)
{
	enum{
		var_84 = -0x84,
		var_80 = -0x80,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000084
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8C]
	LEA EAX,DWORD PTR [ESP+var_84+0x8C]
	PUSH ESI
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_10027888
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x00000084
	RETN 0x0004
loc_10027888:
	MOV EAX,DWORD PTR [ESP+var_84+0x8C]
	PUSH ESI
	LEA ECX,DWORD PTR [ESP+var_80+0x90]
	PUSH 0x01
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_100278B2
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x00000084
	RETN 0x0004
loc_100278B2:
	LEA EAX,DWORD PTR [ESP+var_80+0x8C]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	PUSH ESI
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_100278E4
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x00000084
	RETN 0x0004
loc_100278E4:
	PUSH ESI
	ADD EDI, 0x14
	PUSH 0x01
	PUSH 0x04
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	DEC EAX
	CMP EAX, 0x01
	MOV EAX, 0x00000000
	ADC EAX, -0x01
	POP EDI
	POP ESI
	ADD ESP, 0x00000084
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10027910(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m26C1B_proc_10027C1B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	SUB ESP, 0x24
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EAX], 0x00000000
	PUSH EBX
	MOV DWORD PTR [ECX], 0x00000000
	PUSH ESI
	PUSH EDI
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH 0x01
	PUSH 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_10027963
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m26BA6_loc_10027BA6])
loc_10027963:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
	CMP DWORD PTR [EBP+var_1C+0x4],0x00
	JLE FAR loc_10027B94
	LEA ESI,DWORD PTR [EAX+0x0C]
loc_1002798C:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	PUSH 0x01
	PUSH 0x04
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JNZ_LONG(offset [LEGO1_text.m26BB7_loc_10027BB7])
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI-0x0C],EAX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI-0x0C]
	PUSH 0x01
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JNZ_LONG(offset [LEGO1_text.m26BBE_loc_10027BBE])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	PUSH 0x01
	PUSH 0x04
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JNZ_LONG(offset [LEGO1_text.m26BC5_loc_10027BC5])
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10027A61
	MOV ECX, EDI
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2888_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m26CD0_proc_10027CD0]
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m28A0_ptr]
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m28B8_ptr]
	MOV BYTE PTR [EDI+0x18],0x01
loc_10027A61:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000000
	MOV DWORD PTR [ESI-0x08],EAX
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JLE FAR loc_10027B2A
loc_10027A7C:
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_10027AA9
	MOV ECX, EDI
	MOV DWORD PTR [EBP+var_34+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	JMP loc_10027AB0
loc_10027AA9:
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
loc_10027AB0:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m26850_sub_10027850])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m26BEC_loc_10027BEC])
	MOV EBX,DWORD PTR [ESI-0x08]
	PUSH 0x0C
	MOV EDI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000006
	TEST EAX, EAX
	MOV EAX, 0x00000000
	JZ loc_10027B02
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	MOV DWORD PTR [ECX+0x04],EDI
	MOV DWORD PTR [ECX+0x08],0x00000000
loc_10027B02:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EDI, EDI
	JZ loc_10027B12
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_10027B15
loc_10027B12:
	MOV DWORD PTR [EBX+0x10],EAX
loc_10027B15:
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	INC DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [EBP+var_28+0x4]
	JL FAR loc_10027A7C
loc_10027B2A:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH 0x01
	PUSH 0x04
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JNZ_LONG(offset [LEGO1_text.m26C0D_loc_10027C0D])
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, EAX
	SHL EAX, 0x03
	XOR EDI, EDI
	SUB EAX, ECX
	SHL EAX, 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI-0x04],EAX
	CMP DWORD PTR [ESI],EDI
	JLE loc_10027B82
	XOR EBX, EBX
loc_10027B64:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [ESI-0x04]
	PUSH EAX
	ADD ECX, EBX
	CALL_LONG(offset [LEGO1_text.m266B0_sub_100276B0])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m26C14_loc_10027C14])
	ADD EBX, 0x38
	INC EDI
	CMP DWORD PTR [ESI],EDI
	JG loc_10027B64
loc_10027B82:
	ADD ESI, 0x18
	INC DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP EAX,DWORD PTR [EBP+var_1C+0x4]
	JL FAR loc_1002798C
loc_10027B94:
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EAX],EDX
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m26BA6_loc_10027BA6])
}
}

__declspec(naked) DWORD LEGO1_sub_10027CC7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10027D63()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m26C80_loc_10027C80])
}
}

__declspec(naked) DWORD LEGO1_sub_10027DC9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m26CE0_loc_10027CE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10027E3F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10027EEB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m26C80_loc_10027C80])
}
}

__declspec(naked) DWORD LEGO1_sub_10027F59()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m26F70_loc_10027F70])
}
}

__declspec(naked) DWORD LEGO1_sub_10027FB1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10028019()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10028071()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m26F70_loc_10027F70])
}
}

__declspec(naked) DWORD LEGO1_sub_10028080(DWORD arg1, DWORD arg2)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m271EB_proc_100281EB]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x20
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000000
	CMP DWORD PTR [EBP+arg2+0x4],0x00
	PUSH ESI
	PUSH EDI
	JLE FAR loc_100281AD
	ADD EAX, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
loc_100280B9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX-0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [ECX]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m28D0_ptr]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m28E8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
loc_10028102:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_10028110
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10028116
loc_10028110:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10028116:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_10028150
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	JZ loc_10028150
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JZ loc_10028102
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m271D3_sub_100281D3])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_10028102
loc_10028150:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	TEST ECX, ECX
	JZ loc_1002815F
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1002815F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	XOR EDI, EDI
	MOV ESI,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],EDI
	JLE loc_1002817F
loc_1002816C:
	MOV ECX, ESI
	INC EDI
	ADD ESI, 0x38
	CALL_LONG(offset [LEGO1_text.m26690_sub_10027690])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],EDI
	JG loc_1002816C
loc_1002817F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m271F5_sub_100281F5])
	ADD DWORD PTR [EBP+var_14+0x4],0x18
	INC DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	CMP EAX,DWORD PTR [EBP+arg2+0x4]
	JL FAR loc_100280B9
loc_100281AD:
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV DWORD PTR [ECX], 0x00000000
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100281D3()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100281F5()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m27030_loc_10028030])
}
}

__declspec(naked) DWORD LEGO1_sub_10028200()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27255_proc_10028255]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2918_ptr]
	MOV DWORD PTR [ESI+0x0000013C],0x42200000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10028420()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27479_proc_10028479]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2918_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m193F0_sub_1001A3F0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m27483_sub_10028483])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10028483()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_10028520()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27677_proc_10028677]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m16E8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI+0x1C],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m16E0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m2AA0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	LEA ECX,DWORD PTR [ESI+0x48]
	MOV DWORD PTR [ESI+0x3C],EBX
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m2A98_ptr]
	MOV DWORD PTR [ESI+0x38],0xFFFFFFFF
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [ESI+0x48],offset [LEGO1_rdata.m2A20_ptr]
	MOV DWORD PTR [ESI+0x54],offset [LEGO1_text.m278B0_proc_100288B0]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [ESI+0x50],EBX
	MOV DWORD PTR [ESI+0x5C],EBX
	MOV DWORD PTR [ESI+0x48],offset [LEGO1_rdata.m2A38_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [ESI+0x48],offset [LEGO1_rdata.m2A50_ptr]
	MOV DWORD PTR [ESI+0x54],offset [LEGO1_text.m278B0_proc_100288B0]
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV DWORD PTR [ESI+0x48],offset [LEGO1_rdata.m2A68_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	MOV DWORD PTR [ESI+0x58],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2A80_ptr]
	MOV DWORD PTR [ESI+0x44],EBX
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],EBX
	MOV BYTE PTR [ESI+0x10],BL
	MOV DWORD PTR [ESI+0x14],EBX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x0A
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100287C9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028821()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100288A7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10028943()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m27860_loc_10028860])
}
}

__declspec(naked) DWORD LEGO1_sub_100289A9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m279C0_loc_100289C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028A01()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m278C0_loc_100288C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028A6F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10028B1B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m27860_loc_10028860])
}
}

__declspec(naked) DWORD LEGO1_sub_10028B89()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m278C0_loc_100288C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028BE1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m279C0_loc_100289C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028C49()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028CA1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028D60()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27DDC_proc_10028DDC]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2A80_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m27DC6_sub_10028DC6])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m27DD1_sub_10028DD1])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m27DE6_sub_10028DE6])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10028DC6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x48
	JMP_LONG(offset [LEGO1_text.m27BA0_loc_10028BA0])
}
}

__declspec(naked) DWORD LEGO1_sub_10028DD1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x18
	JMP_LONG(offset [LEGO1_text.m27C60_loc_10028C60])
}
}

__declspec(naked) DWORD LEGO1_sub_10028DE6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10028DF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x44],EAX
	MOV DWORD PTR [offset LEGO1_data + 0x31B0],0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],0x00000000
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10028E10(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27E88_proc_10028E88]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ECX+0x5C]
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	XOR ECX, ECX
	MOV EAX, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	TEST EDI, EDI
	JZ loc_10028E5D
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV DWORD PTR [EDI+0x08],ECX
loc_10028E5D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EBX, EBX
	JZ loc_10028E83
	MOV DWORD PTR [EBX+0x08],EAX
loc_10028E6B:
	POP EDI
	MOV DWORD PTR [ESI+0x5C],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [ESI+0x50]
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_10028E83:
	MOV DWORD PTR [ESI+0x58],EAX
	JMP loc_10028E6B
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10028EA0(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m27FB6_proc_10028FB6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EBX, EBX
	ADD ESI, 0x48
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AC0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AD8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AA8_ptr]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_10028F37
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
loc_10028F15:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10028F37
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_10028F15
loc_10028F37:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10028F80
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_10028F56
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_10028F5B
loc_10028F56:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_10028F5B:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10028F68
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_10028F6D
loc_10028F68:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_10028F6D:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_10028F80:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m27FC0_sub_10028FC0])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10028FC0()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10029029()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m28040_loc_10029040])
}
}

__declspec(naked) DWORD LEGO1_sub_10029081()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m28170_loc_10029170])
}
}

__declspec(naked) DWORD LEGO1_sub_100290E9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10029159()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m28170_loc_10029170])
}
}

__declspec(naked) DWORD LEGO1_sub_100291B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10029201()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m28040_loc_10029040])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10029210(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x44]
	TEST EAX, EAX
	JZ FAR loc_100292C6
	CMP DWORD PTR [EAX+0x08],0x00
	JZ FAR loc_100292C6
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x14],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP EAX, 0x08
	JZ loc_10029241
	CMP EAX, 0x09
	JNZ FAR loc_100292C1
loc_10029241:
	MOV DWORD PTR [ECX+0x1C],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x20],EAX
	MOV AL,BYTE PTR [EDX+0x0C]
	MOV BYTE PTR [ECX+0x24],AL
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ECX+0x28],EAX
	MOV EAX,DWORD PTR [EDX+0x14]
	MOV DWORD PTR [ECX+0x2C],EAX
	MOV AL,BYTE PTR [EDX+0x18]
	MOV BYTE PTR [ECX+0x30],AL
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP EAX, 0x08
	JNZ loc_100292A5
	CMP BYTE PTR [ECX+0x10],0x01
	JNZ loc_10029279
	MOV BYTE PTR [ECX+0x10],0x00
	MOV AL, 0x01
	RETN 0x0008
loc_10029279:
	CMP DWORD PTR [offset LEGO1_data + 0x31B0],-0x01
	JZ loc_100292C1
	CMP DWORD PTR [offset LEGO1_data + 0x31B4],0x00
	JZ loc_100292C1
	CMP DWORD PTR [ECX+0x08],0x02
	JNZ loc_10029299
	CALL_LONG(offset [LEGO1_text.m28750_sub_10029750])
	RETN 0x0008
loc_10029299:
	MOV DWORD PTR [ECX+0x0C],0x00000001
	MOV AL, 0x01
	RETN 0x0008
loc_100292A5:
	CMP EAX, 0x09
	JNZ loc_100292C1
	CMP DWORD PTR [ECX+0x0C],0x01
	JNZ loc_100292B9
	MOV BYTE PTR [ECX+0x10],0x01
	MOV AL, 0x01
	RETN 0x0008
loc_100292B9:
	CALL_LONG(offset [LEGO1_text.m28630_sub_10029630])
	RETN 0x0008
loc_100292C1:
	XOR AL, AL
	RETN 0x0008
loc_100292C6:
	MOV DWORD PTR [offset LEGO1_data + 0x31B0],0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],0x00000000
	XOR AL, AL
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100292E0()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m283A9_proc_100293A9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x48]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AC0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AD8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2AA8_ptr]
	MOV EAX, 0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1002934D:
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_10029376
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_10029376
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [ESI+0x18]
	PUSH EAX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	JMP loc_1002934D
loc_10029376:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m283B3_sub_100293B3])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100293B3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m281C0_loc_100291C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100293C0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m284CC_proc_100294CC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x44]
	XOR EDI, EDI
	TEST ESI, ESI
	JZ FAR loc_100294A2
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV BX,WORD PTR SS:[EBP+arg3+0x4]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_10029432:
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JNZ loc_1002943F
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10029445
loc_1002943F:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10029445:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JZ loc_10029496
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_10029496
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ESI
	JNZ loc_10029432
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	CMP DWORD PTR [EAX+0x20],ECX
	JNZ loc_10029432
	PUSH EBX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP WORD PTR DS:[ECX+0x4E],DI
	JNZ loc_10029432
	MOV DWORD PTR [offset LEGO1_data + 0x31B0],0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],0x00000000
loc_10029496:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m284D6_sub_100294D6])
loc_100294A2:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100294D6()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100294E0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m285E9_proc_100295E9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x44]
	XOR EBX, EBX
	TEST ESI, ESI
	JZ FAR loc_100295BC
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ESI,DWORD PTR [EAX]
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH EDI
	CALL_LONG(DWORD PTR [ESI+0x38])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100295B0
loc_10029565:
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JNZ loc_10029572
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10029578
loc_10029572:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10029578:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_100295B0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_100295B0
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m43270_sub_10044270])
	TEST AL, AL
	JZ loc_10029565
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m285F3_sub_100295F3])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	JMP loc_100295BE
loc_100295B0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m285F3_sub_100295F3])
loc_100295BC:
	XOR EAX, EAX
loc_100295BE:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100295F3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10029630()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m28737_proc_10029737]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EBX, EBX
	MOV EDI,DWORD PTR [ESI+0x44]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_10029695:
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JNZ loc_100296A2
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100296A8
loc_100296A2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100296A8:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_1002970F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1002970F
	MOV EAX,DWORD PTR [ESI+0x14]
	LEA ECX,DWORD PTR [ESI+0x18]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m43480_sub_10044480])
	TEST AL, AL
	JZ loc_10029695
	MOV EAX,DWORD PTR [ESI+0x38]
	MOV DWORD PTR [offset LEGO1_data + 0x31B0], EAX
	MOV ECX,DWORD PTR [ESI+0x3C]
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m282E0_sub_100292E0])
	MOV DWORD PTR [ESI+0x08],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m28741_sub_10029741])
	MOV AL, 0x01
loc_100296FE:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_1002970F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m28741_sub_10029741])
	XOR AL, AL
	JMP loc_100296FE
}
}

__declspec(naked) DWORD LEGO1_sub_10029741()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10029750()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2887F_proc_1002987F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x44]
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_100297B4:
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	JNZ loc_100297C1
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_100297C7
loc_100297C1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_100297C7:
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_10029847
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],EDX
	JZ loc_10029847
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV EDX,DWORD PTR [EAX+0x1C]
	TEST EDX, EDX
	JZ loc_100297B4
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x31B0]
	CMP DWORD PTR [EDX+0x1C],EAX
	JNZ loc_100297B4
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x31B4]
	CMP DWORD PTR [EDX+0x20],EAX
	JNZ loc_100297B4
	MOV EAX,DWORD PTR [ESI+0x14]
	LEA ECX,DWORD PTR [ESI+0x18]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m43480_sub_10044480])
	TEST AL, AL
	JZ loc_10029815
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m282E0_sub_100292E0])
loc_10029815:
	MOV EAX, 0xFFFFFFFF
	XOR ECX, ECX
	MOV DWORD PTR [offset LEGO1_data + 0x31B0], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],ECX
	MOV DWORD PTR [ESI+0x08],ECX
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m28889_sub_10029889])
	MOV AL, 0x01
loc_10029837:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
loc_10029847:
	MOV DWORD PTR [offset LEGO1_data + 0x31B4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x31B0], EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m28889_sub_10029889])
	XOR AL, AL
	JMP loc_10029837
}
}

__declspec(naked) DWORD LEGO1_sub_10029889()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100298A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m288F2_proc_100298F2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD740_sub_100AE740])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2B10_ptr]
	CALL_LONG(offset [LEGO1_text.m289A0_sub_100299A0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10029940()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2898B_proc_1002998B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2B10_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m289B0_sub_100299B0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m28995_sub_10029995])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10029995()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD7D0_loc_100AE7D0])
}
}

__declspec(naked) DWORD LEGO1_sub_100299A0()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x40],EAX
	MOV DWORD PTR [ECX+0x3C],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100299B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x40]
	MOV EDI, ECX
	TEST ESI, ESI
	JZ loc_100299CB
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BF20_sub_1003CF20])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100299CB:
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m289A0_sub_100299A0])
	CMP BYTE PTR [ESP+arg1+0x8],0x00
	JNZ loc_100299E0
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mADAB0_sub_100AEAB0])
loc_100299E0:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10029B9F()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10029D10()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029D2E
loc_10029D1D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029D2B
	MOV EDX, EAX
	JMP loc_10029D1D
loc_10029D2B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10029D2E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10029D42
loc_10029D36:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10029D36
loc_10029D42:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10029D4B
	MOV DWORD PTR [ECX],EDX
loc_10029D4B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10029D50(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029D7A
loc_10029D6C:
	MOV ECX,DWORD PTR [EAX]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029D9F
	MOV EAX, ECX
	JMP loc_10029D6C
loc_10029D7A:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_10029D96
loc_10029D86:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10029D86
loc_10029D96:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10029DA3
loc_10029D9F:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_10029DA3:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EDI]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029DD7
	LEA EDX,DWORD PTR [EDI+0x08]
	MOV ECX,DWORD PTR [EDX]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029DD3
loc_10029DBE:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029DCC
	MOV ECX, EAX
	JMP loc_10029DBE
loc_10029DCC:
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX+0x08]
	JMP loc_10029DE1
loc_10029DD3:
	MOV ECX, EBX
	JMP loc_10029DE1
loc_10029DD7:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EDX+0x08]
	ADD EDX, 0x08
loc_10029DE1:
	CMP DWORD PTR [ESP+var_4+0x14],EDI
	JNZ FAR loc_10029E7A
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10029E0B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10029E0B
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10029E0D
loc_10029E0B:
	MOV DWORD PTR [EAX],ECX
loc_10029E0D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10029E3E
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x31CC]
	CMP DWORD PTR [EDX],EAX
	JZ loc_10029E35
	MOV EAX, ECX
loc_10029E23:
	MOV EDX,DWORD PTR [EAX]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029E31
	MOV EAX, EDX
	JMP loc_10029E23
loc_10029E31:
	MOV DWORD PTR [EBX],EAX
	JMP loc_10029E3E
loc_10029E35:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EDX
loc_10029E3E:
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDX, 0x08
	CMP DWORD PTR [EDX],EAX
	JNZ FAR loc_10029EDA
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x31CC]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10029E6F
	MOV EAX, ECX
loc_10029E5C:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029E6B
	MOV EAX, EBX
	JMP loc_10029E5C
loc_10029E6B:
	MOV DWORD PTR [EDX],EAX
	JMP loc_10029EDA
loc_10029E6F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX],EBX
	JMP loc_10029EDA
loc_10029E7A:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],EDI
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI],EBX
	CMP DWORD PTR [EDX],EDI
	JNZ loc_10029E8E
	MOV DWORD PTR [ECX+0x04],EDI
	JMP loc_10029EA3
loc_10029E8E:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EAX],ECX
	MOV EBX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV EBX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX+0x04],EDI
loc_10029EA3:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10029EBD
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10029EBD
	MOV DWORD PTR [EAX+0x08],EDI
	JMP loc_10029EBF
loc_10029EBD:
	MOV DWORD PTR [EAX],EDI
loc_10029EBF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x14
	MOV DWORD PTR [EDI+0x04],EDX
	MOV EBP,DWORD PTR [EDI+0x14]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EBP
loc_10029EDA:
	CMP DWORD PTR [EDI+0x14],0x01
	JNZ FAR loc_1002A179
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1002A172
loc_10029EF0:
	CMP DWORD PTR [ECX+0x14],0x01
	JNZ FAR loc_1002A172
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_10029F78
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDX+0x14],0x00
	JNZ loc_10029F5D
	MOV DWORD PTR [EDX+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029F35
	MOV DWORD PTR [EAX+0x04],EBP
loc_10029F35:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_10029F51
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EAX],EBP
	JZ loc_10029F51
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10029F53
loc_10029F51:
	MOV DWORD PTR [EAX],EDX
loc_10029F53:
	MOV DWORD PTR [EDX],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDX
	MOV EAX,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_10029F5D:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1002A003
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1002A003
	JMP loc_10029FE9
loc_10029F78:
	CMP DWORD PTR [EDX+0x14],0x00
	JNZ loc_10029FD0
	MOV DWORD PTR [EDX+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_10029FA7
	MOV DWORD PTR [EAX+0x04],EBP
loc_10029FA7:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_10029FC4
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JZ loc_10029FC4
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_10029FC4:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDX
	MOV EAX,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EAX]
loc_10029FD0:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1002A0C4
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_1002A0C4
loc_10029FE9:
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV ECX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10029EF0
	JMP FAR loc_1002A172
loc_1002A003:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_1002A05F
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EBX,DWORD PTR [EDX]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDX],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1002A031
	MOV DWORD PTR [EAX+0x04],EDX
loc_1002A031:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A051
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDX
	JNZ loc_1002A051
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1002A053
loc_1002A051:
	MOV DWORD PTR [EAX],EBX
loc_1002A053:
	MOV DWORD PTR [EBX+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_1002A05F:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDX+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDX+0x14],EBX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1002A091
	MOV DWORD PTR [EAX+0x04],EDX
loc_1002A091:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A0BB
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A0B2
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDX
	JMP FAR loc_1002A16F
loc_1002A0B2:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDX
	JMP FAR loc_1002A16F
loc_1002A0BB:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDX
	JMP FAR loc_1002A16F
loc_1002A0C4:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_1002A11A
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EBX,DWORD PTR [EDX+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDX+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1002A0F2
	MOV DWORD PTR [EAX+0x04],EDX
loc_1002A0F2:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A10E
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A10E
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1002A110
loc_1002A10E:
	MOV DWORD PTR [EAX],EBX
loc_1002A110:
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX]
loc_1002A11A:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDX+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EDX+0x14],EBX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1002A14B
	MOV DWORD PTR [EAX+0x04],EDX
loc_1002A14B:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A16A
	MOV EBP,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1002A16A
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1002A16C
loc_1002A16A:
	MOV DWORD PTR [EAX],EBX
loc_1002A16C:
	MOV DWORD PTR [EBX+0x08],EDX
loc_1002A16F:
	MOV DWORD PTR [EDX+0x04],EBX
loc_1002A172:
	MOV DWORD PTR [ECX+0x14],0x00000001
loc_1002A179:
	CMP DWORD PTR [EDI+0x0C],0x00
	JNZ loc_1002A18F
	MOV EAX,DWORD PTR [EDI+0x10]
	TEST EAX, EAX
	JZ loc_1002A18F
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002A18F:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002A1B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBP
	MOV EDI, EBX
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1002A1FB
	XOR EBP, EBP
loc_1002A1C6:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m291B0_sub_1002A1B0])
	MOV EDI,DWORD PTR [EDI]
	CMP DWORD PTR [EBX+0x0C],EBP
	JNZ loc_1002A1E8
	MOV EAX,DWORD PTR [EBX+0x10]
	TEST EAX, EAX
	JZ loc_1002A1E8
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002A1E8:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EBX, EDI
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x31CC]
	JNZ loc_1002A1C6
loc_1002A1FB:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002A2E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m28C30_loc_10029C30])
}
}

__declspec(naked) DWORD LEGO1_sub_1002A331()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m292A0_loc_1002A2A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002A381()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m29210_loc_1002A210])
}
}

__declspec(naked) DWORD LEGO1_sub_1002A3FE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002A410(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217237 = 0x4A4B54,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX+0x3C]
	TEST ECX, ECX
	JZ FAR loc_1002A4AB
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	TEST ESI, ESI
	JZ loc_1002A43C
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x08]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x04]
	PUSH EDX
	MOV EBX,DWORD PTR [ESI]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x38])
loc_1002A43C:
	MOV EBX,DWORD PTR [ESP+var_C+0x24]
	TEST EBX, EBX
	JZ loc_1002A470
	CMP DWORD PTR [ESP+var_8+0x24],0x00
	JZ loc_1002A470
	MOV EAX,DWORD PTR [ESP+var_8+0x24]
	MOV ECX,DWORD PTR [EDI+0x3C]
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV EBP,DWORD PTR [EAX+0x04]
	PUSH EDX
	PUSH EBP
	MOV EDX,DWORD PTR [EAX]
	MOV EBP,DWORD PTR [EBX+0x08]
	PUSH EDX
	MOV EAX,DWORD PTR [EBX+0x04]
	PUSH EBP
	MOV EDX,DWORD PTR [EBX]
	PUSH EAX
	MOV EBP,DWORD PTR [ECX]
	PUSH EDX
	PUSH ECX
	CALL_LONG(DWORD PTR [EBP+arg1217237-0x4A4B20])
loc_1002A470:
	MOV EBP,DWORD PTR [ESP+var_4+0x24]
	TEST EBP, EBP
	JZ loc_1002A48F
	MOV ECX,DWORD PTR [EDI+0x3C]
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x40])
loc_1002A48F:
	TEST ESI, ESI
	JNZ loc_1002A4A2
	TEST EBX, EBX
	JZ loc_1002A49E
	CMP DWORD PTR [ESP+var_8+0x24],0x00
	JNZ loc_1002A4A2
loc_1002A49E:
	TEST EBP, EBP
	JZ loc_1002A4AB
loc_1002A4A2:
	MOV EAX,DWORD PTR [EDI+0x3C]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x44])
loc_1002A4AB:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002A500(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m29670_proc_1002A670]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	CMP DWORD PTR [EBP+arg1+0x4],EBX
	JZ FAR loc_1002A5C1
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x2BF0
	MOV DWORD PTR [ESI+0x000001C4],offset LEGO1_rdata + 0x2BE8
	LEA ECX,DWORD PTR [ESI+0x6C]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV BYTE PTR [ESI+0x000001C8],AL
	MOV DWORD PTR [ESI+0x000001CC],EBX
	MOV DWORD PTR [ESI+0x000001D0],EBX
	MOV DWORD PTR [ESI+0x000001D4],EBX
	OR DWORD PTR [EBP+var_1C+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EAX,DWORD PTR [ESI+0x000001C4]
	MOV DWORD PTR [ESI+0x000001C0],offset [LEGO1_rdata.m1510_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+ECX+0x000001C4],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x000001C4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX,DWORD PTR [EAX+0x04]
	OR DWORD PTR [EBP+var_1C+0x4],0x02
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX+0x000001C0],ECX
	MOV WORD PTR DS:[ESI+0x000001D8],0xFFFF
loc_1002A5C1:
	LEA EAX,DWORD PTR [ESI+0x20]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2CDC_ptr]
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x18],offset [LEGO1_rdata.m300_ptr]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m2C10_ptr]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESI+EAX+0x04],offset [LEGO1_rdata.m2C00_ptr]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA EDX,DWORD PTR [EAX-0x68]
	MOV DWORD PTR [ESI+EAX],EDX
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ECX+0x04]
	XOR ECX, ECX
	MOV DWORD PTR [ESI+EAX+0x74],ECX
	MOV DWORD PTR [ESI+0x08],ECX
	MOV BYTE PTR [ESI+0x0C],CL
	MOV BYTE PTR [ESI+0x0E],CL
	MOV BYTE PTR [ESI+0x14],CL
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x60],ECX
	MOV DWORD PTR [ESI+0x64],ECX
	MOV BYTE PTR [ESI+0x15],CL
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
	TEST BYTE PTR [EBP-0x18],0x04
	JZ loc_1002A653
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x000001E0
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1002A653:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002A6B0()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX-0x68]
	MOV ESI, ECX
	MOV DWORD PTR [ECX-0x6C],offset [LEGO1_rdata.m2CDC_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX-0x68],offset [LEGO1_rdata.m2C10_ptr]
	MOV EAX,DWORD PTR [ESI-0x68]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+EDX-0x68],offset [LEGO1_rdata.m2C00_ptr]
	MOV EAX,DWORD PTR [ESI-0x68]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x68]
	MOV DWORD PTR [ESI+EAX-0x6C],ECX
	MOV EDI,DWORD PTR [ESI-0x0C]
	TEST EDI, EDI
	JZ loc_1002A6FB
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1B0A0_sub_1001C0A0])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002A6FB:
	MOV ESI,DWORD PTR [ESI-0x08]
	TEST ESI, ESI
	JZ loc_1002A712
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1B0A0_sub_1001C0A0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002A712:
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002B200(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV ECX, 0x00000000
	MOV AL,BYTE PTR [EDI]
	MOV BYTE PTR [ESI],AL
	MOV EAX,DWORD PTR [EDI+0x04]
	TEST EAX, EAX
	JZ loc_1002B221
	MOV ECX,DWORD PTR [EDI+0x08]
	SUB ECX, EAX
	SAR ECX, 0x02
loc_1002B221:
	TEST ECX, ECX
	JGE loc_1002B227
	XOR ECX, ECX
loc_1002B227:
	SHL ECX, 0x02
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX, EAX
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	CMP EAX, EBX
	JZ loc_1002B254
loc_1002B242:
	TEST EDX, EDX
	JZ loc_1002B24A
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX],ECX
loc_1002B24A:
	ADD EDX, 0x04
	ADD EAX, 0x04
	CMP EAX, EBX
	JNZ loc_1002B242
loc_1002B254:
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [ESI+0x08],EDX
	MOV DWORD PTR [ESI+0x0C],EDX
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002B270()
{
__asm{
	MOV EDX,DWORD PTR [ECX+0x04]
	TEST EDX, EDX
	JNZ loc_1002B27A
	XOR EAX, EAX
	RET
loc_1002B27A:
	MOV EAX,DWORD PTR [ECX+0x08]
	SUB EAX, EDX
	SAR EAX, 0x02
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002B370()
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x0E],0x00
	JZ FAR loc_1002B430
	XOR EDI, EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [ESI+ECX+0x0000008C]
	MOV EAX,DWORD PTR [EBX+0x68]
	ADD EBX, 0x64
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x14],ECX
	CMP ECX, EAX
	JZ loc_1002B415
loc_1002B3A1:
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	LEA EDX,DWORD PTR [ESP+var_4+0x14]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0000009C])
	TEST EAX, EAX
	JNZ loc_1002B410
	MOV EAX,DWORD PTR [ESP+var_C+0x18]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_1002B3DC
loc_1002B3C8:
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],ECX
	JZ loc_1002B3D6
	MOV EAX, ECX
	JMP loc_1002B3C8
loc_1002B3D6:
	MOV DWORD PTR [ESP+var_C+0x18],EAX
	JMP loc_1002B405
loc_1002B3DC:
	MOV EAX,DWORD PTR [ESP+var_C+0x18]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_1002B3F8
loc_1002B3E8:
	MOV DWORD PTR [ESP+var_C+0x18],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_C+0x18]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1002B3E8
loc_1002B3F8:
	MOV EAX,DWORD PTR [ESP+var_C+0x18]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1002B405
	MOV DWORD PTR [ESP+var_C+0x18],ECX
loc_1002B405:
	MOV EAX,DWORD PTR [ESP+var_C+0x18]
	CMP DWORD PTR [EBX+0x04],EAX
	JNZ loc_1002B3A1
	JMP loc_1002B415
loc_1002B410:
	MOV EDI, 0x00000001
loc_1002B415:
	TEST EDI, EDI
	JNZ loc_1002B430
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESI+0x10]
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+EDX+0x04]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x30])
	MOV BYTE PTR [ESI+0x0E],0x00
loc_1002B430:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002B720(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EAX,DWORD PTR [ESP+arg3+0x4]
	CMP EDX, ECX
	JZ loc_1002B745
loc_1002B731:
	TEST EAX, EAX
	JZ loc_1002B739
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EAX],ESI
loc_1002B739:
	ADD EAX, 0x04
	ADD ECX, 0x04
	CMP EDX, ECX
	JNZ loc_1002B731
	POP ESI
	RET
loc_1002B745:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002BEB5()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002BED7()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002BFB0()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_1002BFCE
loc_1002BFBD:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002BFCB
	MOV EDX, EAX
	JMP loc_1002BFBD
loc_1002BFCB:
	MOV DWORD PTR [ECX],EDX
	RET
loc_1002BFCE:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_1002BFE2
loc_1002BFD6:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_1002BFD6
loc_1002BFE2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_1002BFEB
	MOV DWORD PTR [ECX],EDX
loc_1002BFEB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002BFF0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C01A
loc_1002C00C:
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_1002C03F
	MOV EAX, ECX
	JMP loc_1002C00C
loc_1002C01A:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_1002C036
loc_1002C026:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1002C026
loc_1002C036:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1002C043
loc_1002C03F:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_1002C043:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EBX
	JZ loc_1002C077
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_1002C073
loc_1002C05E:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C06C
	MOV EDX, EAX
	JMP loc_1002C05E
loc_1002C06C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_1002C081
loc_1002C073:
	MOV EDX, EBX
	JMP loc_1002C081
loc_1002C077:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_1002C081:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_1002C11A
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1002C0AB
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1002C0AB
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1002C0AD
loc_1002C0AB:
	MOV DWORD PTR [EAX],EDX
loc_1002C0AD:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_1002C0DE
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	CMP DWORD PTR [EDI],EAX
	JZ loc_1002C0D5
	MOV EAX, EDX
loc_1002C0C3:
	MOV EDI,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDI
	JZ loc_1002C0D1
	MOV EAX, EDI
	JMP loc_1002C0C3
loc_1002C0D1:
	MOV DWORD PTR [EBX],EAX
	JMP loc_1002C0DE
loc_1002C0D5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_1002C0DE:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_1002C17A
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1002C10F
	MOV EBX, EDX
loc_1002C0FC:
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C10B
	MOV EBX, EAX
	JMP loc_1002C0FC
loc_1002C10B:
	MOV DWORD PTR [EDI],EBX
	JMP loc_1002C17A
loc_1002C10F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_1002C17A
loc_1002C11A:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_1002C12E
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_1002C143
loc_1002C12E:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_1002C143:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C15D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C15D
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1002C15F
loc_1002C15D:
	MOV DWORD PTR [EAX],ECX
loc_1002C15F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x10
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x10]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_1002C17A:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_1002C418
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_1002C411
loc_1002C190:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_1002C411
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_1002C218
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_1002C1FD
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C1D5
	MOV DWORD PTR [EAX+0x04],EBP
loc_1002C1D5:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_1002C1F1
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EAX],EBP
	JZ loc_1002C1F1
	MOV DWORD PTR [EAX+0x08],EDI
	JMP loc_1002C1F3
loc_1002C1F1:
	MOV DWORD PTR [EAX],EDI
loc_1002C1F3:
	MOV DWORD PTR [EDI],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1002C1FD:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1002C2A3
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1002C2A3
	JMP loc_1002C289
loc_1002C218:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_1002C270
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C247
	MOV DWORD PTR [EAX+0x04],EBP
loc_1002C247:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_1002C264
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JZ loc_1002C264
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_1002C264:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1002C270:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1002C363
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1002C363
loc_1002C289:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_1002C190
	JMP FAR loc_1002C411
loc_1002C2A3:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_1002C2FE
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C2D1
	MOV DWORD PTR [EAX+0x04],EDI
loc_1002C2D1:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C2F0
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C2F0
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1002C2F2
loc_1002C2F0:
	MOV DWORD PTR [EAX],EBX
loc_1002C2F2:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1002C2FE:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C330
	MOV DWORD PTR [EAX+0x04],EDI
loc_1002C330:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C35A
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C351
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1002C40E
loc_1002C351:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1002C40E
loc_1002C35A:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1002C40E
loc_1002C363:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_1002C3B9
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C391
	MOV DWORD PTR [EAX+0x04],EDI
loc_1002C391:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C3AD
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C3AD
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1002C3AF
loc_1002C3AD:
	MOV DWORD PTR [EAX],EBX
loc_1002C3AF:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_1002C3B9:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C3EA
	MOV DWORD PTR [EAX+0x04],EDI
loc_1002C3EA:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C409
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1002C409
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1002C40B
loc_1002C409:
	MOV DWORD PTR [EAX],EBX
loc_1002C40B:
	MOV DWORD PTR [EBX+0x08],EDI
loc_1002C40E:
	MOV DWORD PTR [EDI+0x04],EBX
loc_1002C411:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_1002C418:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C440(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	MOV EDX,DWORD PTR [ESP+arg2+0x8]
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EDI, ESI
	MOV ECX,DWORD PTR [ESI+0x04]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_1002C471
	MOV EAX,DWORD PTR [EDX]
loc_1002C45B:
	CMP DWORD PTR [ECX+0x0C],EAX
	JL loc_1002C466
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_1002C469
loc_1002C466:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_1002C469:
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_1002C45B
loc_1002C471:
	MOV DWORD PTR [ESP+var_8+0x10],EDI
	CMP ESI, EDI
	JZ loc_1002C484
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [EDI+0x0C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x10]
	JLE loc_1002C48C
loc_1002C484:
	LEA EAX,DWORD PTR [ESP+var_4+0x10]
	MOV DWORD PTR [ESP+var_4+0x10],ESI
loc_1002C48C:
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C4A0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C4C0(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_C+0xC],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+arg1+0x1C]
	LEA EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESP+var_8+0x1C],EBX
loc_1002C4E3:
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EBX
	JZ loc_1002C52F
	MOV EBP,DWORD PTR [EBX+0x10]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EAX+0x04],ESI
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x10],EBP
	MOV EDI, EAX
	CMP DWORD PTR [ESP+var_8+0x1C],EBX
	JNZ loc_1002C50A
	MOV DWORD PTR [ESP+var_8+0x1C],EDI
loc_1002C50A:
	PUSH EDI
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESP+var_C+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B5B0_sub_1002C5B0])
	MOV DWORD PTR [EDI+0x08],EAX
	LEA EAX,DWORD PTR [EDI+0x0C]
	TEST EAX, EAX
	JZ loc_1002C527
	MOV ECX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EAX],ECX
loc_1002C527:
	MOV DWORD PTR [ESI],EDI
	MOV ESI, EDI
	MOV EBX,DWORD PTR [EBX]
	JMP loc_1002C4E3
loc_1002C52F:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EDX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EDX+0x0C],ECX
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JNZ loc_1002C56E
	POP EBP
	MOV DWORD PTR [ECX],ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [EAX+0x08],EAX
	ADD ESP, 0x0C
	RETN 0x0004
loc_1002C56E:
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_1002C57C
	MOV EAX, EDX
	JMP loc_1002C56E
loc_1002C57C:
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1002C58B:
	MOV EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1002C59A
	MOV ECX, EAX
	JMP loc_1002C58B
loc_1002C59A:
	POP EBP
	MOV DWORD PTR [EDX],ECX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C5B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH EBP
	MOV EDI,DWORD PTR [ESP+arg2+0x18]
	MOV DWORD PTR [ESP+var_8+0x18],ESI
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_1002C619
loc_1002C5CF:
	MOV EBP,DWORD PTR [ESI+0x10]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EAX+0x04],EDI
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x10],EBP
	MOV EBX, EAX
	CMP ESI,DWORD PTR [ESP+var_8+0x18]
	JNZ loc_1002C5EE
	MOV DWORD PTR [ESP+var_8+0x18],EBX
loc_1002C5EE:
	PUSH EBX
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B5B0_sub_1002C5B0])
	MOV DWORD PTR [EBX+0x08],EAX
	LEA EAX,DWORD PTR [EBX+0x0C]
	TEST EAX, EAX
	JZ loc_1002C60B
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
loc_1002C60B:
	MOV DWORD PTR [EDI],EBX
	MOV EDI, EBX
	MOV ESI,DWORD PTR [ESI]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_1002C5CF
loc_1002C619:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C630(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ESI
	JZ loc_1002C663
loc_1002C643:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B630_sub_1002C630])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EBX
	JNZ loc_1002C643
loc_1002C663:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002C6B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2AEE0_loc_1002BEE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002C701()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B670_loc_1002C670])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002C780(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	PUSH EAX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mF7E0_sub_100107E0])
	MOV ESI, EAX
	TEST ESI, ESI
	JNZ loc_1002C7A5
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [EDI+0x78],EAX
	TEST EAX, EAX
	JNZ loc_1002C7A5
	MOV ESI, 0xFFFFFFFF
loc_1002C7A5:
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_loc_1002C990()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2BA13_proc_1002CA13]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2D10_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP BYTE PTR [ECX+0x2E],0x00
	JZ loc_1002C9DA
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV BYTE PTR [ECX+0x2E],0x00
loc_1002C9DA:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2BA1D_sub_1002CA1D])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002CA1D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CA70()
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_70 = -0x70,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2BB55_proc_1002CB55]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX+0x08]
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP BYTE PTR [EAX+0x2E],0x00
	JNZ FAR loc_1002CB40
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.m2C090_sub_1002D090])
	MOV DWORD PTR [EBP+var_90+0x4],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x456C]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m2BB4D_sub_1002CB4D])
	MOV DWORD PTR [EBP+var_70+0x4],0x00000001
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV CL,BYTE PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	TEST CL, CL
	MOV BYTE PTR [EDX+0x0D],CL
	JNZ loc_1002CB13
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5F0__Enable_MxBackgroundAudioManager__QAEXE_Z])
loc_1002CB13:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E2F0_sub_1007F2F0])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV BYTE PTR [ECX+0x2E],0x01
	CALL_LONG(offset [LEGO1_text.m2BB5F_sub_1002CB5F])
loc_1002CB40:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002CB4D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CB5F()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CB70()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	CMP BYTE PTR [EAX+0x2E],0x00
	JZ loc_1002CBBE
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	PUSH 0x12
	LEA ECX,DWORD PTR [EAX+0x0C]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1002CB9B
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
loc_1002CB9B:
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
	MOV AL,BYTE PTR [ESI+0x0D]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5F0__Enable_MxBackgroundAudioManager__QAEXE_Z])
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV BYTE PTR [EAX+0x2E],0x00
loc_1002CBBE:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002CBC0(DWORD arg1)
{
	enum{
		var_B0 = -0xB0,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2BCA0_proc_1002CCA0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000A0
	PUSH ESI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_B0+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EAX+0x20]
	CMP EAX, 0x12
	JZ loc_1002CC1D
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2BCAA_sub_1002CCAA])
	XOR EAX, EAX
loc_1002CC0C:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1002CC1D:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX, ESI
	CMP BYTE PTR [EAX+0x2E],0x00
	JZ loc_1002CC2F
	CALL_LONG(offset [LEGO1_text.m2BB70_sub_1002CB70])
	JMP loc_1002CC34
loc_1002CC2F:
	CALL_LONG(offset [LEGO1_text.m2BA70_sub_1002CA70])
loc_1002CC34:
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ loc_1002CC7A
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EDX,DWORD PTR [EAX]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_1C+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x04])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m2BC98_sub_1002CC98])
loc_1002CC7A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2BCAA_sub_1002CCAA])
	MOV EAX, 0x00000001
	JMP FAR loc_1002CC0C
}
}

__declspec(naked) DWORD LEGO1_sub_1002CC98()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CCAA()
{
	enum{
		arg1217181 = 0x4A4A74,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217181-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CCC0(DWORD arg1)
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_70 = -0x70,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2BD8B_proc_1002CD8B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x08]
	CMP BYTE PTR [ECX+0x2E],0x00
	JZ_LONG(offset [LEGO1_text.m2BDA0_loc_1002CDA0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EAX+0x1C]
	ADD EAX, 0x20
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2C0C0_sub_1002D0C0])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m2BDA0_loc_1002CDA0])
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x456C]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m2BD83_sub_1002CD83])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.m2C090_sub_1002D090])
	PUSH 0x04
	MOV DWORD PTR [EBP+var_90+0x4],EAX
	PUSH 0x03
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	MOV DWORD PTR [EBP+var_70+0x4],0x00000001
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E2F0_sub_1007F2F0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2BD95_sub_1002CD95])
	MOV EAX, 0x00000001
	JMP_LONG(offset [LEGO1_text.m2BDA2_loc_1002CDA2])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CD83()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002CD95()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002CDC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	CMP BYTE PTR [ECX+0x0C],AL
	JZ loc_1002CDD1
	MOV BYTE PTR [ECX+0x0C],AL
	CALL_LONG(offset [LEGO1_text.m2BDE0_sub_1002CDE0])
loc_1002CDD1:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002CDE0()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	MOV ESI, EAX
	PUSH offset [LEGO1_data.m4F8_str]
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	TEST EAX, EAX
	JNZ loc_1002CE07
	PUSH offset [LEGO1_data.m4F8_str]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
loc_1002CE07:
	MOV DWORD PTR [EDI+0x08],EAX
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002CE10()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2BF39_proc_1002CF39]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	LEA EBX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	MOV EDI, 0x00000002
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
loc_1002CE54:
	MOV ECX, EBX
	ADD EBX, 0x0C
	CALL_LONG(offset [LEGO1_text.m16C00_sub_10017C00])
	DEC EDI
	JNS loc_1002CE54
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2D28_ptr]
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1002CE7A
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_1002CE83
loc_1002CE7A:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
loc_1002CE83:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A630_sub_1008B630])
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV WORD PTR DS:[ESI+0x0C],0x0006
	MOV ECX, 0x00000003
	XOR EBX, EBX
	IDIV ECX
	MOV WORD PTR DS:[ESI+0x2C],DX
	MOV DWORD PTR [ESI+0x08],offset LEGO1_data + 0x3218
	MOV WORD PTR DS:[ESI+0x10],BX
	MOV WORD PTR DS:[ESI+0x0E],BX
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV WORD PTR DS:[ESI+0x1C],BX
	MOV ECX, 0x00000006
	MOV WORD PTR DS:[ESI+0x1A],BX
	SUB EDX, EDX
	MOV WORD PTR DS:[ESI+0x18],0x000E
	MOV DWORD PTR [ESI+0x14],offset LEGO1_data + 0x3230
	DIV ECX
	MOV WORD PTR DS:[ESI+0x10],DX
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV WORD PTR DS:[ESI+0x28],BX
	MOV ECX, 0x0000000E
	MOV WORD PTR DS:[ESI+0x26],BX
	SUB EDX, EDX
	MOV WORD PTR DS:[ESI+0x24],0x0009
	MOV DWORD PTR [ESI+0x20],offset LEGO1_data + 0x3268
	DIV ECX
	MOV WORD PTR DS:[ESI+0x1C],DX
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV ECX, 0x00000009
	SUB EDX, EDX
	DIV ECX
	MOV WORD PTR DS:[ESI+0x28],DX
	MOV EAX, ESI
	POP EDI
	MOV BYTE PTR [ESI+0x2E],BL
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002D079()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_1002D090()
{
__asm{
	MOV AX,WORD PTR DS:[ECX+0x2C]
	CMP AX, 0x0002
	JNZ loc_1002D0A2
	MOV WORD PTR DS:[ECX+0x2C],0x0000
	JMP loc_1002D0A8
loc_1002D0A2:
	INC AX
	MOV WORD PTR DS:[ECX+0x2C],AX
loc_1002D0A8:
	MOVSX EAX,WORD PTR [ECX+0x2C]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	LEA ECX,DWORD PTR [EDX*4+ECX+0x08]
	JMP_LONG(offset [LEGO1_text.m13D00_sub_10014D00])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002D0C0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x456C]
	CMP DWORD PTR [ECX],EDX
	JNZ loc_1002D0F8
	XOR BX, BX
	MOV EDI,DWORD PTR [ESP+arg2+0xC]
loc_1002D0DC:
	MOVSX EAX,BX
	PUSH EDI
	LEA EDX,DWORD PTR [EAX*2+EAX]
	LEA ECX,DWORD PTR [EDX*4+ESI+0x08]
	CALL_LONG(offset [LEGO1_text.m13DE0_sub_10014DE0])
	TEST AL, AL
	JNZ loc_1002D100
	INC BX
	CMP BX, 0x03
	JL loc_1002D0DC
loc_1002D0F8:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_1002D100:
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1002D110()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2C1EF_proc_1002D1EF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	MOV EDI, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	LEA EAX,DWORD PTR [ESI+0x1C]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI+0x0C],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1390_ptr]
	LEA ECX,DWORD PTR [ESI+0x30]
	MOV DWORD PTR [ESI+0x08],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI+0x2C],ECX
	MOV DWORD PTR [ESI+0x14],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x14],offset [LEGO1_rdata.m488_ptr]
	LEA EDX,DWORD PTR [ESI+0x44]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m858_ptr]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x40],EDX
	MOV DWORD PTR [ESI+0x28],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x28],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x3C],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x3C],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.mF5F0_sub_100105F0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2D68_ptr]
	MOV DWORD PTR [ESI+0x68],EBX
	MOV DWORD PTR [ESI+0x6C],EBX
	MOV DWORD PTR [ESI+0x70],EBX
	MOV EAX, ESI
	MOV BYTE PTR [ESI+0x10],BL
	MOV BYTE PTR [ESI+0x74],BL
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_1002D320()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2C370_proc_1002D370]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2D68_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x6C]
	TEST ECX, ECX
	JZ loc_1002D357
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
loc_1002D357:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2C37A_sub_1002D37A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002D37A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB290___1LegoEntity__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002D390(DWORD arg1)
{
	enum{
		var_13C = -0x13C,
		var_138 = -0x138,
		var_134 = -0x134,
		var_130 = -0x130,
		var_12C = -0x12C,
		var_128 = -0x128,
		var_124 = -0x124,
		var_120 = -0x120,
		var_11C = -0x11C,
		var_118 = -0x118,
		var_114 = -0x114,
		var_110 = -0x110,
		var_10C = -0x10C,
		var_108 = -0x108,
		var_104 = -0x104,
		var_100 = -0x100,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x0000013C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	MOV EDI,DWORD PTR [ESP+arg1+0x148]
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m12050_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x14C]
	PUSH EAX
	MOV BYTE PTR [ESP+var_100+0x150],BL
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ FAR loc_1002D58C
	MOV EAX,DWORD PTR [ESI+0x54]
	MOV BYTE PTR [EAX+0x0C],BL
	CMP BYTE PTR [ESP+var_100+0x148],BL
	JZ FAR loc_1002D583
	LEA EAX,DWORD PTR [ESP+var_10C+0x148]
	MOV EDX, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_110+0x148],EAX
	MOV DWORD PTR [ESP+var_114+0x148],EDX
	LEA ECX,DWORD PTR [ESP+var_120+0x148]
	MOV DWORD PTR [ESP+var_10C+0x148],EBX
	MOV DWORD PTR [ESP+var_108+0x148],EBX
	MOV DWORD PTR [ESP+var_104+0x148],EBX
	MOV EAX, 0x3F800000
	MOV DWORD PTR [ESP+var_124+0x148],ECX
	LEA ECX,DWORD PTR [ESP+var_134+0x148]
	MOV DWORD PTR [ESP+var_128+0x148],EDX
	MOV DWORD PTR [ESP+var_120+0x148],EBX
	MOV DWORD PTR [ESP+var_11C+0x148],EBX
	MOV DWORD PTR [ESP+var_118+0x148],EAX
	MOV DWORD PTR [ESP+var_138+0x148],ECX
	MOV DWORD PTR [ESP+var_13C+0x148],EDX
	MOV DWORD PTR [ESP+var_134+0x148],EBX
	MOV EDX,DWORD PTR [offset LEGO1_data.m120E4_ptr]
	MOV DWORD PTR [ESP+var_130+0x148],EAX
	LEA EAX,DWORD PTR [ESP+var_100+0x148]
	PUSH EDX
	MOV DWORD PTR [ESP+var_12C+0x14C],EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D44D
	MOV EBX,DWORD PTR [ESP+var_110+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX]
	ADD ESP, 0x04
loc_1002D44D:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D471
	MOV EBX,DWORD PTR [ESP+var_110+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x04]
	ADD ESP, 0x04
loc_1002D471:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D495
	MOV EBX,DWORD PTR [ESP+var_110+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x08]
	ADD ESP, 0x04
loc_1002D495:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D4B8
	MOV EBX,DWORD PTR [ESP+var_124+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX]
	ADD ESP, 0x04
loc_1002D4B8:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D4DC
	MOV EBX,DWORD PTR [ESP+var_124+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x04]
	ADD ESP, 0x04
loc_1002D4DC:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D500
	MOV EBX,DWORD PTR [ESP+var_124+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x08]
	ADD ESP, 0x04
loc_1002D500:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D523
	MOV EBX,DWORD PTR [ESP+var_138+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX]
	ADD ESP, 0x04
loc_1002D523:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D547
	MOV EBX,DWORD PTR [ESP+var_138+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x04]
	ADD ESP, 0x04
loc_1002D547:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D56B
	MOV EBX,DWORD PTR [ESP+var_138+0x148]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [EBX+0x08]
	ADD ESP, 0x04
loc_1002D56B:
	LEA EAX,DWORD PTR [ESP+var_13C+0x148]
	LEA ECX,DWORD PTR [ESP+var_128+0x148]
	LEA EDX,DWORD PTR [ESP+var_114+0x148]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI]
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x28])
	JMP loc_1002D58C
loc_1002D583:
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x2C])
loc_1002D58C:
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m120B8_ptr]
	LEA ECX,DWORD PTR [ESP+var_108+0x154]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002D5B8
	LEA EAX,DWORD PTR [ESP+var_10C+0x154]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x30])
loc_1002D5B8:
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m120B0_ptr]
	LEA ECX,DWORD PTR [ESP+var_108+0x154]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002D5F1
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x01
	MOV ECX,DWORD PTR [ESI+0x54]
	LEA EBX,DWORD PTR [ESP+var_108+0x154]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x40]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m3CAE0_sub_1003DAE0])
	MOV DWORD PTR [ESI+0x6C],EAX
loc_1002D5F1:
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m120B4_ptr]
	LEA ECX,DWORD PTR [ESP+var_108+0x154]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002D612
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m2C6E0_sub_1002D6E0])
loc_1002D612:
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m120CC_ptr]
	LEA ECX,DWORD PTR [ESP+var_108+0x154]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002D649
	LEA EAX,DWORD PTR [ESP+var_10C+0x154]
	PUSH offset [LEGO1_data.m32EC_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	CMP EAX, 0x01
	SBB CL, CL
	MOV EAX,DWORD PTR [ESI+0x54]
	INC CL
	MOV BYTE PTR [EAX+0x0C],CL
loc_1002D649:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0000013C
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002D660(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+arg1]
	MOV EAX,DWORD PTR [offset LEGO1_data.m32D0_ptr+EAX*4]
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002D670(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH EBP
	TEST ESI, ESI
	JZ loc_1002D6BD
	MOV EDI,DWORD PTR [ESI+0x000000E4]
	MOV EBX, 0x00000001
	MOV EBP, offset [LEGO1_data.m32D4_ptr]
loc_1002D693:
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1002D6B2
	ADD EBP, 0x04
	INC EBX
	CMP EBP, offset [LEGO1_data.m32E4_ptr]
	JBE loc_1002D693
	JMP loc_1002D6BD
loc_1002D6B2:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV BYTE PTR [EAX+0x59],0x00
	MOV BYTE PTR [EAX+0x74],BL
loc_1002D6BD:
	MOV EAX,DWORD PTR [ESP+arg3+0x14]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mF8A0_sub_100108A0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002D6E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [ECX+0x6C]
	TEST ECX, ECX
	JZ loc_1002D6F1
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5D40_sub_10006D40])
loc_1002D6F1:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002D700()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2C7E5_proc_1002D7E5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m2C110_sub_1002D110])
	LEA ECX,DWORD PTR [ESI+0x0000008C]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.m990F0_sub_1009A0F0])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA EAX,DWORD PTR [ESI+0x000000F4]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2E28_ptr]
	MOV DWORD PTR [ESI+0x000000F0],EAX
	MOV DWORD PTR [ESI+0x00000088],EBX
	MOV DWORD PTR [ESI+0x00000080],EBX
	MOV DWORD PTR [ESI+0x00000084],EBX
	MOV DWORD PTR [ESI+0x7C],EBX
	MOV BYTE PTR [ESI+0x000000EA],BL
	MOV DWORD PTR [ESI+0x000000DC],EBX
	MOV DWORD PTR [ESI+0x00000134],EBX
	MOV DWORD PTR [ESI+0x00000138],EBX
	MOV BYTE PTR [ESI+0x000000E8],BL
	MOV BYTE PTR [ESI+0x00000148],BL
	MOV DWORD PTR [ESI+0x0000014C],EBX
	MOV DWORD PTR [ESI+0x000000EC],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x000000EC],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x00000140],0x3C23D70A
	MOV DWORD PTR [ESI+0x00000144],0x3F4CCCCD
	MOV DWORD PTR [ESI+0x00000150],0x40000000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_1002D820()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2C8AF_proc_1002D8AF]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2E28_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX, 0x00000001
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],CL
	MOV EAX,DWORD PTR [EAX+0x00000134]
	TEST EAX, EAX
	JZ loc_1002D877
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV BYTE PTR [EBP+var_8+0x4],CL
	CALL_LONG(offset [LEGO1_text.m2C899_sub_1002D899])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002D877:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m2C8A1_sub_1002D8A1])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2C8B9_sub_1002D8B9])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002D899()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_1002D8A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000008C
	JMP_LONG(offset [LEGO1_text.m99130_loc_1009A130])
}
}

__declspec(naked) DWORD LEGO1_sub_1002D8B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2C320_loc_1002D320])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002DDC0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [ECX+0x04],EAX
	JNZ loc_1002DDFA
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV EAX,DWORD PTR [ECX+0x2C]
	FLD DWORD PTR [EAX]
	FCHS
	MOV EAX,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ECX+0x2C]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	MOV EAX,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ECX+0x2C]
	MOV EAX,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [ECX+0x08]
	FCHS
	FSTP DWORD PTR [EAX+0x08]
	XOR EAX, EAX
	RETN 0x0008
loc_1002DDFA:
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH EAX
	MOV ECX, EDX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002E740(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	CMP BYTE PTR [ECX+0x000000EA],0x00
	MOV ESI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x54]
	JZ loc_1002E764
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mFC30_sub_10010C30])
	POP ESI
	RETN 0x0004
loc_1002E764:
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	CMP BYTE PTR [ESI+0x58],0x00
	JZ loc_1002E77E
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mFC30_sub_10010C30])
loc_1002E77E:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002E790(DWORD arg1)
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x4C
	LEA EAX,DWORD PTR [ESP+var_40+0x4C]
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	MOV DWORD PTR [ESP+var_44+0x58],EAX
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
loc_1002E7AC:
	FLD DWORD PTR [ESI+0x00000084]
	FCOMP DWORD PTR [ESP+arg1+0x58]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1002E816
	CMP DWORD PTR [ESI+0x000000DC],EBX
	JZ loc_1002E7E1
	LEA EAX,DWORD PTR [ESP+var_48+0x58]
	MOV ECX,DWORD PTR [ESP+arg1+0x58]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	TEST EAX, EAX
	JZ FAR loc_1002E89F
loc_1002E7E1:
	LEA EAX,DWORD PTR [ESP+var_50+0x60]
	MOV ECX,DWORD PTR [ESP+var_4+0x60]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x0000008C])
	TEST EAX, EAX
	JNZ loc_1002E816
	LEA ECX,DWORD PTR [ESI+0x000000EC]
	LEA EAX,DWORD PTR [ESP+var_50+0x60]
	PUSH EAX
	MOV EDI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EDI+0x48])
	MOV EDI, 0x00000001
	CMP BYTE PTR [ESI+0x000000E9],BL
	JZ loc_1002E7AC
loc_1002E816:
	CMP BYTE PTR [ESI+0x000000EA],0x00
	JZ loc_1002E88F
	CMP BYTE PTR [ESI+0x00000148],0x00
	JZ loc_1002E88F
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	CMP DWORD PTR [EAX+0x18],0x00
	JLE loc_1002E84A
	FLD DWORD PTR [EAX+0x28]
	FMUL DWORD PTR [ESI+0x00000150]
	FDIVR DWORD PTR [EAX+0x1C]
	FMUL DWORD PTR [EAX+0x18]
	FCHS
	FSTP DWORD PTR [ESP+var_54+0x60]
	JMP loc_1002E852
loc_1002E84A:
	MOV DWORD PTR [ESP+var_54+0x60],0x00000000
loc_1002E852:
	FLD DWORD PTR [ESP+var_54+0x60]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	CMP DWORD PTR [ESI+0x0000014C],EAX
	JZ loc_1002E88F
	MOV DWORD PTR [ESI+0x0000014C],EAX
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ loc_1002E88F
	FILD DWORD PTR [ESI+0x0000014C]
	SUB ESP, 0x04
	MOV ECX,DWORD PTR [EAX+0x00000098]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x2E18]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m11290_sub_10012290])
loc_1002E88F:
	TEST EDI, EDI
	JZ loc_1002E89F
	LEA EAX,DWORD PTR [ESP+var_50+0x60]
	MOV EBX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x74])
loc_1002E89F:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002E8B0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ECX+0x00000088]
	CALL_LONG(offset [LEGO1_text.m56720_sub_10057720])
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1002EAF9()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002EB10()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2DBA2_proc_1002EBA2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ESI
	JNZ loc_1002EB5F
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x11A4], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX+0x08],ESI
loc_1002EB5F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2DBAC_sub_1002EBAC])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR EDX, EDX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],EDX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x0C],EDX
	POP ESI
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002EBAC()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002EBC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x3200]
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1002EBDA
loc_1002EBCE:
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x3200]
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1002EBCE
loc_1002EBDA:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002EBE0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_54 = -0x54,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2DDB3_proc_1002EDB3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x44
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	PUSH EBX
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	PUSH ESI
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	MOV DWORD PTR [EBP+var_4C+0x4],offset [LEGO1_rdata.m488_ptr]
	PUSH EDI
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EDX],EAX
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH ESI
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_4C+0x4]
	MOV EAX,DWORD PTR [EBP+var_4C+0x4]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDX,DWORD PTR [EBP+var_48+0x4]
	MOV ECX,DWORD PTR [EBP+var_48+0x4]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [EBP+var_48+0x4]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOM QWORD PTR [offset LEGO1_rdata + 0x2E20]
	FSTP DWORD PTR [EBP+var_20+0x4]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1002EC77
	XOR EAX, EAX
loc_1002EC64:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_1002EC77:
	FLD DWORD PTR [EBP-0x1C]
	FSQRT
	MOV EBX,DWORD PTR [EBP+var_4C+0x4]
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	LEA ECX,DWORD PTR [EBP+var_4C+0x4]
	PUSH EAX
	FSTP DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(DWORD PTR [EBX+0x68])
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EDX+0x54]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	MOV ECX,DWORD PTR [EAX+0x14]
	MOV DL,BYTE PTR [EBP+var_10+0x3]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	XOR EDI, EDI
	MOV BYTE PTR [EBP+var_2C+0x4],DL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EAX+0x04],EAX
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV EDX,DWORD PTR [ECX+0x00000088]
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV EDX,DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_4C+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ESI
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x6C])
	TEST EAX, EAX
	JNZ FAR loc_1002ED94
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA EDX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EDX
	XOR EDI, EDI
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m2DF80_sub_1002EF80])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	XOR ECX, ECX
	MOV CL,BYTE PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_54+0x4],ECX
loc_1002ED1D:
	CMP EDI,DWORD PTR [EBP+var_54+0x4]
	JGE loc_1002ED8B
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EBX+EDX]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JNZ loc_1002ED36
	MOV EAX,DWORD PTR [ECX+0x08]
loc_1002ED36:
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_1002ED85
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EAX]
	CMP EAX, ECX
	MOV EAX, ECX
	JZ loc_1002ED59
loc_1002ED4A:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1002ED59
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBP+var_28+0x4],EAX
	JNZ loc_1002ED4A
loc_1002ED59:
	CMP DWORD PTR [EBP+var_28+0x4],EAX
	JNZ loc_1002ED85
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+var_30+0x4]
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_4C+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ESI
	LEA EDX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m2DDD0_sub_1002EDD0])
	TEST EAX, EAX
	JNZ loc_1002ED94
loc_1002ED85:
	ADD EBX, 0x04
	INC EDI
	JMP loc_1002ED1D
loc_1002ED8B:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	JMP loc_1002ED97
loc_1002ED94:
	MOV DWORD PTR [EBP+var_14+0x4],EAX
loc_1002ED97:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2DDBD_sub_1002EDBD])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP FAR loc_1002EC64
}
}

__declspec(naked) DWORD LEGO1_sub_1002EDBD()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2DFD0_loc_1002EFD0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002EDD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_10 = -0x10,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg7]
	SUB ESP, 0x18
	MOV DWORD PTR [ESP+var_10+0x18],ECX
	PUSH EBX
	MOV ECX,DWORD PTR [ESP+arg6+0x1C]
	PUSH ESI
	MOV EDX,DWORD PTR [ESP+arg5+0x20]
	PUSH EDI
	PUSH EBP
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg4+0x2C]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg3+0x30]
	PUSH EDX
	MOV EDX,DWORD PTR [ESP+arg2+0x34]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_10+0x38]
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH EDX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EBX+0x6C])
	TEST EAX, EAX
	JNZ FAR loc_1002EF03
	MOV ESI,DWORD PTR [ESP+var_14+0x40]
	PUSH 0x0C
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESP+var_2C+0x40],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_1002EE35
	MOV ECX,DWORD PTR [ESP+var_30+0x40]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_1002EE3A
loc_1002EE35:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_1002EE3A:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_1002EE4C
	MOV ECX,DWORD PTR [ESP+var_10+0x40]
	MOV DWORD PTR [EAX],ECX
loc_1002EE4C:
	MOV EBX,DWORD PTR [ESP+arg2+0x40]
	INC DWORD PTR [ESI+0x08]
	CMP EBX, 0x02
	JL loc_1002EE64
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0020
loc_1002EE64:
	MOV EAX,DWORD PTR [ESP+0x30]
	XOR ECX, ECX
	XOR EBP, EBP
	XOR EDI, EDI
	MOV CL,BYTE PTR [EAX+0x04]
	MOV DWORD PTR [ESP+var_30+0x40],ECX
loc_1002EE75:
	CMP EBP,DWORD PTR [ESP+var_30+0x40]
	JGE FAR loc_1002EF01
	MOV EAX,DWORD PTR [ESP+var_10+0x40]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EDI+ECX]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ESP+var_10+0x40],ECX
	JNZ loc_1002EE9B
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_2C+0x40],EAX
	JMP loc_1002EE9F
loc_1002EE9B:
	MOV DWORD PTR [ESP+var_2C+0x40],ECX
loc_1002EE9F:
	CMP DWORD PTR [ESP+var_2C+0x40],0x00
	JZ loc_1002EEF8
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESP+var_20+0x40],ECX
	MOV EAX,DWORD PTR [ECX]
	CMP EAX, ECX
	JZ loc_1002EEC8
loc_1002EEB3:
	MOV EDX,DWORD PTR [ESP+var_2C+0x40]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_1002EEC4
	MOV EAX,DWORD PTR [EAX]
	CMP EAX,DWORD PTR [ESP+var_20+0x40]
	JNZ loc_1002EEB3
loc_1002EEC4:
	CMP EAX, ECX
	JNZ loc_1002EEF8
loc_1002EEC8:
	LEA EAX,DWORD PTR [EBX+0x01]
	MOV ECX,DWORD PTR [ESP+arg1+0x40]
	MOV EDX,DWORD PTR [ESP+r+0x40]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+r+0x40]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+r+0x40]
	PUSH EDX
	MOV EDX,DWORD PTR [ESP+r+0x40]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_1C+0x40]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_14+0x40]
	PUSH EDX
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m2DDD0_sub_1002EDD0])
	TEST EAX, EAX
	JNZ loc_1002EF03
loc_1002EEF8:
	ADD EDI, 0x04
	INC EBP
	JMP FAR loc_1002EE75
loc_1002EF01:
	XOR EAX, EAX
loc_1002EF03:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x18
	RETN 0x0020
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002EF80(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EDI+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_1002EFA1
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_1002EFA6
loc_1002EFA1:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_1002EFA6:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_1002EFBD
	MOV ECX,DWORD PTR [ESP+arg3+0xC]
	MOV EBX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EBX
loc_1002EFBD:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1002F011()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2DF10_loc_1002EF10])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002F020(DWORD arg1)
{
	enum{
		var_118 = -0x118,
		var_114 = -0x114,
		var_110 = -0x110,
		var_104 = -0x104,
		var_100 = -0x100,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000114
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg1+0x124]
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m2C390_sub_1002D390])
	PUSH EBP
	MOV EAX, DWORD PTR [offset LEGO1_data.m120A4_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x128]
	PUSH EAX
	MOV BYTE PTR [ESP+var_100+0x12C],0x00
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002F077
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX+0x78])
	MOV ESI,DWORD PTR [EBX+0x50]
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	PUSH EBX
	MOV DWORD PTR [EAX+0x28],ESI
	MOV BYTE PTR [EAX+0x5C],0x00
	CALL_LONG(offset [LEGO1_text.m14880_sub_10015880])
	ADD ESP, 0x04
loc_1002F077:
	PUSH EBP
	MOV EAX, DWORD PTR [offset LEGO1_data.m120A0_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x128]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ FAR loc_1002F15B
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	LEA ECX,DWORD PTR [ESP+var_104+0x128]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [ESP+var_110+0x128]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP+var_110+0x128]
	ADD ESP, 0x04
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP+var_114+0x128]
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1002F15B
	MOV EAX,DWORD PTR [ESP+var_118+0x128]
	MOV EDX,DWORD PTR [ESP+var_114+0x128]
	PUSH EAX
	PUSH EDI
	PUSH EDX
	PUSH ESI
	LEA ESI,DWORD PTR [ESP+var_100+0x128]
	PUSH ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
loc_1002F15B:
	PUSH EBP
	MOV EAX, DWORD PTR [offset LEGO1_data.m12060_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x128]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1002F195
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	LEA ECX,DWORD PTR [ESP+var_104+0x128]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	MOV BYTE PTR [EBX+0x000000E8],AL
loc_1002F195:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000114
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002F1B0()
{
	enum{
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B8 = -0xB8,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_34 = -0x34,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2E621_proc_1002F621]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000B0
	LEA EAX,DWORD PTR [EBP+var_90+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_4C+0x4]
	PUSH ESI
	MOV DWORD PTR [EBP+var_94+0x4],EAX
	PUSH EDI
	MOV ESI, offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_98+0x4],ESI
	XOR EDI, EDI
	MOV DWORD PTR [EBP+var_50+0x4],ECX
	MOV EAX,DWORD PTR [EDX+0x00000134]
	MOV DWORD PTR [EBP+var_54+0x4],ESI
	MOV DWORD PTR [EBP+var_40+0x4],0x00000001
	MOV DWORD PTR [EBP+var_9C+0x4],0x00000001
	TEST EAX, EAX
	JZ FAR loc_1002F2B2
	TEST BYTE PTR [EAX+0x38],0x01
	JZ loc_1002F286
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_40+0x4],EDI
	MOV DWORD PTR [EBP+var_9C+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD EDX, 0x00000088
	ADD ECX, 0x000000E0
	PUSH EDX
	MOV DWORD PTR [EBP+var_3C+0x4],ESI
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	MOV EBX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x000000E4]
	LEA EDX,DWORD PTR [EBP+var_98+0x4]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	MOV EAX,DWORD PTR [EBX+0x00000134]
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x00000138]
	CALL_LONG(offset [LEGO1_text.m49240_sub_1004A240])
	TEST EAX, EAX
	JL_LONG(offset [LEGO1_text.m2E633_loc_1002F633])
	CMP EAX, 0x01
	JLE loc_1002F2B2
	JMP_LONG(offset [LEGO1_text.m2E633_loc_1002F633])
loc_1002F286:
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	TEST EAX, EAX
	JZ loc_1002F2A5
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2E62B_sub_1002F62B])
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002F2A5:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x00000134],0x00000000
loc_1002F2B2:
	CMP DWORD PTR [EBP+var_40+0x4],0x00
	JZ loc_1002F2E3
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	ADD EDX, 0x000000E4
	ADD ESI, 0x000000E0
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	ADD ECX, 0x00000088
	PUSH ESI
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, EDX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x00000098])
loc_1002F2E3:
	CMP DWORD PTR [EBP+var_9C+0x4],0x00
	JZ FAR loc_1002F404
	LEA EAX,DWORD PTR [EBP+var_A4+0x4]
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_AC+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [ECX+0x00000088]
	MOV ECX,DWORD PTR [ECX+0x000000E0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	MOV ESI, EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x00000088]
	MOV ECX,DWORD PTR [ECX+0x000000E0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EBP+var_14+0x4]
	FLD DWORD PTR [ECX]
	FSUB DWORD PTR [EDX]
	FMUL DWORD PTR [EBX+0x000000E4]
	FADD DWORD PTR [EDX]
	MOV EDX,DWORD PTR [EBP+var_94+0x4]
	FSTP DWORD PTR [EDX]
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	ADD EDX, 0x04
	FLD DWORD PTR [ECX+0x04]
	FSUB DWORD PTR [EDX]
	FMUL DWORD PTR [EBX+0x000000E4]
	FADD DWORD PTR [EDX]
	MOV EDX,DWORD PTR [EBP+var_94+0x4]
	FSTP DWORD PTR [EDX+0x04]
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	ADD EDX, 0x08
	MOV EAX,DWORD PTR [EBP+var_94+0x4]
	FLD DWORD PTR [ECX+0x08]
	FSUB DWORD PTR [EDX]
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	PUSH ECX
	FMUL DWORD PTR [EBX+0x000000E4]
	FADD DWORD PTR [EDX]
	FSTP DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EBX+0x00000088]
	MOV ECX,DWORD PTR [EBX+0x000000E0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2CDC0_sub_1002DDC0])
	MOV EBX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_A8+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EBX+0x00000088]
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	MOV EDX,DWORD PTR [EAX+0x18]
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(DWORD PTR [EAX+0x74])
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	MOV EBX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(DWORD PTR [EBX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F404
	FLD DWORD PTR [EBP+var_2C+0x4]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F404
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_1002F404:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX, offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_5C+0x4],EAX
	MOV ECX,DWORD PTR [ECX+0x000000F0]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV EBX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	LEA EDX,DWORD PTR [ECX+0x10]
	ADD ECX, 0x20
	MOV EAX,DWORD PTR [EBX+0x00000088]
	MOV DWORD PTR [EBP+var_58+0x4],EDX
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m538_ptr])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EBP+var_58+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(DWORD PTR [EAX+0x74])
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	MOV EBX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(DWORD PTR [EBX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F48C
	FLD DWORD PTR [EBP+var_2C+0x4]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F48C
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_1002F48C:
	MOV EAX,DWORD PTR [EBP+var_58+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(DWORD PTR [EBX+0x74])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV EBX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(DWORD PTR [EBX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F4D8
	FLD DWORD PTR [EBP+var_2C+0x4]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1002F4D8
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_1002F4D8:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	LEA EAX,DWORD PTR [EBP+var_B8+0x4]
	PUSH EAX
	MOV ESI, offset [LEGO1_rdata.m488_ptr]
	MOV EDI,DWORD PTR [ECX+0x000000F0]
	LEA ECX,DWORD PTR [EBP+var_C0+0x4]
	ADD EDI, 0x30
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV ECX,DWORD PTR [EBP+var_BC+0x4]
	MOV DWORD PTR [EBP+var_C0+0x4],ESI
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX],EAX
	MOV EDX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+var_7C+0x4]
	PUSH EAX
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [ECX+0x000000F0]
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	ADD EDI, 0x20
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV ECX,DWORD PTR [EBP+var_80+0x4]
	MOV DWORD PTR [EBP+var_84+0x4],ESI
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX],EAX
	LEA EAX,DWORD PTR [EBP+var_68+0x4]
	MOV EDX,DWORD PTR [EDI+0x04]
	PUSH EAX
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [ECX+0x08],EBX
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV ECX,DWORD PTR [EBP+var_94+0x4]
	MOV EDX,DWORD PTR [EBP+var_6C+0x4]
	MOV DWORD PTR [EBP+var_70+0x4],ESI
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+var_C0+0x4]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	MOV ESI,DWORD PTR [EBP+var_70+0x4]
	CALL_LONG(DWORD PTR [ESI+0x54])
	MOV EDX,DWORD PTR [EBP+var_6C+0x4]
	MOV ECX,DWORD PTR [EBP+var_6C+0x4]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOM DWORD PTR [offset LEGO1_rdata + 0x2DE4]
	FSTP DWORD PTR [EBP+var_18+0x4]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_1002F5CE
	FLD DWORD PTR [EBP+var_18+0x4]
	FSQRT
	MOV EBX,DWORD PTR [EBP+var_84+0x4]
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	PUSH EAX
	FSTP DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(DWORD PTR [EAX+0x5C])
loc_1002F5CE:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [ECX+0x000000EA],0x00
	JNZ loc_1002F5EE
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_84+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],0xBF800000
	CALL_LONG(DWORD PTR [EBX+0x5C])
loc_1002F5EE:
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	PUSH EAX
	LEA EDX,DWORD PTR [EBP+var_84+0x4]
	PUSH ECX
	LEA EAX,DWORD PTR [EBP+var_C0+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m2E633_loc_1002F633])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x7C],0x00000000
	JMP_LONG(offset [LEGO1_text.m2E638_loc_1002F638])
}
}

__declspec(naked) DWORD LEGO1_sub_1002F62B()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002F770(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000088]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x20]
	MOV ECX,DWORD PTR [EAX+0x10]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	LEA ECX,DWORD PTR [ESP+var_14+0x20]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mFD80_sub_10010D80])
	MOV EBX, EAX
	LEA ECX,DWORD PTR [EDI+0x10]
	MOV EAX,DWORD PTR [EBX+0x04]
	ADD EBX, 0x08
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [EDI+0x18]
	MOV EAX, 0x00000003
loc_1002F7B2:
	MOV EDX,DWORD PTR [EBX]
	ADD EBX, 0x04
	MOV DWORD PTR [ECX],EDX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_1002F7B2
	LEA EAX,DWORD PTR [ESP+var_18+0x24]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFC60_sub_10010C60])
	MOV EBX, EAX
	LEA ECX,DWORD PTR [EDI+0x24]
	MOV EAX,DWORD PTR [EBX+0x04]
	ADD EBX, 0x08
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [EDI+0x2C]
	MOV EAX, 0x00000003
loc_1002F7E4:
	MOV EDX,DWORD PTR [EBX]
	ADD EBX, 0x04
	MOV DWORD PTR [ECX],EDX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_1002F7E4
	LEA EAX,DWORD PTR [ESP+var_18+0x24]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFCF0_sub_10010CF0])
	MOV ESI, EAX
	LEA ECX,DWORD PTR [EDI+0x38]
	ADD ESI, 0x08
	ADD EDI, 0x40
	MOV EBX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI-0x04]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV EAX, 0x00000003
loc_1002F816:
	MOV ECX,DWORD PTR [ESI]
	ADD ESI, 0x04
	MOV DWORD PTR [EDI],ECX
	ADD EDI, 0x04
	DEC EAX
	JNZ loc_1002F816
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002F830(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EDX, offset LEGO1_data + 0x1D4
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	PUSH EDI
	MOV EDI, ECX
	MOV EAX,DWORD PTR [ESI+0x08]
loc_1002F840:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_1002F860
	OR CL, CL
	JZ loc_1002F85C
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_1002F860
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_1002F840
loc_1002F85C:
	XOR EAX, EAX
	JMP loc_1002F865
loc_1002F860:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1002F865:
	TEST EAX, EAX
	JZ loc_1002F89D
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	PUSH 0x3F000000
	MOV ECX,DWORD PTR [ESI+0x08]
	PUSH 0x01
	PUSH 0x3F000000
	PUSH 0x00
	PUSH ECX
	PUSH EDI
	MOV ECX, EAX
	ADD ESI, 0x10
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x28]
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x14]
	PUSH ECX
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
loc_1002F89D:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1__configureLegoBuildingManager_LegoBuildingManager__SAXH_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x37CC], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002F8C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2E912_proc_1002F912]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2F50_ptr]
	CALL_LONG(offset [LEGO1_text.m2E9D0_sub_1002F9D0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002F960()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2E9B2_proc_1002F9B2]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2F50_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x37C8]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m2E9BC_sub_1002F9BC])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002F9BC()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1002F9D0()
{
__asm{
	PUSH ESI
	MOV EAX, ECX
	PUSH EDI
	MOV ESI, offset LEGO1_data + 0x3478
	MOV EDI, offset LEGO1_data + 0x14C30
	MOV ECX, 0x000000B0
	REP MOVSD
	XOR ECX, ECX
	POP EDI
	MOV BYTE PTR [EAX+0x08],CL
	MOV BYTE PTR [EAX+0x09],CL
	POP ESI
	MOV BYTE PTR [EAX+0x20],CL
	MOV DWORD PTR [EAX+0x24],ECX
	MOV BYTE PTR [EAX+0x28],CL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1002FA00()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EBX, EAX
loc_1002FA0E:
	PUSH EBX
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m2EA90_sub_1002FA90])
	INC EDI
	CMP EDI, 0x10
	JB loc_1002FA0E
	CMP DWORD PTR [offset LEGO1_data + 0x37CC],0x01
	JG loc_1002FA4B
	MOV EAX, DWORD PTR [offset LEGO1_data.m3410_ptr]
	MOV ECX, EBX
	PUSH EAX
	PUSH offset [LEGO1_data.m70_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	TEST EAX, EAX
	JZ loc_1002FA7F
	MOV EAX,DWORD PTR [EAX+0x54]
	POP EDI
	MOV BYTE PTR [EAX+0x0C],0x01
	MOV BYTE PTR [ESI+0x09],0x00
	POP ESI
	POP EBX
	RET
loc_1002FA4B:
	XOR EDI, EDI
loc_1002FA4D:
	MOV EAX,DWORD PTR [offset LEGO1_data.m3410_ptr+EDI*4]
	MOV ECX, EBX
	PUSH EAX
	PUSH offset [LEGO1_data.m70_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	TEST EAX, EAX
	JZ loc_1002FA79
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EAX+0x54]
	MOV CL,BYTE PTR [ESI+0x08]
	SUB ECX, EDI
	CMP ECX, 0x01
	SBB CL, CL
	NEG CL
	MOV BYTE PTR [EAX+0x0C],CL
loc_1002FA79:
	INC EDI
	CMP EDI, 0x05
	JB loc_1002FA4D
loc_1002FA7F:
	MOV BYTE PTR [ESI+0x09],0x00
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FA90(DWORD arg1, DWORD arg2)
{
	enum{
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x48
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x50]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	LEA EBP,DWORD PTR [ESI*4+ESI]
	MOV ECX,DWORD PTR [ESP+arg2+0x58]
	LEA EBP,DWORD PTR [EBP*8+EBP+arg1217224-0x4A4B20]
	SUB EBP, ESI
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x14C34+EBP]
	PUSH EAX
	PUSH offset [LEGO1_data.m70_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1002FB21
	PUSH 0x03
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m104E0_sub_100114E0])
	PUSH ESI
	MOV ECX, EDI
	MOV DWORD PTR [offset LEGO1_data + 0x14C30+EBP],EBX
	MOV EBX,DWORD PTR [EBX+0x54]
	CALL_LONG(offset [LEGO1_text.m2ECC0_sub_1002FCC0])
	LEA EAX,DWORD PTR [ESP+var_48+0x60]
	MOV ECX, 0x00000010
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_4C+0x60],EAX
	MOV DWORD PTR [ESP+var_50+0x60],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [EBX+0x14]
	REP MOVSD
	MOV ECX,DWORD PTR [ESP+var_4C+0x60]
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x14C44+EBP]
	LEA EAX,DWORD PTR [ESP+var_50+0x60]
	MOV DWORD PTR [ECX+0x34],EDX
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA36B0_sub_100A46B0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
loc_1002FB21:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x48
	RETN 0x0008
}
}

