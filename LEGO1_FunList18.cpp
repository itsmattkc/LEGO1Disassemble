#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_proc_100A1639()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_proc_100A1641()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA0770_loc_100A1770])
}
}

__declspec(naked) DWORD LEGO1_loc_100A1649()
{
__asm{
	XOR ESI, ESI
	JMP_LONG(offset [LEGO1_text.mA064B_loc_100A164B])
}
}

__declspec(naked) DWORD LEGO1_loc_100A164B()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CMP DWORD PTR [offset LEGO1_data.m1103C],0x00
	JZ loc_100A1668
	MOV EAX, DWORD PTR [offset LEGO1_data.m1103C]
	PUSH EAX
	MOV EDI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EDI+0x04])
	JMP loc_100A1683
loc_100A1668:
	LEA EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD2734_j_Direct3DRMCreate])
	PUSH offset [LEGO1_data.m1103C]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	PUSH offset LEGO1_rdata + 0x91C0
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI])
loc_100A1683:
	MOV EAX, DWORD PTR [offset LEGO1_data.m1103C]
	MOV DWORD PTR [ESI+0x04],EAX
	TEST EAX, EAX
	JNZ loc_100A169D
	TEST ESI, ESI
	JZ loc_100A169B
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100A169B:
	XOR ESI, ESI
loc_100A169D:
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A175D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA0770_loc_100A1770])
}
}

__declspec(naked) DWORD LEGO1_sub_100A17B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A1819()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A233D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1350_loc_100A2350])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2391()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A241D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1430_loc_100A2430])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2471()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A24FD()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1510_loc_100A2510])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2551()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A25DD()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA15F0_loc_100A25F0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2631()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A26BD()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA16D0_loc_100A26D0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2711()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A279D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA17B0_loc_100A27B0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A27F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A287D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1890_loc_100A2890])
}
}

__declspec(naked) DWORD LEGO1_sub_100A28D1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2939()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A29A9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2A19()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2A89()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2AF9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2B69()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A2BD9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A3E00()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA2E10_loc_100A3E10])
}
}

__declspec(naked) DWORD LEGO1_sub_100A3E51()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A3EB9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA1240_loc_100A2240])
}
}

__declspec(naked) DWORD LEGO1_sub_100A4420()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA3610_proc_100A4610]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7C38_ptr]
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA EAX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [ESI+0x04],EDI
	MOV DWORD PTR [ESI+0x08],EDI
	LEA EBX,DWORD PTR [ESI+0x58]
	LEA ECX,DWORD PTR [ESI+0x60]
	PUSH ECX
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX, EBX
	MOV DWORD PTR [ESI+0x14],EAX
	MOV BYTE PTR [ESI+0x0C],0x01
	MOV DWORD PTR [ESI+0x10],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x10],offset [LEGO1_rdata.m300_ptr]
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [ESI+0x74]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m488_ptr]
	LEA EBX,DWORD PTR [ESI+0x6C]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [ESI+0x00000088]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m488_ptr]
	LEA EBX,DWORD PTR [ESI+0x00000080]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [ESI+0x0000009C]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m488_ptr]
	LEA EBX,DWORD PTR [ESI+0x00000094]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [ESI+0x000000B0]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m488_ptr]
	LEA EBX,DWORD PTR [ESI+0x000000A8]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x000000C8]
	MOV EDX,DWORD PTR [ESI+0x5C]
	MOV ECX, 0x4959038D
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x000000C4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7C08_ptr]
	MOV DWORD PTR [ESI+0x000000C0],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000000C0],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [ESI+0x5C]
	MOV DWORD PTR [EDX+0x04],ECX
	MOV EDX,DWORD PTR [ESI+0x5C]
	MOV DWORD PTR [EDX+0x08],ECX
	MOV ECX, 0xC959038D
	MOV EAX,DWORD PTR [ESI+0x70]
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [ESI+0x70]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV EAX,DWORD PTR [ESI+0x70]
	MOV DWORD PTR [EAX+0x08],ECX
	MOV ECX,DWORD PTR [ESI+0x000000AC]
	MOV DWORD PTR [ECX],EDI
	MOV ECX,DWORD PTR [ESI+0x000000AC]
	MOV DWORD PTR [ECX+0x04],EDI
	MOV ECX,DWORD PTR [ESI+0x000000AC]
	MOV DWORD PTR [ECX+0x08],EDI
	MOV DWORD PTR [ESI+0x000000BC],EDI
	MOV EAX,DWORD PTR [ESI+0x000000C4]
	MOV DWORD PTR [EAX],EDI
	MOV EAX,DWORD PTR [ESI+0x000000C4]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EAX,DWORD PTR [ESI+0x000000C4]
	MOV DWORD PTR [EAX+0x08],EDI
	MOV ECX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [ECX],EDI
	MOV ECX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [ECX+0x04],EDI
	MOV ECX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [ECX+0x08],EDI
	MOV ECX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [ECX+0x0C],EDI
	MOV ECX, 0x3F800000
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x10],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x14],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x18],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x1C],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x14],ECX
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x20],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x24],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x28],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x2C],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x28],ECX
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x30],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x34],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x38],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x3C],EDI
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EAX+0x3C],ECX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x000000D4],EDI
	OR DWORD PTR [ESI+0x000000D8],0x03
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A4689()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA4D50_loc_100A5D50])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A46A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A46B0(DWORD arg1)
{
	enum{
		var_228 = -0x228,
		var_220 = -0x220,
		var_218 = -0x218,
		var_210 = -0x210,
		var_208 = -0x208,
		var_200 = -0x200,
		var_1F8 = -0x1F8,
		var_1F0 = -0x1F0,
		var_1E8 = -0x1E8,
		var_1E0 = -0x1E0,
		var_1D8 = -0x1D8,
		var_1D0 = -0x1D0,
		var_1C8 = -0x1C8,
		var_1C0 = -0x1C0,
		var_1B8 = -0x1B8,
		var_1B0 = -0x1B0,
		var_1A8 = -0x1A8,
		var_1A0 = -0x1A0,
		var_198 = -0x198,
		var_190 = -0x190,
		var_188 = -0x188,
		var_180 = -0x180,
		var_178 = -0x178,
		var_170 = -0x170,
		var_168 = -0x168,
		var_160 = -0x160,
		var_158 = -0x158,
		var_150 = -0x150,
		var_148 = -0x148,
		var_140 = -0x140,
		var_138 = -0x138,
		var_130 = -0x130,
		var_128 = -0x128,
		var_120 = -0x120,
		var_118 = -0x118,
		var_110 = -0x110,
		var_108 = -0x108,
		var_100 = -0x100,
		var_F8 = -0xF8,
		var_F0 = -0xF0,
		var_E8 = -0xE8,
		var_E0 = -0xE0,
		var_D8 = -0xD8,
		var_D0 = -0xD0,
		var_C8 = -0xC8,
		var_C0 = -0xC0,
		var_B8 = -0xB8,
		var_B0 = -0xB0,
		var_A8 = -0xA8,
		var_A0 = -0xA0,
		var_98 = -0x98,
		var_90 = -0x90,
		var_88 = -0x88,
		var_80 = -0x80,
		var_78 = -0x78,
		var_70 = -0x70,
		var_68 = -0x68,
		var_60 = -0x60,
		var_58 = -0x58,
		var_50 = -0x50,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x00000228
	LEA EAX,DWORD PTR [ESP+var_40+0x228]
	PUSH EBX
	PUSH ESI
	XOR EDX, EDX
	MOV DWORD PTR [ESP+var_44+0x230],EAX
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg1+0x234]
	PUSH EBP
	MOV DWORD PTR [ESP+var_48+0x238],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESP+var_188+0x238],EDX
loc_100A46E3:
	XOR EBX, EBX
	MOV ESI,DWORD PTR [ESP+var_188+0x238]
	JMP loc_100A46F2
loc_100A46EE:
	FSTP QWORD PTR [ESI+ESP+var_228+0x238]
loc_100A46F2:
	CMP EBX, 0x04
	JGE loc_100A4718
	LEA EAX,DWORD PTR [EBX+EDX]
	MOV EBP,DWORD PTR [EDI+0x04]
	SHL EAX, 0x02
	ADD ESI, 0x08
	INC EBX
	FLD DWORD PTR [EAX+EBP+arg1217224-0x4A4B20]
	MOV EBP,DWORD PTR [ECX+0x14]
	FSTP QWORD PTR [ESI+ESP+var_108+0x238]
	FLD DWORD PTR [EAX+EBP+arg1217224-0x4A4B20]
	JMP loc_100A46EE
loc_100A4718:
	ADD DWORD PTR [ESP+var_188+0x238],0x20
	ADD EDX, 0x04
	CMP DWORD PTR [ESP+var_188+0x238],0x00000080
	JL loc_100A46E3
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_1E0+0x238]
	FLD QWORD PTR [ESP+var_1C0+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_1E0+0x238]
	FMUL QWORD PTR [ESP+var_1A8+0x238]
	FLD QWORD PTR [ESP+var_1C8+0x238]
	FMUL QWORD PTR [ESP+var_1C0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_1A8+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_1C8+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL ST,ST(3)
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL ST,ST(3)
	FCOMPP
	FLD QWORD PTR [ESP+var_200+0x238]
	FMUL ST,ST(2)
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_1B0+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_1D0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_1B0+0x238]
	FMUL QWORD PTR [ESP+var_1E0+0x238]
	FLD QWORD PTR [ESP+var_1C0+0x238]
	FMUL QWORD PTR [ESP+var_1D0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_108+0x238]
	FLD QWORD PTR [ESP+var_200+0x238]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_108+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_1F0+0x238]
	FMUL ST,ST(6)
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_68+0x238]
	FLD QWORD PTR [ESP+var_1D0+0x238]
	FMUL QWORD PTR [ESP+var_1A8+0x238]
	FLD QWORD PTR [ESP+var_1C8+0x238]
	FMUL QWORD PTR [ESP+var_1B0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_198+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_108+0x238]
	FLD QWORD PTR [ESP+var_1F0+0x238]
	FMUL ST,ST(5)
	FCOMPP
	FLD QWORD PTR [ESP+var_200+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1A0+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_1F0+0x238]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_188+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL ST,ST(2)
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_68+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_1A0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_188+0x238]
	FADDP ST(1),ST
	FDIVR QWORD PTR [offset LEGO1_rdata + 0x7BF8]
	FST QWORD PTR [ESP+var_228+0x238]
	FMUL QWORD PTR [ESP+var_188+0x238]
	FSTP QWORD PTR [ESP+var_188+0x238]
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_180+0x238]
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_1B0+0x238]
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_1F0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_60+0x238]
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_1A8+0x238]
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_1E8+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_78+0x238]
	FLD QWORD PTR [ESP+var_1F0+0x238]
	FMUL QWORD PTR [ESP+var_1A8+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_1B0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_190+0x238]
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_60+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL QWORD PTR [ESP+var_78+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_190+0x238]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_178+0x238]
	FLD QWORD PTR [ESP+var_1C8+0x238]
	FMUL QWORD PTR [ESP+var_1F0+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_1D0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_80+0x238]
	FLD QWORD PTR [ESP+var_1C8+0x238]
	FMUL QWORD PTR [ESP+var_1F8+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_70+0x238]
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_1D0+0x238]
	FLD QWORD PTR [ESP+var_1F0+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_50+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_80+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL QWORD PTR [ESP+var_70+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_50+0x238]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_170+0x238]
	FLD QWORD PTR [ESP+var_1A0+0x238]
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_168+0x238]
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_108+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL ST,ST(5)
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_160+0x238]
	FLD QWORD PTR [ESP+var_200+0x238]
	FMUL QWORD PTR [ESP+var_1A8+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_1C0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_1A0+0x238]
	FLD QWORD PTR [ESP+var_1B0+0x238]
	FMUL QWORD PTR [ESP+var_200+0x238]
	FLD QWORD PTR [ESP+var_1C0+0x238]
	FMUL QWORD PTR [ESP+var_1F0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_198+0x238]
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_190+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL QWORD PTR [ESP+var_1A0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_158+0x238]
	FLD QWORD PTR [ESP+var_1D0+0x238]
	FMUL QWORD PTR [ESP+var_200+0x238]
	FLD QWORD PTR [ESP+var_1E0+0x238]
	FMUL QWORD PTR [ESP+var_1F0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_58+0x238]
	FLD QWORD PTR [ESP+var_1C8+0x238]
	FMUL QWORD PTR [ESP+var_200+0x238]
	FLD QWORD PTR [ESP+var_1E8+0x238]
	FMUL QWORD PTR [ESP+var_1E0+0x238]
	FCOMPP
	FSTP QWORD PTR [ESP+var_190+0x238]
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL QWORD PTR [ESP+var_58+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL QWORD PTR [ESP+var_190+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_80+0x238]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_150+0x238]
	FXCH ST(1)
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_148+0x238]
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL ST,ST(4)
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL ST,ST(3)
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_140+0x238]
	FLD QWORD PTR [ESP+var_1B8+0x238]
	FMUL QWORD PTR [ESP+var_200+0x238]
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_1C0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_78+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_1A0+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_208+0x238]
	FMUL ST,ST(2)
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_138+0x238]
	FLD QWORD PTR [ESP+var_200+0x238]
	FMUL QWORD PTR [ESP+var_1D8+0x238]
	FLD QWORD PTR [ESP+var_1F8+0x238]
	FMUL QWORD PTR [ESP+var_1E0+0x238]
	FCOMPP
	FST QWORD PTR [ESP+var_1A0+0x238]
	FMUL QWORD PTR [ESP+var_208+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_190+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_70+0x238]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_130+0x238]
	FLD QWORD PTR [ESP+var_68+0x238]
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_128+0x238]
	FXCH ST(4)
	FMUL QWORD PTR [ESP+var_210+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_108+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMULP ST(2),ST
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_120+0x238]
	FXCH ST(2)
	FMUL QWORD PTR [ESP+var_210+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_198+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_60+0x238]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_118+0x238]
	FLD QWORD PTR [ESP+var_210+0x238]
	FMUL QWORD PTR [ESP+var_1A0+0x238]
	FLD QWORD PTR [ESP+var_218+0x238]
	FMUL QWORD PTR [ESP+var_58+0x238]
	FCOMPP
	FLD QWORD PTR [ESP+var_220+0x238]
	FMUL QWORD PTR [ESP+var_50+0x238]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_228+0x238]
	FSTP QWORD PTR [ESP+var_110+0x238]
	FLD QWORD PTR [ESP+var_170+0x238]
	FMUL QWORD PTR [ESP+var_A0+0x238]
	FLD QWORD PTR [ESP+var_180+0x238]
	FMUL QWORD PTR [ESP+var_E0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_178+0x238]
	FMUL QWORD PTR [ESP+var_C0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_188+0x238]
	FMUL QWORD PTR [ESP+var_100+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_220+0x238]
	FLD QWORD PTR [ESP+var_178+0x238]
	FMUL QWORD PTR [ESP+var_B8+0x238]
	FLD QWORD PTR [ESP+var_180+0x238]
	FMUL QWORD PTR [ESP+var_D8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_170+0x238]
	FMUL QWORD PTR [ESP+var_98+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_188+0x238]
	FMUL QWORD PTR [ESP+var_F8+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_218+0x238]
	FLD QWORD PTR [ESP+var_170+0x238]
	FMUL QWORD PTR [ESP+var_90+0x238]
	FLD QWORD PTR [ESP+var_180+0x238]
	FMUL QWORD PTR [ESP+var_D0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_178+0x238]
	FMUL QWORD PTR [ESP+var_B0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_188+0x238]
	FMUL QWORD PTR [ESP+var_F0+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_210+0x238]
	FLD QWORD PTR [ESP+var_178+0x238]
	FMUL QWORD PTR [ESP+var_A8+0x238]
	FLD QWORD PTR [ESP+var_180+0x238]
	FMUL QWORD PTR [ESP+var_C8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_170+0x238]
	FMUL QWORD PTR [ESP+var_88+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_188+0x238]
	FMUL QWORD PTR [ESP+var_E8+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_208+0x238]
	FLD QWORD PTR [ESP+var_160+0x238]
	FMUL QWORD PTR [ESP+var_E0+0x238]
	FLD QWORD PTR [ESP+var_150+0x238]
	FMUL QWORD PTR [ESP+var_A0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_158+0x238]
	FMUL QWORD PTR [ESP+var_C0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_168+0x238]
	FMUL QWORD PTR [ESP+var_100+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_200+0x238]
	FLD QWORD PTR [ESP+var_158+0x238]
	FMUL QWORD PTR [ESP+var_B8+0x238]
	FLD QWORD PTR [ESP+var_160+0x238]
	FMUL QWORD PTR [ESP+var_D8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_168+0x238]
	FMUL QWORD PTR [ESP+var_F8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_150+0x238]
	FMUL QWORD PTR [ESP+var_98+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1F8+0x238]
	FLD QWORD PTR [ESP+var_160+0x238]
	FMUL QWORD PTR [ESP+var_D0+0x238]
	FLD QWORD PTR [ESP+var_150+0x238]
	FMUL QWORD PTR [ESP+var_90+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_158+0x238]
	FMUL QWORD PTR [ESP+var_B0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_168+0x238]
	FMUL QWORD PTR [ESP+var_F0+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1F0+0x238]
	FLD QWORD PTR [ESP+var_160+0x238]
	FMUL QWORD PTR [ESP+var_C8+0x238]
	FLD QWORD PTR [ESP+var_158+0x238]
	FMUL QWORD PTR [ESP+var_A8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_168+0x238]
	FMUL QWORD PTR [ESP+var_E8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_150+0x238]
	FMUL QWORD PTR [ESP+var_88+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1E8+0x238]
	FLD QWORD PTR [ESP+var_140+0x238]
	FMUL QWORD PTR [ESP+var_E0+0x238]
	FLD QWORD PTR [ESP+var_138+0x238]
	FMUL QWORD PTR [ESP+var_C0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_130+0x238]
	FMUL QWORD PTR [ESP+var_A0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_148+0x238]
	FMUL QWORD PTR [ESP+var_100+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1E0+0x238]
	FLD QWORD PTR [ESP+var_148+0x238]
	FMUL QWORD PTR [ESP+var_F8+0x238]
	FLD QWORD PTR [ESP+var_140+0x238]
	FMUL QWORD PTR [ESP+var_D8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_138+0x238]
	FMUL QWORD PTR [ESP+var_B8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_130+0x238]
	FMUL QWORD PTR [ESP+var_98+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1D8+0x238]
	FLD QWORD PTR [ESP+var_140+0x238]
	FMUL QWORD PTR [ESP+var_D0+0x238]
	FLD QWORD PTR [ESP+var_138+0x238]
	FMUL QWORD PTR [ESP+var_B0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_148+0x238]
	FMUL QWORD PTR [ESP+var_F0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_130+0x238]
	FMUL QWORD PTR [ESP+var_90+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1D0+0x238]
	FLD QWORD PTR [ESP+var_148+0x238]
	FMUL QWORD PTR [ESP+var_E8+0x238]
	FLD QWORD PTR [ESP+var_140+0x238]
	FMUL QWORD PTR [ESP+var_C8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_138+0x238]
	FMUL QWORD PTR [ESP+var_A8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_130+0x238]
	FMUL QWORD PTR [ESP+var_88+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1C8+0x238]
	FLD QWORD PTR [ESP+var_120+0x238]
	FMUL QWORD PTR [ESP+var_E0+0x238]
	FLD QWORD PTR [ESP+var_118+0x238]
	FMUL QWORD PTR [ESP+var_C0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_110+0x238]
	FMUL QWORD PTR [ESP+var_A0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_128+0x238]
	FMUL QWORD PTR [ESP+var_100+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1C0+0x238]
	FLD QWORD PTR [ESP+var_128+0x238]
	FMUL QWORD PTR [ESP+var_F8+0x238]
	FLD QWORD PTR [ESP+var_120+0x238]
	FMUL QWORD PTR [ESP+var_D8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_118+0x238]
	FMUL QWORD PTR [ESP+var_B8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_110+0x238]
	FMUL QWORD PTR [ESP+var_98+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1B8+0x238]
	FLD QWORD PTR [ESP+var_120+0x238]
	FMUL QWORD PTR [ESP+var_D0+0x238]
	FLD QWORD PTR [ESP+var_118+0x238]
	FMUL QWORD PTR [ESP+var_B0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_128+0x238]
	FMUL QWORD PTR [ESP+var_F0+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_110+0x238]
	FMUL QWORD PTR [ESP+var_90+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1B0+0x238]
	FLD QWORD PTR [ESP+var_128+0x238]
	FMUL QWORD PTR [ESP+var_E8+0x238]
	FLD QWORD PTR [ESP+var_120+0x238]
	FMUL QWORD PTR [ESP+var_C8+0x238]
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_118+0x238]
	FMUL QWORD PTR [ESP+var_A8+0x238]
	XOR ESI, ESI
	LEA EDI,DWORD PTR [ESP+var_220+0x238]
	MOV EAX, 0x00000004
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_110+0x238]
	FMUL QWORD PTR [ESP+var_88+0x238]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1A8+0x238]
	FSTP ST(0)
	FSTP ST(0)
loc_100A504B:
	MOV EDX, 0x00000004
loc_100A5050:
	FLD QWORD PTR [EDI]
	MOV EBX,DWORD PTR [ESP+var_44+0x238]
	ADD EDI, 0x08
	ADD ESI, 0x04
	DEC EDX
	FSTP DWORD PTR [ESI+EBX-0x04]
	JNZ loc_100A5050
	DEC EAX
	JNZ loc_100A504B
	LEA EAX,DWORD PTR [ESP+var_48+0x238]
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x28])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000228
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A5090(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x24])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A50A0(DWORD arg1)
{
	enum{
		var_1A8 = -0x1A8,
		var_1A0 = -0x1A0,
		var_198 = -0x198,
		var_190 = -0x190,
		var_188 = -0x188,
		var_180 = -0x180,
		var_178 = -0x178,
		var_170 = -0x170,
		var_168 = -0x168,
		var_160 = -0x160,
		var_158 = -0x158,
		var_150 = -0x150,
		var_148 = -0x148,
		var_140 = -0x140,
		var_138 = -0x138,
		var_130 = -0x130,
		var_128 = -0x128,
		var_120 = -0x120,
		var_118 = -0x118,
		var_110 = -0x110,
		var_10C = -0x10C,
		var_108 = -0x108,
		var_C8 = -0xC8,
		var_C0 = -0xC0,
		var_B8 = -0xB8,
		var_B0 = -0xB0,
		var_A8 = -0xA8,
		var_A0 = -0xA0,
		var_98 = -0x98,
		var_90 = -0x90,
		var_88 = -0x88,
		var_80 = -0x80,
		var_78 = -0x78,
		var_70 = -0x70,
		var_68 = -0x68,
		var_60 = -0x60,
		var_58 = -0x58,
		var_50 = -0x50,
		var_48 = -0x48,
		var_40 = -0x40,
		var_38 = -0x38,
		var_30 = -0x30,
		var_28 = -0x28,
		var_20 = -0x20,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x000001A8
	LEA EAX,DWORD PTR [ESP+var_108+0x1A8]
	PUSH EBX
	MOV DWORD PTR [ESP+var_10C+0x1AC],EAX
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x000000D4]
	MOV DWORD PTR [ESP+var_110+0x1B4],offset [LEGO1_rdata.m300_ptr]
	TEST EAX, EAX
	JZ FAR loc_100A58CC
	LEA EDI,DWORD PTR [ESP+var_190+0x1B4]
	MOV EAX,DWORD PTR [EAX+0x14]
	MOV EDX, 0x00000004
loc_100A50DC:
	MOV ESI, 0x00000004
	JMP loc_100A50E6
loc_100A50E3:
	FSTP QWORD PTR [EDI-0x08]
loc_100A50E6:
	FLD DWORD PTR [EAX]
	ADD EAX, 0x04
	ADD EDI, 0x08
	DEC ESI
	JNZ loc_100A50E3
	FSTP QWORD PTR [EDI-0x08]
	DEC EDX
	JNZ loc_100A50DC
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_150+0x1B4]
	FLD QWORD PTR [ESP+var_130+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_150+0x1B4]
	FMUL QWORD PTR [ESP+var_118+0x1B4]
	FLD QWORD PTR [ESP+var_138+0x1B4]
	FMUL QWORD PTR [ESP+var_130+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_118+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_138+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL ST,ST(3)
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL ST,ST(3)
	FCOMPP
	FLD QWORD PTR [ESP+var_170+0x1B4]
	FMUL ST,ST(2)
	FADDP ST(1),ST
	FLD QWORD PTR [ESP+var_120+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_140+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_120+0x1B4]
	FMUL QWORD PTR [ESP+var_150+0x1B4]
	FLD QWORD PTR [ESP+var_130+0x1B4]
	FMUL QWORD PTR [ESP+var_140+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_C0+0x1B4]
	FLD QWORD PTR [ESP+var_170+0x1B4]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_C0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_160+0x1B4]
	FMUL ST,ST(6)
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_A0+0x1B4]
	FLD QWORD PTR [ESP+var_140+0x1B4]
	FMUL QWORD PTR [ESP+var_118+0x1B4]
	FLD QWORD PTR [ESP+var_138+0x1B4]
	FMUL QWORD PTR [ESP+var_120+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_198+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_C0+0x1B4]
	FLD QWORD PTR [ESP+var_160+0x1B4]
	FMUL ST,ST(5)
	FCOMPP
	FLD QWORD PTR [ESP+var_170+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_1A0+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_160+0x1B4]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FADDP ST(1),ST
	FSTP QWORD PTR [ESP+var_80+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL ST,ST(2)
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_A0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_1A0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_80+0x1B4]
	FADDP ST(1),ST
	FDIVR QWORD PTR [offset LEGO1_rdata + 0x7BF8]
	FST QWORD PTR [ESP+var_1A8+0x1B4]
	FMUL QWORD PTR [ESP+var_80+0x1B4]
	FSTP QWORD PTR [ESP+var_80+0x1B4]
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL ST,ST(1)
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_78+0x1B4]
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_120+0x1B4]
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_160+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_98+0x1B4]
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_118+0x1B4]
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_158+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_B0+0x1B4]
	FLD QWORD PTR [ESP+var_160+0x1B4]
	FMUL QWORD PTR [ESP+var_118+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_120+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_C8+0x1B4]
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_98+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL QWORD PTR [ESP+var_B0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_C8+0x1B4]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_70+0x1B4]
	FLD QWORD PTR [ESP+var_138+0x1B4]
	FMUL QWORD PTR [ESP+var_160+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_140+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_B8+0x1B4]
	FLD QWORD PTR [ESP+var_138+0x1B4]
	FMUL QWORD PTR [ESP+var_168+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_A8+0x1B4]
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_140+0x1B4]
	FLD QWORD PTR [ESP+var_160+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_88+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_B8+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL QWORD PTR [ESP+var_A8+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_88+0x1B4]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_68+0x1B4]
	FLD QWORD PTR [ESP+var_1A0+0x1B4]
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_60+0x1B4]
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_C0+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL ST,ST(5)
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_58+0x1B4]
	FLD QWORD PTR [ESP+var_170+0x1B4]
	FMUL QWORD PTR [ESP+var_118+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_130+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_1A0+0x1B4]
	FLD QWORD PTR [ESP+var_120+0x1B4]
	FMUL QWORD PTR [ESP+var_170+0x1B4]
	FLD QWORD PTR [ESP+var_130+0x1B4]
	FMUL QWORD PTR [ESP+var_160+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_198+0x1B4]
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_C8+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL QWORD PTR [ESP+var_1A0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_50+0x1B4]
	FLD QWORD PTR [ESP+var_140+0x1B4]
	FMUL QWORD PTR [ESP+var_170+0x1B4]
	FLD QWORD PTR [ESP+var_150+0x1B4]
	FMUL QWORD PTR [ESP+var_160+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_90+0x1B4]
	FLD QWORD PTR [ESP+var_138+0x1B4]
	FMUL QWORD PTR [ESP+var_170+0x1B4]
	FLD QWORD PTR [ESP+var_158+0x1B4]
	FMUL QWORD PTR [ESP+var_150+0x1B4]
	FCOMPP
	FSTP QWORD PTR [ESP+var_C8+0x1B4]
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL QWORD PTR [ESP+var_90+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL QWORD PTR [ESP+var_C8+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_B8+0x1B4]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_48+0x1B4]
	FXCH ST(1)
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_40+0x1B4]
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL ST,ST(4)
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL ST,ST(4)
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL ST,ST(3)
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_38+0x1B4]
	FLD QWORD PTR [ESP+var_128+0x1B4]
	FMUL QWORD PTR [ESP+var_170+0x1B4]
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_130+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_B0+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_1A0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_178+0x1B4]
	FMUL ST,ST(2)
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_30+0x1B4]
	FLD QWORD PTR [ESP+var_170+0x1B4]
	FMUL QWORD PTR [ESP+var_148+0x1B4]
	FLD QWORD PTR [ESP+var_168+0x1B4]
	FMUL QWORD PTR [ESP+var_150+0x1B4]
	FCOMPP
	FST QWORD PTR [ESP+var_1A0+0x1B4]
	FMUL QWORD PTR [ESP+var_178+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_C8+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_A8+0x1B4]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_28+0x1B4]
	FLD QWORD PTR [ESP+var_A0+0x1B4]
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_20+0x1B4]
	FXCH ST(4)
	FMUL QWORD PTR [ESP+var_180+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_C0+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMULP ST(2),ST
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_18+0x1B4]
	FXCH ST(2)
	FMUL QWORD PTR [ESP+var_180+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_198+0x1B4]
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_98+0x1B4]
	FADDP ST(1),ST
	FCHS
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_10+0x1B4]
	FLD QWORD PTR [ESP+var_180+0x1B4]
	FMUL QWORD PTR [ESP+var_1A0+0x1B4]
	FLD QWORD PTR [ESP+var_188+0x1B4]
	FMUL QWORD PTR [ESP+var_90+0x1B4]
	XOR ESI, ESI
	LEA EDI,DWORD PTR [ESP+var_80+0x1B4]
	MOV EAX, 0x00000004
	FCOMPP
	FLD QWORD PTR [ESP+var_190+0x1B4]
	FMUL QWORD PTR [ESP+var_88+0x1B4]
	FADDP ST(1),ST
	FMUL QWORD PTR [ESP+var_1A8+0x1B4]
	FSTP QWORD PTR [ESP+var_8+0x1B4]
	FSTP ST(0)
	FSTP ST(0)
loc_100A55CE:
	MOV EDX, 0x00000004
loc_100A55D3:
	FLD QWORD PTR [EDI]
	MOV EBX,DWORD PTR [ESP+var_10C+0x1B4]
	ADD EDI, 0x08
	ADD ESI, 0x04
	DEC EDX
	FSTP DWORD PTR [ESI+EBX-0x04]
	JNZ loc_100A55D3
	DEC EAX
	JNZ loc_100A55CE
	MOV EDX,DWORD PTR [ESP+arg1+0x1B4]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x08]
	FMUL DWORD PTR [EAX+0x20]
	FLD DWORD PTR [ESI+0x04]
	FMUL DWORD PTR [EAX+0x10]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x0C]
	FMUL DWORD PTR [EAX+0x30]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x04]
	FMUL DWORD PTR [EAX+0x14]
	FLD DWORD PTR [EAX+0x24]
	FMUL DWORD PTR [ESI+0x08]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x0C]
	FMUL DWORD PTR [EAX+0x34]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x04]
	FMUL DWORD PTR [ESI]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x04]
	FMUL DWORD PTR [EAX+0x18]
	FLD DWORD PTR [EAX+0x28]
	FMUL DWORD PTR [ESI+0x08]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x38]
	FMUL DWORD PTR [ESI+0x0C]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESI]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x08]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x04]
	FMUL DWORD PTR [EAX+0x1C]
	FLD DWORD PTR [ESI+0x08]
	FMUL DWORD PTR [EAX+0x2C]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x3C]
	FMUL DWORD PTR [ESI+0x0C]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x0C]
	FMUL DWORD PTR [ESI]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x0C]
	MOV ESI,DWORD PTR [ECX+0x14]
	FLD DWORD PTR [ESI+0x18]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FMUL DWORD PTR [EAX+0x20]
	FLD DWORD PTR [ESI+0x1C]
	FMUL DWORD PTR [EAX+0x30]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x14]
	FMUL DWORD PTR [EAX+0x10]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x10]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x10]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x14]
	FMUL DWORD PTR [EAX+0x14]
	FLD DWORD PTR [EAX+0x24]
	FMUL DWORD PTR [ESI+0x18]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x1C]
	FMUL DWORD PTR [EAX+0x34]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x10]
	FMUL DWORD PTR [EAX+0x04]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x14]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESI+0x10]
	FLD DWORD PTR [ESI+0x14]
	FMUL DWORD PTR [EAX+0x18]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x18]
	FMUL DWORD PTR [EAX+0x28]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x38]
	FMUL DWORD PTR [ESI+0x1C]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x18]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x14]
	FMUL DWORD PTR [EAX+0x1C]
	FLD DWORD PTR [ESI+0x18]
	FMUL DWORD PTR [EAX+0x2C]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x3C]
	FMUL DWORD PTR [ESI+0x1C]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x0C]
	FMUL DWORD PTR [ESI+0x10]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x1C]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [EAX+0x30]
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [EAX+0x10]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [EAX+0x20]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x20]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x20]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [EAX+0x24]
	FMUL DWORD PTR [ESI+0x28]
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [EAX+0x14]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [EAX+0x34]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x20]
	FMUL DWORD PTR [EAX+0x04]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x24]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [EAX+0x18]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESI+0x20]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [EAX+0x28]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x38]
	FMUL DWORD PTR [ESI+0x2C]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x28]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [EAX+0x1C]
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [EAX+0x2C]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [EAX+0x3C]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x0C]
	FMUL DWORD PTR [ESI+0x20]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x2C]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ESI+0x3C]
	FMUL DWORD PTR [EAX+0x30]
	FLD DWORD PTR [ESI+0x34]
	FMUL DWORD PTR [EAX+0x10]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x20]
	FMUL DWORD PTR [ESI+0x38]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x30]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x30]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [EAX+0x24]
	FMUL DWORD PTR [ESI+0x38]
	FLD DWORD PTR [EAX+0x14]
	FMUL DWORD PTR [ESI+0x34]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x3C]
	FMUL DWORD PTR [EAX+0x34]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ESI+0x30]
	FMUL DWORD PTR [EAX+0x04]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x34]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESI+0x30]
	FLD DWORD PTR [EAX+0x18]
	FMUL DWORD PTR [ESI+0x34]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x38]
	FMUL DWORD PTR [ESI+0x3C]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x28]
	FMUL DWORD PTR [ESI+0x38]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x38]
	MOV ECX,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [ESP+var_10C+0x1B4]
	FLD DWORD PTR [ECX+0x3C]
	FMUL DWORD PTR [EAX+0x3C]
	FLD DWORD PTR [EAX+0x0C]
	FMUL DWORD PTR [ECX+0x30]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x1C]
	FMUL DWORD PTR [ECX+0x34]
	MOV EBX,DWORD PTR [EDX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x2C]
	FMUL DWORD PTR [ECX+0x38]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x3C]
	JMP loc_100A58DE
loc_100A58CC:
	ADD ECX, 0x10
	MOV EDX,DWORD PTR [ESP+arg1+0x1B4]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x28])
loc_100A58DE:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000001A8
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A58F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	OR DWORD PTR [ESI+0x000000D8],0x03
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100A5910()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX]
	MOV ESI, ECX
	CALL_LONG(DWORD PTR [EDI+0x18])
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI+0x2C])
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A5930(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	PUSH EAX
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ECX+0x10]
	LEA ECX,DWORD PTR [ECX+0x10]
	CALL_LONG(DWORD PTR [ESI+0x28])
	MOV ESI,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x18])
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x2C])
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A5960(DWORD arg1)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x48
	LEA EAX,DWORD PTR [ESP+var_40+0x48]
	PUSH EBX
	PUSH ESI
	MOV EBX, ECX
	PUSH EDI
	MOV ECX, 0x00000010
	MOV EDI, EAX
	MOV ESI,DWORD PTR [EBX+0x14]
	LEA EDX,DWORD PTR [ESP+var_48+0x54]
	MOV DWORD PTR [ESP+var_44+0x54],EAX
	MOV DWORD PTR [ESP+var_48+0x54],offset [LEGO1_rdata.m300_ptr]
	REP MOVSD
	LEA ECX,DWORD PTR [EBX+0x10]
	PUSH EDX
	MOV EAX,DWORD PTR [ESP+arg1+0x58]
	MOV ESI,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x38])
	MOV ESI,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [ESI+0x18])
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [ESI+0x2C])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x48
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A59B0(DWORD arg1)
{
	enum{
		var_54 = -0x54,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x4C
	LEA EAX,DWORD PTR [ESP+var_40+0x4C]
	PUSH EBX
	PUSH ESI
	MOV EBX, ECX
	PUSH EDI
	MOV ECX, 0x00000010
	MOV EDI, EAX
	MOV ESI,DWORD PTR [EBX+0x14]
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESP+var_44+0x58],EAX
	REP MOVSD
	LEA ECX,DWORD PTR [EBX+0x10]
	MOV ESI,DWORD PTR [ESP+arg1+0x58]
	LEA EAX,DWORD PTR [ESP+var_48+0x58]
	PUSH ESI
	PUSH EAX
	MOV EDI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EDI+0x38])
	MOV EDI,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x18])
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x2C])
	MOV EAX,DWORD PTR [EBX+0x04]
	TEST EAX, EAX
	JZ loc_100A5A25
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_54+0x60],ECX
	CMP ECX, EAX
	JZ loc_100A5A25
loc_100A5A06:
	MOV EAX,DWORD PTR [ESP+var_54+0x60]
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EDI+0x28])
	MOV ECX,DWORD PTR [ESP+var_54+0x60]
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV EDI,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_54+0x60],EDI
	CMP DWORD PTR [EAX+0x04],EDI
	JNZ loc_100A5A06
loc_100A5A25:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A5A30(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	ADD ECX, 0x000000C0
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100A5A60(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg4]
	PUSH ESI
	MOV EDX,DWORD PTR [ESP+arg1+0x4]
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg2+0x8]
	MOV EDI,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [ESI+0x04]
	FMUL DWORD PTR [EAX+0x20]
	FLD DWORD PTR [EDI+0x04]
	FMUL DWORD PTR [EAX+0x10]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EDI]
	MOV EDI,DWORD PTR [ECX+0x04]
	FADDP ST(1),ST
	FADD DWORD PTR [EAX+0x30]
	FSTP DWORD PTR [EDI]
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [EDI+0x14]
	FMUL DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EDI+0x24]
	FMUL DWORD PTR [EAX+0x08]
	FADDP ST(1),ST
	FLD DWORD PTR [EDI+0x04]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FADD DWORD PTR [EDI+0x34]
	MOV EDI,DWORD PTR [ECX+0x04]
	FSTP DWORD PTR [EDI+0x04]
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ESI+0x04]
	FLD DWORD PTR [EDI+0x04]
	FMUL DWORD PTR [EAX+0x18]
	FLD DWORD PTR [EAX+0x28]
	FMUL DWORD PTR [EDI+0x08]
	MOV ESI,DWORD PTR [ECX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [EDI]
	FADDP ST(1),ST
	FADD DWORD PTR [EAX+0x38]
	FSTP DWORD PTR [ESI+0x08]
	FLD DWORD PTR [EDX+0x14]
	MOV EDX,DWORD PTR [ESP+arg3+0x8]
	MOV ESI,DWORD PTR [ECX+0x04]
	FST DWORD PTR [ECX+0x14]
	FSUBR DWORD PTR [ESI]
	MOV EDI,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [EDI]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [ESI+0x04]
	FSUB DWORD PTR [ECX+0x14]
	FSTP DWORD PTR [EDI+0x04]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [ESI+0x08]
	FSUB DWORD PTR [ECX+0x14]
	FSTP DWORD PTR [EDI+0x08]
	MOV ESI,DWORD PTR [ECX+0x04]
	FLD DWORD PTR [ESI]
	FADD DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [EDX+0x18]
	FSTP DWORD PTR [EAX]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX+0x18]
	FLD DWORD PTR [ESI+0x04]
	FADD DWORD PTR [ECX+0x14]
	POP EDI
	FSTP DWORD PTR [EAX+0x04]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX+0x18]
	FLD DWORD PTR [ESI+0x08]
	FADD DWORD PTR [ECX+0x14]
	POP ESI
	FSTP DWORD PTR [EAX+0x08]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A5B40(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x24
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EAX+0x04]
	FMUL DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [EAX+0x08]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSQRT
	FLD DWORD PTR [EAX]
	FDIV ST,ST(1)
	MOV ECX,DWORD PTR [ESP+arg3+0x28]
	FSTP DWORD PTR [ESP+var_C+0x28]
	FLD DWORD PTR [EAX+0x04]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_8+0x28]
	FDIVR DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ECX+0x04]
	FSTP DWORD PTR [ESP+var_4+0x28]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [EAX+0x08]
	FLD DWORD PTR [EAX+0x04]
	FMUL DWORD PTR [EAX+0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FADDP ST(1),ST
	FSQRT
	FLD DWORD PTR [EAX]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_24+0x28]
	FLD DWORD PTR [EAX+0x04]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_20+0x28]
	FDIVR DWORD PTR [EAX+0x08]
	FSTP DWORD PTR [ESP+var_1C+0x28]
	FLD DWORD PTR [ESP+var_4+0x28]
	FMUL DWORD PTR [ESP+var_20+0x28]
	FLD DWORD PTR [ESP+var_8+0x28]
	FMUL DWORD PTR [ESP+var_1C+0x28]
	FCOMPP
	FSTP DWORD PTR [ESP+var_18+0x28]
	FLD DWORD PTR [ESP+var_4+0x28]
	FMUL DWORD PTR [ESP+var_24+0x28]
	FLD DWORD PTR [ESP+var_C+0x28]
	FMUL DWORD PTR [ESP+var_1C+0x28]
	FCOMPP
	FCHS
	FSTP DWORD PTR [ESP+var_14+0x28]
	FLD DWORD PTR [ESP+var_8+0x28]
	FMUL DWORD PTR [ESP+var_24+0x28]
	FLD DWORD PTR [ESP+var_C+0x28]
	FMUL DWORD PTR [ESP+var_20+0x28]
	FCOMPP
	FST DWORD PTR [ESP+var_10+0x28]
	FMUL DWORD PTR [ESP+var_10+0x28]
	FLD DWORD PTR [ESP+var_14+0x28]
	FMUL DWORD PTR [ESP+var_14+0x28]
	FADDP ST(1),ST
	FLD DWORD PTR [ESP+var_18+0x28]
	FMUL DWORD PTR [ESP+var_18+0x28]
	FADDP ST(1),ST
	FSQRT
	FLD DWORD PTR [ESP+var_18+0x28]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_18+0x28]
	FLD DWORD PTR [ESP+var_14+0x28]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_14+0x28]
	FDIVR DWORD PTR [ESP+var_10+0x28]
	FST DWORD PTR [ESP+var_10+0x28]
	FMUL DWORD PTR [ESP+var_8+0x28]
	FLD DWORD PTR [ESP+var_4+0x28]
	FMUL DWORD PTR [ESP+var_14+0x28]
	FCOMPP
	FSTP DWORD PTR [ESP+var_24+0x28]
	FLD DWORD PTR [ESP+var_C+0x28]
	FMUL DWORD PTR [ESP+var_10+0x28]
	FLD DWORD PTR [ESP+var_4+0x28]
	FMUL DWORD PTR [ESP+var_18+0x28]
	FCOMPP
	FCHS
	FSTP DWORD PTR [ESP+var_20+0x28]
	FLD DWORD PTR [ESP+var_C+0x28]
	FMUL DWORD PTR [ESP+var_14+0x28]
	FLD DWORD PTR [ESP+var_8+0x28]
	FMUL DWORD PTR [ESP+var_18+0x28]
	FCOMPP
	FST DWORD PTR [ESP+var_1C+0x28]
	FMUL DWORD PTR [ESP+var_1C+0x28]
	FLD DWORD PTR [ESP+var_20+0x28]
	FMUL DWORD PTR [ESP+var_20+0x28]
	FADDP ST(1),ST
	FLD DWORD PTR [ESP+var_24+0x28]
	FMUL DWORD PTR [ESP+var_24+0x28]
	FADDP ST(1),ST
	FSQRT
	FLD DWORD PTR [ESP+var_24+0x28]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_24+0x28]
	FLD DWORD PTR [ESP+var_20+0x28]
	FDIV ST,ST(1)
	FSTP DWORD PTR [ESP+var_20+0x28]
	FDIVR DWORD PTR [ESP+var_1C+0x28]
	FSTP DWORD PTR [ESP+var_1C+0x28]
	MOV ECX,DWORD PTR [ESP+arg4+0x28]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [ESP+var_18+0x28]
	MOV ESI,DWORD PTR [ESP+var_14+0x28]
	MOV DWORD PTR [EAX],EDX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV EAX,DWORD PTR [ESP+var_10+0x28]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x08],EAX
	XOR EDX, EDX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_24+0x28]
	MOV DWORD PTR [ESI+0x0C],EDX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+0x10],EAX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_20+0x28]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_1C+0x28]
	MOV DWORD PTR [ESI+0x18],EAX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_C+0x28]
	MOV DWORD PTR [ESI+0x1C],EDX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+0x20],EAX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_8+0x28]
	MOV DWORD PTR [ESI+0x24],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ESI,DWORD PTR [ESP+var_4+0x28]
	MOV DWORD PTR [EAX+0x28],ESI
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ESI,DWORD PTR [ESP+arg1+0x28]
	MOV DWORD PTR [EAX+0x2C],EDX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x30],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x34],EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ESI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [EDX+0x38],EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x3C],0x3F800000
	ADD ESP, 0x24
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A5DC0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mA4E20_sub_100A5E20])
	MOV EAX, ESI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1__SetUserMaxLOD_RealtimeView__SAXM_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x11048], EAX
	JMP_LONG(offset [LEGO1_text.mA4E20_sub_100A5E20])
}
}

__declspec(naked) DWORD LEGO1__SetPartsThreshold_RealtimeView__SAXM_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x1104C], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1__GetUserMaxLOD_RealtimeView__SAMXZ()
{
__asm{
	FLD DWORD PTR [offset LEGO1_data + 0x11048]
	RET
}
}

__declspec(naked) DWORD LEGO1__GetPartsThreshold_RealtimeView__SAMXZ()
{
__asm{
	FLD DWORD PTR [offset LEGO1_data + 0x1104C]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A5E20()
{
__asm{
	FLD DWORD PTR [offset LEGO1_data + 0x11044]
	FLD DWORD PTR [offset LEGO1_data + 0x11048]
	FCHS
	CALL_LONG(offset [LEGO1_text.mD11C2_sub_100D21C2])
	FSTP DWORD PTR [offset LEGO1_data + 0x19598]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A5E40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA4E91_proc_100A5E91]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7D70_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	TEST ECX, ECX
	JZ loc_100A5E78
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100A5E78:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA4E9B_sub_100A5E9B])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A5E9B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA5F00_loc_100A6F00])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A5EB0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA4FE7_proc_100A5FE7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [EBP+arg2+0x4]
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH 0x0C
	MOV DWORD PTR [EBX+0x04],ESI
	MOV BYTE PTR [EBX+0x08],AL
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	LEA ECX,DWORD PTR [EBX+0x14]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	MOV DWORD PTR [EBX+0x0C],EAX
	MOV DWORD PTR [EBX+0x10],EDI
	CALL_LONG(offset [LEGO1_text.mA4DC0_sub_100A5DC0])
	MOV ECX, 0x00000002
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [EBP+var_8+0x4],CL
	MOV BYTE PTR [EBX+0x18],AL
	MOV DWORD PTR [EBX+0x1C],EDI
	LEA EAX,DWORD PTR [EBX+0x48]
	MOV DWORD PTR [EBX+0x20],EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBX+0x24],EDI
	MOV DWORD PTR [EBX+0x44],EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m7D88_ptr]
	MOV DWORD PTR [EBX+0x30],0x0000000F
	MOV DWORD PTR [EBX+0x40],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EBX+0x40],offset [LEGO1_rdata.m300_ptr]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBX+0x28],0x3DB851EC
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBX+0x000001B0],EDX
	LEA ECX,DWORD PTR [EBX+0x40]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ESI,DWORD PTR [EBX+0x40]
	MOV DWORD PTR [EBX+0x000001B4],EAX
	MOV DWORD PTR [EBX+0x34],EDI
	MOV DWORD PTR [EBX+0x38],EDI
	MOV DWORD PTR [EBX+0x3C],EDI
	CALL_LONG(DWORD PTR [ESI+0x24])
	MOV DWORD PTR [EBX+0x00000088],EDI
	MOV DWORD PTR [EBX+0x0000008C],EDI
	LEA EDI,DWORD PTR [EBX+0x000000F0]
	XOR EAX, EAX
	MOV ECX, 0x00000018
	REP STOSD
	MOV EAX, EBX
	POP EDI
	MOV DWORD PTR [EBX+0x000001B8],0x3F800000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100A6061()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m83930_loc_10084930])
}
}

__declspec(naked) DWORD LEGO1_sub_100A60B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA5F80_loc_100A6F80])
}
}

__declspec(naked) DWORD LEGO1_sub_100A60C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA5133_proc_100A6133]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7D88_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	PUSH 0x00
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.mA511D_sub_100A611D])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mA5128_sub_100A6128])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA513D_sub_100A613D])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A611D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x18
	JMP_LONG(offset [LEGO1_text.mA5070_loc_100A6070])
}
}

__declspec(naked) DWORD LEGO1_sub_100A6128()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x14
	JMP_LONG(offset [LEGO1_text.mA4DD0_loc_100A5DD0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A613D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x08
	JMP_LONG(offset [LEGO1_text.mA5020_loc_100A6020])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6150(DWORD arg1)
{
	enum{
		var_68 = -0x68,
		var_64 = -0x64,
		var_58 = -0x58,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x68
	XOR EDX, EDX
	PUSH ESI
	MOV DWORD PTR [ESP+var_68+0x6C],EAX
	PUSH EDI
	ADD EAX, 0x14
	MOV DWORD PTR [ESP+var_64+0x70],EAX
loc_100A6166:
	XOR EDI, EDI
	MOV ESI, EDX
loc_100A616A:
	CMP EDI, 0x0C
	JGE loc_100A618C
	MOV EAX,DWORD PTR [offset LEGO1_rdata + 0x7C78+ESI]
	ADD EDI, 0x04
	ADD ESI, 0x04
	MOV EAX,DWORD PTR [EAX*4+ESP+var_68+0x70]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDI+EAX-0x04]
	MOV DWORD PTR [ESI+ESP+var_64+0x70],EAX
	JMP loc_100A616A
loc_100A618C:
	ADD EDX, 0x0C
	CMP EDX, 0x60
	JL loc_100A6166
	FLD DWORD PTR [offset LEGO1_rdata + 0x7D24]
	XOR EDX, EDX
	ADD ECX, 0x00000158
loc_100A61A2:
	XOR EDI, EDI
	LEA ESI,DWORD PTR [ESP+var_58+0x70]
loc_100A61A8:
	FLD DWORD PTR [ESI-0x08]
	FMUL DWORD PTR [ECX-0x08]
	FLD DWORD PTR [ESI-0x04]
	FMUL DWORD PTR [ECX-0x04]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ESI]
	FADDP ST(1),ST
	FADD DWORD PTR [ECX+0x04]
	FCOMP ST(1)
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100A61D4
	ADD ESI, 0x0C
	INC EDI
	LEA EAX,DWORD PTR [ESP+arg2+0x70]
	CMP ESI, EAX
	JB loc_100A61A8
loc_100A61D4:
	CMP EDI, 0x08
	JZ loc_100A61F1
	ADD ECX, 0x10
	INC EDX
	CMP EDX, 0x06
	JL loc_100A61A2
	FSTP ST(0)
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x68
	RETN 0x0004
loc_100A61F1:
	FSTP ST(0)
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x68
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6410(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x0C]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EAX, ECX
	JZ FAR loc_100A64BB
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
loc_100A642D:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x08],EDI
	JZ loc_100A6449
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],EDX
	CMP EDX, ECX
	JNZ loc_100A642D
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_100A6449:
	MOV EDX,DWORD PTR [ESP+var_4+0x10]
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x04]
	ADD EDX, 0x04
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x10]
	CMP DWORD PTR [EDI+0x000000E0],0x00
	JL loc_100A647F
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
loc_100A647F:
	MOV EDI,DWORD PTR [EDI+0x04]
	TEST EDI, EDI
	JZ loc_100A64BB
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],ECX
	CMP ECX, EAX
	JZ loc_100A64BB
	XOR EBX, EBX
loc_100A6495:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EAX+0x000000E0],EBX
	JL loc_100A64AC
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
loc_100A64AC:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],ECX
	CMP DWORD PTR [EDI+0x04],ECX
	JNZ loc_100A6495
loc_100A64BB:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1__RemoveAll_ViewManager__QAEXPAVViewROI___Z(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x0C
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x14]
	TEST EDI, EDI
	JZ loc_100A653E
	CMP DWORD PTR [EDI+0x000000E0],0x00
	JL loc_100A64EE
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
loc_100A64EE:
	MOV DWORD PTR [EDI+0x000000E0],0xFFFFFFFF
	MOV EDI,DWORD PTR [EDI+0x04]
	TEST EDI, EDI
	JZ FAR loc_100A65A6
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x14],ECX
	CMP ECX, EAX
	JZ FAR loc_100A65A6
loc_100A6514:
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	MOV EAX,DWORD PTR [EAX+0x08]
	TEST EAX, EAX
	JZ loc_100A6527
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA54D0__RemoveAll_ViewManager__QAEXPAVViewROI___Z])
loc_100A6527:
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x14],ECX
	CMP DWORD PTR [EDI+0x04],ECX
	JNZ loc_100A6514
	POP EDI
	POP ESI
	ADD ESP, 0x0C
	RETN 0x0004
loc_100A653E:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x14],ECX
	CMP ECX, EAX
	JZ loc_100A6569
loc_100A654B:
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA54D0__RemoveAll_ViewManager__QAEXPAVViewROI___Z])
	MOV ECX,DWORD PTR [ESP+var_C+0x14]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_C+0x14],EDX
	CMP DWORD PTR [ESI+0x0C],EDX
	JNZ loc_100A654B
loc_100A6569:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESP+var_4+0x14],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EDI, ECX
	CMP ECX, EAX
	JZ loc_100A65A6
loc_100A6578:
	LEA EDX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_C+0x14],EDI
	MOV EAX, EDI
	MOV EDI,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x10]
	CMP DWORD PTR [ESP+var_4+0x14],EDI
	JNZ loc_100A6578
loc_100A65A6:
	POP EDI
	POP ESI
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A65B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH EBP
	MOV EDI,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESI+0x08]
	TEST EAX, EAX
	JNZ loc_100A65D0
	TEST EDI, EDI
	JL loc_100A65E2
	JMP loc_100A65D5
loc_100A65D0:
	CMP DWORD PTR [EAX+0x0C],EDI
	JG loc_100A65E2
loc_100A65D5:
	MOV EDI, 0xFFFFFFFF
	TEST EAX, EAX
	JZ loc_100A65E2
	MOV EDI,DWORD PTR [EAX+0x0C]
	DEC EDI
loc_100A65E2:
	MOV EBP,DWORD PTR [ESI+0x000000E0]
	CMP EBP, EDI
	JZ FAR loc_100A6691
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EAX+0x34]
	MOV DWORD PTR [ESP+var_8+0x18],ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [ESP+var_8+0x18])
	MOV EBX, EAX
	TEST EBP, EBP
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	JGE loc_100A6633
	MOV EBP,DWORD PTR [EDI*4+ECX]
	TEST BYTE PTR [EBP+arg1217226-0x4A4B20],0x10
	JZ loc_100A6687
	MOV EAX,DWORD PTR [ESP+var_4+0x18]
	PUSH EBX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [ESP+var_8+0x18])
	MOV EAX,DWORD PTR [EAX+0x04]
	PUSH ESI
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	JMP loc_100A6652
loc_100A6633:
	MOV EAX,DWORD PTR [EBP*4+ECX]
	TEST EAX, EAX
	JZ loc_100A6649
	MOV EAX,DWORD PTR [EAX+0x04]
	TEST EAX, EAX
	JZ loc_100A6649
	PUSH EAX
	MOV ECX, EBX
	MOV EAX,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EAX+0x24])
loc_100A6649:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI*4+ECX]
loc_100A6652:
	TEST BYTE PTR [EBP+arg1217226-0x4A4B20],0x10
	JZ loc_100A6687
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	TEST EAX, EAX
	JZ loc_100A6687
	PUSH EAX
	MOV ECX, EBX
	MOV EAX,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [ESP+var_8+0x18])
	MOV EAX,DWORD PTR [EAX+0x04]
	PUSH ESI
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x18])
	POP EBP
	MOV DWORD PTR [ESI+0x000000E0],EDI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
loc_100A6687:
	MOV DWORD PTR [ESI+0x000000E0],0xFFFFFFFF
loc_100A6691:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A66A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [ESI+0x000000E0]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [ECX*4+EDX]
	TEST EBP, EBP
	JZ loc_100A66DE
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x34])
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	TEST EAX, EAX
	JZ loc_100A66D5
	PUSH EAX
	MOV ECX, EBX
	MOV EAX,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EAX+0x24])
loc_100A66D5:
	MOV ECX,DWORD PTR [EDI+0x04]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
loc_100A66DE:
	MOV DWORD PTR [ESI+0x000000E0],0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A66F0(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217280 = 0x4A4C00,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0x14]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	MOV EBP,DWORD PTR [ESP+arg1+0x1C]
loc_100A6701:
	CMP BYTE PTR [EBP+arg1217227-0x4A4B20],0x00
	JNZ loc_100A6713
	CMP ESI, -0x02
	JZ loc_100A6713
	MOV ESI, 0xFFFFFFFE
	JMP loc_100A6701
loc_100A6713:
	MOV EBX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP ESI, -0x01
	JNZ FAR loc_100A685F
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESP+var_C+0x1C])
	CMP DWORD PTR [EAX+0x14],0x3A83126F
	JLE FAR loc_100A685F
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESP+var_C+0x1C])
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA5DC0_sub_100A6DC0])
	FSTP DWORD PTR [ESP+var_4+0x1C]
	FLD DWORD PTR [EDI+0x000001B8]
	FMUL DWORD PTR [offset LEGO1_data + 0x1105C]
	FCOMP DWORD PTR [ESP+var_4+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A6779
	CMP DWORD PTR [EBP+arg1217280-0x4A4B20],-0x02
	JZ FAR loc_100A6917
	MOV ESI, 0xFFFFFFFE
	JMP loc_100A6701
loc_100A6779:
	FLD DWORD PTR [EDI+0x000001B8]
	FMUL DWORD PTR [offset LEGO1_data + 0x19598]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	TEST EAX, EAX
	JZ loc_100A67A7
	FSTP DWORD PTR [ESP+var_C+0x1C]
	CMP DWORD PTR [EAX+0x0C],0x00
	JBE loc_100A67AB
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ECX+0x08]
	AND AL, 0x08
	CMP AL, 0x01
	SBB EAX, EAX
	INC EAX
	JMP loc_100A67E4
loc_100A67A7:
	FSTP DWORD PTR [ESP+var_C+0x1C]
loc_100A67AB:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	TEST EAX, EAX
	JZ loc_100A67E2
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	CMP ECX, EAX
	JZ loc_100A67E2
	XOR EDX, EDX
loc_100A67C1:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV ESI,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ESI+0x08]
	TEST EAX, EAX
	JZ loc_100A67D4
	CMP DWORD PTR [EAX+0x0C],EDX
	JA loc_100A67FD
loc_100A67D4:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV ESI,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x1C],ESI
	CMP ECX, ESI
	JNZ loc_100A67C1
loc_100A67E2:
	XOR EAX, EAX
loc_100A67E4:
	TEST EAX, EAX
	JZ loc_100A681F
	FLD DWORD PTR [offset LEGO1_data + 0x11054]
	FCOMP DWORD PTR [ESP+var_4+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A6818
	XOR ESI, ESI
	JMP loc_100A685F
loc_100A67FD:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ECX+0x08]
	AND AL, 0x08
	CMP AL, 0x01
	SBB EAX, EAX
	INC EAX
	JMP loc_100A67E4
loc_100A6818:
	MOV ESI, 0x00000001
	JMP loc_100A6821
loc_100A681F:
	XOR ESI, ESI
loc_100A6821:
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11058]
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	JGE loc_100A685F
	FLD DWORD PTR [ESP+var_4+0x1C]
	JMP loc_100A683B
loc_100A6837:
	FSTP DWORD PTR [ESP+var_C+0x1C]
loc_100A683B:
	FCOM DWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A685D
	FLD DWORD PTR [offset LEGO1_data + 0x11050]
	FMUL DWORD PTR [ESP+var_C+0x1C]
	INC ESI
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11058]
	JL loc_100A6837
	FSTP DWORD PTR [ESP+var_C+0x1C]
loc_100A685D:
	FSTP ST(0)
loc_100A685F:
	CMP ESI, -0x02
	JZ loc_100A68CC
	TEST EBX, EBX
	JZ loc_100A68AC
	MOV DWORD PTR [EBP+arg1217280-0x4A4B20],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	CMP ECX, EAX
	JZ FAR loc_100A6917
loc_100A6883:
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA56F0_sub_100A66F0])
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_C+0x1C],EDX
	CMP DWORD PTR [EBX+0x04],EDX
	JNZ loc_100A6883
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_100A68AC:
	MOV EAX,DWORD PTR [EBP+0x08]
	TEST EAX, EAX
	JZ loc_100A6917
	CMP DWORD PTR [EAX+0x0C],0x00
	JLE loc_100A6917
	PUSH ESI
	MOV ECX, EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.mA55B0_sub_100A65B0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_100A68CC:
	CMP DWORD PTR [EBP+0x000000E0],0x00
	JL loc_100A68E7
	PUSH EBP
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA56A0_sub_100A66A0])
	MOV DWORD PTR [EBP+arg1217280-0x4A4B20],0xFFFFFFFE
loc_100A68E7:
	TEST EBX, EBX
	JZ loc_100A6917
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	CMP EAX, ECX
	JZ loc_100A6917
loc_100A68F8:
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA56F0_sub_100A66F0])
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_C+0x1C],EDX
	CMP DWORD PTR [EBX+0x04],EDX
	JNZ loc_100A68F8
loc_100A6917:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6930(DWORD arg1, DWORD arg2)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA5B76_proc_100A6B76]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EDI
	PUSH EAX
	MOV DWORD PTR [EBP+var_2C+0x4],EDI
	MOV DWORD PTR [EBP+var_28+0x4],EDI
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4A4_QueryPerformanceFrequency])
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_100A6975
	MOV DWORD PTR [EBP+var_20+0x4],0xFFFFFFFF
	JMP loc_100A697B
loc_100A6975:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
loc_100A697B:
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	MOV EDI,DWORD PTR [offset LEGO1_idata.m4A8_QueryPerformanceCounter]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EAX
	CALL_LONG(EDI)
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x30]
	OR EAX, 0x01
	MOV DWORD PTR [ESI+0x28],ECX
	MOV DWORD PTR [ESI+0x30],EAX
	TEST AL, 0x04
	JZ FAR loc_100A6AD9
	AND EAX, -0x05
	TEST DWORD PTR [ESI+0x38],0x7FFFFFFF
	MOV DWORD PTR [ESI+0x30],EAX
	JZ FAR loc_100A6AE4
	TEST DWORD PTR [ESI+0x00000088],0x7FFFFFFF
	JZ FAR loc_100A6AE4
	FLD DWORD PTR [ESI+0x3C]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x7D38]
	FPTAN
	FSTP ST(0)
	FLD ST(0)
	FMUL ST,ST(1)
	FMUL DWORD PTR [offset LEGO1_rdata + 0x7D3C]
	FSTP DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [ESI+0x00000088]
	FLD DWORD PTR [ESI+0x34]
	FDIV DWORD PTR [ESI+0x38]
	MOV EAX,DWORD PTR [ESI+0x00000088]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FMUL ST,ST(1)
	FLD DWORD PTR [ESI+0x0000008C]
	FADD DWORD PTR [ESI+0x00000088]
	FLD DWORD PTR [ESI+0x00000088]
	FDIVR ST,ST(1)
	LEA ECX,DWORD PTR [ESI+0x00000090]
	ADD ECX, 0x04
	FLD ST(0)
	FMUL ST,ST(4)
	FXCH ST(1)
	FMUL ST,ST(3)
	ADD ECX, 0x04
	ADD ECX, 0x04
	FLD ST(3)
	FSTP DWORD PTR [ECX-0x0C]
	ADD ECX, 0x04
	FLD ST(4)
	FSTP DWORD PTR [ECX-0x0C]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX-0x08],EAX
	ADD ECX, 0x04
	FLD ST(3)
	FSTP DWORD PTR [ECX-0x08]
	ADD ECX, 0x04
	FLD ST(4)
	FCHS
	FST DWORD PTR [ECX-0x08]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x04
	MOV DWORD PTR [ECX-0x08],EAX
	ADD ECX, 0x04
	FXCH ST(4)
	FCHS
	FST DWORD PTR [ECX-0x08]
	FXCH ST(4)
	FSTP DWORD PTR [ECX-0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x04
	ADD ECX, 0x04
	MOV DWORD PTR [ECX-0x08],EAX
	ADD ECX, 0x04
	FXCH ST(3)
	FSTP DWORD PTR [ECX-0x08]
	FXCH ST(3)
	FSTP DWORD PTR [ECX-0x04]
	FLD ST(1)
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x04
	ADD ECX, 0x04
	ADD ECX, 0x04
	MOV DWORD PTR [ECX-0x0C],EAX
	ADD ECX, 0x04
	ADD ECX, 0x04
	FSTP DWORD PTR [ECX-0x10]
	FLD ST(2)
	FSTP DWORD PTR [ECX-0x0C]
	FST DWORD PTR [ECX-0x08]
	FLD ST(1)
	FSTP DWORD PTR [ECX-0x04]
	FLD ST(2)
	FCHS
	FST DWORD PTR [ECX]
	ADD ECX, 0x04
	ADD ECX, 0x04
	ADD ECX, 0x04
	FLD ST(1)
	FSTP DWORD PTR [ECX-0x08]
	FXCH ST(2)
	FCHS
	FST DWORD PTR [ECX-0x04]
	FXCH ST(2)
	FSTP DWORD PTR [ECX]
	FST DWORD PTR [ECX+0x04]
	ADD ECX, 0x04
	ADD ECX, 0x04
	FXCH ST(1)
	FSTP DWORD PTR [ECX]
	ADD ECX, 0x04
	FXCH ST(1)
	FSTP DWORD PTR [ECX]
	FSTP DWORD PTR [ECX+0x04]
	JMP loc_100A6ADD
loc_100A6AD9:
	TEST AL, 0x02
	JZ loc_100A6AE4
loc_100A6ADD:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA5B90_sub_100A6B90])
loc_100A6AE4:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ loc_100A6B0D
loc_100A6AF0:
	PUSH -0x01
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA56F0_sub_100A66F0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	CMP DWORD PTR [ESI+0x0C],EDX
	JNZ loc_100A6AF0
loc_100A6B0D:
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(EDI)
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_2C+0x4],EAX
	JZ loc_100A6B2B
	MOV DWORD PTR [EBP+var_28+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_24+0x4],0x7FEFFFFF
	JMP loc_100A6B50
loc_100A6B2B:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	SUB EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	FDIVP ST(1),ST
	FADD QWORD PTR [EBP+var_28+0x4]
	FSTP QWORD PTR [EBP+var_28+0x4]
loc_100A6B50:
	FLD QWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	FSTP DWORD PTR [offset LEGO1_data + 0x11060]
	CALL_LONG(offset [LEGO1_text.mA5B80_sub_100A6B80])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100A6B80()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA5FC0_loc_100A6FC0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A6B90()
{
	enum{
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1217220 = 0x4A4B10,
	};

__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x000000F0]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	AND DWORD PTR [ECX+0x30],-0x03
	MOV DWORD PTR [ESP+var_40+0x5C],EAX
	MOV DWORD PTR [ESP+var_1C+0x5C],0x00000008
loc_100A6BAF:
	XOR EDX, EDX
	MOV ECX,DWORD PTR [ESP+var_40+0x5C]
loc_100A6BB5:
	CMP EDX, 0x0C
	JGE loc_100A6BF4
	MOV EAX,DWORD PTR [ESI+0x44]
	XOR EDI, EDI
	MOV EBX,DWORD PTR [EDX+EAX+0x30]
	MOV DWORD PTR [ECX],EBX
	MOV EBX, EDX
	MOV EAX,DWORD PTR [ESP+var_40+0x5C]
	SUB EAX, 0x60
	JMP loc_100A6BD2
loc_100A6BD0:
	FSTP DWORD PTR [ECX]
loc_100A6BD2:
	CMP EDI, 0x03
	JGE loc_100A6BEC
	MOV EBP,DWORD PTR [ESI+0x44]
	ADD EBX, 0x10
	ADD EAX, 0x04
	INC EDI
	FLD DWORD PTR [EBX+EBP+arg1217220-0x4A4B20]
	FMUL DWORD PTR [EAX-0x04]
	FADD DWORD PTR [ECX]
	JMP loc_100A6BD0
loc_100A6BEC:
	ADD EDX, 0x04
	ADD ECX, 0x04
	JMP loc_100A6BB5
loc_100A6BF4:
	ADD DWORD PTR [ESP+var_40+0x5C],0x0C
	DEC DWORD PTR [ESP+var_1C+0x5C]
	JNZ loc_100A6BAF
	LEA EBX,DWORD PTR [ESI+0x00000150]
	MOV EDI, offset LEGO1_rdata + 0x7CD8
	MOV EBP, offset [LEGO1_rdata.m518_ptr]
loc_100A6C0F:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESP+var_24+0x5C],EBP
	MOV DWORD PTR [ESP+var_2C+0x5C],EBP
	MOV DWORD PTR [ESP+var_8+0x5C],EBP
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV DWORD PTR [ESP+var_48+0x5C],EBX
	MOV DWORD PTR [ESP+var_4C+0x5C],EBP
	LEA EAX,DWORD PTR [ECX*4+ESI]
	ADD EAX, 0x000000F0
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_20+0x5C],EAX
	LEA EDX,DWORD PTR [ECX*2+ECX]
	MOV ECX,DWORD PTR [EDI+0x08]
	LEA EAX,DWORD PTR [EDX*4+ESI]
	ADD EAX, 0x000000F0
	LEA EDX,DWORD PTR [ECX*2+ECX]
	LEA ECX,DWORD PTR [ESP+var_14+0x5C]
	MOV DWORD PTR [ESP+var_28+0x5C],EAX
	LEA EAX,DWORD PTR [EDX*4+ESI]
	LEA EDX,DWORD PTR [ESP+var_38+0x5C]
	ADD EAX, 0x000000F0
	MOV DWORD PTR [ESP+var_4+0x5C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x5C]
	MOV DWORD PTR [ESP+var_18+0x5C],ECX
	PUSH EAX
	MOV DWORD PTR [ESP+var_1C+0x60],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESP+var_1C+0x60]
	MOV DWORD PTR [ESP+var_3C+0x60],EDX
	MOV DWORD PTR [ESP+var_40+0x60],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	MOV EAX,DWORD PTR [ESP+var_20+0x60]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_1C+0x60]
	CALL_LONG(DWORD PTR [EAX+0x54])
	LEA ECX,DWORD PTR [ESP+var_28+0x60]
	MOV EAX,DWORD PTR [ESP+var_44+0x60]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_40+0x60]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	MOV EAX,DWORD PTR [ESP+var_44+0x60]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_40+0x60]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESP+var_40+0x60]
	MOV EDX,DWORD PTR [ESP+var_1C+0x60]
	MOV EAX,DWORD PTR [ESP+var_50+0x60]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_4C+0x60]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x74])
	LEA ECX,DWORD PTR [ESP+var_50+0x60]
	MOV EAX,DWORD PTR [ESP+var_50+0x60]
	CALL_LONG(DWORD PTR [EAX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x7D24]
	FSTP DWORD PTR [ESP+var_48+0x60]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A6D12
	FLD DWORD PTR [ESP+var_48+0x60]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x7D24]
	FSTP DWORD PTR [ESP+var_48+0x60]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A6D12
	LEA EAX,DWORD PTR [ESP+var_48+0x60]
	LEA ECX,DWORD PTR [ESP+var_50+0x60]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_4C+0x60]
	CALL_LONG(DWORD PTR [EAX+0x14])
loc_100A6D12:
	MOV EAX,DWORD PTR [ESP+var_24+0x60]
	MOV ECX,DWORD PTR [ESP+var_4C+0x60]
	PUSH EAX
	ADD EBX, 0x10
	MOV EAX,DWORD PTR [ESP+var_4C+0x60]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_48+0x60]
	ADD EDI, 0x0C
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCHS
	FSTP DWORD PTR [EBX-0x04]
	CMP EDI, offset LEGO1_rdata + 0x7D20
	JB FAR loc_100A6C0F
	OR DWORD PTR [ESI+0x30],0x08
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6D50(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	OR DWORD PTR [ECX+0x30],0x04
	FSTP DWORD PTR [ECX+0x34]
	FILD DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	FSTP DWORD PTR [ECX+0x38]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6D70(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	FLD DWORD PTR [ESP+arg1]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7D48]
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [ECX+0x00000088],EAX
	MOV DWORD PTR [ECX+0x0000008C],EDX
	OR DWORD PTR [ECX+0x30],0x04
	FSTP DWORD PTR [ECX+0x3C]
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6DA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_100A6DBB
	LEA ECX,DWORD PTR [ESI+0x40]
	ADD EAX, 0x10
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	OR DWORD PTR [ESI+0x30],0x02
loc_100A6DBB:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6DC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	FLD DWORD PTR [EAX+0x14]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX+0x44]
	FLD DWORD PTR [EDX+0x04]
	FSUB DWORD PTR [EAX+0x34]
	FLD DWORD PTR [EDX+0x08]
	FSUB DWORD PTR [EAX+0x38]
	FLD DWORD PTR [EDX]
	FSUB DWORD PTR [EAX+0x30]
	FXCH ST(2)
	FMUL ST(0),ST
	FXCH ST(1)
	FMUL ST(0),ST
	FADDP ST(1),ST
	FXCH ST(1)
	FMUL ST(0),ST
	FADDP ST(1),ST
	FMUL DWORD PTR [ECX+0x2C]
	FXCH ST(1)
	FMUL ST(0),ST
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7D50]
	FDIVRP ST(1),ST
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A6E00(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217252 = 0x4A4B90,
	};

__asm{
	SUB ESP, 0x24
	MOV EAX,DWORD PTR [ESP+arg1+0x24]
	PUSH EBX
	LEA EDX,DWORD PTR [ESP+var_24+0x28]
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV EBX,DWORD PTR [ESP+arg2+0x30]
	PUSH EBP
	MOV DWORD PTR [ESP+var_24+0x34],ESI
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg3+0x38]
	PUSH EAX
	PUSH EBX
	PUSH ECX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217252-0x4A4B20])
	TEST EAX, EAX
	JZ loc_100A6E39
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x24
	RETN 0x000C
loc_100A6E39:
	CMP DWORD PTR [ESP+0x10],0x00
	JZ FAR loc_100A6EF0
	MOV EAX,DWORD PTR [ESP+var_34+0x44]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x0C])
	TEST EAX, EAX
	JZ FAR loc_100A6EE6
	LEA EAX,DWORD PTR [ESP+var_24+0x44]
	LEA ECX,DWORD PTR [ESP+var_2C+0x44]
	LEA EDX,DWORD PTR [ESP+var_28+0x44]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_30+0x44]
	PUSH ECX
	PUSH EDX
	PUSH 0x00
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST EAX, EAX
	JNZ loc_100A6EE6
	CMP DWORD PTR [ESP+var_2C+0x44],0x00
	JZ loc_100A6EE6
	MOV EAX,DWORD PTR [ESP+var_2C+0x44]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x0C])
	CMP EAX, 0x01
	MOV EDI, EAX
	JLE loc_100A6ED2
	MOV EBX, 0x00000001
	XOR EBP, EBP
loc_100A6E94:
	LEA EAX,DWORD PTR [ESP+var_30+0x44]
	MOV ECX,DWORD PTR [ESP+var_2C+0x44]
	MOV DWORD PTR [ESP+var_30+0x44],EBP
	PUSH EAX
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST EAX, EAX
	JNZ loc_100A6EC6
	MOV EAX,DWORD PTR [ESP+var_30+0x44]
	PUSH EAX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [ESI+0x1C])
	MOV ESI, EAX
	MOV EAX,DWORD PTR [ESP+var_30+0x44]
	PUSH EAX
	TEST ESI, ESI
	JNZ loc_100A6ECD
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_100A6EC6:
	INC EBX
	CMP EBX, EDI
	JL loc_100A6E94
	JMP loc_100A6ED2
loc_100A6ECD:
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
loc_100A6ED2:
	MOV EAX,DWORD PTR [ESP+var_28+0x44]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV ECX,DWORD PTR [ESP+var_2C+0x44]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_100A6EE6:
	MOV EAX,DWORD PTR [ESP+var_34+0x44]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
loc_100A6EF0:
	MOV EAX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x24
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100A6FD0()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA60A6_proc_100A70A6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	MOV BYTE PTR [ECX+0x04],AL
	MOV AL,BYTE PTR [EBP+var_10+0x2]
	XOR ESI, ESI
	MOV BYTE PTR [ECX+0x05],AL
	MOV DWORD PTR [ECX+0x0C],ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11068],ESI
	JNZ loc_100A702E
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x11068], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11068]
	MOV DWORD PTR [EAX+0x08],ESI
loc_100A702E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA6088_sub_100A7088])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11068]
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR ECX, ECX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EAX+0x14],ECX
	MOV DWORD PTR [EDX+0x08],EAX
	MOV DWORD PTR [EDX+0x10],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX,DWORD PTR [EDX+0x08]
	POP ESI
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX, EDX
	MOV DWORD PTR [EDX], offset [LEGO1_rdata.m7DBC_ptr]
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A7088()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A7121()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA70A0_loc_100A80A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A7130()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA62A9_proc_100A72A9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7DBC_ptr]
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	PUSH ESI
	PUSH EDI
	MOV EDX,DWORD PTR [ECX]
	MOV ESI, EDX
	CMP ECX, EDX
	JZ loc_100A71E7
loc_100A7169:
	LEA EDI,DWORD PTR [ESI+0x0C]
	MOV EBX,DWORD PTR [ESI+0x10]
	CMP DWORD PTR [EBX+0x0C],0x00
	JBE loc_100A7192
loc_100A7175:
	MOV EAX,DWORD PTR [EBX+0x0C]
	DEC EAX
	MOV DWORD PTR [EBX+0x0C],EAX
	MOV ECX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX*4+ECX]
	TEST ECX, ECX
	JZ loc_100A718C
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100A718C:
	CMP DWORD PTR [EBX+0x0C],0x00
	JA loc_100A7175
loc_100A7192:
	TEST EBX, EBX
	JZ loc_100A719E
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_100A719E:
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [ESI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],ECX
	JZ loc_100A71C6
loc_100A71B4:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A71C2
	MOV ECX, EAX
	JMP loc_100A71B4
loc_100A71C2:
	MOV ESI, ECX
	JMP loc_100A71DF
loc_100A71C6:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x08],ESI
	JNZ loc_100A71D8
loc_100A71CE:
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],ESI
	JZ loc_100A71CE
loc_100A71D8:
	CMP DWORD PTR [ESI+0x08],EAX
	JZ loc_100A71DF
	MOV ESI, EAX
loc_100A71DF:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ESI
	JNZ loc_100A7169
loc_100A71E7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_20+0x4],EDX
	MOV DWORD PTR [EBP+var_1C+0x4],EDX
	CMP DWORD PTR [EAX+0x10],0x00
	JZ loc_100A725A
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	CMP DWORD PTR [ECX],EAX
	JNZ loc_100A725A
	CMP ECX, ECX
	JNZ loc_100A725A
	MOV EDI,DWORD PTR [ECX+0x04]
	MOV ESI, EDI
loc_100A720E:
	CMP DWORD PTR [offset LEGO1_data + 0x11068],ESI
	JZ loc_100A7234
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	ADD ECX, 0x04
	CALL_LONG(offset [LEGO1_text.mA6DB0_sub_100A7DB0])
	MOV ESI,DWORD PTR [ESI]
	PUSH EDI
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_100A720E
loc_100A7234:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11068]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX+0x04],ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EAX+0x08],EAX
	JMP loc_100A728D
loc_100A725A:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_20+0x4],EAX
	JZ loc_100A728D
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	ADD ESI, 0x04
loc_100A7268:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mA6850_sub_100A7850])
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA6960_sub_100A7960])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],ECX
	JNZ loc_100A7268
loc_100A728D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA62B3_sub_100A72B3])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A72B3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.mA60E0_loc_100A70E0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A72C0(DWORD arg1, DWORD arg2)
{
	enum{
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA6593_proc_100A7593]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x38
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mA6357_loc_100A7357])
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	LEA EAX,DWORD PTR [EDI*4+0x00000000]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x04],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [ESI+0x08],EDI
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7DC8_ptr]
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7DC0_ptr]
	MOV DWORD PTR [ESI+0x10],0x00000000
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7DC4_ptr]
	MOV DWORD PTR [ESI+0x14],EBX
	JMP_LONG(offset [LEGO1_text.mA635E_loc_100A735E])
}
}

__declspec(naked) DWORD LEGO1_proc_100A7347()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA67E0_loc_100A77E0])
}
}

__declspec(naked) DWORD LEGO1_proc_100A734F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA7160_loc_100A8160])
}
}

__declspec(naked) DWORD LEGO1_loc_100A7357()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.mA635E_loc_100A735E])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100A735E(DWORD arg1, DWORD arg2)
{
	enum{
		arg1217207 = 0x4A4ADC,
		arg1217209 = 0x4A4AE4,
		arg1217211 = 0x4A4AEC,
		arg1217213 = 0x4A4AF4,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV ESI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	PUSH ESI
	INC DWORD PTR [ECX+0x10]
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	TEST EAX, EAX
	JZ FAR loc_100A742F
	MOV ECX,DWORD PTR [EAX+0x10]
	DEC ECX
	MOV DWORD PTR [EAX+0x10],ECX
	JNZ loc_100A7390
	PUSH EAX
	MOV ECX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100A7390:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11064]
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	PUSH EAX
	PUSH offset [LEGO1_data.m40F0]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV EDI,DWORD PTR [ESI]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	LEA EDI,DWORD PTR [EBP+arg1217213-0x4A4B20]
	SUB EAX, EAX
	LEA EDX,DWORD PTR [ECX-0x01]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	LEA EDX,DWORD PTR [EDX+ECX-0x01]
	INC EDX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [ESI]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	LEA EDI,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	INC DWORD PTR [offset LEGO1_data + 0x11064]
	JMP loc_100A746A
loc_100A742F:
	MOV EDI,DWORD PTR [ESI]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [ESI]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_100A746A:
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV EAX, 0x00000001
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],ECX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],0x00000000
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11068]
	JZ loc_100A74D3
loc_100A748A:
	MOV EDI, ESI
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV EDX,DWORD PTR [ESI+0x0C]
loc_100A7492:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_100A74B2
	OR CL, CL
	JZ loc_100A74AE
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_100A74B2
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100A7492
loc_100A74AE:
	XOR EAX, EAX
	JMP loc_100A74B7
loc_100A74B2:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100A74B7:
	TEST EAX, EAX
	SETG CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_100A74C9
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_100A74CB
loc_100A74C9:
	MOV ESI,DWORD PTR [ESI]
loc_100A74CB:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11068]
	JNZ loc_100A748A
loc_100A74D3:
	CMP DWORD PTR [EBX+0x0C],0x00
	JZ loc_100A74F5
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.mA6DF0_sub_100A7DF0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],ECX
	JMP FAR loc_100A7575
loc_100A74F5:
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EDI
	TEST EAX, EAX
	JZ loc_100A7524
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_100A751C
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.mA6DF0_sub_100A7DF0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],ECX
	JMP loc_100A7575
loc_100A751C:
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA6800_sub_100A7800])
loc_100A7524:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV EAX,DWORD PTR [EAX+0x0C]
loc_100A752D:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_100A754D
	OR CL, CL
	JZ loc_100A7549
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_100A754D
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100A752D
loc_100A7549:
	XOR EAX, EAX
	JMP loc_100A7552
loc_100A754D:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100A7552:
	TEST EAX, EAX
	JLE loc_100A756F
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.mA6DF0_sub_100A7DF0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],ECX
	JMP loc_100A7575
loc_100A756F:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
loc_100A7575:
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [EAX+0x10],ECX
	MOV EAX, ECX
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A75B0(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x08
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	PUSH EDI
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg1+0x18]
	JZ loc_100A7609
loc_100A75C9:
	MOV ESI,DWORD PTR [EAX+0x0C]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
loc_100A75CF:
	MOV BL,BYTE PTR [ESI]
	CMP BL,BYTE PTR [EDI]
	JNZ loc_100A75EF
	OR BL, BL
	JZ loc_100A75EB
	MOV BL,BYTE PTR [ESI+0x01]
	CMP BL,BYTE PTR [EDI+0x01]
	JNZ loc_100A75EF
	ADD ESI, 0x02
	ADD EDI, 0x02
	OR BL, BL
	JNZ loc_100A75CF
loc_100A75EB:
	XOR ESI, ESI
	JMP loc_100A75F4
loc_100A75EF:
	SBB ESI, ESI
	SBB ESI, -0x01
loc_100A75F4:
	TEST ESI, ESI
	JG loc_100A75FE
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_100A7601
loc_100A75FE:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_100A7601:
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JNZ loc_100A75C9
loc_100A7609:
	MOV DWORD PTR [ESP+var_8+0x18],EDX
	CMP DWORD PTR [ECX+0x08],EDX
	JZ loc_100A7645
	MOV ESI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDX+0x0C]
loc_100A7618:
	MOV DL,BYTE PTR [ESI]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_100A7638
	OR DL, DL
	JZ loc_100A7634
	MOV DL,BYTE PTR [ESI+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_100A7638
	ADD ESI, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_100A7618
loc_100A7634:
	XOR EAX, EAX
	JMP loc_100A763D
loc_100A7638:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100A763D:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x18]
	JLE loc_100A7650
loc_100A7645:
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	LEA EAX,DWORD PTR [ESP+var_4+0x18]
loc_100A7650:
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x18],EAX
	XOR EAX, EAX
	MOV EDX,DWORD PTR [ESP+var_8+0x18]
	CMP DWORD PTR [ECX+0x08],EDX
	JZ loc_100A7667
	MOV EAX,DWORD PTR [EDX+0x10]
	INC DWORD PTR [EAX+0x10]
loc_100A7667:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A7680(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	SUB ESP, 0x08
	XOR AL, AL
	PUSH EBX
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EDX]
	MOV EDI, ECX
	CMP ECX, EDX
	JZ FAR loc_100A7733
	MOV ECX,DWORD PTR [ESP+arg1+0x18]
loc_100A769E:
	LEA EBX,DWORD PTR [EDI+0x0C]
	MOV EBP,DWORD PTR [EDI+0x10]
	CMP ECX, EBP
	JZ loc_100A76E8
	MOV EBX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EBX
	JZ loc_100A76C1
loc_100A76B3:
	MOV EDI,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDI
	JZ loc_100A76D8
	MOV EBX, EDI
	JMP loc_100A76B3
loc_100A76C1:
	MOV EBX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EBX+0x08],EDI
	JNZ loc_100A76D3
loc_100A76C9:
	MOV EDI, EBX
	MOV EBX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EBX+0x08],EDI
	JZ loc_100A76C9
loc_100A76D3:
	CMP DWORD PTR [EDI+0x08],EBX
	JZ loc_100A76DA
loc_100A76D8:
	MOV EDI, EBX
loc_100A76DA:
	CMP EDI, EDX
	JNZ loc_100A769E
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_100A76E8:
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],0x00
	JBE loc_100A770B
loc_100A76EE:
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	DEC EAX
	MOV DWORD PTR [EBP+arg1217227-0x4A4B20],EAX
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV ECX,DWORD PTR [EAX*4+ECX]
	TEST ECX, ECX
	JZ loc_100A7705
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100A7705:
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],0x00
	JA loc_100A76EE
loc_100A770B:
	TEST EBP, EBP
	JZ loc_100A7718
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [EAX])
loc_100A7718:
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	LEA EAX,DWORD PTR [ESP+var_8+0x1C]
	ADD ESP, 0x04
	LEA ECX,DWORD PTR [ESI+0x04]
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA6960_sub_100A7960])
	MOV AL, 0x01
loc_100A7733:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100A7799()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA67E0_loc_100A77E0])
}
}

__declspec(naked) DWORD LEGO1_sub_100A7800()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x14],0x00
	JNZ loc_100A7818
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_100A7818
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_100A7818:
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7835
loc_100A7822:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDX
	JZ loc_100A7831
	MOV EAX, EDX
	JMP loc_100A7822
loc_100A7831:
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_100A7835:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_100A7847
loc_100A783C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_100A783C
loc_100A7847:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A7850()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDX
	JZ loc_100A786E
loc_100A785D:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A786B
	MOV EDX, EAX
	JMP loc_100A785D
loc_100A786B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_100A786E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100A7882
loc_100A7876:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100A7876
loc_100A7882:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100A788B
	MOV DWORD PTR [ECX],EDX
loc_100A788B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A7960(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],ECX
	JZ loc_100A7990
loc_100A797C:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A798A
	MOV ECX, EAX
	JMP loc_100A797C
loc_100A798A:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	JMP loc_100A79B9
loc_100A7990:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_100A79AC
loc_100A799C:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100A799C
loc_100A79AC:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100A79B9
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_100A79B9:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EBX
	JZ loc_100A79ED
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDX
	JZ loc_100A79E9
loc_100A79D4:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A79E2
	MOV EDX, EAX
	JMP loc_100A79D4
loc_100A79E2:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_100A79F7
loc_100A79E9:
	MOV EDX, EBX
	JMP loc_100A79F7
loc_100A79ED:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_100A79F7:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_100A7A90
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7A21
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7A21
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100A7A23
loc_100A7A21:
	MOV DWORD PTR [EAX],EDX
loc_100A7A23:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_100A7A54
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11068]
	CMP DWORD PTR [EDI],EAX
	JZ loc_100A7A4B
	MOV EAX, EDX
loc_100A7A39:
	MOV EDI,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDI
	JZ loc_100A7A47
	MOV EAX, EDI
	JMP loc_100A7A39
loc_100A7A47:
	MOV DWORD PTR [EBX],EAX
	JMP loc_100A7A54
loc_100A7A4B:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_100A7A54:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_100A7AEE
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11068]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7A85
	MOV EAX, EDX
loc_100A7A72:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EBX
	JZ loc_100A7A81
	MOV EAX, EBX
	JMP loc_100A7A72
loc_100A7A81:
	MOV DWORD PTR [EDI],EAX
	JMP loc_100A7AEE
loc_100A7A85:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_100A7AEE
loc_100A7A90:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_100A7AA4
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_100A7AB9
loc_100A7AA4:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_100A7AB9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7AD3
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7AD3
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_100A7AD5
loc_100A7AD3:
	MOV DWORD PTR [EAX],ECX
loc_100A7AD5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ECX+0x14],EBX
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EBP
loc_100A7AEE:
	CMP DWORD PTR [ECX+0x14],0x01
	JNZ FAR loc_100A7D8C
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_100A7D85
loc_100A7B04:
	CMP DWORD PTR [EDX+0x14],0x01
	JNZ FAR loc_100A7D85
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_100A7B8C
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_100A7B71
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EDI,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EDI
	JZ loc_100A7B49
	MOV DWORD PTR [EDI+0x04],EBP
loc_100A7B49:
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EBP
	JZ loc_100A7B65
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EDI],EBP
	JZ loc_100A7B65
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_100A7B67
loc_100A7B65:
	MOV DWORD PTR [EDI],EAX
loc_100A7B67:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100A7B71:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_100A7C17
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_100A7C17
	JMP loc_100A7BFD
loc_100A7B8C:
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_100A7BE4
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7BBB
	MOV DWORD PTR [EAX+0x04],EBP
loc_100A7BBB:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_100A7BD8
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JZ loc_100A7BD8
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_100A7BD8:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_100A7BE4:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_100A7CD7
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_100A7CD7
loc_100A7BFD:
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_100A7B04
	JMP FAR loc_100A7D85
loc_100A7C17:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_100A7C72
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7C45
	MOV DWORD PTR [EAX+0x04],EDI
loc_100A7C45:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7C64
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7C64
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_100A7C66
loc_100A7C64:
	MOV DWORD PTR [EAX],EBX
loc_100A7C66:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100A7C72:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7CA4
	MOV DWORD PTR [EAX+0x04],EBX
loc_100A7CA4:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7CCE
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7CC5
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_100A7D82
loc_100A7CC5:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_100A7D82
loc_100A7CCE:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_100A7D82
loc_100A7CD7:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_100A7D2D
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7D05
	MOV DWORD PTR [EAX+0x04],EDI
loc_100A7D05:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7D21
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A7D21
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_100A7D23
loc_100A7D21:
	MOV DWORD PTR [EAX],EBX
loc_100A7D23:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_100A7D2D:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7D5E
	MOV DWORD PTR [EAX+0x04],EBX
loc_100A7D5E:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7D7D
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100A7D7D
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_100A7D7F
loc_100A7D7D:
	MOV DWORD PTR [EAX],EDI
loc_100A7D7F:
	MOV DWORD PTR [EDI+0x08],EBX
loc_100A7D82:
	MOV DWORD PTR [EBX+0x04],EDI
loc_100A7D85:
	MOV DWORD PTR [EDX+0x14],0x00000001
loc_100A7D8C:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A7DB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11068],ESI
	JZ loc_100A7DE3
loc_100A7DC3:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA6DB0_sub_100A7DB0])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EBX
	JNZ loc_100A7DC3
loc_100A7DE3:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A7DF0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11068]
	MOV DWORD PTR [EAX],EBX
	ADD EAX, 0x0C
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11068]
	MOV DWORD PTR [EAX-0x04],EBX
	MOV EBX,DWORD PTR [ESP+arg4+0x14]
	JZ loc_100A7E39
	MOV EDX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EAX+0x04],EDI
loc_100A7E39:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_100A7E90
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JNZ loc_100A7E90
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [ECX+0x0C]
loc_100A7E52:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_100A7E72
	OR DL, DL
	JZ loc_100A7E6E
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_100A7E72
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_100A7E52
loc_100A7E6E:
	XOR EAX, EAX
	JMP loc_100A7E77
loc_100A7E72:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100A7E77:
	TEST EAX, EAX
	JG loc_100A7E90
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100A7EB2
	MOV DWORD PTR [EAX],EDX
	JMP loc_100A7EB2
loc_100A7E90:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_100A7EA5
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100A7EB2
	MOV DWORD PTR [EAX],EDX
	JMP loc_100A7EB2
loc_100A7EA5:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_100A7EB2:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_100A8078
loc_100A7EC2:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x14]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_100A8078
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_100A7FA1
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217229-0x4A4B20],0x00
	JZ FAR loc_100A804E
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_100A7F2E
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7F0E
	MOV DWORD PTR [EAX+0x04],ECX
loc_100A7F0E:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100A7F28
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100A7F28
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100A7F2A
loc_100A7F28:
	MOV DWORD PTR [EAX],EDX
loc_100A7F2A:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_100A7F2E:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7F60
	MOV DWORD PTR [EAX+0x04],EDX
loc_100A7F60:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_100A7F94
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_100A7F87
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_100A806C
loc_100A7F87:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_100A806C
loc_100A7F94:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_100A806C
loc_100A7FA1:
	CMP DWORD PTR [EBP+arg1217229-0x4A4B20],0x00
	JZ FAR loc_100A804E
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_100A7FE9
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A7FC6
	MOV DWORD PTR [EAX+0x04],ECX
loc_100A7FC6:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100A7FE2
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100A7FE2
	MOV DWORD PTR [EBX],EDX
	JMP loc_100A7FE4
loc_100A7FE2:
	MOV DWORD PTR [EAX],EDX
loc_100A7FE4:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_100A7FE9:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11068],EAX
	JZ loc_100A801B
	MOV DWORD PTR [EAX+0x04],EDI
loc_100A801B:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A8045
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100A803C
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100A806C
loc_100A803C:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100A806C
loc_100A8045:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_100A806C
loc_100A804E:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_100A806C:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_100A7EC2
loc_100A8078:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x14],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_100A80E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA6890_loc_100A7890])
}
}

__declspec(naked) DWORD LEGO1_sub_100A814F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA7160_loc_100A8160])
}
}

__declspec(naked) DWORD LEGO1_sub_100A81A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA67E0_loc_100A77E0])
}
}

__declspec(naked) DWORD LEGO1_nullsub_2()
{
__asm{
	RET
}
}

__declspec(naked) DWORD LEGO1__configureLegoROI_LegoROI__SAXH_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x11368], EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A81D0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA7296_proc_100A8296]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mA3420_sub_100A4420])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7E70_ptr]
	TEST ECX, ECX
	JZ loc_100A8219
	DEC DWORD PTR [ECX+0x10]
	JNZ loc_100A8219
	PUSH ECX
	MOV ECX,DWORD PTR [ECX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100A8219:
	XOR EDI, EDI
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EDI
	MOV DWORD PTR [ESI+0x08],EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	LEA ECX,DWORD PTR [ESI+0x000000F0]
	MOV DWORD PTR [ESI+0x000000DC],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x000000EC],ECX
	MOV DWORD PTR [ESI+0x000000E0],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7E38_ptr]
	MOV DWORD PTR [ESI+0x000000D4],EDI
	MOV DWORD PTR [ESI+0x000000E4],EDI
	MOV DWORD PTR [ESI+0x00000104],EDI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	MOV DWORD PTR [ESI+0x000000E8],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000000E8],offset [LEGO1_rdata.m488_ptr]
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A82D0(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA73A0_proc_100A83A0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mA3420_sub_100A4420])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7E70_ptr]
	TEST EAX, EAX
	JZ loc_100A8319
	DEC DWORD PTR [EAX+0x10]
	JNZ loc_100A8319
	PUSH EAX
	MOV ECX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100A8319:
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [ESI+0x08],EAX
	TEST EAX, EAX
	JZ loc_100A8326
	INC DWORD PTR [EAX+0x10]
loc_100A8326:
	XOR EDI, EDI
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	LEA ECX,DWORD PTR [ESI+0x000000F0]
	MOV DWORD PTR [ESI+0x000000DC],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x000000EC],ECX
	MOV DWORD PTR [ESI+0x000000E0],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7E38_ptr]
	MOV DWORD PTR [ESI+0x000000D4],EDI
	MOV DWORD PTR [ESI+0x000000E4],EDI
	MOV DWORD PTR [ESI+0x00000104],EDI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	MOV DWORD PTR [ESI+0x000000E8],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000000E8],offset [LEGO1_rdata.m488_ptr]
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100A83C0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA7480_proc_100A8480]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7E38_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	TEST EAX, EAX
	JZ loc_100A8448
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CMP ECX,DWORD PTR [EBP+var_18+0x4]
	JZ loc_100A841C
loc_100A8402:
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_100A840F
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100A840F:
	MOV ESI,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x04],ESI
	JNZ loc_100A8402
loc_100A841C:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	TEST ECX, ECX
	JZ loc_100A843E
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mA7478_sub_100A8478])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100A843E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x04],0x00000000
loc_100A8448:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	TEST EAX, EAX
	JZ loc_100A845E
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100A845E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA748A_sub_100A848A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A8478()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m83930_loc_10084930])
}
}

__declspec(naked) DWORD LEGO1_sub_100A848A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA8E20_loc_100A9E20])
}
}

__declspec(naked) DWORD LEGO1_sub_100A84A0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA7C93_proc_100A8C93]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x5C
	MOV DWORD PTR [EBP+var_40+0x4],0xFFFFFFFF
	PUSH EBX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mD27B0_sub_100D37B0])
	MOV DWORD PTR [EBP+var_48+0x4],0x00000000
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(offset [LEGO1_text.mD27B0_sub_100D37B0])
	LEA ECX,DWORD PTR [EBP+var_60+0x4]
	CALL_LONG(offset [LEGO1_text.mD27B0_sub_100D37B0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+arg5+0x4]
	PUSH 0x04
	MOV DWORD PTR [ECX+0x000000D4],EAX
	MOV EAX,DWORD PTR [EDX]
	LEA EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH EDX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EDX
	MOV DWORD PTR [ECX+0x000000E4],EAX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	MOV BYTE PTR [EDX+EAX],0x00
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(offset [LEGO1_text.mD2770_sub_100D3770])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	MOV EDX,DWORD PTR [ECX+0x000000EC]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ECX+0x000000EC]
	MOV EAX,DWORD PTR [EBP+var_50+0x4]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EDX,DWORD PTR [ECX+0x000000EC]
	MOV EAX,DWORD PTR [EBP+var_4C+0x4]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	FLD DWORD PTR [EBP+var_48+0x4]
	PUSH EAX
	FST DWORD PTR [ECX+0x000000FC]
	FSTP DWORD PTR [ECX+0x000000BC]
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(offset [LEGO1_text.mD2740_sub_100D3740])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_6C+0x4]
	MOV EAX,DWORD PTR [ECX+0x00000084]
	MOV DWORD PTR [EAX],EDX
	MOV EAX,DWORD PTR [ECX+0x00000084]
	MOV EDX,DWORD PTR [EBP+var_68+0x4]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ECX+0x00000084]
	MOV EDX,DWORD PTR [EBP+var_64+0x4]
	MOV DWORD PTR [EAX+0x08],EDX
	MOV EAX,DWORD PTR [EBP+var_60+0x4]
	MOV EBX,DWORD PTR [ECX+0x00000098]
	MOV DWORD PTR [EBX],EAX
	MOV EBX,DWORD PTR [ECX+0x00000098]
	MOV EAX,DWORD PTR [EBP+var_5C+0x4]
	PUSH 0x04
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EBX,DWORD PTR [ECX+0x00000098]
	MOV EAX,DWORD PTR [EBP+var_58+0x4]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV DWORD PTR [EBX+0x08],EAX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	CMP DWORD PTR [EBP+var_2C+0x4],0x00
	JZ loc_100A8655
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	PUSH ECX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV BYTE PTR [EAX+ECX],0x00
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	JMP loc_100A865C
loc_100A8655:
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
loc_100A865C:
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x01
	ADD ESI, 0x00000100
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	PUSH ESI
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	CMP BYTE PTR [ESI],0x00
	JZ FAR loc_100A870A
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	SUB EAX, EAX
	MOV EDI,DWORD PTR [ECX+0x000000E4]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	LEA EBX,DWORD PTR [ECX-0x01]
	TEST EBX, EBX
	JZ loc_100A86B4
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000E4]
loc_100A86A3:
	MOV CL,BYTE PTR [EBX+EAX-0x01]
	CMP CL, 0x30
	JL loc_100A86B4
	CMP CL, 0x39
	JG loc_100A86B4
	DEC EBX
	JNZ loc_100A86A3
loc_100A86B4:
	LEA EAX,DWORD PTR [EBX+0x01]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ESI,DWORD PTR [ECX+0x000000E4]
	MOV ECX, EBX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBX
	LEA EDX,DWORD PTR [EBP+var_38+0x4]
	AND ECX, 0x03
	PUSH EDX
	REP MOVSB
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV BYTE PTR [EBX+EAX],0x00
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	TEST EDI, EDI
	JNZ_LONG(offset [LEGO1_text.mA78E9_loc_100A88E9])
	JMP_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
loc_100A870A:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JNZ loc_100A872B
	XOR EDI, EDI
	JMP_LONG(offset [LEGO1_text.mA78E9_loc_100A88E9])
loc_100A872B:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x04
	LEA EDX,DWORD PTR [EBP+var_44+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CALL_LONG(DWORD PTR [EBP+var_24+0x4])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11368]
	CMP EAX,DWORD PTR [EBP+var_28+0x4]
	JNB loc_100A8762
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	SUB ECX, EAX
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_30+0x4],ECX
	JMP loc_100A8769
loc_100A8762:
	MOV DWORD PTR [EBP+var_30+0x4],0x00000000
loc_100A8769:
	CMP DWORD PTR [offset LEGO1_data + 0x11368],0x02
	JG loc_100A87B0
	XOR EDI, EDI
	CMP DWORD PTR [offset LEGO1_data.m11380_ptr],EDI
	JZ loc_100A87EF
	MOV ESI, offset [LEGO1_data.m11380_ptr]
loc_100A8781:
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JZ loc_100A87A7
	ADD ESI, 0x04
	INC EDI
	CMP DWORD PTR [ESI],0x00
	JNZ loc_100A8781
	JMP loc_100A87EF
loc_100A87A7:
	MOV EAX,DWORD PTR [offset LEGO1_data.m11380_ptr+EDI*4]
	JMP loc_100A87EC
loc_100A87B0:
	XOR EDI, EDI
	CMP DWORD PTR [offset LEGO1_data.m11370_ptr],EDI
	JZ loc_100A87EF
	MOV ESI, offset [LEGO1_data.m11370_ptr]
loc_100A87BF:
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JZ loc_100A87E5
	ADD ESI, 0x04
	INC EDI
	CMP DWORD PTR [ESI],0x00
	JNZ loc_100A87BF
	JMP loc_100A87EF
loc_100A87E5:
	MOV EAX,DWORD PTR [offset LEGO1_data.m11370_ptr+EDI*4]
loc_100A87EC:
	MOV DWORD PTR [EBP+var_20+0x4],EAX
loc_100A87EF:
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mA79A8_loc_100A89A8])
	XOR ESI, ESI
	CMP DWORD PTR [offset LEGO1_data.m11390_ptr],ESI
	JZ loc_100A8830
	MOV EBX, offset [LEGO1_data.m11390_ptr]
loc_100A8814:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EBX]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100A8830
	ADD EBX, 0x04
	INC ESI
	CMP DWORD PTR [EBX],0x00
	JNZ loc_100A8814
loc_100A8830:
	CMP DWORD PTR [offset LEGO1_data.m11390_ptr+ESI*4],0x00
	JZ_LONG(offset [LEGO1_text.mA78DC_loc_100A88DC])
	CMP DWORD PTR [EDI+0x0C],0x00
	JZ loc_100A8861
loc_100A8844:
	MOV EAX,DWORD PTR [EDI+0x0C]
	DEC EAX
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX*4+ECX]
	TEST ECX, ECX
	JZ loc_100A885B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100A885B:
	CMP DWORD PTR [EDI+0x0C],0x00
	JNZ loc_100A8844
loc_100A8861:
	XOR EBX, EBX
	CMP DWORD PTR [EBP+var_28+0x4],EBX
	JBE_LONG(offset [LEGO1_text.mA78DC_loc_100A88DC])
loc_100A8868:
	PUSH 0x20
	MOV ESI, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EBP+var_1C+0x4],0x00
	JZ loc_100A8895
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9380_sub_100AA380])
	MOV ESI, EAX
loc_100A8895:
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg4+0x4]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA9510_sub_100AA510])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	TEST EBX, EBX
	JNZ loc_100A88CA
	CMP DWORD PTR [EBP+var_30+0x4],0x00
	JZ loc_100A88CA
	TEST BYTE PTR [ESI+0x08],0x08
	JZ loc_100A88CA
	INC DWORD PTR [EBP+var_28+0x4]
loc_100A88CA:
	MOV EAX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [EDI+0x04]
	INC EBX
	MOV DWORD PTR [EAX*4+ECX],ESI
	INC DWORD PTR [EDI+0x0C]
	CMP EBX,DWORD PTR [EBP+var_28+0x4]
	JB loc_100A8868
	JMP_LONG(offset [LEGO1_text.mA78DC_loc_100A88DC])
}
}

__declspec(naked) DWORD LEGO1_loc_100A88DC()
{
	enum{
		arg1217208 = 0x4A4AE0,
		arg1217212 = 0x4A4AF0,
		arg1217230 = 0x4A4B38,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217230-0x4A4B20]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	CALL_LONG(DWORD PTR [EBX+0x10])
	JMP_LONG(offset [LEGO1_text.mA78E9_loc_100A88E9])
}
}

__declspec(naked) DWORD LEGO1_loc_100A88E9()
{
	enum{
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [ECX+0x08]
	TEST EAX, EAX
	JZ loc_100A8901
	DEC DWORD PTR [EAX+0x10]
	JNZ loc_100A8901
	PUSH EAX
	MOV ECX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100A8901:
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	TEST EDI, EDI
	MOV DWORD PTR [ECX+0x08],EDI
	JZ loc_100A8924
	INC DWORD PTR [EDI+0x10]
	TEST EDI, EDI
	JZ loc_100A8924
	MOV EAX,DWORD PTR [EDI+0x10]
	DEC EAX
	MOV DWORD PTR [EDI+0x10],EAX
	JNZ loc_100A8924
	PUSH EDI
	MOV ECX,DWORD PTR [EDI+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100A8924:
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],0x00
	JZ_LONG(offset [LEGO1_text.mA7B3F_loc_100A8B3F])
	PUSH 0x02
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH offset LEGO1_data + 0x113B4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7AF8_loc_100A8AF8])
	MOV EDI,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	ADD EDI, 0x02
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],0x00000000
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ_LONG(offset [LEGO1_text.mA7A79_loc_100A8A79])
	JMP_LONG(offset [LEGO1_text.mA796B_loc_100A896B])
}
}

__declspec(naked) DWORD LEGO1_loc_100A896B()
{
__asm{
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV ESI, EDI
loc_100A8970:
	MOV BL,BYTE PTR [ECX]
	CMP BL,BYTE PTR [ESI]
	JNZ_LONG(offset [LEGO1_text.mA7A5B_loc_100A8A5B])
	OR BL, BL
	JZ loc_100A8994
	MOV BL,BYTE PTR [ECX+0x01]
	CMP BL,BYTE PTR [ESI+0x01]
	JNZ_LONG(offset [LEGO1_text.mA7A5B_loc_100A8A5B])
	ADD ECX, 0x02
	ADD ESI, 0x02
	OR BL, BL
	JNZ loc_100A8970
loc_100A8994:
	XOR ECX, ECX
	JMP_LONG(offset [LEGO1_text.mA7A60_loc_100A8A60])
}
}

__declspec(naked) DWORD LEGO1_proc_100A899B()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100A89A8()
{
	enum{
		arg1217213 = 0x4A4AF4,
		arg1217215 = 0x4A4AFC,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217223 = 0x4A4B1C,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
		arg1217229 = 0x4A4B34,
		arg1217230 = 0x4A4B38,
	};

__asm{
	XOR ESI, ESI
	CMP DWORD PTR [EBP+arg1217215-0x4A4B20],ESI
	JBE_LONG(offset [LEGO1_text.mA78DC_loc_100A88DC])
loc_100A89B3:
	PUSH 0x20
	MOV EBX, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000001
	CMP DWORD PTR [EBP+arg1217218-0x4A4B20],0x00
	JZ loc_100A89E0
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9380_sub_100AA380])
	MOV EBX, EAX
loc_100A89E0:
	MOV EAX,DWORD PTR [EBP+arg1217230-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	PUSH ECX
	PUSH EDX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA9510_sub_100AA510])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	TEST ESI, ESI
	JNZ loc_100A8A33
	CMP DWORD PTR [EBP+arg1217213-0x4A4B20],0x00
	JZ loc_100A8A15
	TEST BYTE PTR [EBX+0x08],0x08
	JZ loc_100A8A15
	INC DWORD PTR [EBP+arg1217215-0x4A4B20]
loc_100A8A15:
	TEST ESI, ESI
	JNZ loc_100A8A33
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA62C0_sub_100A72C0])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
loc_100A8A33:
	MOV EAX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [EDI+0x04]
	INC ESI
	MOV DWORD PTR [EAX*4+ECX],EBX
	INC DWORD PTR [EDI+0x0C]
	CMP DWORD PTR [EBP+arg1217215-0x4A4B20],ESI
	JA FAR loc_100A89B3
	JMP_LONG(offset [LEGO1_text.mA78DC_loc_100A88DC])
}
}

__declspec(naked) DWORD LEGO1_proc_100A8A4E()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100A8A5B()
{
__asm{
	SBB ECX, ECX
	SBB ECX, -0x01
	JMP_LONG(offset [LEGO1_text.mA7A60_loc_100A8A60])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8A60()
{
__asm{
	TEST ECX, ECX
	JG loc_100A8A6A
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_100A8A6D
loc_100A8A6A:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_100A8A6D:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JNZ_LONG(offset [LEGO1_text.mA796B_loc_100A896B])
	JMP_LONG(offset [LEGO1_text.mA7A79_loc_100A8A79])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8A79()
{
	enum{
		arg1217213 = 0x4A4AF4,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],EDX
	MOV EAX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	CMP DWORD PTR [EAX+0x0C],EDX
	JZ loc_100A8AB3
	MOV EAX,DWORD PTR [EDX+0x0C]
loc_100A8A87:
	MOV CL,BYTE PTR [EDI]
	CMP CL,BYTE PTR [EAX]
	JNZ loc_100A8AA7
	OR CL, CL
	JZ loc_100A8AA3
	MOV CL,BYTE PTR [EDI+0x01]
	CMP CL,BYTE PTR [EAX+0x01]
	JNZ loc_100A8AA7
	ADD EDI, 0x02
	ADD EAX, 0x02
	OR CL, CL
	JNZ loc_100A8A87
loc_100A8AA3:
	XOR EAX, EAX
	JMP loc_100A8AAC
loc_100A8AA7:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100A8AAC:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JLE loc_100A8ABF
loc_100A8AB3:
	MOV EAX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x0C]
	LEA EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],ECX
loc_100A8ABF:
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	CMP DWORD PTR [EDX+0x0C],EAX
	JZ loc_100A8ACF
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],ECX
loc_100A8ACF:
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],0x00
	JZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8210_sub_100A9210])
	PUSH 0x00
	PUSH 0x3F800000
	PUSH 0x3F800000
	PUSH 0x3F800000
	JMP_LONG(offset [LEGO1_text.mA7B37_loc_100A8B37])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8AF8()
{
	enum{
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX, 0x3F800000
	XOR ECX, ECX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217212-0x4A4B20],ECX
	LEA EDX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],EAX
	PUSH ECX
	LEA EAX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8BF0_sub_100A9BF0])
	ADD ESP, 0x14
	MOV ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH ECX
	JMP_LONG(offset [LEGO1_text.mA7B37_loc_100A8B37])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8B37()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA8170_sub_100A9170])
	JMP_LONG(offset [LEGO1_text.mA7B3F_loc_100A8B3F])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8B3F()
{
	enum{
		arg1217210 = 0x4A4AE8,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217219 = 0x4A4B0C,
		arg1217223 = 0x4A4B1C,
		arg1217230 = 0x4A4B38,
	};

__asm{
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217230-0x4A4B20]
	CALL_LONG(DWORD PTR [EBP+arg1217216-0x4A4B20])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	CMP DWORD PTR [EBP+arg1217210-0x4A4B20],0x00
	JBE_LONG(offset [LEGO1_text.mA7BB0_loc_100A8BB0])
	PUSH 0x0C
	MOV EBX, 0x00000002
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],EBX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mA7BA1_loc_100A8BA1])
	MOV AL,BYTE PTR [EBP+arg1217217-0x4A4B21]
	PUSH 0x0C
	MOV BYTE PTR [ESI],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x08],0x00000000
	JMP_LONG(offset [LEGO1_text.mA7BA3_loc_100A8BA3])
}
}

__declspec(naked) DWORD LEGO1_proc_100A8B99()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m83930_loc_10084930])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BA1()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.mA7BA3_loc_100A8BA3])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BA3()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ECX+0x04],EAX
	JMP_LONG(offset [LEGO1_text.mA7BB0_loc_100A8BB0])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BB0()
{
	enum{
		arg1217210 = 0x4A4AE8,
		arg1217216 = 0x4A4B00,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],0x00000000
	CMP DWORD PTR [EBP+arg1217210-0x4A4B20],0x00
	JBE_LONG(offset [LEGO1_text.mA7C76_loc_100A8C76])
	JMP_LONG(offset [LEGO1_text.mA7BC1_loc_100A8BC1])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BC1()
{
	enum{
		arg1217217 = 0x4A4B04,
		arg1217223 = 0x4A4B1C,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	PUSH 0x00000108
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000004
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.mA7BFA_loc_100A8BFA])
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA71D0_sub_100A81D0])
	MOV ESI, EAX
	JMP_LONG(offset [LEGO1_text.mA7BFC_loc_100A8BFC])
}
}

__declspec(naked) DWORD LEGO1_proc_100A8BED()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BFA()
{
__asm{
	XOR ESI, ESI
	JMP_LONG(offset [LEGO1_text.mA7BFC_loc_100A8BFC])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8BFC()
{
	enum{
		arg1217210 = 0x4A4AE8,
		arg1217216 = 0x4A4B00,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
		arg1217229 = 0x4A4B34,
		arg1217230 = 0x4A4B38,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217230-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217229-0x4A4B20]
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA74A0_sub_100A84A0])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x0C
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],ESI
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100A8C4E
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100A8C53
loc_100A8C4E:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100A8C53:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100A8C64
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV DWORD PTR [EAX],ECX
loc_100A8C64:
	INC DWORD PTR [ESI+0x08]
	INC DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217210-0x4A4B20],EAX
	JA_LONG(offset [LEGO1_text.mA7BC1_loc_100A8BC1])
	JMP_LONG(offset [LEGO1_text.mA7C76_loc_100A8C76])
}
}

__declspec(naked) DWORD LEGO1_loc_100A8C76()
{
	enum{
		arg1217209 = 0x4A4AE4,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217209-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.mA7C7D_loc_100A8C7D])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100A8C7D(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		arg1217209 = 0x4A4AE4,
		arg1217221 = 0x4A4B14,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0014
}
}

__declspec(naked) DWORD LEGO1_sub_100A8CB0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg3+0x8]
	MOV ECX, ESI
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x24])
	FILD DWORD PTR [ESP+arg2+0x8]
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	SUB ESP, 0x04
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9F3C0_sub_100A03C0])
	XOR EAX, EAX
	POP ESI
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A8CE0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_4+0xC],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg2+0x18]
	PUSH EBP
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	TEST EAX, EAX
	JZ loc_100A8D1C
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	CMP BYTE PTR [EAX],0x00
	JZ loc_100A8D20
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100A8D20
	MOV EAX, EDI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_100A8D1C:
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
loc_100A8D20:
	MOV EDI,DWORD PTR [EDI+0x04]
	TEST EDI, EDI
	JZ loc_100A8D7E
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EBP, EAX
	CMP EAX, ECX
	JZ loc_100A8D5A
loc_100A8D32:
	MOV EBX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	TEST EAX, EAX
	JZ loc_100A8D52
	CMP BYTE PTR [EAX],0x00
	JZ loc_100A8D52
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100A8D8A
loc_100A8D52:
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP DWORD PTR [EDI+0x04],EBP
	JNZ loc_100A8D32
loc_100A8D5A:
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EBX, EAX
	CMP EAX, ECX
	JZ loc_100A8D7E
loc_100A8D65:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	TEST EAX, EAX
	JNZ loc_100A8D80
	MOV EBX,DWORD PTR [EBX]
	CMP DWORD PTR [EDI+0x04],EBX
	JNZ loc_100A8D65
loc_100A8D7E:
	XOR EAX, EAX
loc_100A8D80:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_100A8D8A:
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A8DA0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_5C = -0x5C,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	SUB ESP, 0x54
	LEA EAX,DWORD PTR [ESP+var_40+0x54]
	PUSH EBX
	MOV DWORD PTR [ESP+var_50+0x58],ECX
	PUSH ESI
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg1+0x60]
	PUSH EBP
	MOV DWORD PTR [ESP+var_48+0x64],offset [LEGO1_rdata.m300_ptr]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+arg4+0x64]
	MOV DWORD PTR [ESP+var_54+0x64],EDX
	PUSH EAX
	MOV ESI,DWORD PTR [EDX+0x04]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	MOV EBX, EAX
	TEST EBX, EBX
	JNZ loc_100A8DEB
	MOV EAX,DWORD PTR [ESP+var_50+0x64]
	MOV ECX,DWORD PTR [ESP+var_50+0x64]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	MOV EBX, EAX
loc_100A8DEB:
	XOR EBP, EBP
	TEST EBX, EBX
	JZ loc_100A8E65
	LEA EAX,DWORD PTR [ESP+var_48+0x64]
	MOV ECX,DWORD PTR [ESP+arg3+0x64]
	MOV EDX,DWORD PTR [ESP+var_54+0x64]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA7CB0_sub_100A8CB0])
	MOV ECX,DWORD PTR [ESP+arg2+0x70]
	LEA EDX,DWORD PTR [ESP+var_48+0x70]
	ADD ESP, 0x0C
	MOV ESI,DWORD PTR [EBX+0x10]
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [EBX+0x10]
	CALL_LONG(DWORD PTR [ESI+0x38])
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX+0x1C])
	FILD DWORD PTR [ESP+arg1+0x6C]
	MOV ECX,DWORD PTR [ESP+var_5C+0x6C]
	SUB ESP, 0x04
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9F990_sub_100A0990])
	MOV BYTE PTR [EBX+0x0C],AL
	CMP DWORD PTR [EDI+0x08],EBP
	JBE loc_100A8E73
	XOR ESI, ESI
loc_100A8E3F:
	MOV EAX,DWORD PTR [ESP+arg1+0x6C]
	PUSH EBX
	PUSH EAX
	LEA ECX,DWORD PTR [EBX+0x10]
	PUSH ECX
	MOV EDX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [ESP+var_4C+0x6C]
	ADD ESI, 0x04
	INC EBP
	MOV EAX,DWORD PTR [ESI+EDX-0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA7DA0_sub_100A8DA0])
	CMP DWORD PTR [EDI+0x08],EBP
	JA loc_100A8E3F
	JMP loc_100A8E73
loc_100A8E65:
	PUSH ESI
	PUSH offset [LEGO1_data.m113B8_str]
	CALL_LONG(offset [LEGO1_text.mA71B0_nullsub_2])
	ADD ESP, 0x08
loc_100A8E73:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x54
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_100A8E80(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217223 = 0x4A4B1C,
		arg1217228 = 0x4A4B30,
		arg1217231 = 0x4A4B3C,
	};

__asm{
	SUB ESP, 0x00000098
	LEA EAX,DWORD PTR [ESP+var_40+0x98]
	PUSH EBX
	MOV DWORD PTR [ESP+var_44+0x9C],EAX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0xA0]
	PUSH EDI
	LEA EAX,DWORD PTR [ESP+var_48+0xA4]
	PUSH EBP
	MOV ECX,DWORD PTR [ESI+0x04]
	PUSH EAX
	MOV EDI,DWORD PTR [ESP+arg3+0xAC]
	MOV DWORD PTR [ESP+var_94+0xAC],ECX
	MOV DWORD PTR [ESP+var_48+0xAC],offset [LEGO1_rdata.m300_ptr]
	PUSH EDI
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA7CB0_sub_100A8CB0])
	MOV EAX,DWORD PTR [ESP+var_94+0xB4]
	MOV EDX,DWORD PTR [ESP+arg4+0xB4]
	ADD ESP, 0x0C
	XOR ECX, ECX
	MOV CX,WORD PTR DS:[EAX+0x20]
	XOR EBX, EBX
	MOV EAX,DWORD PTR [ECX*4+EDX]
	MOV DWORD PTR [ESP+var_98+0xA8],EAX
	CMP EAX, EBX
	JZ FAR loc_100A8F61
	MOV EAX,DWORD PTR [ESP+arg2+0xA8]
	LEA ECX,DWORD PTR [ESP+var_48+0xA8]
	MOV EBP,DWORD PTR [ESP+var_98+0xA8]
	PUSH EAX
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	CALL_LONG(DWORD PTR [EDX+0x38])
	MOV ECX,DWORD PTR [ESP+var_A0+0xB0]
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217231-0x4A4B20])
	MOV ECX,DWORD PTR [ESP+var_9C+0xB0]
	MOV DWORD PTR [ESP+var_98+0xB0],EDI
	FILD DWORD PTR [ESP+var_98+0xB0]
	SUB ESP, 0x04
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9F990_sub_100A0990])
	MOV ECX,DWORD PTR [ESP+var_A0+0xB0]
	MOV BYTE PTR [ECX+0x0C],AL
	CMP DWORD PTR [ESI+0x08],EBX
	JBE FAR loc_100A8FBB
	XOR EBP, EBP
loc_100A8F2C:
	MOV EAX,DWORD PTR [ESP+arg2+0xB0]
	MOV ECX,DWORD PTR [ESP+var_A0+0xB0]
	PUSH EAX
	ADD ECX, 0x10
	PUSH EDI
	MOV EAX,DWORD PTR [ESI+0x0C]
	PUSH ECX
	ADD EBP, 0x04
	INC EBX
	MOV EDX,DWORD PTR [EBP+EAX+arg1217223-0x4A4B20]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA7E80_sub_100A8E80])
	ADD ESP, 0x10
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_100A8F2C
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000098
	RET
loc_100A8F61:
	LEA EAX,DWORD PTR [ESP+var_88+0xA8]
	MOV ECX,DWORD PTR [ESP+arg2+0xA8]
	MOV DWORD PTR [ESP+var_8C+0xA8],EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_44+0xA8]
	PUSH EDX
	LEA ECX,DWORD PTR [ESP+var_90+0xAC]
	PUSH EAX
	XOR EBX, EBX
	XOR EBP, EBP
	MOV DWORD PTR [ESP+var_90+0xB0],offset [LEGO1_rdata.m300_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m33C_ptr])
	CMP DWORD PTR [ESI+0x08],EBX
	JBE loc_100A8FBB
loc_100A8F94:
	MOV EAX,DWORD PTR [ESP+arg2+0xB0]
	LEA ECX,DWORD PTR [ESP+var_98+0xB0]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x0C]
	PUSH EDI
	ADD EBX, 0x04
	PUSH ECX
	INC EBP
	MOV EAX,DWORD PTR [EBX+EDX-0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA7E80_sub_100A8E80])
	ADD ESP, 0x10
	CMP DWORD PTR [ESI+0x08],EBP
	JA loc_100A8F94
loc_100A8FBB:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000098
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A8FD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217223 = 0x4A4B1C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x00000090
	LEA EAX,DWORD PTR [ESP+var_40+0x90]
	PUSH EBX
	MOV DWORD PTR [ESP+var_44+0x94],EAX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x98]
	PUSH EDI
	LEA EAX,DWORD PTR [ESP+var_48+0x9C]
	PUSH EBP
	MOV EDI,DWORD PTR [ESI+0x04]
	PUSH EAX
	MOV DWORD PTR [ESP+var_48+0xA4],offset [LEGO1_rdata.m300_ptr]
	MOV ECX,DWORD PTR [ESP+arg3+0xA4]
	PUSH ECX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mA7CB0_sub_100A8CB0])
	ADD ESP, 0x0C
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDI+0x20]
	XOR EBX, EBX
	MOV EDI,DWORD PTR [ESP+arg4+0xA0]
	MOV ECX,DWORD PTR [EAX*4+EDI]
	MOV DWORD PTR [ESP+var_90+0xA0],ECX
	CMP ECX, EBX
	JZ loc_100A907E
	MOV EAX,DWORD PTR [ESP+arg2+0xA0]
	LEA ECX,DWORD PTR [ESP+var_48+0xA0]
	MOV EBP,DWORD PTR [ESP+var_90+0xA0]
	PUSH EAX
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	CALL_LONG(DWORD PTR [EDX+0x38])
	CMP DWORD PTR [ESI+0x08],EBX
	JBE FAR loc_100A90D7
	XOR EBP, EBP
loc_100A9049:
	MOV EAX,DWORD PTR [ESP+arg1+0xA8]
	PUSH EDI
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESP+var_90+0xA8]
	ADD EBP, 0x04
	ADD EAX, 0x10
	INC EBX
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+ECX+arg1217223-0x4A4B20]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA7FD0_sub_100A8FD0])
	ADD ESP, 0x10
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_100A9049
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000090
	RET
loc_100A907E:
	LEA EAX,DWORD PTR [ESP+var_88+0xA0]
	MOV ECX,DWORD PTR [ESP+arg2+0xA0]
	MOV DWORD PTR [ESP+var_8C+0xA0],EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_44+0xA0]
	PUSH EDX
	LEA ECX,DWORD PTR [ESP+var_90+0xA4]
	PUSH EAX
	XOR EBP, EBP
	XOR EBX, EBX
	MOV DWORD PTR [ESP+var_90+0xA8],offset [LEGO1_rdata.m300_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m33C_ptr])
	CMP DWORD PTR [ESI+0x08],EBP
	JBE loc_100A90D7
loc_100A90B1:
	MOV EAX,DWORD PTR [ESP+arg1+0xA8]
	PUSH EDI
	LEA ECX,DWORD PTR [ESP+var_94+0xA8]
	PUSH EAX
	PUSH ECX
	MOV EDX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [EBP+EDX]
	ADD EBP, 0x04
	INC EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA7FD0_sub_100A8FD0])
	ADD ESP, 0x10
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_100A90B1
loc_100A90D7:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000090
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A90F0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x48
	MOV DWORD PTR [ESP+var_48+0x48],offset [LEGO1_rdata.m300_ptr]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESP+var_40+0x50]
	LEA EAX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [ESP+var_44+0x50],ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESP+var_48+0x54]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m348_ptr])
	LEA ECX,DWORD PTR [ESP+var_4C+0x54]
	MOV EAX,DWORD PTR [ESP+var_4C+0x54]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV EDX,DWORD PTR [ESP+var_48+0x54]
	MOV ECX, 0x3F800000
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [ESP+var_48+0x54]
	MOV EAX,DWORD PTR [ESP+arg1+0x54]
	PUSH ESI
	PUSH EAX
	MOV DWORD PTR [EDX+0x14],ECX
	MOV EDX,DWORD PTR [ESP+var_40+0x54]
	MOV DWORD PTR [EDX+0x28],ECX
	MOV EDX,DWORD PTR [ESP+var_40+0x54]
	MOV DWORD PTR [EDX+0x3C],ECX
	LEA ECX,DWORD PTR [ESP+var_44+0x54]
	PUSH ECX
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA7DA0_sub_100A8DA0])
	POP EDI
	POP ESI
	ADD ESP, 0x48
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9170(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	XOR EDI, EDI
	MOV EBX, 0x00000000
	TEST EAX, EAX
	JZ loc_100A918A
	MOV EBX,DWORD PTR [EAX+0x0C]
loc_100A918A:
	XOR EBP, EBP
	TEST EBX, EBX
	JZ loc_100A91C0
loc_100A9190:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV EDX,DWORD PTR [ESP+arg4+0x18]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg3+0x1C]
	MOV EDX,DWORD PTR [ESP+arg2+0x1C]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP*4+ECX]
	MOV EAX,DWORD PTR [ESP+arg1+0x20]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9CB0_sub_100AACB0])
	TEST EAX, EAX
	JZ loc_100A91BB
	MOV EDI, 0xFFFFFFFF
loc_100A91BB:
	INC EBP
	CMP EBP, EBX
	JB loc_100A9190
loc_100A91C0:
	MOV EAX,DWORD PTR [ESI+0x04]
	TEST EAX, EAX
	JZ loc_100A9201
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EBX, EAX
	CMP EAX, ECX
	JZ loc_100A9201
loc_100A91D2:
	MOV EAX,DWORD PTR [ESP+arg4+0x18]
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV EDX,DWORD PTR [ESP+arg2+0x18]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBX+0x08]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8170_sub_100A9170])
	TEST EAX, EAX
	JZ loc_100A91F7
	MOV EDI, 0xFFFFFFFF
loc_100A91F7:
	MOV EBX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ loc_100A91D2
loc_100A9201:
	MOV EAX, EDI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9210(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	XOR EDI, EDI
	TEST EAX, EAX
	JNZ loc_100A9228
	MOV DWORD PTR [ESP+var_8+0x18],EDI
	JMP loc_100A922F
loc_100A9228:
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESP+var_8+0x18],EAX
loc_100A922F:
	XOR EBP, EBP
	MOV EBX,DWORD PTR [ESP+arg1+0x18]
	CMP DWORD PTR [ESP+var_8+0x18],EBP
	JZ loc_100A925A
loc_100A923B:
	MOV EAX,DWORD PTR [ESI+0x08]
	PUSH EBX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EBP*4+EDX]
	CALL_LONG(offset [LEGO1_text.mA9D00_sub_100AAD00])
	TEST EAX, EAX
	JZ loc_100A9253
	MOV EDI, 0xFFFFFFFF
loc_100A9253:
	INC EBP
	CMP EBP,DWORD PTR [ESP+var_8+0x18]
	JB loc_100A923B
loc_100A925A:
	MOV EAX,DWORD PTR [ESI+0x04]
	TEST EAX, EAX
	JZ loc_100A9289
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EBP, EAX
	CMP ECX, EAX
	JZ loc_100A9289
loc_100A926C:
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA8210_sub_100A9210])
	TEST EAX, EAX
	JZ loc_100A927E
	MOV EDI, 0xFFFFFFFF
loc_100A927E:
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBP
	JNZ loc_100A926C
loc_100A9289:
	MOV EAX, EDI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A92A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EBX, 0x00000000
	TEST EAX, EAX
	JZ loc_100A92B8
	MOV EBX,DWORD PTR [EAX+0x0C]
loc_100A92B8:
	XOR EBP, EBP
	MOV EDI,DWORD PTR [ESP+arg1+0x18]
	TEST EBX, EBX
	JZ loc_100A92E8
loc_100A92C2:
	MOV EAX,DWORD PTR [ESI+0x08]
	PUSH EDI
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EBP*4+EDX]
	CALL_LONG(offset [LEGO1_text.mA9DC0_sub_100AADC0])
	TEST EAX, EAX
	JZ loc_100A92DC
	INC EBP
	CMP EBP, EBX
	JB loc_100A92C2
	JMP loc_100A92E8
loc_100A92DC:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_100A92E8:
	MOV EAX,DWORD PTR [ESI+0x04]
	TEST EAX, EAX
	JZ loc_100A9311
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EBX, EAX
	CMP EAX, ECX
	JZ loc_100A9311
loc_100A92FA:
	PUSH EDI
	MOV ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.mA82A0_sub_100A92A0])
	TEST EAX, EAX
	JZ loc_100A9320
	MOV EBX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ loc_100A92FA
loc_100A9311:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_100A9320:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9330(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg4]
	MOV EDX,DWORD PTR [ESP+arg3]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	MOV EDX,DWORD PTR [ESP+arg1+0x8]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA8170_sub_100A9170])
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9350(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x10
	LEA EAX,DWORD PTR [ESP+var_10+0x10]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESP+var_C+0x18]
	LEA EDX,DWORD PTR [ESP+var_8+0x18]
	LEA EAX,DWORD PTR [ESP+var_4+0x18]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EDX
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA8C50_sub_100A9C50])
	ADD ESP, 0x14
	TEST AL, AL
	JZ loc_100A939D
	MOV EAX,DWORD PTR [ESP+var_10+0x14]
	MOV ECX,DWORD PTR [ESP+var_C+0x14]
	MOV EDX,DWORD PTR [ESP+var_8+0x14]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_4+0x18]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8170_sub_100A9170])
	POP ESI
	ADD ESP, 0x10
	RETN 0x0004
loc_100A939D:
	XOR EAX, EAX
	POP ESI
	ADD ESP, 0x10
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A93B0(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x10
	LEA EAX,DWORD PTR [ESP+var_10+0x10]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESP+var_C+0x18]
	LEA EDX,DWORD PTR [ESP+var_8+0x18]
	LEA EAX,DWORD PTR [ESP+var_4+0x18]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EDX
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA8C50_sub_100A9C50])
	ADD ESP, 0x14
	TEST AL, AL
	JZ loc_100A93FD
	MOV EAX,DWORD PTR [ESP+var_10+0x14]
	MOV ECX,DWORD PTR [ESP+var_C+0x14]
	MOV EDX,DWORD PTR [ESP+var_8+0x14]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_4+0x18]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8330_sub_100A9330])
	POP ESI
	ADD ESP, 0x10
	RETN 0x0004
loc_100A93FD:
	XOR EAX, EAX
	POP ESI
	ADD ESP, 0x10
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9410(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_178 = -0x178,
		var_174 = -0x174,
		var_144 = -0x144,
		var_E8 = -0xE8,
		var_E4 = -0xE4,
		var_E0 = -0xE0,
		var_DC = -0xDC,
		var_D8 = -0xD8,
		var_C8 = -0xC8,
		var_C4 = -0xC4,
		var_C0 = -0xC0,
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	PUSH EBP
	MOV EBP, ESP
	SUB ESP, 0x00000174
	CMP BYTE PTR [EBP+arg6+0x4],0x00
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	JZ FAR loc_100A9886
	LEA EAX,DWORD PTR [EBP+var_90+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_98+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_94+0x4],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+arg3+0x4]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	MOV EBX,DWORD PTR [EBP+var_98+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [EBP+var_98+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	CALL_LONG(DWORD PTR [EBX+0x48])
	LEA ECX,DWORD PTR [EBP+var_D8+0x4]
	LEA EAX,DWORD PTR [EBP+var_C0+0x4]
	LEA EDX,DWORD PTR [EBP+var_A8+0x4]
	MOV DWORD PTR [EBP+var_DC+0x4],ECX
	MOV ECX, offset [LEGO1_rdata.m1E8_ptr]
	LEA EBX,DWORD PTR [EBP+var_68+0x4]
	MOV DWORD PTR [EBP+var_E0+0x4],ECX
	MOV DWORD PTR [EBP+var_C4+0x4],EAX
	MOV DWORD PTR [EBP+var_C8+0x4],ECX
	MOV DWORD PTR [EBP+var_AC+0x4],EDX
	MOV EDI, 0x00000005
	MOV DWORD PTR [EBP+var_B0+0x4],ECX
	MOV DWORD PTR [EBP+var_6C+0x4],EBX
	MOV DWORD PTR [EBP+var_70+0x4],ECX
	LEA EBX,DWORD PTR [EBP+var_178+0x4]
loc_100A94CB:
	MOV ECX, EBX
	ADD EBX, 0x18
	CALL_LONG(offset [LEGO1_text.m47290_sub_10048290])
	DEC EDI
	JNS loc_100A94CB
	MOV EAX,DWORD PTR [EBP+var_DC+0x4]
	MOV ECX, offset [LEGO1_rdata.m518_ptr]
	MOV EDX,DWORD PTR [EBP+var_C4+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_AC+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],ECX
	MOV DWORD PTR [EBP+var_24+0x4],EDX
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_84+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_7C+0x4]
	MOV DWORD PTR [EBP+var_80+0x4],ECX
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EDX,DWORD PTR [EBP+var_7C+0x4]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [ESI+0x00000084]
	MOV EBX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV ECX,DWORD PTR [ESI+0x00000098]
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV EDI,DWORD PTR [EBP+var_AC+0x4]
	MOV EAX, 0x3F800000
	MOV ECX,DWORD PTR [EBP+var_DC+0x4]
	MOV EDX,DWORD PTR [EBP+var_C4+0x4]
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV DWORD PTR [EDX+0x0C],EAX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV EBX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	MOV EBX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV DWORD PTR [EBP+var_8+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_8+0x4]
	MOV EBX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+var_DC+0x4]
	MOV EAX,DWORD PTR [EBP+var_70+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA EDX,DWORD PTR [EBP+var_D8+0x4]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV EAX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV DWORD PTR [ECX+0x08],EDI
	LEA EDI,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	MOV EBX,DWORD PTR [EAX+0x14]
	CALL_LONG(EBX)
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_6C+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+var_E0+0x4]
	LEA ECX,DWORD PTR [EBP+var_E0+0x4]
	CALL_LONG(DWORD PTR [EAX+0x0000008C])
	LEA ECX,DWORD PTR [EBP+var_C8+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA EAX,DWORD PTR [EBP+var_C0+0x4]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV ECX, EDI
	CALL_LONG(EBX)
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_C8+0x4]
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_C8+0x4]
	CALL_LONG(DWORD PTR [EAX+0x0000008C])
	LEA ECX,DWORD PTR [EBP+var_B0+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	CALL_LONG(offset [LEGO1_text.mA8A30_sub_100A9A30])
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV ECX, EDI
	CALL_LONG(EBX)
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_B0+0x4]
	MOV EBX,DWORD PTR [EBP+var_B0+0x4]
	CALL_LONG(DWORD PTR [EBX+0x0000008C])
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV EDI,DWORD PTR [EBP+arg5+0x4]
	ADD EAX, 0x30
	MOV ECX, EDI
	PUSH EAX
	MOV EBX,DWORD PTR [EDI]
	LEA EDI,DWORD PTR [EBP+var_174+0x4]
	CALL_LONG(DWORD PTR [EBX+0x20])
	XOR EBX, EBX
loc_100A9692:
	LEA EAX,DWORD PTR [EBP+var_E4+0x4]
	CMP EDI, EAX
	JNB FAR loc_100A9736
	MOV ECX, 0x00000003
	MOV EAX, EBX
	CDQ
	IDIV ECX
	SHL EDX, 0x04
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EDX,DWORD PTR [ESI+0x14]
	PUSH EAX
	LEA ECX,DWORD PTR [EDI-0x04]
	MOV DWORD PTR [EBP+var_10+0x4],EDX
	MOV EDX,DWORD PTR [EDI-0x04]
	MOV DWORD PTR [EBP+var_14+0x4],offset [LEGO1_rdata.m5A0_ptr]
	CALL_LONG(DWORD PTR [EDX+0x00000098])
	LEA ECX,DWORD PTR [EBP+var_144+0x4]
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	CMP EDI, ECX
	JBE loc_100A96E3
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	JMP loc_100A96ED
loc_100A96E3:
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
loc_100A96ED:
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCHS
	MOV ECX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	FSTP DWORD PTR [ECX+0x0C]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [EDI]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x7DE4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100A972D
	LEA EAX,DWORD PTR [EBP+var_8+0x4]
	MOV EDX,DWORD PTR [EDI-0x04]
	PUSH EAX
	LEA ECX,DWORD PTR [EDI-0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0xBF800000
	CALL_LONG(DWORD PTR [EDX+0x5C])
loc_100A972D:
	ADD EDI, 0x18
	INC EBX
	JMP FAR loc_100A9692
loc_100A9736:
	XOR ESI, ESI
	LEA EAX,DWORD PTR [EBP+var_174+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EDX+0x38]
	MOV DWORD PTR [EBP+var_10+0x4],EAX
loc_100A974C:
	MOV EAX,DWORD PTR [EBP+var_8+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	SUB EAX, 0x04
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [EBP+var_10+0x4])
	FST DWORD PTR [EBP+var_C+0x4]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x7DF8]
	FSTP QWORD PTR [EBP+var_E8+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100A9787
	FLD QWORD PTR [EBP+var_E8+0x4]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x7E00]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_100A9859
loc_100A9787:
	MOV EAX,DWORD PTR [EBP+var_8+0x4]
	MOV ECX,DWORD PTR [EBP+var_80+0x4]
	MOV EDI,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBP+var_84+0x4]
	PUSH EDI
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	CALL_LONG(DWORD PTR [EAX+0x18])
	FADD DWORD PTR [EDI+0x0C]
	FDIV DWORD PTR [EBP+var_C+0x4]
	FCHS
	FCOM DWORD PTR [offset LEGO1_rdata + 0x7DE4]
	FSTP DWORD PTR [EBP+var_C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JNZ FAR loc_100A9859
	FLD DWORD PTR [EBP+var_C+0x4]
	FCOMP DWORD PTR [EBP+arg3+0x4]
	FNSTSW AX
	TEST AH,0x41
	JZ FAR loc_100A9859
	LEA EAX,DWORD PTR [EBP+var_50+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_58+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_54+0x4],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+var_C+0x4]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_58+0x4]
	MOV EBX,DWORD PTR [EBP+var_58+0x4]
	XOR EDI, EDI
	CALL_LONG(DWORD PTR [EBX+0x5C])
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	MOV EBX,DWORD PTR [EBP+var_58+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_58+0x4]
	CALL_LONG(DWORD PTR [EBX+0x48])
	LEA EBX,DWORD PTR [EBP+var_174+0x4]
loc_100A980E:
	CMP ESI, EDI
	JZ loc_100A9846
	MOV EAX, ESI
	SUB EAX, EDI
	CMP EAX, 0x03
	JZ loc_100A9846
	MOV EAX, EDI
	SUB EAX, ESI
	CMP EAX, 0x03
	JZ loc_100A9846
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EBP+var_54+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_58+0x4]
	MOV EAX,DWORD PTR [EBP+var_58+0x4]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [EBX]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x7DE4]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_100A9854
loc_100A9846:
	ADD EBX, 0x18
	INC EDI
	LEA EAX,DWORD PTR [EBP+var_E4+0x4]
	CMP EBX, EAX
	JB loc_100A980E
loc_100A9854:
	CMP EDI, 0x06
	JZ loc_100A9878
loc_100A9859:
	INC ESI
	LEA EAX,DWORD PTR [EBP+var_E4+0x4]
	ADD DWORD PTR [EBP+var_8+0x4],0x18
	CMP DWORD PTR [EBP+var_8+0x4],EAX
	JB FAR loc_100A974C
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9878:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9886:
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	MOV ECX, ESI
	MOV EAX,DWORD PTR [ESI]
	MOV EDI,DWORD PTR [EAX+0x10]
	CALL_LONG(EDI)
	MOV EBX,DWORD PTR [EBP+var_44+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX, ESI
	CALL_LONG(EDI)
	MOV EAX,DWORD PTR [EAX+0x14]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_10+0x4],EAX
	MOV EDX,DWORD PTR [ECX]
	PUSH ECX
	MOV ESI,DWORD PTR [EDX+0x38]
	CALL_LONG(ESI)
	FSTP DWORD PTR [EBP+var_8+0x4]
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	PUSH ECX
	PUSH EDX
	MOV ECX, EDX
	CALL_LONG(ESI)
	FMUL DWORD PTR [offset LEGO1_rdata + 0x7E08]
	FSTP DWORD PTR [EBP+var_C+0x4]
	MOV ECX,DWORD PTR [EBP+var_40+0x4]
	MOV EBX,DWORD PTR [EBP+var_44+0x4]
	PUSH ECX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(DWORD PTR [EBX+0x18])
	FLD DWORD PTR [EBP+var_10+0x4]
	FMUL DWORD PTR [EBP+var_10+0x4]
	FCOMPP
	FSTP DWORD PTR [EBP+var_10+0x4]
	FLD DWORD PTR [EBP+var_8+0x4]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x7E10]
	FSTP QWORD PTR [EBP+var_1C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100A9933
	FLD QWORD PTR [EBP+var_1C+0x4]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x7E18]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A9933
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9933:
	FLD DWORD PTR [EBP-0x0C]
	FMUL DWORD PTR [EBP+var_8+0x4]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x7E20]
	FLD DWORD PTR [EBP+var_C+0x4]
	FMUL DWORD PTR [EBP+var_C+0x4]
	FADDP ST(1),ST
	FCOM QWORD PTR [offset LEGO1_rdata + 0x7E18]
	FSTP DWORD PTR [EBP+var_10+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100A9962
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9962:
	FLD DWORD PTR [EBP-0x04]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x7E08]
	FSTP DWORD PTR [EBP+var_8+0x4]
	FLD DWORD PTR [EBP+var_C+0x4]
	FCHS
	FSTP DWORD PTR [EBP+var_C+0x4]
	CMP DWORD PTR [EBP+var_10+0x4],0x00
	JG loc_100A9987
	FLD DWORD PTR [EBP+var_C+0x4]
	FDIV DWORD PTR [EBP+var_8+0x4]
	FSTP DWORD PTR [EBP+var_20+0x4]
	JMP loc_100A99C4
loc_100A9987:
	FLD DWORD PTR [EBP+var_10+0x4]
	FSQRT
	FLD DWORD PTR [EBP+var_C+0x4]
	FADD ST,ST(1)
	FDIV DWORD PTR [EBP+var_8+0x4]
	FSTP DWORD PTR [EBP+var_10+0x4]
	FSUBR DWORD PTR [EBP+var_C+0x4]
	CMP DWORD PTR [EBP+var_10+0x4],0x00
	FDIV DWORD PTR [EBP+var_8+0x4]
	JLE loc_100A99B5
	FST DWORD PTR [EBP+var_8+0x4]
	FCOMP DWORD PTR [EBP+var_10+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100A99B8
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	JMP loc_100A99C1
loc_100A99B5:
	FSTP DWORD PTR [EBP+var_8+0x4]
loc_100A99B8:
	CMP DWORD PTR [EBP+var_8+0x4],0x00
	JLE loc_100A9A16
	MOV EAX,DWORD PTR [EBP+var_8+0x4]
loc_100A99C1:
	MOV DWORD PTR [EBP+var_20+0x4],EAX
loc_100A99C4:
	CMP DWORD PTR [EBP+var_20+0x4],0x80000000
	JA loc_100A9A0B
	FLD DWORD PTR [EBP+var_20+0x4]
	FCOMP DWORD PTR [EBP+arg3+0x4]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_100A9A0B
	MOV EDI,DWORD PTR [EBP+arg5+0x4]
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ESI,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x20])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x5C])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x48])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9A0B:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100A9A16:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9A30(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBP
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	MOV EBP, ESP
	PUSH ESI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV EAX, ESI
	POP ESI
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9A50(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA8AB0_proc_100A9AB0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	SUB ESP, 0x04
	PUSH ESI
	PUSH EAX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA72D0_sub_100A82D0])
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7EA8_ptr]
	MOV DWORD PTR [ESI+0x00000108],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100A9B29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA73C0_sub_100A83C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9B40(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x20
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, EAX
	SUB EDI,DWORD PTR [ESI+0x00000108]
	JZ FAR loc_100A9BDB
	MOV EDX,DWORD PTR [ESP+arg1+0x28]
	MOV DWORD PTR [ESI+0x00000108],EAX
	MOV DWORD PTR [ESP+var_1C+0x28],offset [LEGO1_rdata.m488_ptr]
	LEA EAX,DWORD PTR [ESP+var_14+0x28]
	MOV ECX,DWORD PTR [EDX+0x04]
	ADD ECX, 0x30
	MOV EDX, EAX
	MOV DWORD PTR [ESP+var_18+0x28],EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_8+0x28]
	MOV EAX,DWORD PTR [ESI+0x14]
	PUSH ECX
	ADD EAX, 0x30
	LEA ECX,DWORD PTR [ESP+var_1C+0x2C]
	MOV DWORD PTR [ESP+var_4+0x2C],EAX
	MOV EAX,DWORD PTR [ESP+var_1C+0x2C]
	MOV DWORD PTR [ESP+var_8+0x2C],offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(DWORD PTR [EAX+0x54])
	LEA ECX,DWORD PTR [ESP+var_24+0x2C]
	MOV DWORD PTR [ESP+var_24+0x2C],EDI
	FILD DWORD PTR [ESP+var_24+0x2C]
	MOV EDI,DWORD PTR [ESP+var_20+0x2C]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_1C+0x2C]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7E10]
	FSTP DWORD PTR [ESP+var_20+0x2C]
	CALL_LONG(DWORD PTR [EDI+0x68])
	LEA ECX,DWORD PTR [ESP+var_20+0x2C]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA4A30_sub_100A5A30])
loc_100A9BDB:
	POP EDI
	POP ESI
	ADD ESP, 0x20
	RETN 0x0008
}
}

