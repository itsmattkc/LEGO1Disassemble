#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_1007C930()
{
__asm{
	PUSH EBX
	MOV EAX,DWORD PTR [ECX+0x68]
	PUSH ESI
	PUSH EDI
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV EBX,DWORD PTR [EDX+0x0C]
	MOV EDI,DWORD PTR [EBX+0x04]
	TEST EDI, EDI
	JNZ loc_1007C94C
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	POP EBX
	RET
loc_1007C94C:
	MOV EAX,DWORD PTR [ECX+0x74]
	MOV EBX,DWORD PTR [EAX+0x00000880]
	TEST EBX, EBX
	JZ loc_1007C98A
	TEST BYTE PTR [EBX+0x10],0x01
	JZ loc_1007C98A
	TEST BYTE PTR [EBX+0x0000009C],0x02
	JZ loc_1007C970
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x58])
loc_1007C970:
	MOV ESI,DWORD PTR [EDI]
	PUSH 0x01
	PUSH EDI
	CALL_LONG(DWORD PTR [ESI+0x4C])
	TEST BYTE PTR [EBX+0x00000095],0x10
	JZ loc_1007C98A
	PUSH 0x01
	PUSH EDI
	CALL_LONG(DWORD PTR [ESI+0x00000090])
loc_1007C98A:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1__configureLegoPartPresenter_LegoPartPresenter__SAXHH_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [offset LEGO1_data.m7AA0], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x7AA4],ECX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C9D0(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x20]
	MOV ESI, ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
	MOV ECX,DWORD PTR [ESI+0x50]
	TEST ECX, ECX
	JZ loc_1007C9FF
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x50],0x00000000
loc_1007C9FF:
	MOV DWORD PTR [ESI+0x50],0x00000000
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+r+0xC],0x00
	JNZ loc_1007CA1D
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB44F0_sub_100B54F0])
loc_1007CA1D:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007CA30(DWORD arg1)
{
	enum{
		var_A8 = -0xA8,
		var_A0 = -0xA0,
		var_98 = -0x98,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_74 = -0x74,
		var_68 = -0x68,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7C467_proc_1007D467]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_44+0x4],ECX
	MOV DWORD PTR [EBP+var_48+0x4],0xFFFFFFFF
	PUSH EBX
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ESI
	PUSH EDI
	PUSH ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	CALL_LONG(offset [LEGO1_text.m98080_sub_10099080])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EAX+0x74]
	PUSH 0x04
	MOV EAX,DWORD PTR [ECX+0x00000880]
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x10]
	SHL EAX, 0x1F
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	SAR EAX, 0x1F
	MOV DWORD PTR [EBP+var_54+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV EAX,DWORD PTR [EBP+var_8C+0x4]
	PUSH 0x04
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV DWORD PTR [EBP+var_30+0x4],ESI
	CMP DWORD PTR [EBP+var_68+0x4],ESI
	JBE FAR loc_1007CFE1
loc_1007CAD0:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_58+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	MOV EAX,DWORD PTR [EBP+var_58+0x4]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_58+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	MOV ECX,DWORD PTR [EBP+var_58+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV BYTE PTR [EDX+ECX],0x00
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [ECX],0x5E
	JNZ FAR loc_1007CC78
	LEA EDI,DWORD PTR [ECX+0x01]
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	REP MOVSD
	MOV ECX, EAX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	CMP DWORD PTR [offset LEGO1_data.m7AA0],0x00
	JZ FAR loc_1007CBE6
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007CB6D
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007CB6D:
	MOV ECX,DWORD PTR [EBP+var_54+0x4]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EDI, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	TEST ESI, ESI
	JZ loc_1007CBB0
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EDI, EAX
loc_1007CBB0:
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	TEST EDI, EDI
	JZ FAR loc_1007CCB9
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP FAR loc_1007CCB9
loc_1007CBE6:
	MOV EDI, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1007CC09
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EDI, EAX
loc_1007CC09:
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	TEST EDI, EDI
	JZ loc_1007CC36
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007CC36:
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007CC59
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007CC59:
	MOV ECX,DWORD PTR [EBP+var_54+0x4]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JZ loc_1007CCB9
	JMP_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
loc_1007CC78:
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007CC9B
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007CC9B:
	MOV ECX,DWORD PTR [EBP+var_54+0x4]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
loc_1007CCB9:
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EDI,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000000
	MOV ECX,DWORD PTR [EDI+0x04]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1007CD13
loc_1007CCD3:
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
loc_1007CCD9:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ESI]
	JNZ loc_1007CCF9
	OR BL, BL
	JZ loc_1007CCF5
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ESI+0x01]
	JNZ loc_1007CCF9
	ADD EDX, 0x02
	ADD ESI, 0x02
	OR BL, BL
	JNZ loc_1007CCD9
loc_1007CCF5:
	XOR EDX, EDX
	JMP loc_1007CCFE
loc_1007CCF9:
	SBB EDX, EDX
	SBB EDX, -0x01
loc_1007CCFE:
	TEST EDX, EDX
	JG loc_1007CD08
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_1007CD0B
loc_1007CD08:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_1007CD0B:
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JNZ loc_1007CCD3
loc_1007CD13:
	MOV DWORD PTR [EBP+var_88+0x4],EDI
	CMP DWORD PTR [EAX+0x0C],EDI
	JZ loc_1007CD53
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDI+0x0C]
loc_1007CD24:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ECX]
	JNZ loc_1007CD44
	OR BL, BL
	JZ loc_1007CD40
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ECX+0x01]
	JNZ loc_1007CD44
	ADD EDX, 0x02
	ADD ECX, 0x02
	OR BL, BL
	JNZ loc_1007CD24
loc_1007CD40:
	XOR ECX, ECX
	JMP loc_1007CD49
loc_1007CD44:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1007CD49:
	TEST ECX, ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	JLE loc_1007CD5C
loc_1007CD53:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_84+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
loc_1007CD5C:
	MOV ECX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_1007CD69
	MOV ECX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
loc_1007CD69:
	CMP DWORD PTR [EBP+var_1C+0x4],0x00
	JNZ FAR loc_1007CFAC
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m64C60_sub_10065C60])
	ADD ESP, 0x08
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EDI,DWORD PTR [EAX+0x0C]
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1007CDE3
loc_1007CDA3:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
loc_1007CDA9:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [ESI]
	JNZ loc_1007CDC9
	OR DL, DL
	JZ loc_1007CDC5
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [ESI+0x01]
	JNZ loc_1007CDC9
	ADD ECX, 0x02
	ADD ESI, 0x02
	OR DL, DL
	JNZ loc_1007CDA9
loc_1007CDC5:
	XOR ECX, ECX
	JMP loc_1007CDCE
loc_1007CDC9:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1007CDCE:
	TEST ECX, ECX
	JG loc_1007CDD8
	MOV EDI, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_1007CDDB
loc_1007CDD8:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_1007CDDB:
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JNZ loc_1007CDA3
loc_1007CDE3:
	MOV DWORD PTR [EBP+var_80+0x4],EDI
	CMP DWORD PTR [EBX+0x0C],EDI
	JZ loc_1007CE1D
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDI+0x0C]
loc_1007CDF1:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_1007CE11
	OR DL, DL
	JZ loc_1007CE0D
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_1007CE11
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_1007CDF1
loc_1007CE0D:
	XOR EAX, EAX
	JMP loc_1007CE16
loc_1007CE11:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007CE16:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_80+0x4]
	JLE loc_1007CE26
loc_1007CE1D:
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EBP+var_7C+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_7C+0x4]
loc_1007CE26:
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBX+0x0C],EAX
	JZ loc_1007CE52
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	CMP BYTE PTR [EBX+0x04],0x00
	JZ loc_1007CE8F
	MOV ESI,DWORD PTR [EAX+0x10]
	TEST ESI, ESI
	JZ loc_1007CE8F
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m64C00_sub_10065C00])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_1007CE8F
loc_1007CE52:
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_28+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1007CE8F:
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	MOV EAX, 0x00000001
	MOV DWORD PTR [EBP+var_5C+0x4],0x00000000
	MOV DWORD PTR [EBP+var_60+0x4],ECX
	MOV EDI,DWORD PTR [EBX+0x0C]
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],ESI
	JZ loc_1007CEF8
loc_1007CEAF:
	MOV EDI, ESI
	MOV EAX,DWORD PTR [EBP+var_60+0x4]
	MOV EDX,DWORD PTR [ESI+0x0C]
loc_1007CEB7:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_1007CED7
	OR CL, CL
	JZ loc_1007CED3
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_1007CED7
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_1007CEB7
loc_1007CED3:
	XOR EAX, EAX
	JMP loc_1007CEDC
loc_1007CED7:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007CEDC:
	TEST EAX, EAX
	SETG CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_1007CEEE
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_1007CEF0
loc_1007CEEE:
	MOV ESI,DWORD PTR [ESI]
loc_1007CEF0:
	CMP DWORD PTR [offset LEGO1_data + 0x100],ESI
	JNZ loc_1007CEAF
loc_1007CEF8:
	CMP DWORD PTR [EBX+0x10],0x00
	JZ loc_1007CF1D
	LEA EAX,DWORD PTR [EBP+var_60+0x4]
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_74+0x4],ECX
	JMP FAR loc_1007CFA3
loc_1007CF1D:
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	TEST EAX, EAX
	JZ loc_1007CF4F
	MOV EAX,DWORD PTR [EBX+0x0C]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1007CF47
	LEA EAX,DWORD PTR [EBP+var_60+0x4]
	LEA ECX,DWORD PTR [EBP+var_A0+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_74+0x4],ECX
	JMP loc_1007CFA3
loc_1007CF47:
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m4E960_sub_1004F960])
loc_1007CF4F:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV EDX,DWORD PTR [EBP+var_60+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
loc_1007CF58:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1007CF78
	OR AL, AL
	JZ loc_1007CF74
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1007CF78
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1007CF58
loc_1007CF74:
	XOR EAX, EAX
	JMP loc_1007CF7D
loc_1007CF78:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007CF7D:
	TEST EAX, EAX
	JLE loc_1007CF9D
	LEA EAX,DWORD PTR [EBP+var_60+0x4]
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_74+0x4],ECX
	JMP loc_1007CFA3
loc_1007CF9D:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_74+0x4],EAX
loc_1007CFA3:
	MOV ECX,DWORD PTR [EBP+var_74+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ECX+0x10],EAX
loc_1007CFAC:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_1007CFD2
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007CFD2:
	INC DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	CMP DWORD PTR [EBP+var_68+0x4],EAX
	JA FAR loc_1007CAD0
loc_1007CFE1:
	PUSH 0x18
	MOV EBX, 0x00000006
	MOV DWORD PTR [EBP+var_34+0x4],0x00000004
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV BYTE PTR [EBP+var_8+0x4],BL
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m7C0B7_loc_1007D0B7])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5D90_ptr]
	MOV DWORD PTR [ESI+0x08],EDI
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m7C7C0_proc_1007D7C0]
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5DA8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x14],EDI
	MOV DWORD PTR [ESI+0x10],EDI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5DC0_ptr]
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m7C860_proc_1007D860]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5DD8_ptr]
	JMP_LONG(offset [LEGO1_text.m7C0B9_loc_1007D0B9])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D056()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D063()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D070()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D07D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D08A()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D097()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D09F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C770_loc_1007D770])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D0A7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C7D0_loc_1007D7D0])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D0AF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CC60_loc_1007DC60])
}
}

__declspec(naked) DWORD LEGO1_loc_1007D0B7()
{
__asm{
	XOR ECX, ECX
	JMP_LONG(offset [LEGO1_text.m7C0B9_loc_1007D0B9])
}
}

__declspec(naked) DWORD LEGO1_loc_1007D0B9()
{
	enum{
		arg1217195 = 0x4A4AAC,
		arg1217200 = 0x4A4AC0,
		arg1217206 = 0x4A4AD8,
		arg1217207 = 0x4A4ADC,
		arg1217208 = 0x4A4AE0,
		arg1217209 = 0x4A4AE4,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217214 = 0x4A4AF8,
		arg1217215 = 0x4A4AFC,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	PUSH 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV DWORD PTR [EAX+0x50],ECX
	LEA ECX,DWORD PTR [EBP+arg1217200-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],0x00000000
	CMP DWORD PTR [EBP+arg1217200-0x4A4B20],0x00
	JBE FAR loc_1007D396
loc_1007D0EA:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV EAX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],EAX
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV EAX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH ECX
	MOV BYTE PTR [ECX+EAX],0x00
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH 0x04
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+arg1217195-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7AA4]
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],EAX
	JBE loc_1007D17B
	MOV ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	SUB ECX, EAX
	MOV DWORD PTR [EBP+arg1217214-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],ECX
	JMP loc_1007D182
loc_1007D17B:
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],0x00000000
loc_1007D182:
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0B
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1007D1F6
	MOV ECX, EDI
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0C
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0D
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0E
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m5D30_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m7C4E0_proc_1007D4E0]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0F
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x0B
	MOV ESI, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m5D48_ptr]
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m5D60_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m7C4E0_proc_1007D4E0]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m5D78_ptr]
	JMP loc_1007D1F8
loc_1007D1F6:
	XOR ESI, ESI
loc_1007D1F8:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],0x00000000
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],0x00
	JBE FAR loc_1007D2D9
loc_1007D20D:
	PUSH 0x20
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x10
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1007D239
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x64]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9380_sub_100AA380])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	JMP loc_1007D240
loc_1007D239:
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],0x00000000
loc_1007D240:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EBX, EAX
	LEA EAX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [EBX+0x64]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9510_sub_100AA510])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
	CMP DWORD PTR [EBP+arg1217219-0x4A4B20],0x00
	JNZ loc_1007D284
	CMP DWORD PTR [EBP+arg1217217-0x4A4B20],0x00
	JZ loc_1007D284
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	TEST BYTE PTR [EAX+0x08],0x08
	JZ loc_1007D284
	INC DWORD PTR [EBP+arg1217214-0x4A4B20]
	DEC DWORD PTR [EBP+arg1217217-0x4A4B20]
loc_1007D284:
	MOV EBX,DWORD PTR [ESI+0x14]
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x11
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1007D2B4
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_1007D2B4:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	TEST EBX, EBX
	JZ loc_1007D2C1
	MOV DWORD PTR [EBX+0x08],EAX
	JMP loc_1007D2C4
loc_1007D2C1:
	MOV DWORD PTR [ESI+0x10],EAX
loc_1007D2C4:
	MOV DWORD PTR [ESI+0x14],EAX
	INC DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	INC DWORD PTR [ESI+0x08]
	CMP DWORD PTR [EBP+arg1217214-0x4A4B20],EAX
	JA FAR loc_1007D20D
loc_1007D2D9:
	MOV EAX,DWORD PTR [EBP+arg1217195-0x4A4B20]
	PUSH 0x14
	MOV DWORD PTR [EBP+arg1217212-0x4A4B20],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x12
	TEST EAX, EAX
	JZ loc_1007D31D
	MOV ECX, EAX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x13
	MOV ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x12
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x10],ESI
	JMP loc_1007D324
loc_1007D31D:
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],0x00000000
loc_1007D324:
	MOV EAX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	PUSH 0x0C
	MOV ESI,DWORD PTR [EAX+0x50]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV EBX,DWORD PTR [ESI+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x14
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1007D35E
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_1007D35E:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	TEST EBX, EBX
	JZ loc_1007D36B
	MOV DWORD PTR [EBX+0x08],EAX
	JMP loc_1007D36E
loc_1007D36B:
	MOV DWORD PTR [ESI+0x10],EAX
loc_1007D36E:
	MOV ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV DWORD PTR [ESI+0x14],EAX
	PUSH ECX
	INC DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	INC DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	CMP EAX,DWORD PTR [EBP+arg1217200-0x4A4B20]
	JB FAR loc_1007D0EA
loc_1007D396:
	MOV DWORD PTR [EBP+arg1217207-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.m7C39D_loc_1007D39D])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1007D39D(DWORD arg1)
{
	enum{
		arg1217207 = 0x4A4ADC,
		arg1217208 = 0x4A4AE0,
		arg1217216 = 0x4A4B00,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	CMP DWORD PTR [EBP+arg1217216-0x4A4B20],0x00
	JZ loc_1007D3AF
	MOV ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007D3AF:
	CMP DWORD PTR [EBP+arg1217207-0x4A4B20],0x00
	JZ loc_1007D3CF
	MOV EAX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x50]
	TEST ECX, ECX
	JZ loc_1007D3CF
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	MOV DWORD PTR [EAX+0x50],0x00000000
loc_1007D3CF:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7C471_sub_1007D471])
	MOV EAX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1007D3F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D3F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C490_loc_1007D490])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D401()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C4F0_loc_1007D4F0])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D409()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C710_loc_1007D710])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D411()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D41E()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D42B()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1007D433()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D440()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D44D()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007D45A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007D471()
{
	enum{
		arg1217209 = 0x4A4AE4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D4D7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D573()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C490_loc_1007D490])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D5DF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D68B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C490_loc_1007D490])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D6F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C4F0_loc_1007D4F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D751()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C4F0_loc_1007D4F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D7B7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D853()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C770_loc_1007D770])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D995()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CBA0_loc_1007DBA0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007D9A7()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DA09()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CA20_loc_1007DA20])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DA61()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CB50_loc_1007DB50])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DAC9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DB39()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CB50_loc_1007DB50])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DB91()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DBE1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CA20_loc_1007DA20])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DC49()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CC60_loc_1007DC60])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DCA1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C7D0_loc_1007D7D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DD0F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DDBB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C770_loc_1007D770])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DE29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C7D0_loc_1007D7D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DE99()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7C710_loc_1007D710])
}
}

__declspec(naked) DWORD LEGO1_sub_1007DF20()
{
	enum{
		var_4C = -0x4C,
		var_48 = -0x48,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7D14F_proc_1007E14F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x3C
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x50]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_28+0x4],ESI
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m5E68_ptr]
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m5E38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m5E50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1007DF8C:
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JNZ loc_1007DF9A
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1007DFA0
loc_1007DF9A:
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1007DFA0:
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m7D101_loc_1007E101])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	JZ_LONG(offset [LEGO1_text.m7D101_loc_1007E101])
	MOV ESI,DWORD PTR [EBP+var_3C+0x4]
	MOV EAX,DWORD PTR [ESI+0x08]
	ADD ESI, 0x08
	MOV DWORD PTR [EBP+var_4C+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_4C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	TEST EAX, EAX
	JNZ FAR loc_1007E0C6
	MOV EAX,DWORD PTR [ESI]
	MOV EDI,DWORD PTR [EBP+var_3C+0x4]
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	MOV EAX,DWORD PTR [EDI+0x10]
	ADD EDI, 0x10
	LEA EDX,DWORD PTR [EBP+var_48+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA62C0_sub_100A72C0])
	MOV ESI, EAX
	MOV EDI,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m5DF0_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m5E08_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m5E20_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [EBP+var_18+0x4],EDI
loc_1007E040:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [ECX+0x10]
	ADD ECX, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST EAX, EAX
	JZ loc_1007E055
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_40+0x4],EDX
loc_1007E055:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1007E0B8
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_38+0x4],EDI
	LEA EDI,DWORD PTR [EDX+0x04]
	LEA EBX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [EDI],0x00
	JZ loc_1007E078
	MOV ECX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1007E07C
loc_1007E078:
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [ECX],EAX
loc_1007E07C:
	MOV EAX,DWORD PTR [EBX]
	TEST EAX, EAX
	JZ loc_1007E089
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_1007E091
loc_1007E089:
	MOV EAX,DWORD PTR [EDI]
	MOV EDI,DWORD PTR [EBP+var_38+0x4]
	MOV DWORD PTR [EDI+0x14],EAX
loc_1007E091:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+var_38+0x4]
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	DEC DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ECX*4+EDX],EAX
	INC DWORD PTR [ESI+0x0C]
	JMP loc_1007E040
loc_1007E0B8:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m7D0F9_sub_1007E0F9])
	JMP FAR loc_1007DF8C
loc_1007E0C6:
	MOV ECX,DWORD PTR [EAX+0x10]
	DEC ECX
	MOV DWORD PTR [EAX+0x10],ECX
	JNZ FAR loc_1007DF8C
	PUSH EAX
	MOV ECX,DWORD PTR [EAX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
	JMP FAR loc_1007DF8C
}
}

__declspec(naked) DWORD LEGO1_sub_1007E0F9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7CBA0_loc_1007DBA0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E159()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7D360_loc_1007E360])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E1C9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7D1E0_loc_1007E1E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E221()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7D310_loc_1007E310])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E289()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E2F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7D310_loc_1007E310])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E351()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E3A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7D1E0_loc_1007E1E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E3B0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7D416_proc_1007E416]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5EC8_ptr]
	MOV DWORD PTR [ESI+0x0000013C],0x41C80000
	MOV DWORD PTR [ESI+0x00000150],0x40000000
	MOV BYTE PTR [ESI+0x00000148],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007E619()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_1007E880()
{
__asm{
	MOVSX EAX,WORD PTR [ECX+0x00000160]
	PUSH EAX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x62
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x63
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x27
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x28
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007E990()
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
	};

__asm{
	SUB ESP, 0x54
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x13
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	CMP DWORD PTR [EAX+0x18],0x00
	JNZ FAR loc_1007EA7B
	CMP BYTE PTR [EAX+0x22],0x00
	JZ loc_1007E9D7
	PUSH 0x01
	PUSH 0x44
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m3DCC0_sub_1003ECC0])
	ADD ESP, 0x10
	POP EDI
	POP ESI
	ADD ESP, 0x54
	RET
loc_1007E9D7:
	MOV BYTE PTR [EAX+0x22],0x01
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ FAR loc_1007EA7B
	MOV ECX,DWORD PTR [EAX+0x54]
	LEA EAX,DWORD PTR [ESP+var_40+0x5C]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	MOV DWORD PTR [ESP+var_48+0x5C],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	FLD DWORD PTR [EAX+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x5EA0]
	FSTP DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [EAX+0x24]
	FADD QWORD PTR [offset LEGO1_rdata + 0x5EA8]
	ADD EAX, 0x30
	FSTP DWORD PTR [ESP+var_54+0x5C]
	FLD DWORD PTR [EAX-0x10]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x5EA0]
	FST DWORD PTR [ESP+var_4C+0x5C]
	FADD DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	ADD EAX, 0x34
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_54+0x5C]
	PUSH 0x01
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x74]
	PUSH 0x01
	ADD EAX, 0x38
	LEA ECX,DWORD PTR [ESP+var_48+0x78]
	PUSH ECX
	PUSH 0x00000358
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_50+0x80]
	FSTP DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
loc_1007EA7B:
	POP EDI
	POP ESI
	ADD ESP, 0x54
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007EA90()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7DB5C_proc_1007EB5C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA ECX,DWORD PTR [ESI+0x000000A4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH ESI
	MOV DWORD PTR [ESI+0x0000014C],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5FE8_ptr]
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [ESI+0x000000A0],EBX
	MOV DWORD PTR [ESI+0x00000138],EBX
	MOV WORD PTR DS:[ESI+0x00000148],BX
	MOV DWORD PTR [ESI+0x0000013C],EBX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x00000140],EBX
	MOV DWORD PTR [ESI+0x00000144],EBX
	MOV BYTE PTR [ESI+0x08],BL
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007EC20()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7DCCE_proc_1007ECCE]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5FE8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m7DD70_sub_1007ED70])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m7DCA7_sub_1007ECA7])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m7DCB5_sub_1007ECB5])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7DCC3_sub_1007ECC3])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7DCD8_sub_1007ECD8])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007ECA7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000014C
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007ECB5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000A4
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007ECC3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0C
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007ECD8()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_1007ECE0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m7DD20_sub_1007ED20])
	MOV EDI, EAX
	TEST EDI, EDI
	JNZ loc_1007ED0A
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [ESP+arg2+0x8]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	MOV BYTE PTR [ESI+0x08],0x01
loc_1007ED0A:
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007ED20(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x0000014C]
	CMP DWORD PTR [EDI],0x00
	JZ loc_1007ED33
	CALL_LONG(offset [LEGO1_text.m7DD70_sub_1007ED70])
loc_1007ED33:
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	MOV EBX, 0xFFFFFFFF
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB82C0__Open_MxStreamer__QAEPAVMxStreamController__PBDG_Z])
	TEST EAX, EAX
	JZ loc_1007ED5B
	PUSH ESI
	MOV ECX, EDI
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
loc_1007ED5B:
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007ED70()
{
	enum{
		var_AC = -0xAC,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7DE2A_proc_1007EE2A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	CMP DWORD PTR [ECX+0x0000014C],0x00
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_1007EE15
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX+0x0000014C]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7DE22_sub_1007EE22])
	MOV WORD PTR SS:[EBP+var_88+0x4],0xFFFE
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x0000014C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB8570__Close_MxStreamer__QAEJPBD_Z])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV BYTE PTR [ECX+0x08],0x00
	CALL_LONG(offset [LEGO1_text.m7DE34_sub_1007EE34])
loc_1007EE15:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007EE22()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007EE34()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007EE70()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7DF2C_proc_1007EF2C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX+0x000000A0]
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	TEST EAX, EAX
	PUSH ESI
	PUSH EDI
	JZ loc_1007EEB2
	CMP DWORD PTR [EAX+0x1C],0x00
	JZ loc_1007EEB2
	MOV EAX,DWORD PTR [ECX+0x00000138]
	MOV EDX,DWORD PTR [EAX+0x1C]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	ADD ESP, 0x04
loc_1007EEB2:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x00000138]
	TEST EAX, EAX
	JZ loc_1007EF1D
	LEA ESI,DWORD PTR [ECX+0x000000A4]
	MOV DWORD PTR [ECX+0x000000A0],EAX
	PUSH ESI
	ADD ECX, 0x0C
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ECX+0x00000138],0x00000000
	MOV DWORD PTR [ECX+0x000000C0],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7DF36_sub_1007EF36])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x0000013C],0x00000000
loc_1007EF1D:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007EF36()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007EF40()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7E056_proc_1007F056]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH EDI
	MOV ECX,DWORD PTR [ECX+0x000000A0]
	TEST ECX, ECX
	JNZ_LONG(offset [LEGO1_text.m7E068_loc_1007F068])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX+0x00000138]
	TEST ECX, ECX
	JZ_LONG(offset [LEGO1_text.m7E0CE_loc_1007F0CE])
	CMP WORD PTR DS:[EDX+0x00000148],0x00
	MOV ESI, 0x0000001E
	JNZ loc_1007EF97
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EDX+0x00000144]
loc_1007EF97:
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP EAX, ESI
	MOV ECX,DWORD PTR [EDX+0x00000138]
	JGE loc_1007EFE7
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX+0x00000140]
	ADD ECX, EAX
	CMP ECX, ESI
	JG loc_1007EFD3
	MOV ECX,DWORD PTR [EDX+0x00000138]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EDX+0x00000140]
	ADD ESI, EAX
loc_1007EFD3:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH ESI
	MOV ECX,DWORD PTR [EDX+0x00000138]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	JMP_LONG(offset [LEGO1_text.m7E0CE_loc_1007F0CE])
loc_1007EFE7:
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX+0x00000138]
	LEA ESI,DWORD PTR [EDX+0x000000A4]
	PUSH ESI
	MOV DWORD PTR [EDX+0x000000A0],ECX
	LEA ECX,DWORD PTR [EDX+0x0C]
	CALL_LONG(offset [LEGO1_text.mACC10_sub_100ADC10])
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EDX+0x00000138],0x00000000
	MOV DWORD PTR [EDX+0x000000C0],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [ESI]
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7E060_sub_1007F060])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x0000013C],0x00000000
	JMP_LONG(offset [LEGO1_text.m7E0CE_loc_1007F0CE])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F060()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F0E0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x000000A0]
	TEST ECX, ECX
	JZ loc_1007F155
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	CMP WORD PTR DS:[ESI+0x00000148],0x00
	MOV EDX, 0x0000001E
	JNZ loc_1007F107
	MOV EDX,DWORD PTR [ESI+0x00000144]
loc_1007F107:
	CMP EDX, EAX
	JLE loc_1007F127
	MOV ECX,DWORD PTR [ESI+0x000000A0]
	MOV ESI,DWORD PTR [ESI+0x00000140]
	ADD ESI, EAX
	CMP ESI, EDX
	JL loc_1007F11F
	MOV ESI, EDX
loc_1007F11F:
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	POP ESI
	RET
loc_1007F127:
	MOV ECX,DWORD PTR [ESI+0x000000A0]
	JGE loc_1007F143
	SUB EAX,DWORD PTR [ESI+0x00000140]
	CMP EAX, EDX
	JG loc_1007F13B
	MOV EAX, EDX
loc_1007F13B:
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	POP ESI
	RET
loc_1007F143:
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	MOV DWORD PTR [ESI+0x0000013C],0x00000000
	POP ESI
	RET
loc_1007F155:
	MOV DWORD PTR [ESI+0x0000013C],0x00000000
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007F1B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EAX+0x08]
	LEA ECX,DWORD PTR [ESI+0x000000A4]
	MOV DWORD PTR [ESI+0x00000138],EAX
	MOV EDX,DWORD PTR [EAX+0x1C]
	MOV EAX,DWORD PTR [EDX+0x20]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ECX,DWORD PTR [ESI+0x00000138]
	PUSH 0x00
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV EAX,DWORD PTR [EDX+0x1C]
	MOV DWORD PTR [ESI+0x000000C0],EAX
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV EAX,DWORD PTR [EDX+0x000000BC]
	MOV DWORD PTR [ESI+0x00000144],EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x60])
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007F200(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7E2D0_proc_1007F2D0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [ECX+0x000000A0],EAX
	JNZ_LONG(offset [LEGO1_text.m7E283_loc_1007F283])
	XOR EAX, EAX
	ADD ECX, 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ECX+0x00000094],EAX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7E27B_sub_1007F27B])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x28],0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m7E25C_loc_1007F25C])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F27B()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F2DA()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F2F0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7E43C_proc_1007F43C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	CMP BYTE PTR [ECX+0x08],0x00
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JNZ loc_1007F31F
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m7E456_loc_1007F456])
loc_1007F31F:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x000000C0],-0x01
	JNZ_LONG(offset [LEGO1_text.m7E451_loc_1007F451])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [ECX+0x28],EDX
	JZ_LONG(offset [LEGO1_text.m7E451_loc_1007F451])
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV EAX,DWORD PTR [EAX+0x20]
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7E434_sub_1007F434])
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV EAX,DWORD PTR [EAX+0x1C]
	MOV DWORD PTR [EBP+var_90+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV AX,WORD PTR DS:[EAX+0x24]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	MOV WORD PTR SS:[EBP+var_88+0x4],AX
	ADD ESI, 0x000000A4
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EAX+0x20]
	MOV EAX,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV ECX, EAX
	MOV DWORD PTR [EAX+0x000000C0],EDX
	MOV DWORD PTR [ECX+0x00000128],ECX
	MOV ECX, EAX
	MOV DWORD PTR [EAX+0x00000130],ECX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV ECX, EAX
	MOV EDX,DWORD PTR [EBP+var_8C+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ESI,DWORD PTR [EBP+var_90+0x4]
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV DWORD PTR [EAX+0x1C],ESI
	MOV SI,WORD PTR SS:[EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.m148E0_sub_100158E0])
	MOV WORD PTR DS:[EAX+0x24],SI
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_1007F423
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [ECX+0x0000013C],EAX
	MOV DWORD PTR [ECX+0x00000140],EDX
loc_1007F423:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7E446_sub_1007F446])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	JMP_LONG(offset [LEGO1_text.m7E456_loc_1007F456])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F434()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F446()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F470()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7E556_proc_1007F556]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	CMP DWORD PTR [ECX+0x000000C0],-0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_1007F4A6
	LEA EAX,DWORD PTR [ECX+0x000000A4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	ADD ESP, 0x04
loc_1007F4A6:
	XOR EDX, EDX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EDX
	LEA ECX,DWORD PTR [EAX+0x000000A4]
	MOV DWORD PTR [EAX+0x00000138],EDX
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7E560_sub_1007F560])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x000000C0],0xFFFFFFFF
	CMP DWORD PTR [ECX+0x28],-0x01
	JZ loc_1007F4F1
	LEA EAX,DWORD PTR [ECX+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	ADD ESP, 0x04
loc_1007F4F1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EAX+0x000000A0],0x00000000
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	LEA ECX,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7E54E_sub_1007F54E])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV WORD PTR DS:[ECX+0x00000148],0x0000
	MOV DWORD PTR [ECX+0x28],0xFFFFFFFF
	MOV DWORD PTR [ECX+0x0000013C],0x00000000
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007F54E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F560()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007F570()
{
__asm{
	MOV AX,WORD PTR DS:[ECX+0x00000148]
	TEST AX, AX
	JNZ loc_1007F599
	CMP DWORD PTR [ECX+0x0000013C],0x00
	JNZ loc_1007F58F
	MOV DWORD PTR [ECX+0x0000013C],0x00000002
loc_1007F58F:
	MOV DWORD PTR [ECX+0x00000140],0x00000014
loc_1007F599:
	INC AX
	MOV WORD PTR DS:[ECX+0x00000148],AX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007F5B0()
{
__asm{
	MOV AX,WORD PTR DS:[ECX+0x00000148]
	TEST AX, AX
	JZ loc_1007F5E4
	DEC AX
	MOV WORD PTR DS:[ECX+0x00000148],AX
	JNZ loc_1007F5E4
	CMP DWORD PTR [ECX+0x0000013C],0x00
	JNZ loc_1007F5DA
	MOV DWORD PTR [ECX+0x0000013C],0x00000002
loc_1007F5DA:
	MOV DWORD PTR [ECX+0x00000140],0x0000000A
loc_1007F5E4:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__Enable_MxBackgroundAudioManager__QAEXE_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	CMP BYTE PTR [ECX+0x08],AL
	JZ loc_1007F605
	MOV BYTE PTR [ECX+0x08],AL
	TEST AL, AL
	JNZ loc_1007F605
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
loc_1007F605:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007F610(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	PUSH 0x00
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV DWORD PTR [ESI+0x00000138],ECX
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV EDX,DWORD PTR [EAX+0x000000BC]
	MOV DWORD PTR [ESI+0x00000144],EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV EDX,DWORD PTR [ESP+arg2+0x8]
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x00000140],ECX
	MOV DWORD PTR [ESI+0x0000013C],EDX
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1007F650()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x000000A0],EAX
	MOV DWORD PTR [ECX+0x0000013C],EAX
	RET
}
}

__declspec(naked) DWORD LEGO1__configureLegoModelPresenter_LegoModelPresenter__SAXH_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x7AE0], EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007F670(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	LEA ESI,DWORD PTR [ECX+0x20]
	MOV EDI, ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	MOV DWORD PTR [EDI+0x64],0x00000000
	MOV BYTE PTR [EDI+0x68],0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+arg1+0x8],0x00
	JNZ loc_1007F6A0
	PUSH 0x00
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB17B0_sub_100B27B0])
loc_1007F6A0:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007F6B0(DWORD arg1)
{
	enum{
		var_144 = -0x144,
		var_140 = -0x140,
		var_13C = -0x13C,
		var_FC = -0xFC,
		var_F8 = -0xF8,
		var_F4 = -0xF4,
		var_E8 = -0xE8,
		var_D0 = -0xD0,
		var_CC = -0xCC,
		var_C4 = -0xC4,
		var_BC = -0xBC,
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7EF5E_proc_1007FF5E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000134
	LEA EAX,DWORD PTR [EBP+var_F4+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	PUSH EBX
	MOV DWORD PTR [EBP+var_F8+0x4],EAX
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_70+0x4],0xFFFFFFFF
	PUSH EDI
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ECX
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_FC+0x4],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98080_sub_10099080])
	LEA ECX,DWORD PTR [EBP+var_E8+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m9FB30_sub_100A0B30])
	LEA ECX,DWORD PTR [EBP+var_13C+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_140+0x4],ECX
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_144+0x4],offset [LEGO1_rdata.m300_ptr]
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x74]
	MOV ECX,DWORD PTR [EAX+0x00000880]
	MOV EAX,DWORD PTR [ECX+0x10]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	SHL EAX, 0x1F
	MOV ECX,DWORD PTR [ECX+0x64]
	SAR EAX, 0x1F
	TEST ECX, ECX
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	JZ loc_1007F75A
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007F75A:
	PUSH 0x00000108
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_54+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007F789
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x64]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA71D0_sub_100A81D0])
loc_1007F789:
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	TEST EAX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ECX+0x64],EAX
	JZ FAR loc_1007FE8E
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_B0+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	CMP DWORD PTR [EBP+var_B0+0x4],0x13
	JNZ FAR loc_1007FE8E
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	MOV EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH 0x04
	LEA ECX,DWORD PTR [EBP+var_48+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	MOV DWORD PTR [EBP+var_4C+0x4],0x00000000
	CMP DWORD PTR [EBP+var_48+0x4],0x00
	JBE FAR loc_1007FD61
loc_1007F823:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_3C+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	MOV ECX,DWORD PTR [EBP+var_3C+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV BYTE PTR [EDX+ECX],0x00
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [ECX],0x5E
	JNZ FAR loc_1007F9CB
	LEA EDI,DWORD PTR [ECX+0x01]
	SUB EAX, EAX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	REP MOVSD
	MOV ECX, EAX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	CMP DWORD PTR [offset LEGO1_data + 0x7AE0],0x00
	JZ FAR loc_1007F939
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007F8C0
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007F8C0:
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EDI, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	TEST ESI, ESI
	JZ loc_1007F903
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EDI, EAX
loc_1007F903:
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	TEST EDI, EDI
	JZ FAR loc_1007FA0C
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP FAR loc_1007FA0C
loc_1007F939:
	MOV EDI, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1007F95C
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EDI, EAX
loc_1007F95C:
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	TEST EDI, EDI
	JZ loc_1007F989
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007F989:
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007F9AC
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007F9AC:
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JZ loc_1007FA0C
	JMP FAR loc_1007FE8E
loc_1007F9CB:
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1007F9EE
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
loc_1007F9EE:
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	PUSH EDX
	MOV ECX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
loc_1007FA0C:
	CMP DWORD PTR [EBP+var_A8+0x4],0x00
	JNZ FAR loc_1007FD52
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EDI,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV ECX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],ECX
	JZ loc_1007FA73
loc_1007FA33:
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
loc_1007FA39:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ESI]
	JNZ loc_1007FA59
	OR BL, BL
	JZ loc_1007FA55
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ESI+0x01]
	JNZ loc_1007FA59
	ADD EDX, 0x02
	ADD ESI, 0x02
	OR BL, BL
	JNZ loc_1007FA39
loc_1007FA55:
	XOR EDX, EDX
	JMP loc_1007FA5E
loc_1007FA59:
	SBB EDX, EDX
	SBB EDX, -0x01
loc_1007FA5E:
	TEST EDX, EDX
	JG loc_1007FA68
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_1007FA6B
loc_1007FA68:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_1007FA6B:
	CMP DWORD PTR [offset LEGO1_data + 0x100],ECX
	JNZ loc_1007FA33
loc_1007FA73:
	MOV DWORD PTR [EBP+var_A4+0x4],EDI
	CMP DWORD PTR [EAX+0x0C],EDI
	JZ loc_1007FAB3
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDI+0x0C]
loc_1007FA84:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ECX]
	JNZ loc_1007FAA4
	OR BL, BL
	JZ loc_1007FAA0
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ECX+0x01]
	JNZ loc_1007FAA4
	ADD EDX, 0x02
	ADD ECX, 0x02
	OR BL, BL
	JNZ loc_1007FA84
loc_1007FAA0:
	XOR ECX, ECX
	JMP loc_1007FAA9
loc_1007FAA4:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1007FAA9:
	TEST ECX, ECX
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	JLE loc_1007FAC2
loc_1007FAB3:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_A0+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_A0+0x4]
loc_1007FAC2:
	MOV ECX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_1007FACF
	MOV ECX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1007FACF:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ FAR loc_1007FD1E
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m64C60_sub_10065C60])
	ADD ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	TEST EAX, EAX
	JZ FAR loc_1007FE8E
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EDI,DWORD PTR [EAX+0x0C]
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1007FB49
loc_1007FB09:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
loc_1007FB0F:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [ESI]
	JNZ loc_1007FB2F
	OR DL, DL
	JZ loc_1007FB2B
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [ESI+0x01]
	JNZ loc_1007FB2F
	ADD ECX, 0x02
	ADD ESI, 0x02
	OR DL, DL
	JNZ loc_1007FB0F
loc_1007FB2B:
	XOR ECX, ECX
	JMP loc_1007FB34
loc_1007FB2F:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1007FB34:
	TEST ECX, ECX
	JG loc_1007FB3E
	MOV EDI, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_1007FB41
loc_1007FB3E:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_1007FB41:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JNZ loc_1007FB09
loc_1007FB49:
	MOV DWORD PTR [EBP+var_9C+0x4],EDI
	CMP DWORD PTR [EBX+0x0C],EDI
	JZ loc_1007FB89
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDI+0x0C]
loc_1007FB5A:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_1007FB7A
	OR DL, DL
	JZ loc_1007FB76
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_1007FB7A
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_1007FB5A
loc_1007FB76:
	XOR EAX, EAX
	JMP loc_1007FB7F
loc_1007FB7A:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007FB7F:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_9C+0x4]
	JLE loc_1007FB98
loc_1007FB89:
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EBP+var_98+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_98+0x4]
loc_1007FB98:
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBX+0x0C],EAX
	JZ loc_1007FBC4
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_84+0x4],ECX
	CMP BYTE PTR [EBX+0x04],0x00
	JZ loc_1007FC01
	MOV ESI,DWORD PTR [EAX+0x10]
	TEST ESI, ESI
	JZ loc_1007FC01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m64C00_sub_10065C00])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_1007FC01
loc_1007FBC4:
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_84+0x4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_84+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1007FC01:
	MOV ECX,DWORD PTR [EBP+var_84+0x4]
	MOV EAX, 0x00000001
	MOV DWORD PTR [EBP+var_40+0x4],0x00000000
	MOV DWORD PTR [EBP+var_44+0x4],ECX
	MOV EDI,DWORD PTR [EBX+0x0C]
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],ESI
	JZ loc_1007FC6A
loc_1007FC21:
	MOV EDI, ESI
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	MOV EDX,DWORD PTR [ESI+0x0C]
loc_1007FC29:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_1007FC49
	OR CL, CL
	JZ loc_1007FC45
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_1007FC49
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_1007FC29
loc_1007FC45:
	XOR EAX, EAX
	JMP loc_1007FC4E
loc_1007FC49:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007FC4E:
	TEST EAX, EAX
	SETG CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_1007FC60
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_1007FC62
loc_1007FC60:
	MOV ESI,DWORD PTR [ESI]
loc_1007FC62:
	CMP DWORD PTR [offset LEGO1_data + 0x100],ESI
	JNZ loc_1007FC21
loc_1007FC6A:
	CMP DWORD PTR [EBX+0x10],0x00
	JZ loc_1007FC8F
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	LEA ECX,DWORD PTR [EBP+var_BC+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_6C+0x4],ECX
	JMP FAR loc_1007FD15
loc_1007FC8F:
	MOV DWORD PTR [EBP+var_54+0x4],EDI
	TEST EAX, EAX
	JZ loc_1007FCC1
	MOV EAX,DWORD PTR [EBX+0x0C]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1007FCB9
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	LEA ECX,DWORD PTR [EBP+var_C4+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_6C+0x4],ECX
	JMP loc_1007FD15
loc_1007FCB9:
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	CALL_LONG(offset [LEGO1_text.m4E960_sub_1004F960])
loc_1007FCC1:
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	MOV EDX,DWORD PTR [EBP+var_44+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
loc_1007FCCA:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1007FCEA
	OR AL, AL
	JZ loc_1007FCE6
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1007FCEA
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1007FCCA
loc_1007FCE6:
	XOR EAX, EAX
	JMP loc_1007FCEF
loc_1007FCEA:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1007FCEF:
	TEST EAX, EAX
	JLE loc_1007FD0F
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	LEA ECX,DWORD PTR [EBP+var_CC+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_6C+0x4],ECX
	JMP loc_1007FD15
loc_1007FD0F:
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	MOV DWORD PTR [EBP+var_6C+0x4],EAX
loc_1007FD15:
	MOV ECX,DWORD PTR [EBP+var_6C+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [ECX+0x10],EAX
loc_1007FD1E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	ADD ESP, 0x04
	CMP DWORD PTR [EBP+var_1C+0x4],0x00
	JZ loc_1007FD4B
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007FD4B:
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000000
loc_1007FD52:
	INC DWORD PTR [EBP+var_4C+0x4]
	MOV EAX,DWORD PTR [EBP+var_4C+0x4]
	CMP DWORD PTR [EBP+var_48+0x4],EAX
	JA FAR loc_1007F823
loc_1007FD61:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_D0+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],0x00000008
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_E8+0x4]
	CALL_LONG(offset [LEGO1_text.m9FC70_sub_100A0C70])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ESI, EAX
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV EAX,DWORD PTR [ESI+0x64]
	MOV ECX,DWORD PTR [ECX+0x64]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mA74A0_sub_100A84A0])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_E8+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.mA80F0_sub_100A90F0])
	TEST EAX, EAX
	JNZ FAR loc_1007FE8E
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [ECX+0x1C]
	MOV EDX, offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [ECX+0x6C]
	MOV ESI,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [EBP+var_8C+0x4]
	MOV DWORD PTR [EBP+var_90+0x4],EAX
	MOV DWORD PTR [EBP+var_94+0x4],EDX
	MOV DWORD PTR [EBP+var_8C+0x4],EBX
	LEA EBX,DWORD PTR [EBP+var_5C+0x4]
	MOV DWORD PTR [EBP+var_88+0x4],EDI
	MOV DWORD PTR [EBP+var_84+0x4],ESI
	MOV EAX,DWORD PTR [ECX+0x58]
	MOV ESI,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_60+0x4],EBX
	MOV DWORD PTR [EBP+var_64+0x4],EDX
	MOV DWORD PTR [EBP+var_5C+0x4],EAX
	MOV DWORD PTR [EBP+var_58+0x4],EDI
	MOV DWORD PTR [EBP+var_54+0x4],ESI
	MOV EAX,DWORD PTR [ECX+0x44]
	LEA ECX,DWORD PTR [EBP+var_78+0x4]
	MOV ESI,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_7C+0x4],ECX
	MOV DWORD PTR [EBP+var_80+0x4],EDX
	LEA EDX,DWORD PTR [EBP+var_144+0x4]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_64+0x4]
	LEA EDX,DWORD PTR [EBP+var_80+0x4]
	MOV DWORD PTR [EBP+var_78+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_94+0x4]
	MOV DWORD PTR [EBP+var_74+0x4],EDI
	PUSH EAX
	MOV DWORD PTR [EBP+var_70+0x4],ESI
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	ADD ESP, 0x10
	LEA ECX,DWORD PTR [EBP+var_144+0x4]
	MOV EDX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EDX+0x64]
	CALL_LONG(offset [LEGO1_text.mA36B0_sub_100A46B0])
	MOV DWORD PTR [EBP+var_70+0x4],0x00000000
loc_1007FE8E:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1007FEA0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007FEA0:
	CMP DWORD PTR [EBP+var_1C+0x4],0x00
	JZ loc_1007FEBA
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007FEBA:
	CMP DWORD PTR [EBP+var_70+0x4],0x00
	JZ loc_1007FEDA
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [ECX+0x64]
	TEST ECX, ECX
	JZ loc_1007FEDA
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [ECX+0x64],0x00000000
loc_1007FEDA:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7EF53_sub_1007FF53])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7EF68_sub_1007FF68])
	MOV EAX,DWORD PTR [EBP+var_70+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF05()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF12()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF1F()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF2C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF39()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007FF46()
{
	enum{
		arg1217204 = 0x4A4AD0,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217204-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007FF53()
{
	enum{
		arg1217167 = 0x4A4A3C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217167-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m9FBC0_loc_100A0BC0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007FF68()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007FF70(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217233 = 0x4A4B44,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EBP
	MOV EDI, ECX
	CALL_LONG(DWORD PTR [EAX+0x30])
	CMP DWORD PTR [EDI+0x64],ESI
	JNZ loc_1007FFC9
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m7E6B0_sub_1007F6B0])
	MOV ESI, EAX
	MOV EBX,DWORD PTR [ESP+arg2+0x14]
	TEST ESI, ESI
	JNZ loc_1007FFCD
	TEST EBX, EBX
	JZ loc_1007FFCD
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EDI+0x64]
	MOV EAX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA100_sub_100AB100])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EDI+0x64]
	MOV EDX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	JMP loc_1007FFCD
loc_1007FFC9:
	MOV EBX,DWORD PTR [ESP+arg2+0x14]
loc_1007FFCD:
	MOV ECX,DWORD PTR [EDI+0x64]
	TEST ECX, ECX
	JZ loc_1007FFDB
	MOV AL,BYTE PTR [ESP+arg3+0x14]
	MOV BYTE PTR [ECX+0x0C],AL
loc_1007FFDB:
	TEST EBX, EBX
	JZ loc_1007FFF4
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x64]
	PUSH 0x01
	MOV EBP,DWORD PTR [EBX]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EBP+arg1217233-0x4A4B20])
	AND BYTE PTR [EBX+0x11],0xFD
	JMP loc_10080040
loc_1007FFF4:
	MOV EAX,DWORD PTR [ESP+arg4+0x14]
	PUSH 0x0C
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	MOV DWORD PTR [ESP+r+0x14],ECX
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV EBP,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBP, EBP
	JZ loc_10080020
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EBP
	JMP loc_10080025
loc_10080020:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10080025:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_10080036
	MOV ECX,DWORD PTR [EDI+0x64]
	MOV DWORD PTR [EAX],ECX
loc_10080036:
	MOV EAX,DWORD PTR [ESP+arg4+0x14]
	INC DWORD PTR [EAX+0x000000E8]
loc_10080040:
	MOV EAX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10080350(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7F548_proc_10080548]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	CMP DWORD PTR [EBP+arg1+0x4],EBX
	JZ FAR loc_10080432
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x60B0
	MOV DWORD PTR [ESI+0x0000017C],offset LEGO1_rdata + 0x60A8
	MOV DWORD PTR [ESI+0x00000198],offset LEGO1_rdata + 0x6098
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV BYTE PTR [ESI+0x00000180],AL
	MOV DWORD PTR [ESI+0x00000184],EBX
	MOV DWORD PTR [ESI+0x00000188],EBX
	MOV DWORD PTR [ESI+0x0000018C],EBX
	OR DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EAX,DWORD PTR [ESI+0x0000017C]
	MOV DWORD PTR [ESI+0x00000178],offset [LEGO1_rdata.m1510_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+ECX+0x0000017C],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x0000017C]
	PUSH EBX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX+0x00000178],ECX
	LEA ECX,DWORD PTR [ESI+0x00000194]
	OR DWORD PTR [EBP+var_18+0x4],0x02
	MOV WORD PTR DS:[ESI+0x00000190],0xFFFF
	CALL_LONG(offset [LEGO1_text.m135D0_sub_100145D0])
	OR DWORD PTR [EBP+var_18+0x4],0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
loc_10080432:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m61A8_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m60D8_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m60C8_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX, 0x3F800000
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m60C0_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x20]
	MOV DWORD PTR [ESI+EAX],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	XOR ECX, ECX
	MOV DWORD PTR [ESI+0x08],EDX
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EBX+0x74],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV BYTE PTR [ESI+0x0C],CL
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EBX+0x00000140],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EBX+0x6C],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x1C],ECX
	MOV DWORD PTR [ESI+0x10],0x3F266666
	MOV DWORD PTR [ESI+0x14],0x3CF5C28F
	MOV DWORD PTR [ESI+0x18],0x3F19999A
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EBX+0x00000144],0x3DCCCCCD
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH offset [LEGO1_data.m7AC0]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EBX+0x00000154],0xC0A00000
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [ESI+EBX+0x0000014C],0x01
	MOV ECX,DWORD PTR [offset LEGO1_data.m7AF0_ptr]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
	TEST BYTE PTR [EBP-0x14],0x08
	JZ loc_1008052B
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD ECX, 0x00000198
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1008052B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10080B40(DWORD arg1, DWORD arg2, DWORD arg3)
{
__asm{
	MOV EAX,DWORD PTR [ECX-0x20]
	ADD ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [ECX+0x000000C4]
	LEA EDX,DWORD PTR [ECX+0x000000C0]
	SUB ECX, 0x20
	PUSH EAX
	PUSH EDX
	LEA EAX,DWORD PTR [ECX+0x00000088]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2D8B0_sub_1002E8B0])
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10080B70(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [ECX-0x18],0x00
	JNZ loc_10080BBE
	MOV EAX, DWORD PTR [offset LEGO1_data.mC68_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	MOV ECX,DWORD PTR [offset LEGO1_data.mC6C_ptr]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_10080BBE
	FLD DWORD PTR [ESP+r+0x8]
	FSUB DWORD PTR [offset LEGO1_rdata + 0x6048]
	MOV EAX,DWORD PTR [ESI-0x20]
	MOV EDX,DWORD PTR [ESP+r+0x8]
	MOV BYTE PTR [ESI-0x18],0x01
	MOV ECX,DWORD PTR [EAX+0x04]
	FSTP DWORD PTR [ESI+ECX+0x64]
	MOV DWORD PTR [ESI-0x08],EDX
loc_10080BBE:
	CMP BYTE PTR [ESI-0x18],0x01
	JNZ loc_10080BD6
	MOV EAX,DWORD PTR [ESP+r+0x8]
	MOV EDX,DWORD PTR [ESI-0x20]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x08]
	ADD ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1B290_loc_1001C290])
loc_10080BD6:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10080BE0()
{
	enum{
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		arg1217225 = 0x4A4B24,
		arg1217240 = 0x4A4B60,
		arg1217256 = 0x4A4BA0,
		arg1217262 = 0x4A4BB8,
		arg1217273 = 0x4A4BE4,
	};

__asm{
	SUB ESP, 0x6C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX-0x20]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESI-0x24]
	ADD EAX, ESI
	MOV EBX,DWORD PTR [ECX]
	MOV EDI,DWORD PTR [EAX+0x000000C0]
	MOV EAX,DWORD PTR [EAX+0x68]
	PUSH EDI
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x1C])
	TEST EAX, EAX
	JZ FAR loc_10080EE0
	MOV EAX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, ESI
	LEA EDX,DWORD PTR [EAX+0x68]
	LEA ECX,DWORD PTR [EAX-0x20]
	LEA EBP,DWORD PTR [EAX+0x000000C4]
	ADD EAX, 0x000000C0
	MOV EBX,DWORD PTR [EDX]
	PUSH EBP
	PUSH EAX
	PUSH EDX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217262-0x4A4B20])
	MOV ECX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x000000C0]
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	MOV EBP, EAX
	MOV ECX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x000000C0]
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	MOV DWORD PTR [ESP+var_1C+0x84],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESP+var_14+0x84]
	MOV DWORD PTR [ESP+var_18+0x84],ECX
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EDX]
	FSUB DWORD PTR [ECX]
	MOV EDX,DWORD PTR [ESI-0x20]
	MOV EDX,DWORD PTR [EDX+0x04]
	FMUL DWORD PTR [ESI+EDX+0x000000C4]
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [ESP+var_14+0x84]
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EDX+0x04]
	FSUB DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [ESI-0x20]
	ADD ECX, 0x04
	MOV EDX,DWORD PTR [EDX+0x04]
	FMUL DWORD PTR [ESI+EDX+0x000000C4]
	FADD DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ESP+var_18+0x84]
	FSTP DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD ECX, 0x08
	MOV EDX,DWORD PTR [ESI-0x20]
	FLD DWORD PTR [EAX+0x08]
	FSUB DWORD PTR [ECX]
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ESP+var_18+0x84]
	FMUL DWORD PTR [ESI+EBP+arg1217273-0x4A4B20]
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [EAX+0x08]
	LEA ECX,DWORD PTR [ESP+var_28+0x84]
	LEA EDX,DWORD PTR [ESP+var_3C+0x84]
	LEA EAX,DWORD PTR [ESP+var_50+0x84]
	MOV DWORD PTR [ESP+var_2C+0x84],ECX
	MOV DWORD PTR [ESP+var_40+0x84],EDX
	LEA ECX,DWORD PTR [ESP+var_64+0x84]
	MOV DWORD PTR [ESP+var_54+0x84],EAX
	MOV DWORD PTR [ESP+var_30+0x84],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_44+0x84],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_58+0x84],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_6C+0x84],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_68+0x84],ECX
	MOV EAX,DWORD PTR [EDI+0x2C]
	CMP DWORD PTR [EDI+0x04],EBX
	JNZ loc_10080D48
	FLD DWORD PTR [EAX]
	FCHS
	FSTP DWORD PTR [ESP+var_28+0x84]
	MOV EAX,DWORD PTR [EDI+0x2C]
	MOV ECX,DWORD PTR [ESP+var_2C+0x84]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDI+0x2C]
	MOV ECX,DWORD PTR [ESP+var_2C+0x84]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	JMP loc_10080D53
loc_10080D48:
	LEA ECX,DWORD PTR [ESP+var_30+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4A8_ptr])
loc_10080D53:
	MOV EAX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EAX+0x000000C0]
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV EAX,DWORD PTR [ECX+0x2C]
	CMP DWORD PTR [ECX+0x04],EDX
	JNZ loc_10080D96
	FLD DWORD PTR [EAX]
	FCHS
	MOV EDX,DWORD PTR [ESP+var_40+0x84]
	FSTP DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_40+0x84]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_40+0x84]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [EDX+0x08]
	JMP loc_10080DA2
loc_10080D96:
	MOV EBX,DWORD PTR [ESP+var_44+0x84]
	LEA ECX,DWORD PTR [ESP+var_44+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
loc_10080DA2:
	MOV EAX,DWORD PTR [ESI-0x20]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [ESP+var_58+0x84]
	MOV EDX,DWORD PTR [ESI+ECX+0x68]
	MOV ECX,DWORD PTR [ESP+var_2C+0x84]
	MOV EAX,DWORD PTR [EDX+0x18]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_50+0x84]
	CALL_LONG(DWORD PTR [EBX+0x74])
	MOV ECX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+var_40+0x84]
	MOV EBX,DWORD PTR [ESP+var_6C+0x84]
	PUSH ECX
	MOV EDX,DWORD PTR [ESI+EAX+0x68]
	LEA ECX,DWORD PTR [ESP+var_68+0x84]
	MOV EAX,DWORD PTR [EDX+0x18]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x74])
	LEA ECX,DWORD PTR [ESP+var_58+0x84]
	MOV EBP,DWORD PTR [ESP+var_58+0x84]
	CALL_LONG(DWORD PTR [EBP+arg1217240-0x4A4B20])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x604C]
	FSTP DWORD PTR [ESP+var_74+0x84]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10080E21
	FLD DWORD PTR [ESP+var_74+0x84]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x604C]
	FSTP DWORD PTR [ESP+var_74+0x84]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10080E21
	LEA EAX,DWORD PTR [ESP+var_74+0x84]
	LEA ECX,DWORD PTR [ESP+var_58+0x84]
	MOV EBX,DWORD PTR [ESP+var_58+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_10080E21:
	LEA ECX,DWORD PTR [ESP+var_6C+0x84]
	MOV EAX,DWORD PTR [ESP+var_6C+0x84]
	CALL_LONG(DWORD PTR [EAX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x604C]
	FSTP DWORD PTR [ESP+var_74+0x84]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10080E64
	FLD DWORD PTR [ESP+var_74+0x84]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x604C]
	FSTP DWORD PTR [ESP+var_74+0x84]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10080E64
	LEA EAX,DWORD PTR [ESP+var_74+0x84]
	LEA ECX,DWORD PTR [ESP+var_6C+0x84]
	MOV EBX,DWORD PTR [ESP+var_6C+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_10080E64:
	MOV EDI, 0x40A00000
	LEA EAX,DWORD PTR [ESP+var_74+0x84]
	MOV DWORD PTR [ESP+var_74+0x84],EDI
	MOV EBX,DWORD PTR [ESP+var_58+0x84]
	LEA ECX,DWORD PTR [ESP+var_58+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x5C])
	LEA ECX,DWORD PTR [ESP+var_6C+0x84]
	MOV EAX,DWORD PTR [ESP+var_6C+0x84]
	MOV DWORD PTR [ESP+var_74+0x84],EDI
	LEA EDI,DWORD PTR [ESP+var_74+0x84]
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV ECX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD ECX, 0x04
	MOV EDX,DWORD PTR [ESI+EAX+0x34]
	MOV EAX,DWORD PTR [EDX+0x14]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_70+0x84],EAX
	LEA EAX,DWORD PTR [ESP+var_6C+0x84]
	LEA EBX,DWORD PTR [ESP+var_58+0x84]
	PUSH EAX
	MOV DWORD PTR [ESP+var_70+0x84],offset [LEGO1_rdata.m518_ptr]
	MOV EDX,DWORD PTR [ECX]
	LEA EAX,DWORD PTR [ESP+var_70+0x84]
	LEA ECX,DWORD PTR [ESI+EDX-0x20]
	LEA EDX,DWORD PTR [ESP+var_18+0x84]
	PUSH EDX
	PUSH EBX
	PUSH EAX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217256-0x4A4B20])
	MOV ECX,DWORD PTR [ESI-0x20]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+EAX+0x5C],0x00000000
loc_10080EE0:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x6C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10080EF0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m800C0_proc_100810C0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	CMP DWORD PTR [EBP+arg1+0x4],EBX
	JZ FAR loc_10080FF2
	LEA ECX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [ESI], offset LEGO1_rdata + 0x61F0
	MOV DWORD PTR [ESI+0x00000160],offset LEGO1_rdata + 0x61E8
	MOV DWORD PTR [ESI+0x0000017C],offset LEGO1_rdata + 0x61D8
	MOV DWORD PTR [ESI+0x0000018C],offset [LEGO1_rdata.m61C8]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV BYTE PTR [ESI+0x00000164],AL
	MOV DWORD PTR [ESI+0x00000168],EBX
	MOV DWORD PTR [ESI+0x0000016C],EBX
	MOV DWORD PTR [ESI+0x00000170],EBX
	OR DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EAX,DWORD PTR [ESI+0x00000160]
	MOV DWORD PTR [ESI+0x0000015C],offset [LEGO1_rdata.m1510_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+ECX+0x00000160],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x00000160]
	PUSH EBX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX+0x0000015C],ECX
	LEA ECX,DWORD PTR [ESI+0x00000178]
	OR DWORD PTR [EBP+var_18+0x4],0x02
	MOV WORD PTR DS:[ESI+0x00000174],0xFFFF
	CALL_LONG(offset [LEGO1_text.m135D0_sub_100145D0])
	PUSH EBX
	LEA ECX,DWORD PTR [ESI+0x00000188]
	OR DWORD PTR [EBP+var_18+0x4],0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	CALL_LONG(offset [LEGO1_text.m7F350_sub_10080350])
	OR DWORD PTR [EBP+var_18+0x4],0x08
	MOV DWORD PTR [EBP+var_8+0x4],0x00000005
loc_10080FF2:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX],offset [LEGO1_rdata.m6240_ptr]
	MOV EAX,DWORD PTR [ESI]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+EDX],offset [LEGO1_rdata.m6230_ptr]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESI+ECX],offset [LEGO1_rdata.m6228_ptr]
	MOV EAX,DWORD PTR [ESI]
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ESI+EDX],offset [LEGO1_rdata.m6208_ptr]
	MOV EAX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x08]
	MOV DWORD PTR [ESI+EAX-0x04],ECX
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x10]
	LEA ECX,DWORD PTR [EAX+0xFFFFFE78]
	MOV DWORD PTR [ESI+EAX-0x04],ECX
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ESI+EAX+0x10],0x3F733333
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ESI+EAX+0x14],0x3D23D70A
	MOV EDX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ESI+EAX+0x18],0x3F000000
	MOV EDX,DWORD PTR [ESI]
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+ECX+0x00000150],0x3FC00000
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
	TEST BYTE PTR [EBP-0x14],0x10
	JZ loc_100810A3
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD ECX, 0x0000017C
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_100810A3:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10081550(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX-0x08]
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x10]
	CMP BYTE PTR [ESI+ECX+0x04],0x00
	JNZ FAR loc_100815E5
	MOV EAX, DWORD PTR [offset LEGO1_data.mC68_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	MOV ECX,DWORD PTR [offset LEGO1_data.mC6C_ptr]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100815B9
	FLD DWORD PTR [ESP+r+0x8]
	FSUB DWORD PTR [offset LEGO1_rdata + 0x6048]
	MOV EAX,DWORD PTR [ESI-0x08]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV BYTE PTR [ESI+ECX+0x04],0x01
	MOV EAX,DWORD PTR [ESI-0x08]
	MOV ECX,DWORD PTR [ESP+r+0x8]
	MOV EDX,DWORD PTR [EAX+0x04]
	FSTP DWORD PTR [ESI+EDX+0x7C]
	MOV EAX,DWORD PTR [ESI-0x08]
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ESI+EDX+0x14],ECX
	JMP loc_100815E5
loc_100815B9:
	MOV ECX,DWORD PTR [ESI-0x08]
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, ESI
	CMP BYTE PTR [EAX+0x000000E2],0x00
	JNZ loc_100815E5
	FLD DWORD PTR [EAX+0x7C]
	FADD DWORD PTR [offset LEGO1_rdata + 0x6048]
	SUB ESP, 0x04
	MOV EAX,DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [ESI+EAX+0x18]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m1B290_loc_1001C290])
loc_100815E5:
	MOV ECX,DWORD PTR [ESI-0x08]
	MOV EAX,DWORD PTR [ECX+0x10]
	CMP BYTE PTR [ESI+EAX+0x04],0x01
	JNZ loc_10081603
	MOV EAX,DWORD PTR [ESP+r+0x8]
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+EDX+0x18]
	CALL_LONG(offset [LEGO1_text.m1B290_loc_1001C290])
loc_10081603:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10081840(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m80CBE_proc_10081CBE]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x28
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EDI+0x68]
	LEA ESI,DWORD PTR [EDI+0x64]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ loc_100818EA
loc_10081873:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+arg6+0x4]
	PUSH EDX
	MOV EBX,DWORD PTR [EBP+arg4+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	PUSH EAX
	PUSH EBX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	TEST EAX, EAX
	JNZ FAR loc_100819B3
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_100818BE
loc_100818AB:
	MOV ECX,DWORD PTR [EAX]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_100818B9
	MOV EAX, ECX
	JMP loc_100818AB
loc_100818B9:
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_100818E2
loc_100818BE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_100818D7
loc_100818C9:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100818C9
loc_100818D7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100818E2
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_100818E2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ESI+0x04],EAX
	JNZ loc_10081873
loc_100818EA:
	MOV AL,BYTE PTR [EDI+0x54]
	ADD EDI, 0x54
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	MOV BYTE PTR [EBP+var_2C+0x4],AL
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV CL,BYTE PTR [EDI+0x01]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ESI
	MOV BYTE PTR [EBP+var_28+0x1],CL
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	JNZ loc_10081932
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x11A4], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10081932:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m80CA6_sub_10081CA6])
	XOR EBX, EBX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B4A0_sub_1002C4A0])
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	PUSH EDX
	MOV DWORD PTR [EBP+var_20+0x4],EBX
	MOV DWORD PTR [EAX],EAX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [ECX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	CALL_LONG(offset [LEGO1_text.m2B4C0_sub_1002C4C0])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ FAR loc_10081B8D
loc_10081980:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	ADD EDI, 0x0C
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI,DWORD PTR [EAX+0x04]
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m80CD0_sub_10081CD0])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EBP+var_30+0x4],EAX
	JZ loc_100819CB
	MOV ECX,DWORD PTR [EBP+var_30+0x4]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x0C],EDX
	JG loc_100819CB
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	JMP loc_100819D1
loc_100819B3:
	MOV EAX, 0x00000001
loc_100819B8:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_100819CB:
	MOV DWORD PTR [EBP-0x34],EAX
	LEA EAX,DWORD PTR [EBP+var_38+0x4]
loc_100819D1:
	CMP ESI,DWORD PTR [EAX]
	JZ FAR loc_10081B41
	MOV EDI,DWORD PTR [EDI]
	MOV EAX, 0x00000000
	CMP DWORD PTR [EBP+var_18+0x4],0x24
	JZ loc_100819F3
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EAX+ECX-0x20]
loc_100819F3:
	CMP EDI, EAX
	JZ FAR loc_10081B41
	MOV ESI,DWORD PTR [EDI+0x54]
	TEST ESI, ESI
	JZ FAR loc_10081B41
	CMP BYTE PTR [ESI+0x0C],BL
	JNZ loc_10081A14
	CMP BYTE PTR [EDI+0x58],BL
	JZ FAR loc_10081B41
loc_10081A14:
	PUSH 0x05
	MOV EAX,DWORD PTR [ESI+0x000000E4]
	PUSH offset [LEGO1_data.m7AF4_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A680_sub_1008B680])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JZ loc_10081A9C
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	CMP BYTE PTR [EAX+ECX+0x000000C8],BL
	JZ loc_10081A4D
	MOV EAX, 0x00000001
	CMP BYTE PTR [EDI+0x000000E8],BL
	JNZ loc_10081A4F
loc_10081A4D:
	XOR EAX, EAX
loc_10081A4F:
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV EDX,DWORD PTR [EBP+arg4+0x4]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA8410_sub_100A9410])
	TEST EAX, EAX
	JZ FAR loc_10081B41
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x01
	PUSH EDI
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA ECX,DWORD PTR [EAX+ECX-0x20]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	CMP DWORD PTR [EBP+var_18+0x4],0x24
	JNZ FAR loc_10081BA0
	XOR EAX, EAX
	JMP FAR loc_10081BAD
loc_10081A9C:
	MOV ESI,DWORD PTR [ESI+0x04]
	TEST ESI, ESI
	JZ FAR loc_10081B41
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EAX-0x20]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP BYTE PTR [EAX+EDX+0x000000C8],BL
	JZ loc_10081AD1
	MOV EAX, 0x00000001
	CMP BYTE PTR [EDI+0x000000E8],BL
	JNZ loc_10081AD3
loc_10081AD1:
	XOR EAX, EAX
loc_10081AD3:
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg5+0x4]
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg4+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8410_sub_100A9410])
	TEST EAX, EAX
	JNZ FAR loc_10081BE0
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX+0x08]
	MOV ESI,DWORD PTR [EAX-0x20]
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP BYTE PTR [EAX+EDX+0x000000C8],BL
	JZ loc_10081B1D
	MOV EAX, 0x00000001
	CMP BYTE PTR [EDI+0x000000E8],BL
	JNZ loc_10081B1F
loc_10081B1D:
	XOR EAX, EAX
loc_10081B1F:
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg5+0x4]
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV ESI,DWORD PTR [EBP+arg4+0x4]
	PUSH EAX
	PUSH EDX
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA8410_sub_100A9410])
	TEST EAX, EAX
	JNZ FAR loc_10081C43
loc_10081B41:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_10081B5D
loc_10081B4F:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10081B7E
	MOV ECX, EAX
	JMP loc_10081B4F
loc_10081B5D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10081B76
loc_10081B68:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10081B68
loc_10081B76:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10081B81
loc_10081B7E:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_10081B81:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JNZ FAR loc_10081980
loc_10081B8D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	XOR EAX, EAX
	JMP FAR loc_100819B8
loc_10081BA0:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EAX+ECX-0x20]
loc_10081BAD:
	PUSH 0x00
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EAX, EAX
	JGE loc_10081BD1
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	XOR EAX, EAX
	JMP FAR loc_100819B8
loc_10081BD1:
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	MOV EAX, 0x00000002
	JMP FAR loc_100819B8
loc_10081BE0:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x01
	PUSH EDI
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA ECX,DWORD PTR [EAX+ECX-0x20]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	CMP DWORD PTR [EBP+var_18+0x4],0x24
	MOV EAX, 0x00000000
	JZ loc_10081C10
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EAX+ECX-0x20]
loc_10081C10:
	PUSH 0x00
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EAX, EAX
	JGE loc_10081C34
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	XOR EAX, EAX
	JMP FAR loc_100819B8
loc_10081C34:
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	MOV EAX, 0x00000002
	JMP FAR loc_100819B8
loc_10081C43:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x01
	PUSH EDI
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA ECX,DWORD PTR [EAX+ECX-0x20]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	CMP DWORD PTR [EBP+var_18+0x4],0x24
	MOV EAX, 0x00000000
	JZ loc_10081C73
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX-0x20]
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EAX+ECX-0x20]
loc_10081C73:
	PUSH 0x00
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EAX, EAX
	JGE loc_10081C97
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	XOR EAX, EAX
	JMP FAR loc_100819B8
loc_10081C97:
	CALL_LONG(offset [LEGO1_text.m80CC8_sub_10081CC8])
	MOV EAX, 0x00000002
	JMP FAR loc_100819B8
}
}

__declspec(naked) DWORD LEGO1_sub_10081CA6()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10081CC8()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10081CD0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_10081CFA
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EAX,DWORD PTR [EAX]
loc_10081CE4:
	CMP DWORD PTR [ECX+0x0C],EAX
	JL loc_10081CEF
	MOV EDX, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_10081CF2
loc_10081CEF:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_10081CF2:
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JNZ loc_10081CE4
loc_10081CFA:
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10081FD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m81283_proc_10082283]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x68]
	LEA EDI,DWORD PTR [ESI+0x64]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ loc_10082075
loc_10082003:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+arg6+0x4]
	PUSH EDX
	MOV EBX,DWORD PTR [EBP+arg4+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	PUSH EAX
	PUSH EBX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	TEST EAX, EAX
	JNZ FAR loc_10082130
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_10082049
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2DBC0_sub_1002EBC0])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_1008206D
loc_10082049:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10082062
loc_10082054:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10082054
loc_10082062:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1008206D
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1008206D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EDI+0x04],EAX
	JNZ loc_10082003
loc_10082075:
	MOV AL,BYTE PTR [ESI+0x54]
	ADD ESI, 0x54
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV BYTE PTR [EBP+var_2C+0x4],AL
	MOV CL,BYTE PTR [ESI+0x01]
	MOV BYTE PTR [EBP+var_28+0x1],CL
	MOV EAX,DWORD PTR [ESI+0x08]
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ESI
	JNZ loc_100820B4
	PUSH 0x01
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m2B4A0_sub_1002C4A0])
	MOV DWORD PTR [offset LEGO1_data + 0x11A4], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX+0x08],ESI
loc_100820B4:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m8126B_sub_1008226B])
	XOR EBX, EBX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B4A0_sub_1002C4A0])
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],EBX
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EAX+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m2B4C0_sub_1002C4C0])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ FAR loc_100821F5
loc_10082102:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	ADD EDI, 0x0C
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI,DWORD PTR [EAX+0x04]
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B440_sub_1002C440])
	CMP DWORD PTR [EBP+var_30+0x4],ESI
	JZ FAR loc_100821A9
	CMP DWORD PTR [EBP+var_18+0x4],0x08
	MOV ESI,DWORD PTR [EDI]
	JNZ loc_10082148
	XOR EAX, EAX
	JMP loc_10082155
loc_10082130:
	MOV EAX, 0x00000001
loc_10082135:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_10082148:
	MOV EDX,DWORD PTR [EBP-0x14]
	MOV EAX,DWORD PTR [EDX-0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EDX+ECX-0x08]
loc_10082155:
	CMP ESI, EAX
	JZ loc_100821A9
	MOV ECX,DWORD PTR [ESI+0x54]
	TEST ECX, ECX
	JZ loc_100821A9
	CMP BYTE PTR [ECX+0x0C],BL
	JNZ loc_1008216A
	CMP BYTE PTR [ESI+0x58],BL
	JZ loc_100821A9
loc_1008216A:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX-0x08]
	MOV EDI,DWORD PTR [EAX+0x04]
	CMP BYTE PTR [EDX+EDI+0x000000E0],BL
	JZ loc_10082189
	MOV EAX, 0x00000001
	CMP BYTE PTR [ESI+0x000000E8],BL
	JNZ loc_1008218B
loc_10082189:
	XOR EAX, EAX
loc_1008218B:
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg5+0x4]
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV EDI,DWORD PTR [EBP+arg4+0x4]
	PUSH EAX
	PUSH EDX
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA8410_sub_100A9410])
	TEST EAX, EAX
	JNZ loc_10082208
loc_100821A9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_100821C5
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m812A0_sub_100822A0])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_100821E9
loc_100821C5:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_100821DE
loc_100821D0:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100821D0
loc_100821DE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100821E9
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_100821E9:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JNZ FAR loc_10082102
loc_100821F5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m8128D_sub_1008228D])
	XOR EAX, EAX
	JMP FAR loc_10082135
loc_10082208:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x01
	PUSH ESI
	MOV EAX,DWORD PTR [EDX-0x08]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EDX+EBX-0x08]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	CMP DWORD PTR [EBP+var_18+0x4],0x08
	MOV EAX, 0x00000000
	JZ loc_10082238
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX-0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EDX+ECX-0x08]
loc_10082238:
	PUSH 0x00
	MOV ECX, ESI
	PUSH EAX
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST EAX, EAX
	JGE loc_1008225C
	CALL_LONG(offset [LEGO1_text.m8128D_sub_1008228D])
	XOR EAX, EAX
	JMP FAR loc_10082135
loc_1008225C:
	CALL_LONG(offset [LEGO1_text.m8128D_sub_1008228D])
	MOV EAX, 0x00000002
	JMP FAR loc_10082135
}
}

__declspec(naked) DWORD LEGO1_sub_1008226B()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1008228D()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100822A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100822BA
loc_100822AE:
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11A4]
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100822AE
loc_100822BA:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100822F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m81373_proc_10082373]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x000000FC]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0x0000001A
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6328_ptr]
	REP STOSD
	MOV ECX, 0x0000008C
	LEA EDI,DWORD PTR [ESI+0x00000164]
	REP STOSD
	MOV ECX, 0x00000014
	LEA EDI,DWORD PTR [ESI+0x00000394]
	REP STOSD
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100824D0()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m815FE_proc_100825FE]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m6328_ptr]
	SUB ESP, 0x08
	XOR EAX, EAX
	MOV WORD PTR SS:[EBP+var_10+0x2],AX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	PUSH ESI
	PUSH EDI
loc_10082500:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV CX,WORD PTR SS:[EBP+var_10+0x2]
	CMP WORD PTR DS:[EAX+0x000000A6],CX
	JLE FAR loc_10082599
	MOVSX EDI,CX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	LEA ESI,DWORD PTR [EDI*4+ECX+0x00000394]
	MOV EAX,DWORD PTR [ESI]
	TEST EAX, EAX
	JZ loc_10082548
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_10082536
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10082536:
	MOV ECX,DWORD PTR [ESI]
	TEST ECX, ECX
	JZ loc_10082542
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10082542:
	MOV DWORD PTR [ESI], 0x00000000
loc_10082548:
	XOR BX, BX
	LEA ESI,DWORD PTR [EDI*8+0x00000000]
	SUB ESI, EDI
loc_10082554:
	MOVSX EAX,BX
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	LEA EDI,DWORD PTR [EAX*4+ECX+0x00000164]
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10082588
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_10082576
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10082576:
	MOV ECX,DWORD PTR [EDI]
	TEST ECX, ECX
	JZ loc_10082582
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10082582:
	MOV DWORD PTR [EDI], 0x00000000
loc_10082588:
	INC BX
	CMP BX, 0x07
	JL loc_10082554
	INC WORD PTR SS:[EBP+var_10+0x2]
	JMP FAR loc_10082500
loc_10082599:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x64],ECX
	JNZ loc_100825C2
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_100825C2:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m81608_sub_10082608])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10082608()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_10082610(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	PUSH EAX
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m1D0B0_sub_1001E0B0])
	MOV ESI, EAX
	TEST ESI, ESI
	JNZ loc_1008263E
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B720_sub_1005C720])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27E10_sub_10028E10])
loc_1008263E:
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B700_sub_1005C700])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B470__Register_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV DWORD PTR [EAX+0x00000424],0x00000038
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m39720_sub_1003A720])
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10082A20()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m81B6B_proc_10082B6B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	PUSH ESI
	PUSH 0x10
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP EAX, ESI
	JZ_LONG(offset [LEGO1_text.m81AF4_loc_10082AF4])
	MOV AL,BYTE PTR [EBP+var_1C+0x3]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [ECX],AL
	MOV DL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [ECX+0x01],DL
	MOV DWORD PTR [ECX+0x08],ESI
	CMP DWORD PTR [offset LEGO1_data.mC508],ESI
	JNZ loc_10082A99
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [offset LEGO1_data.mC508], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data.mC508]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10082A99:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m81ADC_sub_10082ADC])
	MOV ESI,DWORD PTR [offset LEGO1_data.mC508]
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x0C],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX, ECX
	JMP_LONG(offset [LEGO1_text.m81AF6_loc_10082AF6])
}
}

__declspec(naked) DWORD LEGO1_sub_10082ADC()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B22]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10082C60()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082C7E
loc_10082C6D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082C7B
	MOV EDX, EAX
	JMP loc_10082C6D
loc_10082C7B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10082C7E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10082C92
loc_10082C86:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10082C86
loc_10082C92:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10082C9B
	MOV DWORD PTR [ECX],EDX
loc_10082C9B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10082CA0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082CCA
loc_10082CBC:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082CEF
	MOV ECX, EAX
	JMP loc_10082CBC
loc_10082CCA:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10082CE6
loc_10082CD6:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10082CD6
loc_10082CE6:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10082CF3
loc_10082CEF:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
loc_10082CF3:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082D27
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082D23
loc_10082D0E:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082D1C
	MOV EDX, EAX
	JMP loc_10082D0E
loc_10082D1C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10082D31
loc_10082D23:
	MOV EDX, EBX
	JMP loc_10082D31
loc_10082D27:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10082D31:
	CMP DWORD PTR [ESP+var_4+0x14],ECX
	JNZ FAR loc_10082DCA
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10082D5B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10082D5B
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10082D5D
loc_10082D5B:
	MOV DWORD PTR [EAX],EDX
loc_10082D5D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10082D8E
	MOV EAX, DWORD PTR [offset LEGO1_data.mC508]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10082D85
	MOV EDI, EDX
loc_10082D73:
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082D81
	MOV EDI, EAX
	JMP loc_10082D73
loc_10082D81:
	MOV DWORD PTR [EBX],EDI
	JMP loc_10082D8E
loc_10082D85:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10082D8E:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_10082E2A
	MOV EBX,DWORD PTR [offset LEGO1_data.mC508]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10082DBF
	MOV EBX, EDX
loc_10082DAC:
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082DBB
	MOV EBX, EAX
	JMP loc_10082DAC
loc_10082DBB:
	MOV DWORD PTR [EDI],EBX
	JMP loc_10082E2A
loc_10082DBF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_10082E2A
loc_10082DCA:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_10082DDE
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10082DF3
loc_10082DDE:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10082DF3:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10082E0D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10082E0D
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10082E0F
loc_10082E0D:
	MOV DWORD PTR [EAX],ECX
loc_10082E0F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x14
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x14]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x14],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_10082E2A:
	CMP DWORD PTR [ECX+0x14],0x01
	JNZ FAR loc_100830C8
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_100830C1
loc_10082E40:
	CMP DWORD PTR [EDX+0x14],0x01
	JNZ FAR loc_100830C1
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_10082EC8
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_10082EAD
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082E85
	MOV DWORD PTR [EDI+0x04],EBP
loc_10082E85:
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EBP
	JZ loc_10082EA1
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EDI],EBP
	JZ loc_10082EA1
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_10082EA3
loc_10082EA1:
	MOV DWORD PTR [EDI],EAX
loc_10082EA3:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10082EAD:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10082F53
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10082F53
	JMP loc_10082F39
loc_10082EC8:
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_10082F20
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082EF7
	MOV DWORD PTR [EAX+0x04],EBP
loc_10082EF7:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_10082F14
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JZ loc_10082F14
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_10082F14:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_10082F20:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10083013
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10083013
loc_10082F39:
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10082E40
	JMP FAR loc_100830C1
loc_10082F53:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_10082FAE
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082F81
	MOV DWORD PTR [EAX+0x04],EDI
loc_10082F81:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10082FA0
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10082FA0
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_10082FA2
loc_10082FA0:
	MOV DWORD PTR [EAX],EBX
loc_10082FA2:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10082FAE:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10082FE0
	MOV DWORD PTR [EAX+0x04],EDI
loc_10082FE0:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1008300A
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083001
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100830BE
loc_10083001:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100830BE
loc_1008300A:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100830BE
loc_10083013:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_10083069
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083041
	MOV DWORD PTR [EAX+0x04],EDI
loc_10083041:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1008305D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1008305D
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1008305F
loc_1008305D:
	MOV DWORD PTR [EAX],EBX
loc_1008305F:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_10083069:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_1008309A
	MOV DWORD PTR [EAX+0x04],EDI
loc_1008309A:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100830B9
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100830B9
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_100830BB
loc_100830B9:
	MOV DWORD PTR [EAX],EBX
loc_100830BB:
	MOV DWORD PTR [EBX+0x08],EDI
loc_100830BE:
	MOV DWORD PTR [EDI+0x04],EBX
loc_100830C1:
	MOV DWORD PTR [EDX+0x14],0x00000001
loc_100830C8:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100830F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP ESI,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083123
loc_10083103:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m820F0_sub_100830F0])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JNZ loc_10083103
loc_10083123:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10083171()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m81B90_loc_10082B90])
}
}

__declspec(naked) DWORD LEGO1_sub_10083180()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m8225A_proc_1008325A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX]
	MOV EDI, EDX
	CMP EDX, ECX
	JZ loc_1008321B
loc_100831AD:
	MOV EAX,DWORD PTR [EDI+0x10]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m83010_sub_10084010])
	MOV ECX,DWORD PTR [EDI+0x0C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EBX,DWORD PTR [EDI+0x10]
	TEST EBX, EBX
	JZ loc_100831E2
	MOV ECX,DWORD PTR [EBX]
	TEST ECX, ECX
	JZ loc_100831D9
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100831D9:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100831E2:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_100831FB
loc_100831ED:
	MOV EDI, EAX
	MOV EAX,DWORD PTR [EAX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083214
	JMP loc_100831ED
loc_100831FB:
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX+0x08],EDI
	JNZ loc_1008320D
loc_10083203:
	MOV EDI, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],EDI
	JZ loc_10083203
loc_1008320D:
	CMP DWORD PTR [EDI+0x08],EAX
	JZ loc_10083214
	MOV EDI, EAX
loc_10083214:
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [EAX+0x04],EDI
	JNZ loc_100831AD
loc_1008321B:
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST EAX, EAX
	JZ loc_1008323C
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m82264_sub_10083264])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1008323C:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0xC4E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10083264()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m82130_loc_10083130])
}
}

__declspec(naked) DWORD LEGO1_sub_10083270()
{
__asm{
	PUSH ESI
	XOR EAX, EAX
	PUSH EDI
loc_10083274:
	LEA ESI,DWORD PTR [offset LEGO1_data.m80C0_ptr+EAX]
	LEA EDI,DWORD PTR [offset LEGO1_data + 0x14F20+EAX]
	MOV ECX, 0x00000042
	REP MOVSD
	ADD EAX, 0x00000108
	CMP EAX, 0x00004410
	JL loc_10083274
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100832A0()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, offset LEGO1_data + 0x14F20
loc_100832AA:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83C60_sub_10084C60])
	TEST EAX, EAX
	JZ loc_100832FA
	MOV ECX,DWORD PTR [EAX+0x08]
	TEST ECX, ECX
	JZ loc_100832FA
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH offset [LEGO1_data.m3204_str]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ECX+EDX+0x04]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JZ loc_100832FA
	MOV EBX,DWORD PTR [EDI+0x04]
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m82BC0_sub_10083BC0])
	TEST EAX, EAX
	JZ loc_100832FA
loc_100832E6:
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m82BC0_sub_10083BC0])
	TEST EAX, EAX
	JNZ loc_100832E6
loc_100832FA:
	ADD EDI, 0x00000108
	CMP EDI, offset LEGO1_data + 0x19330
	JB loc_100832AA
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083310(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, 0xFFFFFFFF
	PUSH EBP
	MOV ESI, offset LEGO1_data + 0x14F20
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EAX+0x08]
loc_10083327:
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100833DF
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x14]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x38]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x5C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0000008C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x000000A4]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x000000EC]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x00000104]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100833DF
	ADD ESI, 0x00000108
	CMP ESI, offset LEGO1_data + 0x19330
	JB FAR loc_10083327
	XOR EBX, EBX
loc_100833DF:
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100833F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, 0xFFFFFFFF
	PUSH EBP
	MOV ESI, offset LEGO1_data + 0x14F20
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EAX+0x04]
loc_10083407:
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100834BF
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x14]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ FAR loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x38]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x5C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0000008C]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x000000A4]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x000000EC]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x00000104]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_100834BF
	ADD ESI, 0x00000108
	CMP ESI, offset LEGO1_data + 0x19330
	JB FAR loc_10083407
	XOR EBX, EBX
loc_100834BF:
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100834D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP EAX, 0x42
	JNB loc_100834EA
	MOV ECX, EAX
	SHL ECX, 0x05
	ADD ECX, EAX
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x14F20+ECX*8]
	RETN 0x0004
loc_100834EA:
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100834F0()
{
__asm{
	MOV EAX, 0x00000042
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10083500(DWORD arg1)
{
	enum{
		var_40 = -0x40,
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m8280A_proc_1008380A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x34
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	MOV EDX,DWORD PTR [ECX]
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV ESI,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [ESI+0x04]
	CMP EDI,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083561
loc_1008353C:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EDI+0x0C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JL loc_10083556
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EDI]
	JMP loc_10083559
loc_10083556:
	MOV EDI,DWORD PTR [EDI+0x08]
loc_10083559:
	CMP EDI,DWORD PTR [offset LEGO1_data.mC508]
	JNZ loc_1008353C
loc_10083561:
	MOV DWORD PTR [EBP+var_30+0x4],ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x04],ESI
	JZ loc_10083583
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	JGE loc_1008358F
loc_10083583:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],ECX
loc_1008358F:
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP EAX,DWORD PTR [EBP+var_14+0x4]
	JZ loc_100835AD
	MOV EBX,DWORD PTR [EAX+0x10]
	INC DWORD PTR [EBX+0x04]
loc_100835AD:
	TEST EBX, EBX
	JNZ_LONG(offset [LEGO1_text.m8274E_loc_1008374E])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83030_sub_10084030])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m82774_loc_10083774])
	MOV BYTE PTR [EAX+0x0C],0x00
	PUSH 0x08
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EBX, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST ESI, ESI
	JZ loc_100835FD
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EBX, ESI
	MOV DWORD PTR [ESI],ECX
	MOV DWORD PTR [ESI+0x04],0x00000001
loc_100835FD:
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR EDX, EDX
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CMP EAX, EDX
	JZ_LONG(offset [LEGO1_text.m82774_loc_10083774])
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	MOV EAX, 0x00000001
	MOV EDI,DWORD PTR [ECX+0x04]
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data.mC508],ESI
	JZ loc_100836A0
loc_10083672:
	MOV EDI, ESI
	MOV EAX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	SETL CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_10083696
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_10083698
loc_10083696:
	MOV ESI,DWORD PTR [ESI]
loc_10083698:
	CMP DWORD PTR [offset LEGO1_data.mC508],ESI
	JNZ loc_10083672
loc_100836A0:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],0x00
	JZ loc_100836C2
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m82890_sub_10083890])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	JMP loc_1008372A
loc_100836C2:
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	TEST EAX, EAX
	JZ loc_100836F4
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_100836EC
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m82890_sub_10083890])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	JMP loc_1008372A
loc_100836EC:
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m82840_sub_10083840])
loc_100836F4:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	MOV EDX,DWORD PTR [EAX+0x0C]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JGE loc_10083724
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m82890_sub_10083890])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	JMP loc_1008372A
loc_10083724:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
loc_1008372A:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x10],EBX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	JMP_LONG(offset [LEGO1_text.m8276F_loc_1008376F])
}
}

__declspec(naked) DWORD LEGO1_proc_10083741()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10083840()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x14],0x00
	JNZ loc_10083858
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_10083858
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10083858:
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083875
loc_10083862:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083871
	MOV EAX, EDX
	JMP loc_10083862
loc_10083871:
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10083875:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10083887
loc_1008387C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1008387C
loc_10083887:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083890(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDI,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV ECX,DWORD PTR [offset LEGO1_data.mC508]
	ADD EAX, 0x0C
	MOV EDX,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],ECX
	MOV ECX,DWORD PTR [offset LEGO1_data.mC508]
	MOV DWORD PTR [EAX-0x04],ECX
	JZ loc_100838DA
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EBX
loc_100838DA:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EDI
	JZ loc_10083916
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data.mC508],EAX
	JNZ loc_10083916
	MOV EAX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [EDX]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JL loc_10083916
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDI+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JNZ loc_10083938
	MOV DWORD PTR [EAX],EDX
	JMP loc_10083938
loc_10083916:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDI],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, EDI
	JZ loc_1008392B
	CMP DWORD PTR [EAX],EDI
	JNZ loc_10083938
	MOV DWORD PTR [EAX],EDX
	JMP loc_10083938
loc_1008392B:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10083938:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_10083AFC
loc_10083948:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBP,DWORD PTR [EAX+0x14]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],0x00
	JNZ FAR loc_10083AFC
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX]
	CMP EBX, EAX
	JNZ FAR loc_10083A24
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_10083AD1
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP EDX, ECX
	JNZ loc_100839B4
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083994
	MOV DWORD PTR [EAX+0x04],ECX
loc_10083994:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100839AE
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100839AE
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100839B0
loc_100839AE:
	MOV DWORD PTR [EAX],EDX
loc_100839B0:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_100839B4:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_100839E6
	MOV DWORD PTR [EAX+0x04],EDI
loc_100839E6:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083A1A
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083A0D
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_10083AF0
loc_10083A0D:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_10083AF0
loc_10083A1A:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	JMP FAR loc_10083ACC
loc_10083A24:
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_10083AD1
	MOV EDX,DWORD PTR [EAX]
	CMP EDX, ECX
	JNZ loc_10083A6C
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083A49
	MOV DWORD PTR [EAX+0x04],ECX
loc_10083A49:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10083A65
	MOV EAX,DWORD PTR [EDI]
	LEA EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBX],ECX
	JNZ loc_10083A65
	MOV DWORD PTR [EBX],EDX
	JMP loc_10083A67
loc_10083A65:
	MOV DWORD PTR [EAX],EDX
loc_10083A67:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_10083A6C:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083A9E
	MOV DWORD PTR [EAX+0x04],EDI
loc_10083A9E:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083AC8
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083ABF
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_10083AF0
loc_10083ABF:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_10083AF0
loc_10083AC8:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
loc_10083ACC:
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_10083AF0
loc_10083AD1:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],0x00000001
	MOV DWORD PTR [EBX+0x14],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_10083AF0:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10083948
loc_10083AFC:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x14],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083B20(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_8+0xC],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX]
	PUSH EBP
	MOV ESI, ECX
	MOV EBP,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083B67
loc_10083B41:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV ECX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JL loc_10083B5C
	MOV EBP, EBX
	MOV EBX,DWORD PTR [EBX]
	JMP loc_10083B5F
loc_10083B5C:
	MOV EBX,DWORD PTR [EBX+0x08]
loc_10083B5F:
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JNZ loc_10083B41
loc_10083B67:
	MOV DWORD PTR [ESP+var_C+0x1C],EBP
	CMP DWORD PTR [EDI+0x04],EBP
	JZ loc_10083B89
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	JGE loc_10083B94
loc_10083B89:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	LEA EAX,DWORD PTR [ESP+var_4+0x1C]
loc_10083B94:
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX+0x04]
	SUB EAX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	CMP EAX, 0x01
	SBB AL, AL
	POP ESI
	INC AL
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083BC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ECX]
	PUSH ESI
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDI
	MOV ECX,DWORD PTR [EDX]
	MOV ESI, ECX
	CMP ECX, EDX
	JZ loc_10083C17
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
loc_10083BD6:
	MOV EAX,DWORD PTR [ESI+0x10]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10083C21
	MOV ECX,DWORD PTR [ESI+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083BFA
loc_10083BE8:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083BF6
	MOV ECX, EAX
	JMP loc_10083BE8
loc_10083BF6:
	MOV ESI, ECX
	JMP loc_10083C13
loc_10083BFA:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x08],ESI
	JNZ loc_10083C0C
loc_10083C02:
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],ESI
	JZ loc_10083C02
loc_10083C0C:
	CMP DWORD PTR [ESI+0x08],EAX
	JZ loc_10083C13
	MOV ESI, EAX
loc_10083C13:
	CMP EDX, ESI
	JNZ loc_10083BD6
loc_10083C17:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x08
	RETN 0x0004
loc_10083C21:
	MOV EAX,DWORD PTR [EAX+0x04]
	POP EDI
	POP ESI
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083C30(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217227 = 0x4A4B2C,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_4+0xC],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX]
	PUSH EBP
	MOV ESI, ECX
	MOV EBP,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083C77
loc_10083C51:
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	MOV ECX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JL loc_10083C6C
	MOV EBP, EBX
	MOV EBX,DWORD PTR [EBX]
	JMP loc_10083C6F
loc_10083C6C:
	MOV EBX,DWORD PTR [EBX+0x08]
loc_10083C6F:
	CMP EBX,DWORD PTR [offset LEGO1_data.mC508]
	JNZ loc_10083C51
loc_10083C77:
	MOV DWORD PTR [ESP+var_8+0x1C],EBP
	CMP DWORD PTR [EDI+0x04],EBP
	JZ loc_10083C99
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x1C]
	JGE loc_10083CA4
loc_10083C99:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
loc_10083CA4:
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ESI]
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	CMP DWORD PTR [EDX+0x04],EAX
	JZ FAR loc_10083D9D
	ADD EAX, 0x10
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	MOV EBX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBX+0x04]
	TEST EAX, EAX
	JZ loc_10083CC9
	DEC EAX
	MOV DWORD PTR [EBX+0x04],EAX
loc_10083CC9:
	CMP DWORD PTR [EBX+0x04],0x00
	JNZ FAR loc_10083D9D
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83C60_sub_10084C60])
	MOV EDI, EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX+0x00000104]
	TEST EBP, EBP
	JZ loc_10083CFB
	PUSH 0x00
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH 0x00
	MOV ECX, EBP
	PUSH 0x00
	CALL_LONG(DWORD PTR [EAX+0x24])
loc_10083CFB:
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83010_sub_10084010])
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	MOV ECX,DWORD PTR [EAX+0x0C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+var_8+0x20]
	ADD ESP, 0x04
	MOV EBX,DWORD PTR [ECX]
	TEST EBX, EBX
	JZ loc_10083D34
	MOV ECX,DWORD PTR [EBX]
	TEST ECX, ECX
	JZ loc_10083D2B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10083D2B:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10083D34:
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	LEA ECX,DWORD PTR [ESP+var_C+0x20]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESI]
	CALL_LONG(offset [LEGO1_text.m81CA0_sub_10082CA0])
	TEST EDI, EDI
	JZ loc_10083D9D
	MOV ECX,DWORD PTR [EDI+0x08]
	TEST ECX, ECX
	JZ loc_10083D72
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	AND BYTE PTR [ECX+EDX+0x15],0xFD
	MOV ECX,DWORD PTR [EDI+0x08]
	TEST ECX, ECX
	JZ loc_10083D8F
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ECX+EDX+0x04]
	MOV EAX,DWORD PTR [ECX]
	JMP loc_10083D8D
loc_10083D72:
	TEST EBP, EBP
	JZ loc_10083D8F
	MOV AL,BYTE PTR [EBP+arg1217229-0x4A4B23]
	TEST AL, 0x02
	JZ loc_10083D8F
	AND AL, 0xFD
	TEST EBP, EBP
	MOV BYTE PTR [EBP+arg1217229-0x4A4B23],AL
	JZ loc_10083D8F
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX, EBP
loc_10083D8D:
	CALL_LONG(DWORD PTR [EAX])
loc_10083D8F:
	MOV DWORD PTR [EDI+0x04],0x00000000
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_10083D9D:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083DB0(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
	};

__asm{
	SUB ESP, 0x0C
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_C+0xC],ECX
	PUSH EBX
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH EDI
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	MOV EBX, EAX
	CMP EAX, ECX
	JZ FAR loc_10083EFE
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
loc_10083DD0:
	MOV EBP,DWORD PTR [EBX+0x10]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],ESI
	JZ loc_10083E1C
	MOV EDX,DWORD PTR [EBX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083DF5
loc_10083DE3:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083DF1
	MOV EDX, EAX
	JMP loc_10083DE3
loc_10083DF1:
	MOV EBX, EDX
	JMP loc_10083E0E
loc_10083DF5:
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX+0x08],EBX
	JNZ loc_10083E07
loc_10083DFD:
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],EBX
	JZ loc_10083DFD
loc_10083E07:
	CMP DWORD PTR [EBX+0x08],EAX
	JZ loc_10083E0E
	MOV EBX, EAX
loc_10083E0E:
	CMP EBX, ECX
	JNZ loc_10083DD0
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10083E1C:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	TEST EAX, EAX
	JZ loc_10083E27
	DEC EAX
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
loc_10083E27:
	CMP DWORD PTR [EBP+arg1217225-0x4A4B20],0x00
	JNZ FAR loc_10083EFE
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_C+0x20]
	CALL_LONG(offset [LEGO1_text.m83C60_sub_10084C60])
	MOV ESI, EAX
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EDI,DWORD PTR [ECX+0x00000104]
	TEST EDI, EDI
	JZ loc_10083E60
	PUSH 0x00
	MOV EAX,DWORD PTR [EDI]
	PUSH 0x00
	MOV ECX, EDI
	PUSH 0x00
	CALL_LONG(DWORD PTR [EAX+0x24])
loc_10083E60:
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83010_sub_10084010])
	MOV EAX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EBP,DWORD PTR [EBX+0x10]
	TEST EBP, EBP
	JZ loc_10083E96
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	TEST ECX, ECX
	JZ loc_10083E8D
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10083E8D:
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10083E96:
	LEA EAX,DWORD PTR [ESP+var_C+0x20]
	PUSH EBX
	MOV EDX,DWORD PTR [ESP+var_C+0x20]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX]
	CALL_LONG(offset [LEGO1_text.m81CA0_sub_10082CA0])
	TEST ESI, ESI
	JZ loc_10083EFE
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_10083ED4
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	AND BYTE PTR [ECX+EDX+0x15],0xFD
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_10083EF0
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ECX+EDX+0x04]
	MOV EAX,DWORD PTR [ECX]
	JMP loc_10083EEE
loc_10083ED4:
	TEST EDI, EDI
	JZ loc_10083EF0
	MOV AL,BYTE PTR [EDI+0x11]
	TEST AL, 0x02
	JZ loc_10083EF0
	AND AL, 0xFD
	TEST EDI, EDI
	MOV BYTE PTR [EDI+0x11],AL
	JZ loc_10083EF0
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
loc_10083EEE:
	CALL_LONG(DWORD PTR [EAX])
loc_10083EF0:
	MOV DWORD PTR [ESI+0x04],0x00000000
	MOV DWORD PTR [ESI+0x08],0x00000000
loc_10083EFE:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10083F10(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX]
	MOV EBP, EDX
	CMP ECX, EDX
	JZ FAR loc_10083FFE
	MOV EDX,DWORD PTR [ESP+arg1+0x18]
loc_10083F2E:
	MOV EBX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	CMP DWORD PTR [EBX],EDX
	JZ loc_10083F79
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083F52
loc_10083F40:
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data.mC508]
	JZ loc_10083F4E
	MOV EDI, EAX
	JMP loc_10083F40
loc_10083F4E:
	MOV EBP, EDI
	JMP loc_10083F6B
loc_10083F52:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EAX+0x08],EBP
	JNZ loc_10083F64
loc_10083F5A:
	MOV EBP, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],EBP
	JZ loc_10083F5A
loc_10083F64:
	CMP DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	JZ loc_10083F6B
	MOV EBP, EAX
loc_10083F6B:
	CMP EBP, ECX
	JNZ loc_10083F2E
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
loc_10083F79:
	MOV EAX,DWORD PTR [EBX+0x04]
	TEST EAX, EAX
	JZ loc_10083F84
	DEC EAX
	MOV DWORD PTR [EBX+0x04],EAX
loc_10083F84:
	CMP DWORD PTR [EBX+0x04],0x00
	JNZ loc_10083FFE
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x00000104]
	TEST EDI, EDI
	JZ loc_10083FA3
	PUSH 0x00
	MOV EAX,DWORD PTR [EDI]
	PUSH 0x00
	MOV ECX, EDI
	PUSH 0x00
	CALL_LONG(DWORD PTR [EAX+0x24])
loc_10083FA3:
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83010_sub_10084010])
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EBX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	TEST EBX, EBX
	JZ loc_10083FD5
	MOV ECX,DWORD PTR [EBX]
	TEST ECX, ECX
	JZ loc_10083FCC
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10083FCC:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10083FD5:
	LEA ECX,DWORD PTR [ESP+var_14+0x24]
	PUSH EBP
	PUSH ECX
	MOV ECX,DWORD PTR [ESI]
	CALL_LONG(offset [LEGO1_text.m81CA0_sub_10082CA0])
	TEST EDI, EDI
	JZ loc_10083FFE
	MOV AL,BYTE PTR [EDI+0x11]
	TEST AL, 0x02
	JZ loc_10083FFE
	AND AL, 0xFD
	TEST EDI, EDI
	MOV BYTE PTR [EDI+0x11],AL
	JZ loc_10083FFE
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_10083FFE:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10084010(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EAX+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA170_sub_100AB170])
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10084030(DWORD arg1)
{
	enum{
		var_1A0 = -0x1A0,
		var_19C = -0x19C,
		var_198 = -0x198,
		var_11C = -0x11C,
		var_118 = -0x118,
		var_114 = -0x114,
		var_108 = -0x108,
		var_EC = -0xEC,
		var_E8 = -0xE8,
		var_E4 = -0xE4,
		var_D8 = -0xD8,
		var_D4 = -0xD4,
		var_D0 = -0xD0,
		var_6C = -0x6C,
		var_58 = -0x58,
		var_50 = -0x50,
		var_3C = -0x3C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m8390F_proc_1008490F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000290
	LEA EAX,DWORD PTR [EBP+var_114+0x4]
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [EBP+var_E4+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_20+0x4],EBX
	LEA ECX,DWORD PTR [EBP+var_EC+0x4]
	MOV DWORD PTR [EBP+var_118+0x4],EAX
	MOV DWORD PTR [EBP+var_11C+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [EBP+var_D0+0x4]
	LEA ECX,DWORD PTR [EBP+var_D8+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_EC+0x4],EDI
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [EBP+var_198+0x4]
	MOV DWORD PTR [EBP+var_D8+0x4],EDI
	MOV DWORD PTR [EBP+var_1A0+0x4],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [EBP+var_19C+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x64]
	MOV DWORD PTR [EBP+var_3C+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m14810_sub_10015810])
	MOV DWORD PTR [EBP+var_50+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_6C+0x4],EAX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83C60_sub_10084C60])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	CMP EAX, EBX
	JZ_LONG(offset [LEGO1_text.m838C3_loc_100848C3])
	PUSH offset LEGO1_data + 0x7B6C
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1008413B
	PUSH offset [LEGO1_data.m1060_str]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m83C60_sub_10084C60])
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, 0x18
	MOV DWORD PTR [EDX+0x0C],ECX
	MOV EBX,DWORD PTR [EAX-0x08]
	MOV DWORD PTR [EDX+0x10],EBX
	LEA EBX,DWORD PTR [EDX+0x18]
	MOV CL,BYTE PTR [EAX-0x04]
	MOV BYTE PTR [EDX+0x14],CL
	MOV EDX, 0x0000000A
loc_10084127:
	MOV EDI, EBX
	MOV ESI, EAX
	MOV ECX, 0x00000006
	ADD EBX, 0x18
	REP MOVSD
	ADD EAX, 0x18
	DEC EDX
	JNZ loc_10084127
loc_1008413B:
	PUSH 0x00000108
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10084168
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA71D0_sub_100A81D0])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	JMP loc_1008416F
loc_10084168:
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
loc_1008416F:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA8D40_sub_100A9D40])
	MOV EAX,DWORD PTR [EBP+var_118+0x4]
	MOV ECX,DWORD PTR [offset LEGO1_rdata + 0x63BC]
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [EBP+var_118+0x4]
	MOV EDX,DWORD PTR [offset LEGO1_rdata + 0x63C0]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	ADD ESI, 0x000000A8
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [EBP+var_118+0x4]
	MOV ECX,DWORD PTR [offset LEGO1_rdata + 0x63C4]
	MOV DWORD PTR [EAX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_11C+0x4]
	MOV EDX,DWORD PTR [offset LEGO1_rdata + 0x63C8]
	PUSH ECX
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_108+0x4],EDX
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV EAX,DWORD PTR [EBP+var_108+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ESI
	DB(0x90) 
	MOV DWORD PTR [ECX+0x000000BC],EAX
	ADD ECX, 0x000000E8
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [ECX+0x000000BC]
	MOV DWORD PTR [ECX+0x000000FC],EDX
	MOV EBX,DWORD PTR [EBP+var_E8+0x4]
	MOV EAX, DWORD PTR [offset LEGO1_rdata + 0x63CC]
	MOV DWORD PTR [EBX],EAX
	MOV EBX,DWORD PTR [EBP+var_E8+0x4]
	MOV ECX,DWORD PTR [offset LEGO1_rdata + 0x63D0]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EBP+var_E8+0x4]
	MOV EAX, DWORD PTR [offset LEGO1_rdata + 0x63D4]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EDX,DWORD PTR [EBP+var_D4+0x4]
	MOV ECX,DWORD PTR [offset LEGO1_rdata + 0x63D8]
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [EBP+var_D4+0x4]
	MOV EAX, DWORD PTR [offset LEGO1_rdata + 0x63DC]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EDX,DWORD PTR [EBP+var_D4+0x4]
	MOV ECX,DWORD PTR [offset LEGO1_rdata + 0x63E0]
	LEA EAX,DWORD PTR [EBP+var_EC+0x4]
	PUSH EAX
	MOV DWORD PTR [EDX+0x08],ECX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x00000080
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA EDX,DWORD PTR [EBP+var_E4+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x00000088
loc_10084278:
	MOV EAX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EAX
	ADD ECX, 0x04
	LEA EAX,DWORD PTR [EBP+var_D8+0x4]
	CMP EDX, EAX
	JB loc_10084278
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x00000094
	MOV EBX, 0x00000001
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m832E4_loc_100842E4])
	MOV AL,BYTE PTR [EBP+var_24+0x3]
	PUSH 0x0C
	MOV BYTE PTR [ESI],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+0x04],EAX
	MOV DWORD PTR [ESI+0x08],0x00000000
	MOV DWORD PTR [EBP+var_58+0x4],ESI
	JMP_LONG(offset [LEGO1_text.m832EB_loc_100842EB])
}
}

__declspec(naked) DWORD LEGO1_proc_100842DC()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m83930_loc_10084930])
}
}

__declspec(naked) DWORD LEGO1_loc_100842E4()
{
	enum{
		arg1217203 = 0x4A4ACC,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217203-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.m832EB_loc_100842EB])
}
}

__declspec(naked) DWORD LEGO1_loc_100842EB()
{
	enum{
		arg1217057 = 0x4A4884,
		arg1217121 = 0x4A4984,
		arg1217139 = 0x4A49CC,
		arg1217140 = 0x4A49D0,
		arg1217141 = 0x4A49D4,
		arg1217144 = 0x4A49E0,
		arg1217145 = 0x4A49E4,
		arg1217146 = 0x4A49E8,
		arg1217149 = 0x4A49F4,
		arg1217150 = 0x4A49F8,
		arg1217151 = 0x4A49FC,
		arg1217160 = 0x4A4A20,
		arg1217161 = 0x4A4A24,
		arg1217162 = 0x4A4A28,
		arg1217165 = 0x4A4A34,
		arg1217176 = 0x4A4A60,
		arg1217177 = 0x4A4A64,
		arg1217178 = 0x4A4A68,
		arg1217181 = 0x4A4A74,
		arg1217182 = 0x4A4A78,
		arg1217183 = 0x4A4A7C,
		arg1217186 = 0x4A4A88,
		arg1217187 = 0x4A4A8C,
		arg1217188 = 0x4A4A90,
		arg1217189 = 0x4A4A94,
		arg1217190 = 0x4A4A98,
		arg1217191 = 0x4A4A9C,
		arg1217192 = 0x4A4AA0,
		arg1217193 = 0x4A4AA4,
		arg1217194 = 0x4A4AA8,
		arg1217195 = 0x4A4AAC,
		arg1217196 = 0x4A4AB0,
		arg1217198 = 0x4A4AB8,
		arg1217199 = 0x4A4ABC,
		arg1217200 = 0x4A4AC0,
		arg1217201 = 0x4A4AC4,
		arg1217203 = 0x4A4ACC,
		arg1217204 = 0x4A4AD0,
		arg1217205 = 0x4A4AD4,
		arg1217206 = 0x4A4AD8,
		arg1217209 = 0x4A4AE4,
		arg1217210 = 0x4A4AE8,
		arg1217211 = 0x4A4AEC,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217215 = 0x4A4AFC,
		arg1217216 = 0x4A4B00,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ESI, offset [LEGO1_rdata.m6410]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+arg1217203-0x4A4B20]
	MOV EBX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	ADD EBX, 0x18
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [EBP+arg1217209-0x4A4B20],0x00000000
loc_1008430D:
	CMP ESI, offset [LEGO1_rdata.m6410]
	JZ loc_10084325
	CMP ESI, offset [LEGO1_rdata.m6468]
	JZ loc_10084325
	MOV EAX,DWORD PTR [ESI-0x04]
	MOV DWORD PTR [EBP+arg1217204-0x4A4B20],EAX
	JMP loc_1008433A
loc_10084325:
	XOR EAX, EAX
	MOV EDX,DWORD PTR [EBX]
	MOV AL,BYTE PTR [EBX+0x08]
	XOR ECX, ECX
	MOV CL,BYTE PTR [EDX+EAX]
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [ECX*4+EAX]
	MOV DWORD PTR [EBP+arg1217204-0x4A4B20],EDX
loc_1008433A:
	LEA EAX,DWORD PTR [EBP+arg1217204-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217205-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA65B0_sub_100A75B0])
	MOV EDX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	PUSH EDX
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EAX+0x0C]
	PUSH ECX
	PUSH offset LEGO1_data + 0xC50C
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	LEA EAX,DWORD PTR [EBP+arg1217057-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x10
	LEA ECX,DWORD PTR [EBP+arg1217057-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217186-0x4A4B20],ECX
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+arg1217186-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217205-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA62C0_sub_100A72C0])
	CMP DWORD PTR [EBP+arg1217220-0x4A4B20],0x00
	MOV EDI, EAX
	JLE loc_100843C9
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
loc_1008439F:
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	PUSH EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+EDX]
	CALL_LONG(offset [LEGO1_text.mA9BB0_sub_100AABB0])
	MOV ECX,DWORD PTR [EDI+0x0C]
	MOV EDX,DWORD PTR [EDI+0x04]
	ADD DWORD PTR [EBP+arg1217216-0x4A4B20],0x04
	MOV DWORD PTR [ECX*4+EDX],EAX
	INC DWORD PTR [EDI+0x0C]
	DEC DWORD PTR [EBP+arg1217220-0x4A4B20]
	JNZ loc_1008439F
loc_100843C9:
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	MOV EAX,DWORD PTR [ECX+0x10]
	DEC EAX
	MOV DWORD PTR [ECX+0x10],EAX
	JNZ loc_100843E1
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [ECX+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_100843E1:
	PUSH 0x00000108
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000003
	TEST EAX, EAX
	JZ loc_1008440E
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA72D0_sub_100A82D0])
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	JMP loc_10084415
loc_1008440E:
	MOV DWORD PTR [EBP+arg1217215-0x4A4B20],0x00000000
loc_10084415:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV EAX,DWORD PTR [EDI+0x10]
	DEC EAX
	MOV DWORD PTR [EDI+0x10],EAX
	JNZ loc_1008442E
	PUSH EDI
	MOV ECX,DWORD PTR [EDI+0x14]
	CALL_LONG(offset [LEGO1_text.mA6680_sub_100A7680])
loc_1008442E:
	MOV EAX,DWORD PTR [ESI-0x08]
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8D40_sub_100A9D40])
	MOV EDX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	LEA EAX,DWORD PTR [EBP+arg1217162-0x4A4B20]
	MOV DWORD PTR [EDX+0x000000D4],ECX
	MOV DWORD PTR [EBP+arg1217161-0x4A4B20],EAX
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+arg1217160-0x4A4B20],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+arg1217162-0x4A4B20],EDX
	MOV EAX,DWORD PTR [EBP+arg1217161-0x4A4B20]
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV EAX,DWORD PTR [EBP+arg1217161-0x4A4B20]
	MOV EDX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX+0x08],EDX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+arg1217165-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217160-0x4A4B20]
	MOV EDI,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH ECX
	ADD EDI, 0x000000A8
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV EAX,DWORD PTR [EBP+arg1217165-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EDI
	MOV DWORD PTR [EDX+0x000000BC],EAX
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	ADD ECX, 0x000000E8
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV EDX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	LEA EAX,DWORD PTR [EBP+arg1217178-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x000000BC]
	MOV DWORD PTR [EDX+0x000000FC],ECX
	LEA ECX,DWORD PTR [EBP+arg1217176-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV DWORD PTR [EBP+arg1217176-0x4A4B20],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217181-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV EDX,DWORD PTR [EBP+arg1217177-0x4A4B20]
	MOV ECX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EBP+arg1217181-0x4A4B20],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [EBP+arg1217177-0x4A4B20]
	MOV EAX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EDX,DWORD PTR [EBP+arg1217177-0x4A4B20]
	MOV ECX,DWORD PTR [ESI+0x1C]
	MOV DWORD PTR [EDX+0x08],ECX
	MOV EDI,DWORD PTR [EBP+arg1217182-0x4A4B20]
	MOV EAX,DWORD PTR [ESI+0x20]
	MOV DWORD PTR [EDI],EAX
	MOV EDI,DWORD PTR [EBP+arg1217182-0x4A4B20]
	MOV ECX,DWORD PTR [ESI+0x24]
	MOV DWORD PTR [EDI+0x04],ECX
	MOV EDI,DWORD PTR [EBP+arg1217182-0x4A4B20]
	MOV EAX,DWORD PTR [ESI+0x28]
	LEA ECX,DWORD PTR [EBP+arg1217176-0x4A4B20]
	MOV DWORD PTR [EDI+0x08],EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	ADD ECX, 0x00000080
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA ECX,DWORD PTR [EBP+arg1217178-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	ADD EDX, 0x00000088
loc_1008456C:
	MOV EAX,DWORD PTR [ECX]
	ADD ECX, 0x04
	MOV DWORD PTR [EDX],EAX
	ADD EDX, 0x04
	LEA EAX,DWORD PTR [EBP+arg1217181-0x4A4B20]
	CMP ECX, EAX
	JB loc_1008456C
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	ADD ECX, 0x00000094
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	LEA EAX,DWORD PTR [EBP+arg1217141-0x4A4B20]
	MOV ECX, offset [LEGO1_rdata.m488_ptr]
	LEA EDX,DWORD PTR [EBP+arg1217141-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217140-0x4A4B20],EAX
	LEA EAX,DWORD PTR [ESI+0x44]
	MOV DWORD PTR [EBP+arg1217139-0x4A4B20],ECX
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EDX],EDI
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x04],EDI
	LEA EDI,DWORD PTR [ESI+0x38]
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX+0x08],EAX
	LEA EDX,DWORD PTR [EBP+arg1217146-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217145-0x4A4B20],EDX
	MOV DWORD PTR [EBP+arg1217144-0x4A4B20],ECX
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EDI,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX+0x08],EDI
	LEA EDX,DWORD PTR [EBP+arg1217151-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217150-0x4A4B20],EDX
	MOV DWORD PTR [EBP+arg1217149-0x4A4B20],ECX
	LEA EDX,DWORD PTR [ESI+0x2C]
	LEA ECX,DWORD PTR [EBP+arg1217151-0x4A4B20]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	LEA EAX,DWORD PTR [EBP+arg1217121-0x4A4B20]
	MOV EDI,DWORD PTR [EDX+0x04]
	PUSH EAX
	MOV DWORD PTR [ECX+0x04],EDI
	LEA EAX,DWORD PTR [EBP+arg1217149-0x4A4B20]
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [EBP+arg1217139-0x4A4B20]
	PUSH ECX
	LEA EDX,DWORD PTR [EBP+arg1217144-0x4A4B20]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	ADD ESP, 0x10
	LEA ECX,DWORD PTR [EBP+arg1217121-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	MOV EAX,DWORD PTR [ESI]
	TEST AL, 0x01
	JZ FAR loc_10084768
	CMP ESI, offset [LEGO1_rdata.m6410]
	JNZ loc_10084665
	XOR ECX, ECX
	MOV EDX,DWORD PTR [EBX]
	MOV CL,BYTE PTR [EBX+0x08]
	CMP BYTE PTR [EDX+ECX],0x00
	JZ FAR loc_10084768
loc_10084665:
	XOR EAX, EAX
	MOV EDX,DWORD PTR [EBX+0x0C]
	MOV AL,BYTE PTR [EBX+0x14]
	XOR ECX, ECX
	MOV CL,BYTE PTR [EDX+EAX]
	MOV EDI,DWORD PTR [EBP+arg1217198-0x4A4B20]
	MOV EAX,DWORD PTR [EBX+0x10]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],0x00000000
	MOV EDX,DWORD PTR [ECX*4+EAX]
	MOV ECX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EBP+arg1217206-0x4A4B20],EDX
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],ECX
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_100846D7
loc_10084696:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EDI,DWORD PTR [EBP+arg1217206-0x4A4B20]
loc_1008469C:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_100846BC
	OR DL, DL
	JZ loc_100846B8
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_100846BC
	ADD ECX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1008469C
loc_100846B8:
	XOR ECX, ECX
	JMP loc_100846C1
loc_100846BC:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_100846C1:
	TEST ECX, ECX
	JG loc_100846CC
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_100846CF
loc_100846CC:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_100846CF:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JNZ loc_10084696
loc_100846D7:
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217198-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217187-0x4A4B20],ECX
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_1008471D
	MOV EAX,DWORD PTR [EBP+arg1217206-0x4A4B20]
	MOV EDX,DWORD PTR [ECX+0x0C]
loc_100846EE:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_1008470E
	OR CL, CL
	JZ loc_1008470A
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_1008470E
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100846EE
loc_1008470A:
	XOR EAX, EAX
	JMP loc_10084713
loc_1008470E:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10084713:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+arg1217187-0x4A4B20]
	JLE loc_1008472F
loc_1008471D:
	MOV EAX,DWORD PTR [EBP+arg1217198-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x0C]
	LEA EAX,DWORD PTR [EBP+arg1217188-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217188-0x4A4B20],ECX
loc_1008472F:
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EBP+arg1217198-0x4A4B20]
	CMP DWORD PTR [EDX+0x0C],EAX
	JZ loc_1008473F
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],ECX
loc_1008473F:
	CMP DWORD PTR [EBP+arg1217216-0x4A4B20],0x00
	JZ FAR loc_100847D7
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA8210_sub_100A9210])
	PUSH 0x00
	PUSH 0x3F800000
	PUSH 0x3F800000
	PUSH 0x3F800000
	JMP loc_100847CF
loc_10084768:
	TEST AL, 0x02
	JNZ loc_10084781
	CMP ESI, offset [LEGO1_rdata.m6410]
	JNZ loc_100847D7
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBX]
	MOV CL,BYTE PTR [EBX+0x08]
	CMP BYTE PTR [EAX+ECX],0x00
	JNZ loc_100847D7
loc_10084781:
	LEA EAX,DWORD PTR [EBP+arg1217189-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217190-0x4A4B20]
	PUSH EAX
	LEA EDX,DWORD PTR [EBP+arg1217191-0x4A4B20]
	PUSH ECX
	LEA EAX,DWORD PTR [EBP+arg1217192-0x4A4B20]
	PUSH EDX
	XOR ECX, ECX
	PUSH EAX
	MOV EDX,DWORD PTR [EBX+0x0C]
	XOR EAX, EAX
	MOV AL,BYTE PTR [EBX+0x14]
	MOV CL,BYTE PTR [EDX+EAX]
	MOV EAX,DWORD PTR [EBX+0x10]
	MOV EDX,DWORD PTR [ECX*4+EAX]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA8BF0_sub_100A9BF0])
	ADD ESP, 0x14
	MOV ECX,DWORD PTR [EBP+arg1217189-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217190-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217191-0x4A4B20]
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217192-0x4A4B20]
	PUSH ECX
loc_100847CF:
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA8170_sub_100A9170])
loc_100847D7:
	MOV EDX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217203-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217193-0x4A4B20],EDX
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217203-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m19690_sub_1001A690])
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EAX
	LEA EAX,DWORD PTR [EBP+arg1217193-0x4A4B20]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX],ECX
	ADD ECX, 0x08
	ADD ESI, 0x58
	PUSH ECX
	ADD EBX, 0x18
	CALL_LONG(offset [LEGO1_text.m34790_sub_10035790])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EBP+arg1217203-0x4A4B20]
	INC DWORD PTR [EBP+arg1217209-0x4A4B20]
	INC DWORD PTR [ECX+0x08]
	CMP ESI, offset LEGO1_rdata + 0x6780
	JB FAR loc_1008430D
	LEA EAX,DWORD PTR [EBP+arg1217196-0x4A4B20]
	MOV ECX, offset [LEGO1_rdata.m488_ptr]
	MOV EDX, offset LEGO1_rdata + 0x63FC
	MOV ESI, EAX
	MOV DWORD PTR [EBP+arg1217195-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217194-0x4A4B20],ECX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI],EAX
	LEA EAX,DWORD PTR [EBP+arg1217201-0x4A4B20]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI+0x08],EDX
	MOV EDX, offset LEGO1_rdata + 0x63F0
	MOV ESI, EAX
	MOV DWORD PTR [EBP+arg1217200-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217199-0x4A4B20],ECX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI],EAX
	LEA EAX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI+0x08],EDX
	MOV EDX, EAX
	MOV DWORD PTR [EBP+arg1217212-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217211-0x4A4B20],ECX
	MOV ECX, offset LEGO1_rdata + 0x63E4
	MOV EAX, DWORD PTR [offset LEGO1_rdata + 0x63E4]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+arg1217121-0x4A4B20]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	LEA EAX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA EDX,DWORD PTR [EBP+arg1217194-0x4A4B20]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+arg1217199-0x4A4B20]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	ADD ESP, 0x10
	LEA ECX,DWORD PTR [EBP+arg1217121-0x4A4B20]
	MOV BL, 0x01
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	MOV EDX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV DWORD PTR [EDX+0x04],ECX
	JMP_LONG(offset [LEGO1_text.m838C3_loc_100848C3])
}
}

