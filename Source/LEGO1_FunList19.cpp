#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_100A9BF0(DWORD arg1)
{
	enum{
		var_2C = -0x2C,
		var_20 = -0x20,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x20
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x24]
	TEST ESI, ESI
	JNZ loc_100A9C03
	XOR AL, AL
	POP ESI
	ADD ESP, 0x20
	RET
loc_100A9C03:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x113AC]
	TEST EAX, EAX
	JZ loc_100A9C21
	LEA ECX,DWORD PTR [ESP+var_20+0x24]
	PUSH 0x20
	PUSH ECX
	PUSH ESI
	CALL_LONG(EAX)
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_100A9C21
	LEA ESI,DWORD PTR [ESP+var_2C+0x30]
loc_100A9C21:
	MOV EAX,DWORD PTR [ESP+arg2+0x30]
	MOV ECX,DWORD PTR [ESP+arg1+0x30]
	MOV EDX,DWORD PTR [ESP+r+0x30]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+r+0x30]
	PUSH ECX
	PUSH EDX
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA8C50_sub_100A9C50])
	ADD ESP, 0x14
	POP ESI
	ADD ESP, 0x20
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A9C50(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, offset [LEGO1_data.m111B0_ptr]
	XOR EDI, EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_100A9C61:
	PUSH ESI
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100A9C86
	ADD EBX, 0x14
	INC EDI
	CMP EBX, offset LEGO1_data + 0x11368
	JB loc_100A9C61
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
loc_100A9C86:
	SHL EDI, 0x02
	MOV EDX,DWORD PTR [ESP+arg2+0x10]
	MOV EAX,DWORD PTR [ESP+arg3+0x10]
	LEA ECX,DWORD PTR [EDI*4+EDI]
	FILD DWORD PTR [offset LEGO1_data.m111B4+ECX]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7E28]
	MOV EBX,DWORD PTR [ESP+arg4+0x10]
	FSTP DWORD PTR [EDX]
	FILD DWORD PTR [offset LEGO1_data + 0x111B8+ECX]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7E28]
	FSTP DWORD PTR [EAX]
	FILD DWORD PTR [offset LEGO1_data + 0x111BC+ECX]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7E28]
	FSTP DWORD PTR [EBX]
	FILD DWORD PTR [offset LEGO1_data + 0x111C0+ECX]
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x111C0+ECX]
	MOV ECX,DWORD PTR [ESP+arg5+0x10]
	MOV AL, 0x01
	POP EDI
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7E28]
	POP ESI
	POP EBX
	FSTP DWORD PTR [ECX]
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A9CF0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JNZ loc_100A9CFB
	XOR AL, AL
	RET
loc_100A9CFB:
	CMP DWORD PTR [offset LEGO1_data + 0x113B0],0x00
	JZ loc_100A9D19
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH EAX
	PUSH EDX
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_data + 0x113B0])
	ADD ESP, 0x0C
	RET
loc_100A9D19:
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV BYTE PTR [EAX],0x00
	XOR AL, AL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100A9D30(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x113AC], EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100A9D40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	PUSH EDI
	MOV EBX, ECX
	TEST EAX, EAX
	JZ loc_100A9D58
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100A9D58:
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	TEST ESI, ESI
	JZ loc_100A9DB6
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x000000E4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x000000E4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100A9DB6:
	MOV DWORD PTR [EBX+0x000000E4],0x00000000
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100A9DD0()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, 0x00000000
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV EDI, ECX
	TEST EAX, EAX
	JZ loc_100A9DE4
	MOV ESI,DWORD PTR [EAX+0x0C]
loc_100A9DE4:
	TEST ESI, ESI
	JLE loc_100A9DFF
	XOR EBX, EBX
loc_100A9DEA:
	MOV EAX,DWORD PTR [EDI+0x08]
	ADD EBX, 0x04
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EBX+EDX-0x04]
	CALL_LONG(offset [LEGO1_text.mA9E60_sub_100AAE60])
	DEC ESI
	JNZ loc_100A9DEA
loc_100A9DFF:
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__SetDisplayBB_LegoROI__QAEXH_Z(DWORD arg1)
{
__asm{
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100A9E9D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA92F0_loc_100AA2F0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AA2E5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA92F0_loc_100AA2F0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AA331()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA4D50_loc_100A5D50])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AA380(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA941A_proc_100AA41A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	XOR EAX, EAX
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7D90_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7D70_ptr]
	MOV ESI, ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI+0x08],0x00000003
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7F10_ptr]
	CMP DWORD PTR [offset LEGO1_data + 0x113D4],EAX
	JNZ loc_100AA3E7
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH offset LEGO1_data + 0x113D4
	PUSH 0x41200000
	MOV EAX,DWORD PTR [EAX+0x04]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x34])
loc_100AA3E7:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AA450()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA94E7_proc_100AA4E7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7F10_ptr]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV EAX,DWORD PTR [ECX+0x10]
	TEST EAX, EAX
	JZ loc_100AA4B9
	CMP DWORD PTR [ECX+0x0C],ESI
	JZ loc_100AA4B9
	TEST EAX, EAX
	JZ loc_100AA4B9
	XOR EDI, EDI
loc_100AA48D:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV ECX,DWORD PTR [EDI+EAX]
	TEST ECX, ECX
	JZ loc_100AA4AD
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [EDI+EAX],0x00000000
loc_100AA4AD:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD EDI, 0x08
	INC ESI
	CMP DWORD PTR [ECX+0x10],ESI
	JA loc_100AA48D
loc_100AA4B9:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x0C]
	TEST EAX, EAX
	JZ loc_100AA4CC
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA4CC:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA94F1_sub_100AA4F1])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AA4F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA4E40_sub_100A5E40])
}
}

__declspec(naked) DWORD LEGO1_sub_100AA500(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV AL, BYTE PTR [offset LEGO1_data + 0x113D8]
	MOV CL,BYTE PTR [ESP+arg1]
	MOV BYTE PTR [offset LEGO1_data + 0x113D8],CL
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AA510(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_184 = -0x184,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA9B96_proc_100AAB96]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000174
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_40+0x4],ESI
	MOV DWORD PTR [EBP+var_3C+0x4],ESI
	MOV DWORD PTR [EBP+var_44+0x4],ESI
	MOV DWORD PTR [EBP+var_4C+0x4],ESI
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	LEA EDI,DWORD PTR [EBX+0x08]
	PUSH 0x04
	MOV DWORD PTR [EBP+var_38+0x4],ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_34+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ECX, EAX
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	CALL_LONG(EDX)
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	TEST BYTE PTR [EDI],0x04
	JNZ FAR loc_100AAB81
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	PUSH 0x04
	LEA ECX,DWORD PTR [EBX+0x10]
	PUSH ECX
	MOV DWORD PTR [EBX+0x04],EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	MOV EAX,DWORD PTR [EBX+0x10]
	TEST EAX, EAX
	JNZ loc_100AA59B
	AND DWORD PTR [EDI],-0x11
	JMP FAR loc_100AAB81
loc_100AA59B:
	SHL EAX, 0x03
	OR DWORD PTR [EDI],0x10
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBX+0x0C],EAX
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBX+0x10]
	SHL ECX, 0x03
	SHR ECX, 0x02
	REP STOSD
	MOV EAX,DWORD PTR [EBX+0x10]
	PUSH 0x04
	DEC EAX
	LEA ECX,DWORD PTR [EBP+var_74+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_70+0x4],EAX
	MOV DWORD PTR [EBP+var_50+0x4],0x00000000
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	MOV AX,WORD PTR SS:[EBP+var_70+0x2]
	XOR EDI, EDI
	MOV DI,WORD PTR SS:[EBP+var_74+0x4]
	PUSH 0x04
	SHR AX, 0x01
	AND EDI, 0x00007FFF
	MOVZX ECX,AX
	LEA EDX,DWORD PTR [EBP+var_4C+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	TEST EDI, EDI
	JLE loc_100AA636
	LEA EAX,DWORD PTR [EDI*2+EDI]
	LEA EDI,DWORD PTR [EAX*4+0x00000000]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBP+var_3C+0x4],EAX
	PUSH EDI
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
loc_100AA636:
	CMP DWORD PTR [EBP+var_30+0x4],0x00
	JLE loc_100AA665
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	LEA EDI,DWORD PTR [ECX*4+0x00000000]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	PUSH EDI
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
loc_100AA665:
	CMP DWORD PTR [EBP+var_4C+0x4],0x00
	JLE loc_100AA696
	MOV EAX,DWORD PTR [EBP+var_4C+0x4]
	SHL EAX, 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_44+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_4C+0x4]
	MOV ECX,DWORD PTR [EBP+var_44+0x4]
	SHL EAX, 0x03
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
loc_100AA696:
	MOV DWORD PTR [EBP+var_64+0x4],0x00000000
	CMP DWORD PTR [EBX+0x10],0x00
	JBE FAR loc_100AAB45
loc_100AA6A7:
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_2C+0x2]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	LEA ECX,DWORD PTR [EBP+var_10+0x2]
	PUSH ECX
	ADD DWORD PTR [EBX+0x18],EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	AND EAX, 0x0000FFFF
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	AND EAX, 0x0000FFFF
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x02
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ loc_100AA762
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_84+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JNZ loc_100AA762
	CMP DWORD PTR [EBP+var_84+0x4],0x00
	JBE FAR loc_100AA7D2
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	AND EAX, 0x0000FFFF
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	AND EAX, 0x0000FFFF
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x02
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	CALL_LONG(DWORD PTR [EBP+var_28+0x4])
	TEST EAX, EAX
	JZ loc_100AA7D9
loc_100AA762:
	CMP DWORD PTR [EBP+var_40+0x4],0x00
	JZ loc_100AA774
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA774:
	CMP DWORD PTR [EBP+var_3C+0x4],0x00
	JZ loc_100AA786
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA786:
	CMP DWORD PTR [EBP+var_44+0x4],0x00
	JZ loc_100AA798
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA798:
	TEST ESI, ESI
	JZ loc_100AA7A4
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100AA7A4:
	CMP DWORD PTR [EBP+var_38+0x4],0x00
	JZ loc_100AA7B6
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA7B6:
	CMP DWORD PTR [EBP+var_34+0x4],0x00
	JZ loc_100AA7C8
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AA7C8:
	MOV EAX, 0xFFFFFFFF
	JMP FAR loc_100AAB83
loc_100AA7D2:
	MOV DWORD PTR [EBP+var_34+0x4],0x00000000
loc_100AA7D9:
	PUSH 0x24
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV ESI, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EDI, EDI
	JZ loc_100AA801
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mD2810_sub_100D3810])
	MOV ESI, EAX
loc_100AA801:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD28F0_sub_100D38F0])
	TEST EAX, EAX
	JNZ FAR loc_100AA762
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x0C]
	TEST EAX, EAX
	JZ loc_100AA830
	CMP EAX, 0x02
	JZ loc_100AA837
	MOV EDI, 0x00000003
	JMP loc_100AA839
loc_100AA830:
	MOV EDI, 0x00000002
	JMP loc_100AA839
loc_100AA837:
	XOR EDI, EDI
loc_100AA839:
	MOV EAX,DWORD PTR [EBP+var_10+0x2]
	AND EAX, 0x0000FFFF
	ADD DWORD PTR [EBX+0x14],EAX
	MOV ECX,DWORD PTR [ESI+0x18]
	MOV EDX,DWORD PTR [ESI+0x1C]
	PUSH ECX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV DWORD PTR [EBP+var_48+0x4],EDX
	CALL_LONG(offset [LEGO1_text.mA9E20_sub_100AAE20])
	ADD ESP, 0x04
	TEST AL, AL
	JNZ loc_100AA878
	MOV EAX,DWORD PTR [EBP+var_48+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9E20_sub_100AAE20])
	ADD ESP, 0x04
	TEST AL, AL
	JNZ loc_100AA878
	MOV ECX,DWORD PTR [EBP+var_50+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	INC DWORD PTR [EBP+var_50+0x4]
	JMP loc_100AA881
loc_100AA878:
	MOV ECX,DWORD PTR [EBP+var_70+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	DEC DWORD PTR [EBP+var_70+0x4]
loc_100AA881:
	MOV ECX,DWORD PTR [EBX+0x04]
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	MOV EDX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	MOV EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x2]
	AND EAX, 0x0000FFFF
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_2C+0x2]
	AND EAX, 0x0000FFFF
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV EDX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [ECX*8+EDX],EAX
	MOV EDX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [ECX*8+EDX]
	TEST ECX, ECX
	JZ FAR loc_100AA762
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JNZ FAR loc_100AA9A9
	MOV DWORD PTR [EBP+var_58+0x4],0x00000000
	MOV DWORD PTR [EBP+var_60+0x4],0x00000000
	MOV EAX, 0x3F800000
	MOV DWORD PTR [EBP+var_54+0x4],EAX
	MOV DWORD PTR [EBP+var_5C+0x4],EAX
	CMP BYTE PTR [ESI+0x21],0x00
	JZ loc_100AA914
	LEA EAX,DWORD PTR [EBP+var_60+0x4]
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	PUSH EAX
	LEA EDX,DWORD PTR [EBP+var_58+0x4]
	PUSH ECX
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_48+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA8BF0_sub_100A9BF0])
	ADD ESP, 0x14
	JMP loc_100AA986
loc_100AA914:
	LEA ECX,DWORD PTR [ESI+0x04]
	LEA EDX,DWORD PTR [EBP+var_20+0x4]
	MOV AX,WORD PTR DS:[ECX]
	MOV WORD PTR DS:[EDX],AX
	MOV AL,BYTE PTR [ECX+0x02]
	MOV BYTE PTR [EDX+0x02],AL
	XOR EAX, EAX
	MOV AL,BYTE PTR [EBP+var_20+0x4]
	LEA EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	FILD DWORD PTR [EBP+var_24+0x4]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7F00]
	FSTP DWORD PTR [EBP+var_54+0x4]
	MOV AX,WORD PTR DS:[ECX]
	MOV WORD PTR DS:[EDX],AX
	MOV AL,BYTE PTR [ECX+0x02]
	MOV BYTE PTR [EDX+0x02],AL
	XOR EAX, EAX
	MOV AL,BYTE PTR [EBP+var_18+0x1]
	LEA EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	FILD DWORD PTR [EBP+var_24+0x4]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7F00]
	FSTP DWORD PTR [EBP+var_58+0x4]
	MOV AX,WORD PTR DS:[ECX]
	MOV CL,BYTE PTR [ECX+0x02]
	MOV WORD PTR DS:[EDX],AX
	XOR EAX, EAX
	MOV BYTE PTR [EDX+0x02],CL
	MOV AL,BYTE PTR [EBP+var_14+0x2]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	FILD DWORD PTR [EBP+var_24+0x4]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x7F00]
	FSTP DWORD PTR [EBP+var_5C+0x4]
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_60+0x4],ECX
loc_100AA986:
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDX,DWORD PTR [EBP+var_5C+0x4]
	MOV EDI,DWORD PTR [EBP+var_58+0x4]
	MOV ECX,DWORD PTR [ECX*8+EAX]
	MOV EAX,DWORD PTR [EBP+var_60+0x4]
	PUSH EAX
	PUSH EDX
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_54+0x4]
	PUSH EAX
	MOV EDI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EDI+0x08])
	JMP FAR loc_100AAAD2
loc_100AA9A9:
	CMP BYTE PTR [ESI+0x21],0x00
	JZ loc_100AA9C7
	PUSH 0x00000100
	LEA EAX,DWORD PTR [EBP+var_184+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA8CF0_sub_100A9CF0])
	ADD ESP, 0x0C
loc_100AA9C7:
	MOV EAX,DWORD PTR [ESI+0x18]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_48+0x4],0x00000000
	MOV ECX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [EBP+var_6C+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_100AAA29
loc_100AA9E8:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EDI,DWORD PTR [EBP+var_6C+0x4]
loc_100AA9EE:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_100AAA0E
	OR DL, DL
	JZ loc_100AAA0A
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_100AAA0E
	ADD ECX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_100AA9EE
loc_100AAA0A:
	XOR ECX, ECX
	JMP loc_100AAA13
loc_100AAA0E:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_100AAA13:
	TEST ECX, ECX
	JG loc_100AAA1E
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_100AAA21
loc_100AAA1E:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_100AAA21:
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x100]
	JNZ loc_100AA9E8
loc_100AAA29:
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_80+0x4],ECX
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_100AAA69
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	MOV EDX,DWORD PTR [ECX+0x0C]
loc_100AAA3D:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_100AAA5D
	OR CL, CL
	JZ loc_100AAA59
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_100AAA5D
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100AAA3D
loc_100AAA59:
	XOR EAX, EAX
	JMP loc_100AAA62
loc_100AAA5D:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100AAA62:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_80+0x4]
	JLE loc_100AAA75
loc_100AAA69:
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	LEA EAX,DWORD PTR [EBP+var_7C+0x4]
	MOV DWORD PTR [EBP+var_7C+0x4],ECX
loc_100AAA75:
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	CMP DWORD PTR [EDX+0x0C],EAX
	JZ loc_100AAA85
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_48+0x4],ECX
loc_100AAA85:
	CMP DWORD PTR [EBP+var_48+0x4],0x00
	JZ FAR loc_100AA762
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH 0x00
	PUSH 0x3F800000
	MOV ECX,DWORD PTR [ECX*8+EAX]
	PUSH 0x3F800000
	PUSH 0x3F800000
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [EBP+var_48+0x4]
	MOV EDX,DWORD PTR [EBX+0x0C]
	PUSH ECX
	MOV EDI,DWORD PTR [EBP+var_2C+0x4]
	MOV EAX,DWORD PTR [EDI*8+EDX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64F60_sub_10065F60])
	MOV EDI,DWORD PTR [EBP+var_2C+0x4]
	ADD ESP, 0x08
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EDI*8+EAX+0x04],0x00000001
loc_100AAAD2:
	CMP BYTE PTR [ESI+0x0D],0x00
	JBE loc_100AAAF6
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDX,DWORD PTR [ECX*8+EAX]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x113D4]
	MOV EDI,DWORD PTR [ECX]
	PUSH EAX
	PUSH EDX
	PUSH ECX
	CALL_LONG(DWORD PTR [EDI+0x50])
loc_100AAAF6:
	TEST ESI, ESI
	JZ loc_100AAB04
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	XOR ESI, ESI
	CALL_LONG(DWORD PTR [EAX])
loc_100AAB04:
	CMP DWORD PTR [EBP+var_38+0x4],0x00
	JZ loc_100AAB1D
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_38+0x4],0x00000000
	ADD ESP, 0x04
loc_100AAB1D:
	CMP DWORD PTR [EBP+var_34+0x4],0x00
	JZ loc_100AAB36
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_34+0x4],0x00000000
	ADD ESP, 0x04
loc_100AAB36:
	INC DWORD PTR [EBP+var_64+0x4]
	MOV EAX,DWORD PTR [EBP+var_64+0x4]
	CMP DWORD PTR [EBX+0x10],EAX
	JA FAR loc_100AA6A7
loc_100AAB45:
	CMP DWORD PTR [EBP+var_44+0x4],0x00
	MOV EAX,DWORD PTR [EBP+var_50+0x4]
	MOV DWORD PTR [EBX+0x1C],EAX
	JZ loc_100AAB5D
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AAB5D:
	CMP DWORD PTR [EBP+var_40+0x4],0x00
	JZ loc_100AAB6F
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AAB6F:
	CMP DWORD PTR [EBP+var_3C+0x4],0x00
	JZ loc_100AAB81
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AAB81:
	XOR EAX, EAX
loc_100AAB83:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AABB0(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA9C8E_proc_100AAC8E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x20
	MOV EDI, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	JZ loc_100AABFB
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA9380_sub_100AA380])
	MOV EDI, EAX
loc_100AABFB:
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x10]
	SHL EAX, 0x03
	XOR EBX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EDI+0x0C],EAX
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	CMP DWORD PTR [ESI+0x10],EBX
	JBE loc_100AAC5B
loc_100AAC29:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EBX+EAX]
	ADD EBX, 0x08
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ECX,DWORD PTR [EDI+0x0C]
	INC DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBX+ECX-0x08],EAX
	MOV ECX,DWORD PTR [EDI+0x0C]
	MOV EDX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [EBX+EDX-0x04]
	MOV DWORD PTR [EBX+ECX-0x04],EAX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [ESI+0x10],EAX
	JA loc_100AAC29
loc_100AAC5B:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EDI+0x10],ECX
	MOV EDX,DWORD PTR [ESI+0x14]
	MOV DWORD PTR [EDI+0x14],EDX
	MOV EAX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [EDI+0x18],EAX
	MOV EAX, EDI
	MOV ECX,DWORD PTR [ESI+0x1C]
	MOV DWORD PTR [EDI+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AACB0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EBX,DWORD PTR [ECX+0x1C]
	MOV EDI, ECX
	CMP DWORD PTR [ECX+0x10],EBX
	JBE loc_100AACF5
	LEA ESI,DWORD PTR [EBX*8+0x00000000]
	XOR EBP, EBP
loc_100AACC7:
	MOV EAX,DWORD PTR [EDI+0x0C]
	ADD EAX, ESI
	CMP DWORD PTR [EAX+0x04],EBP
	JNZ loc_100AACEC
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ESP+arg3+0x10]
	MOV EAX,DWORD PTR [ESP+arg4+0x10]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ESP+arg2+0x18]
	MOV EDX,DWORD PTR [ESP+arg1+0x18]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_100AACEC:
	ADD ESI, 0x08
	INC EBX
	CMP DWORD PTR [EDI+0x10],EBX
	JA loc_100AACC7
loc_100AACF5:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AAD00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EBX,DWORD PTR [ECX+0x1C]
	MOV EDI, ECX
	CMP DWORD PTR [ECX+0x10],EBX
	JBE loc_100AAD60
	LEA EBP,DWORD PTR [EBX*8+0x00000000]
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_100AAD19:
	MOV EAX,DWORD PTR [EDI+0x0C]
	ADD EAX, EBP
	CMP DWORD PTR [EAX+0x04],0x00
	JZ loc_100AAD57
	PUSH ESI
	MOV EAX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64F60_sub_10065F60])
	ADD ESP, 0x08
	MOV EAX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [EBP+EAX]
	PUSH 0x00
	PUSH 0x3F800000
	PUSH 0x3F800000
	PUSH 0x3F800000
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EBP+ECX+arg1217225-0x4A4B20],0x00000001
loc_100AAD57:
	ADD EBP, 0x08
	INC EBX
	CMP DWORD PTR [EDI+0x10],EBX
	JA loc_100AAD19
loc_100AAD60:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AAD70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EBX,DWORD PTR [ECX+0x1C]
	MOV EDI, ECX
	CMP DWORD PTR [ECX+0x10],EBX
	JBE loc_100AADA9
	LEA EBP,DWORD PTR [EBX*8+0x00000000]
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_100AAD89:
	MOV EAX,DWORD PTR [EDI+0x0C]
	ADD EAX, EBP
	CMP DWORD PTR [EAX+0x04],0x00
	JZ loc_100AADA0
	PUSH ESI
	MOV EAX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64F60_sub_10065F60])
	ADD ESP, 0x08
loc_100AADA0:
	ADD EBP, 0x08
	INC EBX
	CMP DWORD PTR [EDI+0x10],EBX
	JA loc_100AAD89
loc_100AADA9:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AADC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	MOV EBP,DWORD PTR [EBX+0x1C]
	CMP DWORD PTR [EBX+0x10],EBP
	JBE loc_100AADFE
	LEA ESI,DWORD PTR [EBP*8+arg1217224-0x4A4B20]
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
loc_100AADD9:
	MOV EAX,DWORD PTR [EBX+0x0C]
	CMP DWORD PTR [EAX+ESI+0x04],0x00
	JZ loc_100AADF5
	PUSH EDI
	MOV EAX,DWORD PTR [ESI+EAX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64F90_sub_10065F90])
	ADD ESP, 0x08
	CMP EAX, 0x01
	JZ loc_100AAE0A
loc_100AADF5:
	ADD ESI, 0x08
	INC EBP
	CMP DWORD PTR [EBX+0x10],EBP
	JA loc_100AADD9
loc_100AADFE:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100AAE0A:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AAE20(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	TEST ESI, ESI
	JZ loc_100AAE52
	MOV EDX,DWORD PTR [offset LEGO1_data.m113DC_ptr]
	MOV ECX, 0xFFFFFFFF
	MOV EDI, EDX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	PUSH ECX
	PUSH EDX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_100AAE52
	MOV AL, 0x01
	POP EDI
	POP ESI
	RET
loc_100AAE52:
	XOR AL, AL
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AAE60()
{
__asm{
	MOV DWORD PTR [ECX+0x1C],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AAE90()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA9EFD_proc_100AAEFD]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAA730_sub_100AB730])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m7F78_ptr]
	MOV DWORD PTR [ESI+0x00000088],EAX
	MOV DWORD PTR [ESI+0x00000090],EAX
	MOV DWORD PTR [ESI+0x00000098],EAX
	MOV DWORD PTR [ESI+0x00000094],EAX
	MOV DWORD PTR [ESI+0x0000009C],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x000000A0],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AAF30()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mA9F79_proc_100AAF79]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7F78_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAA0B0_sub_100AB0B0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mA9F83_sub_100AAF83])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AAF83()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAA7C0_loc_100AB7C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AAF90(DWORD arg1, DWORD arg2)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA091_proc_100AB091]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	XOR EAX, EAX
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_14+0x4],0x40468000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [ECX+0x1C],EAX
	JZ loc_100AAFCE
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_14+0x4],0x40568000
loc_100AAFCE:
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAA860_sub_100AB860])
	TEST EAX, EAX
	JNZ loc_100AAFF3
	XOR EAX, EAX
loc_100AAFE0:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_100AAFF3:
	FLD QWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [ESI+0x10]
	FSTP DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [ECX]
	PUSH EAX
	PUSH 0x43FA0000
	PUSH 0x3DCCCCCD
	CALL_LONG(DWORD PTR [EDI+0x18])
	PUSH 0x000001BC
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	XOR ECX, ECX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	TEST EDI, EDI
	JZ loc_100AB03A
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x70]
	PUSH EAX
	MOV ECX, EDI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mA4EB0_sub_100A5EB0])
	MOV ECX, EAX
loc_100AB03A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [ESI+0x1C]
	MOV EDX,DWORD PTR [ESI+0x18]
	PUSH EAX
	MOV DWORD PTR [ESI+0x00000088],ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA5D50_sub_100A6D50])
	PUSH 0x43FA0000
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x3DCCCCCD
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA5D70_sub_100A6D70])
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x00000090],EAX
	MOV DWORD PTR [ESI+0x00000098],EAX
	MOV DWORD PTR [ESI+0x00000094],EAX
	MOV DWORD PTR [ESI+0x0000009C],EAX
	MOV EAX, 0x00000001
	JMP FAR loc_100AAFE0
}
}

__declspec(naked) DWORD LEGO1_sub_100AB0B0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x000000A0],0x00
	JZ loc_100AB0D3
	PUSH 0x00
	MOV ECX,DWORD PTR [ESI+0x00000088]
	MOV DWORD PTR [ESI+0x000000A0],0x00000000
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
loc_100AB0D3:
	MOV ECX,DWORD PTR [ESI+0x00000088]
	TEST ECX, ECX
	JZ loc_100AB0E3
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AB0E3:
	MOV DWORD PTR [ESI+0x00000088],0x00000000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAAAD0_sub_100ABAD0])
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB100(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x00000088]
	PUSH 0x0C
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESP+var_8+0x18],ECX
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100AB139
	MOV ECX,DWORD PTR [ESP+var_8+0x14]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100AB13E
loc_100AB139:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100AB13E:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100AB150
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],ECX
loc_100AB150:
	MOV EAX, 0x00000001
	POP EDI
	INC DWORD PTR [ESI+0x10]
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB170(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA5410_sub_100A6410])
	CMP DWORD PTR [EDI+0x000000A0],ESI
	JNZ loc_100AB1A3
	PUSH 0x00
	MOV ECX,DWORD PTR [EDI+0x00000088]
	MOV DWORD PTR [EDI+0x000000A0],0x00000000
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
loc_100AB1A3:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB1B0(DWORD arg1)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x48
	LEA EAX,DWORD PTR [ESP+var_40+0x48]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4C]
	PUSH EDI
	MOV DWORD PTR [ECX+0x000000A0],ESI
	MOV EDI, ECX
	MOV DWORD PTR [ESP+var_44+0x50],EAX
	PUSH ESI
	MOV DWORD PTR [ESP+var_48+0x54],offset [LEGO1_rdata.m350_ptr]
	MOV ECX,DWORD PTR [EDI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
	LEA ECX,DWORD PTR [ESP+var_48+0x50]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA40A0_sub_100A50A0])
	MOV ECX,DWORD PTR [EDI+0x74]
	LEA EAX,DWORD PTR [ESP+var_40+0x50]
	PUSH EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x08])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x48
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB210(DWORD arg1)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x48
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x50]
	CMP DWORD PTR [EDI+0x000000A0],ESI
	JNZ loc_100AB258
	LEA EAX,DWORD PTR [ESP+var_40+0x50]
	LEA ECX,DWORD PTR [ESP+var_48+0x50]
	MOV DWORD PTR [ESP+var_44+0x50],EAX
	PUSH ECX
	MOV DWORD PTR [ESP+var_48+0x54],offset [LEGO1_rdata.m350_ptr]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA40A0_sub_100A50A0])
	MOV ECX,DWORD PTR [EDI+0x74]
	LEA EDX,DWORD PTR [ESP+var_40+0x50]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA5DA0_sub_100A6DA0])
loc_100AB258:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x48
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB270(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	FLD QWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	SUB ESP, 0x04
	MOV ECX,DWORD PTR [ESI+0x00000088]
	SUB ESP, 0x04
	FSTP DWORD PTR [ESP+var_8+0xC]
	FLD QWORD PTR [ESI+0x00000090]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.mA5930_sub_100A6930])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAB050_sub_100AC050])
	FST QWORD PTR [ESI+0x00000090]
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB2B0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ECX+0x10]
	MOV ECX,DWORD PTR [ECX+0x00000088]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA5E00_sub_100A6E00])
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100AB2D0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ECX+0x10],EAX
	MOV EAX,DWORD PTR [EDX+0x14]
	MOV DWORD PTR [ECX+0x14],EAX
	MOV EAX,DWORD PTR [EDX+0x18]
	MOV DWORD PTR [ECX+0x18],EAX
	MOV EAX,DWORD PTR [EDX+0x1C]
	MOV DWORD PTR [ECX+0x1C],EAX
	MOV EAX,DWORD PTR [EDX+0x20]
	MOV DWORD PTR [ECX+0x20],EAX
	MOV EAX, 0x00000001
	MOV EDX,DWORD PTR [EDX+0x24]
	MOV DWORD PTR [ECX+0x24],EDX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB320()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7FA4_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB360()
{
__asm{
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m7FA4_ptr]
	JMP_LONG(offset [LEGO1_text.mAA460_loc_100AB460])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB370(DWORD arg1)
{
	enum{
		var_40 = -0x40,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA43B_proc_100AB43B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x30
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_100AB3B6
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA5FD0_sub_100A6FD0])
loc_100AB3B6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBX+0x0C],EAX
	CALL_LONG(offset [LEGO1_text.mA05E0_sub_100A15E0])
	PUSH 0x000000A8
	MOV DWORD PTR [EBX+0x04],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100AB3F1
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA9E90_sub_100AAE90])
loc_100AB3F1:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mAA2D0_sub_100AB2D0])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EBX+0x04]
	LEA EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.mA9F90_sub_100AAF90])
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_100AB42E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB4B0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV ECX,DWORD PTR [ECX+0x08]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAA270_sub_100AB270])
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB4D0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV EAX,DWORD PTR [ESP+arg3+0x8]
	MOV EDX,DWORD PTR [ESP+arg2+0x8]
	PUSH EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [ESP+r+0x10]
	MOV EDX,DWORD PTR [ESP+var_4+0x10]
	MOV EAX,DWORD PTR [ESP+var_8+0x10]
	PUSH ECX
	PUSH EDX
	MOV ESI,DWORD PTR [ESI+0x08]
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x00000088]
	CALL_LONG(offset [LEGO1_text.mA5D70_sub_100A6D70])
	XOR EAX, EAX
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100AB510()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA55F_proc_100AB55F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAABF0_sub_100ABBF0])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8000_ptr]
	MOV DWORD PTR [ESI+0x70],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x74],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB5A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA5E9_proc_100AB5E9]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8000_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAA6F0_sub_100AB6F0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAA5F3_sub_100AB5F3])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB5F3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAAD60_loc_100ABD60])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB600(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217229 = 0x4A4B34,
		arg1217231 = 0x4A4B3C,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0x42340000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	PUSH EBP
	CMP DWORD PTR [EDI+0x1C],0x00
	JZ loc_100AB623
	MOV DWORD PTR [ESP+var_4+0x14],0x42B40000
loc_100AB623:
	MOV EBX,DWORD PTR [ESP+arg2+0x14]
	PUSH 0x00
	MOV ECX, EBX
	MOV EBP,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EBP+arg1217231-0x4A4B20])
	MOV ECX, EBX
	MOV DWORD PTR [ESI+0x70],EAX
	CALL_LONG(DWORD PTR [EBP+arg1217229-0x4A4B20])
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x74],EAX
	MOV EAX,DWORD PTR [ESI+0x70]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mAAE50_sub_100ABE50])
	TEST EAX, EAX
	JNZ loc_100AB680
	MOV ECX,DWORD PTR [ESI+0x70]
	TEST ECX, ECX
	JZ loc_100AB659
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AB659:
	MOV DWORD PTR [ESI+0x70],0x00000000
	MOV ECX,DWORD PTR [ESI+0x74]
	TEST ECX, ECX
	JZ loc_100AB66D
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AB66D:
	XOR EAX, EAX
	POP EBP
	MOV DWORD PTR [ESI+0x74],0x00000000
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
loc_100AB680:
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	PUSH EAX
	PUSH 0x43FA0000
	PUSH 0x3DCCCCCD
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x18])
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH 0x3F59DB23
	MOV EBX,DWORD PTR [ECX]
	PUSH 0x3F239581
	PUSH 0x3E645A1D
	CALL_LONG(DWORD PTR [EBX+0x1C])
	MOV EAX, 0x00000001
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100AB6F0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x70]
	TEST ECX, ECX
	JZ loc_100AB700
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AB700:
	MOV DWORD PTR [ESI+0x70],0x00000000
	MOV ECX,DWORD PTR [ESI+0x74]
	TEST ECX, ECX
	JZ loc_100AB714
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AB714:
	MOV DWORD PTR [ESI+0x74],0x00000000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAADE0_sub_100ABDE0])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB730()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA785_proc_100AB785]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAA510_sub_100AB510])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8018_ptr]
	MOV DWORD PTR [ESI+0x78],EAX
	MOV DWORD PTR [ESI+0x7C],EAX
	MOV DWORD PTR [ESI+0x00000080],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100AB7C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAA809_proc_100AB809]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8018_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAAAD0_sub_100ABAD0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAA813_sub_100AB813])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AB813()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAA5A0_sub_100AB5A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AB820()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x78]
	MOV ESI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EDX,DWORD PTR [ESI+0x7C]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EDX,DWORD PTR [ESI+0x00000080]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV EAX, 0x00000001
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AB860(DWORD arg1, DWORD arg2)
{
	enum{
		var_CC = -0xCC,
		var_C8 = -0xC8,
		var_C4 = -0xC4,
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B8 = -0xB8,
		var_B4 = -0xB4,
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_64 = -0x64,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_C = -0xC,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x000000C4
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg2+0xD0]
	PUSH EBP
	MOV EAX,DWORD PTR [ESP+arg1+0xD4]
	PUSH EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAA600_sub_100AB600])
	TEST EAX, EAX
	MOV EAX, 0x00000000
	JZ FAR loc_100ABABD
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [offset LEGO1_data.m113E4]
	PUSH ECX
	PUSH ECX
	MOV EBP,DWORD PTR [EAX+0x18]
	PUSH ECX
	PUSH 0x01
	MOV ECX, EBX
	CALL_LONG(EBP)
	MOV DWORD PTR [ESI+0x78],EAX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x113E8]
	PUSH ECX
	PUSH ECX
	PUSH ECX
	PUSH 0x03
	MOV ECX, EBX
	XOR EDI, EDI
	CALL_LONG(EBP)
	MOV DWORD PTR [ESI+0x7C],EAX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x113EC]
	PUSH ECX
	PUSH ECX
	PUSH ECX
	PUSH EDI
	MOV ECX, EBX
	CALL_LONG(EBP)
	LEA ECX,DWORD PTR [ESP+var_C4+0xDC]
	MOV DWORD PTR [ESI+0x00000080],EAX
	LEA EAX,DWORD PTR [ESP+var_14+0xDC]
	MOV DWORD PTR [ESP+var_C8+0xDC],ECX
	MOV ECX, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_C4+0xDC],EDI
	MOV DWORD PTR [ESP+var_CC+0xDC],ECX
	MOV DWORD PTR [ESP+var_C0+0xDC],EDI
	MOV DWORD PTR [ESP+var_BC+0xDC],EDI
	MOV DWORD PTR [ESP+var_18+0xDC],EAX
	LEA EDX,DWORD PTR [ESP+var_28+0xDC]
	MOV DWORD PTR [ESP+var_1C+0xDC],ECX
	MOV DWORD PTR [ESP+var_14+0xDC],EDI
	MOV DWORD PTR [ESP+var_C+0xDC],EDI
	MOV DWORD PTR [ESP+var_2C+0xDC],EDX
	MOV DWORD PTR [ESP+var_30+0xDC],ECX
	LEA ECX,DWORD PTR [ESP+var_70+0xDC]
	MOV DWORD PTR [ESP+var_24+0xDC],EDI
	MOV DWORD PTR [ESP+var_20+0xDC],EDI
	MOV DWORD PTR [ESP+var_74+0xDC],ECX
	LEA EAX,DWORD PTR [ESP+var_78+0xDC]
	LEA EDX,DWORD PTR [ESP+var_30+0xDC]
	LEA ECX,DWORD PTR [ESP+var_1C+0xDC]
	PUSH EAX
	LEA EAX,DWORD PTR [ESP+var_C8+0xDC]
	PUSH EDX
	MOV DWORD PTR [ESP+var_8+0xDC],0xBF800000
	MOV DWORD PTR [ESP+var_20+0xDC],0x3F800000
	MOV DWORD PTR [ESP+var_70+0xDC],offset [LEGO1_rdata.m300_ptr]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	MOV ECX,DWORD PTR [ESP+var_64+0xDC]
	ADD ESP, 0x10
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_B8+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESP+var_B4+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESP+var_B0+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [ESP+var_AC+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ESP+var_A8+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ESP+var_A4+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x18]
	MOV DWORD PTR [ESP+var_A0+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [ESP+var_9C+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x20]
	MOV DWORD PTR [ESP+var_98+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x24]
	MOV DWORD PTR [ESP+var_94+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x28]
	MOV DWORD PTR [ESP+var_90+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV DWORD PTR [ESP+var_8C+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x30]
	MOV DWORD PTR [ESP+var_88+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x34]
	MOV DWORD PTR [ESP+var_84+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x38]
	MOV DWORD PTR [ESP+var_80+0xDC],EDX
	LEA EDX,DWORD PTR [ESP+var_B8+0xDC]
	MOV EAX,DWORD PTR [ECX+0x3C]
	PUSH EDX
	MOV DWORD PTR [ESP+var_78+0xDC],EAX
	MOV ECX,DWORD PTR [ESI+0x7C]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESP+var_C8+0xDC]
	LEA EAX,DWORD PTR [ESP+var_78+0xDC]
	LEA EDX,DWORD PTR [ESP+var_30+0xDC]
	PUSH EAX
	PUSH EDX
	MOV DWORD PTR [ECX],EDI
	MOV ECX,DWORD PTR [ESP+var_C0+0xDC]
	LEA EAX,DWORD PTR [ESP+var_C4+0xDC]
	MOV DWORD PTR [ECX+0x04],0x43160000
	MOV ECX,DWORD PTR [ESP+var_C0+0xDC]
	MOV DWORD PTR [ECX+0x08],0xC3160000
	LEA ECX,DWORD PTR [ESP+var_14+0xDC]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	MOV ECX,DWORD PTR [ESP+var_64+0xDC]
	ADD ESP, 0x10
	MOV EDI,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_B8+0xDC],EDI
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESP+var_B4+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESP+var_B0+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [ESP+var_AC+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ESP+var_A8+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ESP+var_A4+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x18]
	MOV DWORD PTR [ESP+var_A0+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [ESP+var_9C+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x20]
	MOV DWORD PTR [ESP+var_98+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x24]
	MOV DWORD PTR [ESP+var_94+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x28]
	MOV DWORD PTR [ESP+var_90+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV DWORD PTR [ESP+var_8C+0xDC],EAX
	MOV EDX,DWORD PTR [ECX+0x30]
	MOV DWORD PTR [ESP+var_88+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x34]
	LEA EDI,DWORD PTR [ESP+var_B8+0xDC]
	MOV DWORD PTR [ESP+var_84+0xDC],EAX
	PUSH EDI
	MOV EDX,DWORD PTR [ECX+0x38]
	MOV DWORD PTR [ESP+var_7C+0xDC],EDX
	MOV EAX,DWORD PTR [ECX+0x3C]
	MOV DWORD PTR [ESP+var_78+0xDC],EAX
	MOV ECX,DWORD PTR [ESI+0x78]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAA820_sub_100AB820])
loc_100ABABD:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000C4
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100ABAD0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x78]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_100ABAF7
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	MOV ECX,DWORD PTR [ESI+0x78]
	TEST ECX, ECX
	JZ loc_100ABAF0
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100ABAF0:
	MOV DWORD PTR [ESI+0x78],0x00000000
loc_100ABAF7:
	MOV EAX,DWORD PTR [ESI+0x7C]
	TEST EAX, EAX
	JZ loc_100ABB1B
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	MOV ECX,DWORD PTR [ESI+0x7C]
	TEST ECX, ECX
	JZ loc_100ABB14
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100ABB14:
	MOV DWORD PTR [ESI+0x7C],0x00000000
loc_100ABB1B:
	MOV EAX,DWORD PTR [ESI+0x00000080]
	TEST EAX, EAX
	JZ loc_100ABB48
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	MOV ECX,DWORD PTR [ESI+0x00000080]
	TEST ECX, ECX
	JZ loc_100ABB3E
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100ABB3E:
	MOV DWORD PTR [ESI+0x00000080],0x00000000
loc_100ABB48:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAA6F0_sub_100AB6F0])
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ABB60(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CMP DWORD PTR [ESP+arg1],0x00
	JNZ loc_100ABB6C
	MOV EDX,DWORD PTR [ECX+0x78]
	JMP loc_100ABB6F
loc_100ABB6C:
	MOV EDX,DWORD PTR [ECX+0x7C]
loc_100ABB6F:
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAAB80_sub_100ABB80])
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ABB80(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ABBA0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	CMP DWORD PTR [ESP+arg1],0x00
	JNZ loc_100ABBAC
	MOV EDX,DWORD PTR [ECX+0x78]
	JMP loc_100ABBAF
loc_100ABBAC:
	MOV EDX,DWORD PTR [ECX+0x7C]
loc_100ABBAF:
	MOV EAX,DWORD PTR [ESP+arg4]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg3+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAABD0_sub_100ABBD0])
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ABBD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg4]
	MOV ECX,DWORD PTR [ESP+arg3]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_100ABBF0()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAACD8_proc_100ABCD8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ESI+0x28],EDI
	PUSH EAX
	MOV EBX,DWORD PTR [offset LEGO1_idata.m4A4_QueryPerformanceFrequency]
	MOV DWORD PTR [ESI+0x30],EDI
	MOV DWORD PTR [ESI+0x34],EDI
	MOV DWORD PTR [ESI+0x38],EDI
	MOV DWORD PTR [ESI+0x3C],EDI
	CALL_LONG(EBX)
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JZ loc_100ABC3E
	MOV DWORD PTR [ESI+0x40],0xFFFFFFFF
	JMP loc_100ABC44
loc_100ABC3E:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ESI+0x40],EAX
loc_100ABC44:
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	XOR EDI, EDI
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	MOV DWORD PTR [ESI+0x48],EDI
	MOV DWORD PTR [ESI+0x50],EDI
	MOV DWORD PTR [ESI+0x54],EDI
	MOV DWORD PTR [ESI+0x58],EDI
	MOV DWORD PTR [ESI+0x5C],EDI
	CALL_LONG(EBX)
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JZ loc_100ABC70
	MOV DWORD PTR [ESI+0x60],0xFFFFFFFF
	JMP loc_100ABC76
loc_100ABC70:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ESI+0x60],EAX
loc_100ABC76:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	XOR EAX, EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8060_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI+0x24],EAX
	MOV DWORD PTR [ESI+0x20],EAX
	POP EDI
	MOV DWORD PTR [ESI+0x68],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ABD51()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x08
	JMP_LONG(offset [LEGO1_text.mA5FC0_loc_100A6FC0])
}
}

__declspec(naked) DWORD LEGO1_loc_100ABD60()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAADBD_proc_100ABDBD]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8060_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAADE0_sub_100ABDE0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mAADB2_sub_100ABDB2])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAADC7_sub_100ABDC7])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ABDB2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x48
	JMP_LONG(offset [LEGO1_text.mAAD10_loc_100ABD10])
}
}

__declspec(naked) DWORD LEGO1_sub_100ABDC7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x28
	JMP_LONG(offset [LEGO1_text.mAAD10_loc_100ABD10])
}
}

__declspec(naked) DWORD LEGO1_sub_100ABDE0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	MOV ESI, ECX
	CALL_LONG(DWORD PTR [EAX+0x14])
	MOV ECX,DWORD PTR [ESI+0x0C]
	TEST ECX, ECX
	JZ loc_100ABDF5
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100ABDF5:
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x14],EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ABE10(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x20
	XOR EAX, EAX
	MOV ECX, 0x00000008
	PUSH EDI
	LEA EDI,DWORD PTR [ESP+var_20+0x24]
	REP STOSD
	MOV DWORD PTR [ESP+var_20+0x24],0x00000020
	LEA EAX,DWORD PTR [ESP+var_20+0x24]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg1+0x28]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EAX,DWORD PTR [ESP+var_1C+0x2C]
	POP EDI
	ADD ESP, 0x20
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ABE50(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x20]
	PUSH EBP
	MOV EAX,DWORD PTR [ECX+0x20]
	MOV EDX,DWORD PTR [ECX+0x24]
	MOV ECX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [ESP+var_8+0x24],EAX
	PUSH ECX
	MOV EDI, 0x00000020
	MOV EBP, 0xFFFFFFFF
	MOV DWORD PTR [ESP+var_4+0x28],EDX
	CALL_LONG(offset [LEGO1_text.mAAE10_sub_100ABE10])
	MOV ECX,DWORD PTR [ESP+arg3+0x28]
	MOV DWORD PTR [ESP+var_14+0x28],EBP
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV DWORD PTR [ESI+0x14],ECX
	MOV EAX,DWORD PTR [ESP+arg2+0x24]
	LEA ECX,DWORD PTR [ESP+var_8+0x24]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESP+var_10+0x24],0x00000001
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg2+0x28]
	MOV DWORD PTR [ESP+var_C+0x28],EDX
	MOV EAX,DWORD PTR [ESP+var_C+0x28]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x0C],EAX
	TEST EAX, EAX
	JNZ loc_100ABED4
	XOR EAX, EAX
	POP EBP
	MOV DWORD PTR [ESI+0x08],0x00000000
	MOV DWORD PTR [ESI+0x14],0x00000000
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x000C
loc_100ABED4:
	CMP EBX, 0x01
	JNZ loc_100ABEE2
	MOV EDI, 0x00000004
	MOV EBP, EDI
	JMP loc_100ABF44
loc_100ABEE2:
	CMP EBX, 0x08
	JNZ loc_100ABF00
	MOV DWORD PTR [ESP+var_14+0x28],0x00000000
	MOV DWORD PTR [ESP+var_18+0x28],0x00000100
	MOV EDI, 0x00000010
	MOV EBP, EDI
	JMP loc_100ABF44
loc_100ABF00:
	CMP EBX, 0x10
	JNZ loc_100ABF1E
	MOV DWORD PTR [ESP+var_14+0x28],0x00000000
	MOV DWORD PTR [ESP+var_18+0x28],0x00000100
	MOV EDI, 0x00000020
	MOV EBP, EDI
	JMP loc_100ABF44
loc_100ABF1E:
	CMP EBX, 0x18
	JL loc_100ABF3C
	MOV DWORD PTR [ESP+var_14+0x28],0x00000000
	MOV DWORD PTR [ESP+var_18+0x28],0x00000040
	MOV EDI, 0x00000100
	MOV EBP, EDI
	JMP loc_100ABF44
loc_100ABF3C:
	MOV DWORD PTR [ESP+var_14+0x28],0x00000000
loc_100ABF44:
	CMP EBP, -0x01
	JZ loc_100ABF55
	MOV EAX,DWORD PTR [ESP+var_10+0x28]
	MOV ECX,DWORD PTR [ESP+arg1+0x28]
	PUSH EBP
	CALL_LONG(DWORD PTR [EAX+0x2C])
loc_100ABF55:
	CMP DWORD PTR [ESP+var_18+0x28],-0x01
	JZ loc_100ABF6C
	MOV EAX,DWORD PTR [ESP+var_18+0x28]
	MOV ECX,DWORD PTR [ESP+arg1+0x28]
	MOV EBX,DWORD PTR [ESP+var_10+0x28]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x30])
loc_100ABF6C:
	MOV ECX,DWORD PTR [ESI+0x0C]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	MOV ECX,DWORD PTR [ESI+0x0C]
	PUSH 0x03
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x14])
	MOV ECX,DWORD PTR [ESI+0x0C]
	PUSH EDI
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x18])
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x1C])
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESI+0x18],EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x0C])
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESI+0x1C],EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI+0x08]
	PUSH EAX
	MOV EBX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x10])
	MOV DWORD PTR [ESI+0x10],EAX
	TEST EAX, EAX
	JNZ loc_100ABFF0
	MOV ECX,DWORD PTR [ESI+0x0C]
	TEST ECX, ECX
	JZ loc_100ABFCF
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100ABFCF:
	XOR EAX, EAX
	POP EBP
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV DWORD PTR [ESI+0x08],0x00000000
	MOV DWORD PTR [ESI+0x14],0x00000000
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x000C
loc_100ABFF0:
	LEA EAX,DWORD PTR [ESI+0x50]
	XOR ECX, ECX
	MOV DWORD PTR [ESI+0x54],ECX
	MOV DWORD PTR [ESI+0x58],ECX
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [ESI+0x5C],ECX
	MOV DWORD PTR [ESI+0x48],ECX
	MOV DWORD PTR [ESI+0x30],ECX
	PUSH EAX
	MOV DWORD PTR [ESI+0x34],ECX
	MOV DWORD PTR [ESI+0x38],ECX
	MOV DWORD PTR [ESI+0x28],ECX
	MOV DWORD PTR [ESI+0x3C],ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4A8_QueryPerformanceCounter])
	MOV EAX, 0x00000001
	POP EBP
	MOV DWORD PTR [ESI+0x20],0x00000001
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_100AC050()
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAB205_proc_100AC205]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_30+0x4],EDI
	MOV DWORD PTR [EBP+var_2C+0x4],EDI
	MOV DWORD PTR [EBP+var_28+0x4],EDI
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4A4_QueryPerformanceFrequency])
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_100AC096
	MOV DWORD PTR [EBP+var_20+0x4],0xFFFFFFFF
	JMP loc_100AC09C
loc_100AC096:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
loc_100AC09C:
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [ESI+0x20],0x00
	JZ FAR loc_100AC1DA
	CMP DWORD PTR [ESI+0x24],0x00
	JNZ FAR loc_100AC1DA
	LEA EAX,DWORD PTR [ESI+0x30]
	MOV EDI,DWORD PTR [offset LEGO1_idata.m4A8_QueryPerformanceCounter]
	PUSH EAX
	CALL_LONG(EDI)
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	CALL_LONG(EDI)
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ESI+0x14]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x28])
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(EDI)
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_2C+0x4],EAX
	JZ loc_100AC0F3
	MOV DWORD PTR [EBP+var_28+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_24+0x4],0x7FEFFFFF
	JMP loc_100AC118
loc_100AC0F3:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	SUB EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	FDIVP ST(1),ST
	FADD QWORD PTR [EBP+var_28+0x4]
	FSTP QWORD PTR [EBP+var_28+0x4]
loc_100AC118:
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	LEA EBX,DWORD PTR [ESI+0x38]
	PUSH EAX
	CALL_LONG(EDI)
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ESI+0x34],EAX
	JZ loc_100AC138
	MOV DWORD PTR [EBX], 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x04],0x7FEFFFFF
	JMP loc_100AC15B
loc_100AC138:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [ESI+0x40]
	SUB EAX,DWORD PTR [ESI+0x30]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	FDIVP ST(1),ST
	FADD QWORD PTR [EBX]
	FSTP QWORD PTR [EBX]
loc_100AC15B:
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	INC DWORD PTR [ESI+0x28]
	PUSH EAX
	CALL_LONG(EDI)
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [ESI+0x58]
	CMP DWORD PTR [ESI+0x54],EAX
	JZ loc_100AC17E
	MOV DWORD PTR [ECX], 0xFFFFFFFF
	MOV DWORD PTR [ECX+0x04],0x7FEFFFFF
	JMP loc_100AC1A1
loc_100AC17E:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [ESI+0x60]
	SUB EAX,DWORD PTR [ESI+0x50]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	FILD QWORD PTR [EBP+var_18+0x4]
	FDIVP ST(1),ST
	FADD QWORD PTR [ECX]
	FSTP QWORD PTR [ECX]
loc_100AC1A1:
	FLD QWORD PTR [ECX]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x8058]
	INC DWORD PTR [ESI+0x48]
	INC DWORD PTR [ESI+0x68]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100AC1D4
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x50],EAX
	MOV DWORD PTR [ESI+0x54],EAX
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ESI+0x48],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ESI+0x30],EAX
	MOV DWORD PTR [ESI+0x34],EAX
	MOV DWORD PTR [EBX],EAX
	MOV DWORD PTR [EBX+0x04],EAX
	MOV DWORD PTR [ESI+0x28],EAX
loc_100AC1D4:
	ADD ESI, 0x50
	PUSH ESI
	CALL_LONG(EDI)
loc_100AC1DA:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAB20F_sub_100AC20F])
	FLD QWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AC20F()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mA5FC0_loc_100A6FC0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AC220(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV DWORD PTR [ECX],EAX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ESP+arg2+0x4]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX, ESI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100AC240()
{
__asm{
	MOV ECX,DWORD PTR [ECX+0x04]
	TEST ECX, ECX
	JZ loc_100AC24D
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AC24D:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AC250()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAB304_proc_100AC304]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	MOV EBX, 0x00000001
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA ECX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH 0x0C
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV BYTE PTR [ESI+0x30],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EAX+0x04],EAX
	MOV DWORD PTR [ESI+0x34],EAX
	MOV DWORD PTR [ESI+0x38],EDI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8078_ptr]
	MOV DWORD PTR [ESI+0x2C],EDI
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x08],EDI
	MOV BYTE PTR [ESI+0x3C],BL
	MOV DWORD PTR [ESI+0x0C],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AC3F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB400_loc_100AC400])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC441()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB320_loc_100AC320])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC450()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAB529_proc_100AC529]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8078_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	ADD ECX, 0x10
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAB800_sub_100AC800])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	TEST EDX, EDX
	JZ loc_100AC4B5
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.mAB503_sub_100AC503])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100AC4B5:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x08],0x00000000
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.mAB50B_sub_100AC50B])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.mAB513_sub_100AC513])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mAB51E_sub_100AC51E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAB533_sub_100AC533])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AC503()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB540_loc_100AC540])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC50B()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC513()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x30
	JMP_LONG(offset [LEGO1_text.mAB3B0_loc_100AC3B0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC51E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x10
	JMP_LONG(offset [LEGO1_text.mB5D60___1MxCriticalSection__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC533()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC581()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB590_loc_100AC590])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AC6C0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAB7E3_proc_100AC7E3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA EAX,DWORD PTR [ECX+0x10]
	MOV EDI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP BYTE PTR [EDI+0x3C],0x00
	JNZ loc_100AC71D
loc_100AC6F9:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAB7ED_sub_100AC7ED])
	MOV EAX, 0xFFFFFFFF
loc_100AC70A:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_100AC71D:
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EDI+0x34]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX, EDX
	CMP EDX, ECX
	JZ loc_100AC743
loc_100AC734:
	MOV EDX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100AC743
	MOV EAX,DWORD PTR [EAX]
	CMP EAX,DWORD PTR [EBP+var_18+0x4]
	JNZ loc_100AC734
loc_100AC743:
	CMP EAX, ECX
	JZ loc_100AC6F9
	PUSH 0x08
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100AC76F
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, ESI
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mAB220_sub_100AC220])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_100AC776
loc_100AC76F:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_100AC776:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ FAR loc_100AC6F9
	MOV ESI,DWORD PTR [EDI+0x08]
	PUSH 0x0C
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_100AC7AA
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_100AC7AF
loc_100AC7AA:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100AC7AF:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100AC7C0
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100AC7C0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	INC DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.mAB7ED_sub_100AC7ED])
	XOR EAX, EAX
	JMP FAR loc_100AC70A
}
}

__declspec(naked) DWORD LEGO1_proc_100AC7D6()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AC7ED()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC800()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAB975_proc_100AC975]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x0C
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mAB86A_loc_100AC86A])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH 0x0C
	MOV BYTE PTR [ESI],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x08],EBX
	JMP_LONG(offset [LEGO1_text.mAB86C_loc_100AC86C])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC965()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB540_loc_100AC540])
}
}

__declspec(naked) DWORD LEGO1_sub_100AC96D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AC990(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mABBD5_proc_100ACBD5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	MOV AL,BYTE PTR [EBP+var_14+0x3]
	PUSH EBX
	PUSH ESI
	MOV BYTE PTR [EBP+var_28+0x4],AL
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EDI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mABCA0_sub_100ACCA0])
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	MOV EAX, 0xFFFFFFFF
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	LEA EAX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV EAX,DWORD PTR [ESI+0x0C]
	TEST EAX, EAX
	JZ FAR loc_100ACA93
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	JZ FAR loc_100ACA96
loc_100ACA05:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [EDX+0x04],ECX
	JZ loc_100ACA34
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_100ACA2A
	CMP DWORD PTR [EAX+0x04],ECX
	JZ loc_100ACA34
loc_100ACA2A:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JMP loc_100ACA82
loc_100ACA34:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESI+0x0C]
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	LEA EDX,DWORD PTR [EBP+var_18+0x4]
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	DEC DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mABC00_sub_100ACC00])
loc_100ACA82:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_100ACA05
	JMP loc_100ACA96
loc_100ACA93:
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_100ACA96:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP EAX, ECX
	JZ FAR loc_100ACB35
loc_100ACAA9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [EDX+0x04],ECX
	JZ loc_100ACAD8
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_100ACACE
	CMP DWORD PTR [EAX+0x04],ECX
	JZ loc_100ACAD8
loc_100ACACE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JMP loc_100ACB26
loc_100ACAD8:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESI+0x08]
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	LEA EDX,DWORD PTR [EBP+var_18+0x4]
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	DEC DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mABC00_sub_100ACC00])
loc_100ACB26:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_100ACAA9
loc_100ACB35:
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.mABBBD_sub_100ACBBD])
	CMP DWORD PTR [EBP+var_20+0x4],0x00
	JZ loc_100ACB9F
	XOR ESI, ESI
loc_100ACB46:
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABBF0_sub_100ACBF0])
	MOV EAX,DWORD PTR [EAX]
	LEA EDX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mABBF0_sub_100ACBF0])
	MOV ECX,DWORD PTR [EAX]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mABC50_sub_100ACC50])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x04])
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	CMP EDI, ESI
	JZ loc_100ACB9A
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAB240_sub_100AC240])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100ACB9A:
	CMP DWORD PTR [EBP+var_20+0x4],ESI
	JNZ loc_100ACB46
loc_100ACB9F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mABBDF_sub_100ACBDF])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100ACBBD()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100ACBDF()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABCD0_loc_100ACCD0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACBF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACC00(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EDI+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_100ACC21
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_100ACC26
loc_100ACC21:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100ACC26:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_100ACC3D
	MOV ECX,DWORD PTR [ESP+arg3+0xC]
	MOV EBX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EBX
loc_100ACC3D:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACC50(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH ESI
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX, ECX
	MOV DWORD PTR [ESP+arg2+0x8],ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX],ECX
	POP ESI
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACCA0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_100ACCBE
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_100ACCBE:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100ACD11()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAB540_loc_100AC540])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACD20(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mABDD0_proc_100ACDD0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x10]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV EDI,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV EAX,DWORD PTR [EDI]
	CMP EAX, EDI
	JZ loc_100ACD99
loc_100ACD68:
	MOV EDX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100ACD77
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBP+var_18+0x4],EAX
	JNZ loc_100ACD68
loc_100ACD77:
	CMP EAX, EDI
	JZ loc_100ACD99
loc_100ACD7B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mABDDA_sub_100ACDDA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100ACD99:
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV EBX,DWORD PTR [EDI+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_100ACDB4
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_100ACDB9
loc_100ACDB4:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_100ACDB9:
	MOV DWORD PTR [EDI+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_100ACDCB
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],ECX
loc_100ACDCB:
	INC DWORD PTR [ESI+0x38]
	JMP loc_100ACD7B
}
}

__declspec(naked) DWORD LEGO1_sub_100ACDDA()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ACDF0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mABE8C_proc_100ACE8C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	LEA EAX,DWORD PTR [ECX+0x10]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV EAX,DWORD PTR [ECX]
	MOV EDX, EAX
	CMP EAX, ECX
	JZ loc_100ACE48
loc_100ACE39:
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100ACE48
	MOV EDX,DWORD PTR [EDX]
	CMP DWORD PTR [EBP+var_18+0x4],EDX
	JNZ loc_100ACE39
loc_100ACE48:
	CMP EDX, ECX
	JZ loc_100ACE6F
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EDX
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX+0x04],EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX, ESI
	DEC DWORD PTR [ESI+0x38]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mAB990_sub_100AC990])
loc_100ACE6F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mABE96_sub_100ACE96])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100ACE96()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100ACEA0()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x1C]
	RET
}
}

__declspec(naked) DWORD LEGO1__NotificationManager__YAPAVMxNotificationManager__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x28]
	RET
}
}

__declspec(naked) DWORD LEGO1__TickleManager__YAPAVMxTickleManager__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x24]
	RET
}
}

__declspec(naked) DWORD LEGO1__Timer__YAPAVMxTimer__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x3C]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ACEE0()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x44]
	RET
}
}

__declspec(naked) DWORD LEGO1__Streamer__YAPAVMxStreamer__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x40]
	RET
}
}

__declspec(naked) DWORD LEGO1__MSoundManager__YAPAVMxSoundManager__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x30]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ACF10()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x2C]
	RET
}
}

__declspec(naked) DWORD LEGO1__VariableTable__YAPAVMxVariableTable__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x20]
	RET
}
}

__declspec(naked) DWORD LEGO1__MusicManager__YAPAVMxMusicManager__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x34]
	RET
}
}

__declspec(naked) DWORD LEGO1__EventManager__YAPAVMxEventManager__XZ()
{
__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV EAX,DWORD PTR [EAX+0x38]
	RET
}
}

__declspec(naked) DWORD LEGO1__Start__YAJPAVMxDSAction___Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ACF70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x24])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1___0MxAtomId__QAE_PBDW4LookupMode___Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	TEST EAX, EAX
	JZ loc_100ACFC2
	CALL_LONG(offset [LEGO1_text.mABEE0_sub_100ACEE0])
	TEST EAX, EAX
	JZ loc_100ACFC2
	MOV EAX,DWORD PTR [ESP+arg2+0x4]
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAC210_sub_100AD210])
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI],ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mAC7F0_sub_100AD7F0])
loc_100ACFC2:
	MOV EAX, ESI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1___1MxAtomId__QAE_XZ()
{
__asm{
	JMP_LONG(offset [LEGO1_text.mABFE0_loc_100ACFE0])
}
}

__declspec(naked) DWORD LEGO1_loc_100ACFE0()
{
	enum{
		var_30 = -0x30,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAC109_proc_100AD109]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CMP DWORD PTR [ESI],EDI
	JZ FAR loc_100AD0F1
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	TEST EAX, EAX
	JZ FAR loc_100AD0F1
	CALL_LONG(offset [LEGO1_text.mABEE0_sub_100ACEE0])
	TEST EAX, EAX
	JZ FAR loc_100AD0F1
	MOV ESI,DWORD PTR [ESI]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV WORD PTR SS:[EBP+var_20+0x4],DI
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mABEE0_sub_100ACEE0])
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV ESI, EAX
	MOV EBX,DWORD PTR [EDI+0x04]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD08C
loc_100AD067:
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	LEA ECX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x01]
	CALL_LONG(offset [LEGO1_text.mAC120_sub_100AD120])
	TEST EAX, EAX
	JNZ loc_100AD081
	MOV EDI, EBX
	MOV EBX,DWORD PTR [EBX]
	JMP loc_100AD084
loc_100AD081:
	MOV EBX,DWORD PTR [EBX+0x08]
loc_100AD084:
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JNZ loc_100AD067
loc_100AD08C:
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CMP DWORD PTR [ESI+0x04],EDI
	JZ loc_100AD0CC
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EDX+0x08]
loc_100AD0A0:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_100AD0C0
	OR DL, DL
	JZ loc_100AD0BC
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_100AD0C0
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_100AD0A0
loc_100AD0BC:
	XOR EAX, EAX
	JMP loc_100AD0C5
loc_100AD0C0:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100AD0C5:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	JLE loc_100AD0D5
loc_100AD0CC:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
loc_100AD0D5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAC113_sub_100AD113])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	CALL_LONG(offset [LEGO1_text.mAC800_sub_100AD800])
loc_100AD0F1:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AD113()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAC170_loc_100AD170])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AD120(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [EDX+0x08]
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EDX+0x08]
loc_100AD132:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_100AD152
	OR DL, DL
	JZ loc_100AD14E
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_100AD152
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_100AD132
loc_100AD14E:
	XOR EAX, EAX
	JMP loc_100AD157
loc_100AD152:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100AD157:
	TEST EAX, EAX
	MOV EAX, 0x00000001
	JG loc_100AD162
	XOR EAX, EAX
loc_100AD162:
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100AD1B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1___4MxAtomId__QAEAAV0_ABV0__Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX],0x00
	MOV EDI, ECX
	JZ loc_100AD1CE
	CALL_LONG(offset [LEGO1_text.mABFE0_loc_100ACFE0])
loc_100AD1CE:
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP DWORD PTR [ESI],0x00
	JZ loc_100AD1FC
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	TEST EAX, EAX
	JZ loc_100AD1FC
	CALL_LONG(offset [LEGO1_text.mABEE0_sub_100ACEE0])
	TEST EAX, EAX
	JZ loc_100AD1FC
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAC210_sub_100AD210])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mAC7F0_sub_100AD7F0])
loc_100AD1FC:
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AD210(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAC460_proc_100AD460]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x14
	XOR EDI, EDI
	MOV EBX, 0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV BYTE PTR [EBP+var_8+0x4],BL
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.mAC27A_loc_100AD27A])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV WORD PTR DS:[ESI+0x10],DI
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],BL
	JMP_LONG(offset [LEGO1_text.mAC27C_loc_100AD27C])
}
}

__declspec(naked) DWORD LEGO1_sub_100AD33D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AD46A()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AD480()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_100AD498
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_100AD498
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_100AD498:
	MOV EDX,DWORD PTR [ESI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD4B5
loc_100AD4A2:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD4B1
	MOV EDX, EAX
	JMP loc_100AD4A2
loc_100AD4B1:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
loc_100AD4B5:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_100AD4C7
loc_100AD4BC:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_100AD4BC
loc_100AD4C7:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AD4D0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_100AD514
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_100AD514:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_100AD571
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JNZ loc_100AD571
	MOV EAX,DWORD PTR [EDI]
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EDX+0x08]
loc_100AD533:
	MOV DL,BYTE PTR [EDI]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_100AD553
	OR DL, DL
	JZ loc_100AD54F
	MOV DL,BYTE PTR [EDI+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_100AD553
	ADD EDI, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_100AD533
loc_100AD54F:
	XOR EAX, EAX
	JMP loc_100AD558
loc_100AD553:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100AD558:
	TEST EAX, EAX
	JG loc_100AD571
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100AD593
	MOV DWORD PTR [EAX],EDX
	JMP loc_100AD593
loc_100AD571:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_100AD586
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100AD593
	MOV DWORD PTR [EAX],EDX
	JMP loc_100AD593
loc_100AD586:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_100AD593:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_100AD756
loc_100AD5A3:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_100AD756
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_100AD67F
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_100AD72C
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_100AD60F
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD5EF
	MOV DWORD PTR [EAX+0x04],ECX
loc_100AD5EF:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100AD609
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100AD609
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100AD60B
loc_100AD609:
	MOV DWORD PTR [EAX],EDX
loc_100AD60B:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_100AD60F:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD641
	MOV DWORD PTR [EAX+0x04],EDX
loc_100AD641:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_100AD675
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_100AD668
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_100AD74A
loc_100AD668:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_100AD74A
loc_100AD675:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	JMP FAR loc_100AD727
loc_100AD67F:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_100AD72C
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_100AD6C7
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD6A4
	MOV DWORD PTR [EAX+0x04],ECX
loc_100AD6A4:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_100AD6C0
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_100AD6C0
	MOV DWORD PTR [EBX],EDX
	JMP loc_100AD6C2
loc_100AD6C0:
	MOV DWORD PTR [EAX],EDX
loc_100AD6C2:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_100AD6C7:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD6F9
	MOV DWORD PTR [EAX+0x04],EDX
loc_100AD6F9:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_100AD723
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_100AD71A
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_100AD74A
loc_100AD71A:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_100AD74A
loc_100AD723:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
loc_100AD727:
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_100AD74A
loc_100AD72C:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_100AD74A:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_100AD5A3
loc_100AD756:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AD780(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AD7DA
	MOV EDX,DWORD PTR [ESP+arg1+0xC]
loc_100AD795:
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EDI,DWORD PTR [ECX+0x08]
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [ECX+0x08]
loc_100AD7A0:
	MOV CL,BYTE PTR [EDI]
	CMP CL,BYTE PTR [EBX]
	JNZ loc_100AD7C0
	OR CL, CL
	JZ loc_100AD7BC
	MOV CL,BYTE PTR [EDI+0x01]
	CMP CL,BYTE PTR [EBX+0x01]
	JNZ loc_100AD7C0
	ADD EDI, 0x02
	ADD EBX, 0x02
	OR CL, CL
	JNZ loc_100AD7A0
loc_100AD7BC:
	XOR ECX, ECX
	JMP loc_100AD7C5
loc_100AD7C0:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_100AD7C5:
	TEST ECX, ECX
	JG loc_100AD7CF
	MOV EAX, ESI
	MOV ESI,DWORD PTR [ESI]
	JMP loc_100AD7D2
loc_100AD7CF:
	MOV ESI,DWORD PTR [ESI+0x08]
loc_100AD7D2:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JNZ loc_100AD795
loc_100AD7DA:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AD7E0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mABFE0_loc_100ACFE0])
	MOV DWORD PTR [ESI], 0x00000000
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AD7F0()
{
__asm{
	INC WORD PTR DS:[ECX+0x10]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AD800()
{
__asm{
	MOV AX,WORD PTR DS:[ECX+0x10]
	TEST AX, AX
	JZ loc_100AD80F
	DEC AX
	MOV WORD PTR DS:[ECX+0x10],AX
loc_100AD80F:
	RET
}
}

__declspec(naked) DWORD LEGO1___0MxDSAction__QAE_XZ()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAC921_proc_100AD921]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.mBE6A0_sub_100BF6A0])
	LEA ECX,DWORD PTR [ESI+0x40]
	LEA EAX,DWORD PTR [ESI+0x48]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x44],EAX
	LEA EAX,DWORD PTR [ESI+0x5C]
	LEA EDX,DWORD PTR [ESI+0x70]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x58],EAX
	MOV DWORD PTR [ESI+0x6C],EDX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8098_ptr]
	MOV DWORD PTR [ESI+0x54],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x54],offset [LEGO1_rdata.m488_ptr]
	MOV WORD PTR DS:[ESI+0x00000080],DI
	MOV DWORD PTR [ESI+0x7C],EDI
	MOV DWORD PTR [ESI+0x68],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x68],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x30],0x00000020
	MOV DWORD PTR [ESI+0x34],0x80000000
	MOV DWORD PTR [ESI+0x38],0x80000000
	MOV DWORD PTR [ESI+0x3C],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],0x7F7FFFFF
	MOV WORD PTR DS:[ESI+0x0C],0x0001
	LEA EBX,DWORD PTR [EBP+var_14+0x4]
	PUSH EBX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m50C_ptr])
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ESI+0x54]
	MOV DWORD PTR [EBP+var_14+0x4],0x7F7FFFFF
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x54]
	CALL_LONG(DWORD PTR [EDX+0x00000084])
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ESI+0x68]
	MOV DWORD PTR [EBP+var_14+0x4],0x7F7FFFFF
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x68]
	CALL_LONG(DWORD PTR [EDX+0x00000084])
	MOV DWORD PTR [ESI+0x00000084],EDI
	MOV DWORD PTR [ESI+0x00000088],EDI
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0000008C],EDI
	MOV DWORD PTR [ESI+0x00000090],0x80000000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1___1MxDSAction__UAE_XZ()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mACAD0_proc_100ADAD0]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8098_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x7C]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.mACADA_sub_100ADADA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100ADADA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mBE7E0_loc_100BF7E0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ADAF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV EAX,DWORD PTR [EDI+0x1C]
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV ECX,DWORD PTR [EDI+0x30]
	MOV DWORD PTR [ESI+0x30],ECX
	MOV EDX,DWORD PTR [EDI+0x34]
	MOV DWORD PTR [ESI+0x34],EDX
	MOV EAX,DWORD PTR [EDI+0x38]
	MOV DWORD PTR [ESI+0x38],EAX
	MOV ECX,DWORD PTR [EDI+0x3C]
	MOV DWORD PTR [ESI+0x3C],ECX
	LEA ECX,DWORD PTR [ESI+0x40]
	MOV EAX,DWORD PTR [EDI+0x44]
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA EDX,DWORD PTR [EDI+0x48]
	LEA ECX,DWORD PTR [ESI+0x48]
	MOV EAX, 0x00000003
loc_100ADB2E:
	MOV EBX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EBX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_100ADB2E
	LEA ECX,DWORD PTR [ESI+0x54]
	MOV EAX,DWORD PTR [EDI+0x58]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA ECX,DWORD PTR [EDI+0x5C]
	LEA EAX,DWORD PTR [ESI+0x5C]
	MOV EDX, 0x00000003
loc_100ADB52:
	MOV EBX,DWORD PTR [ECX]
	ADD ECX, 0x04
	MOV DWORD PTR [EAX],EBX
	ADD EAX, 0x04
	DEC EDX
	JNZ loc_100ADB52
	LEA ECX,DWORD PTR [ESI+0x68]
	MOV EAX,DWORD PTR [EDI+0x6C]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA EDX,DWORD PTR [EDI+0x70]
	LEA ECX,DWORD PTR [ESI+0x70]
	MOV EAX, 0x00000003
loc_100ADB76:
	MOV EBX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EBX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_100ADB76
	MOV CX,WORD PTR DS:[EDI+0x00000080]
	MOV EAX,DWORD PTR [EDI+0x7C]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mACE60_sub_100ADE60])
	MOV ECX,DWORD PTR [EDI+0x00000084]
	MOV DWORD PTR [ESI+0x00000084],ECX
	MOV EDX,DWORD PTR [EDI+0x00000088]
	MOV DWORD PTR [ESI+0x00000088],EDX
	MOV EAX,DWORD PTR [EDI+0x0000008C]
	MOV DWORD PTR [ESI+0x0000008C],EAX
	MOV ECX,DWORD PTR [EDI+0x00000090]
	POP EDI
	MOV DWORD PTR [ESI+0x00000090],ECX
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_loc_100ADBD0()
{
__asm{
	JMP_LONG(offset [LEGO1_text.mBE9C0_loc_100BF9C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100ADBE0()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	CALL_LONG(offset [LEGO1_text.mBE9D0_sub_100BF9D0])
	XOR ECX, ECX
	MOV CX,WORD PTR DS:[EBX+0x00000080]
	LEA ESI,DWORD PTR [ECX+EAX+0x5A]
	MOV ECX, EBX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.mBE9D0_sub_100BF9D0])
	SUB EDI, EAX
	MOV EAX, ESI
	MOV DWORD PTR [EBX+0x2C],EDI
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ADC10(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP EDI, ESI
	JNZ loc_100ADC23
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_100ADC23:
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mBE8C0_sub_100BF8C0])
	PUSH ESI
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mACAF0_sub_100ADAF0])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ADD00(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x14]
	MOV EAX,DWORD PTR [EDI+0x34]
	CMP EAX, 0x80000000
	JZ loc_100ADD19
	MOV DWORD PTR [ESI+0x34],EAX
loc_100ADD19:
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	MOV EBX,DWORD PTR [EAX+0x24]
	CALL_LONG(EBX)
	CMP EAX, 0x80000000
	JZ loc_100ADD30
	MOV ECX, EDI
	CALL_LONG(EBX)
	MOV DWORD PTR [ESI+0x38],EAX
loc_100ADD30:
	MOV EAX,DWORD PTR [EDI+0x3C]
	CMP EAX, -0x01
	JZ loc_100ADD3B
	MOV DWORD PTR [ESI+0x3C],EAX
loc_100ADD3B:
	MOV EAX,DWORD PTR [EDI+0x44]
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADD4D
	MOV ECX,DWORD PTR [ESI+0x44]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EAX
loc_100ADD4D:
	MOV EAX,DWORD PTR [EDI+0x44]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADD63
	MOV ECX,DWORD PTR [ESI+0x44]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EAX
loc_100ADD63:
	MOV EAX,DWORD PTR [EDI+0x44]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADD79
	MOV ECX,DWORD PTR [ESI+0x44]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x08],EAX
loc_100ADD79:
	MOV EAX,DWORD PTR [EDI+0x58]
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADD8B
	MOV ECX,DWORD PTR [ESI+0x58]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EAX
loc_100ADD8B:
	MOV EAX,DWORD PTR [EDI+0x58]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADDA1
	MOV ECX,DWORD PTR [ESI+0x58]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EAX
loc_100ADDA1:
	MOV EAX,DWORD PTR [EDI+0x58]
	CMP DWORD PTR [EAX+0x08],0x7F7FFFFF
	JZ loc_100ADDB9
	MOV EAX,DWORD PTR [EDI+0x6C]
	MOV ECX,DWORD PTR [ESI+0x58]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
loc_100ADDB9:
	MOV EAX,DWORD PTR [EDI+0x6C]
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADDCB
	MOV ECX,DWORD PTR [ESI+0x6C]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EAX
loc_100ADDCB:
	MOV EAX,DWORD PTR [EDI+0x6C]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADDE1
	MOV ECX,DWORD PTR [ESI+0x6C]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EAX
loc_100ADDE1:
	MOV EAX,DWORD PTR [EDI+0x6C]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX], 0x7F7FFFFF
	JZ loc_100ADDF7
	MOV ECX,DWORD PTR [ESI+0x6C]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x08],EAX
loc_100ADDF7:
	MOV AX,WORD PTR DS:[EDI+0x00000080]
	MOV ECX,DWORD PTR [EDI+0x7C]
	MOV WORD PTR SS:[ESP+var_4+0x12],AX
	MOV DWORD PTR [ESP+var_4+0x14],ECX
	TEST AX, AX
	JZ loc_100ADE54
	TEST ECX, ECX
	JZ loc_100ADE54
	MOV EAX,DWORD PTR [ESI+0x7C]
	TEST EAX, EAX
	JZ loc_100ADE2E
	PUSH 0x03
	PUSH EAX
	PUSH offset LEGO1_data + 0x1140C
	CALL_LONG(offset [LEGO1_text.m8A680_sub_1008B680])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_100ADE54
loc_100ADE2E:
	MOV EAX,DWORD PTR [ESI+0x7C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV EAX,DWORD PTR [ESP+r+0x14]
	MOV ECX,DWORD PTR [ESP+r+0x12]
	ADD ESP, 0x04
	MOV WORD PTR DS:[ESI+0x00000080],0x0000
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mACE60_sub_100ADE60])
loc_100ADE54:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ADE60(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	CMP DWORD PTR [ECX+0x7C],EAX
	PUSH EDI
	PUSH EBP
	MOV EBX, ECX
	JZ FAR loc_100ADF64
	TEST EAX, EAX
	JZ FAR loc_100ADF64
	MOV AX,WORD PTR DS:[EBX+0x00000080]
	MOV EBP,DWORD PTR [ESP+arg1+0x14]
	TEST AX, AX
	JZ FAR loc_100ADF2E
	MOVZX EAX,AX
	AND EBP, 0x0000FFFF
	ADD EAX, EBP
	ADD EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	XOR EAX, EAX
	MOV ESI,DWORD PTR [EBX+0x7C]
	MOV AX,WORD PTR DS:[EBX+0x00000080]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV AX, WORD PTR DS:[offset LEGO1_data + 0x11410]
	XOR ECX, ECX
	MOV CX,WORD PTR DS:[EBX+0x00000080]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV WORD PTR DS:[EDX+ECX],AX
	MOV ESI,DWORD PTR [ESP+arg2+0x14]
	XOR EAX, EAX
	MOV ECX, EBP
	MOV AX,WORD PTR DS:[EBX+0x00000080]
	SHR ECX, 0x02
	LEA EDI,DWORD PTR [EDX+EAX+0x02]
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	MOV AX,WORD PTR SS:[ESP+arg1+0x14]
	MOV ECX,DWORD PTR [EBX+0x7C]
	ADD AX, 0x0002
	PUSH ECX
	ADD WORD PTR DS:[EBX+0x00000080],AX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV EDX,DWORD PTR [ESP+var_4+0x18]
	ADD ESP, 0x04
	MOV DWORD PTR [EBX+0x7C],EDX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
loc_100ADF2E:
	AND EBP, 0x0000FFFF
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBX+0x7C],EAX
	TEST EDI, EDI
	JZ loc_100ADF64
	MOV AX,WORD PTR SS:[ESP+arg1+0x14]
	MOV ESI,DWORD PTR [ESP+arg2+0x14]
	MOV WORD PTR DS:[EBX+0x00000080],AX
	MOV ECX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
loc_100ADF64:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100ADF70(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH EAX
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mBEA20_sub_100BFA20])
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDI+0x30],EAX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI+0x34],EDX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI+0x38],EDX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI+0x3C],EDX
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x04
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x44]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x44]
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x44]
	FSTP DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x58]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x58]
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x58]
	FSTP DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x6C]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x6C]
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	FLD QWORD PTR [EAX]
	MOV ECX,DWORD PTR [EDI+0x6C]
	FSTP DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX, 0x08
	MOV DWORD PTR [ESI],EAX
	ADD EAX, 0x02
	MOV BX,WORD PTR DS:[EAX-0x02]
	TEST BX, BX
	MOV DWORD PTR [ESI],EAX
	JZ loc_100AE056
	PUSH EAX
	MOV ECX, EDI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mACE60_sub_100ADE60])
	MOVZX EAX,BX
	ADD DWORD PTR [ESI],EAX
loc_100AE056:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100AE060()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD0BA_proc_100AE0BA]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m80E0_ptr]
	MOV BYTE PTR [ESI+0x0C],AL
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m580_timeGetTime])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [offset LEGO1_data + 0x11414], EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE129()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1__GetRealTime_MxTimer__QAEJXZ()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m580_timeGetTime])
	MOV DWORD PTR [offset LEGO1_data + 0x11414], EAX
	SUB EAX,DWORD PTR [ESI+0x08]
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE160()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD140__GetRealTime_MxTimer__QAEJXZ])
	MOV DWORD PTR [offset LEGO1_data + 0x11418], EAX
	MOV BYTE PTR [ESI+0x0C],0x01
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE180()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD140__GetRealTime_MxTimer__QAEJXZ])
	SUB EAX,DWORD PTR [offset LEGO1_data + 0x11418]
	MOV BYTE PTR [ESI+0x0C],0x00
	SUB EAX, 0x05
	ADD DWORD PTR [ESI+0x08],EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1___0MxCore__QAE_XZ()
{
__asm{
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m80F8_ptr]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x1141C]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX, ECX
	INC DWORD PTR [offset LEGO1_data + 0x1141C]
	RET
}
}

__declspec(naked) DWORD LEGO1___1MxCore__UAE_XZ()
{
__asm{
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m80F8_ptr]
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__Notify_MxCore__UAEJAAVMxParam___Z(DWORD arg1)
{
__asm{
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AE200()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD261_proc_100AE261]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8110_ptr]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV BYTE PTR [EAX],0x00
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	MOV WORD PTR DS:[ESI+0x0C],0x0000
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1___0MxString__QAE_ABV0__Z(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD32F_proc_100AE32F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV EBX, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m8110_ptr]
	MOV AX,WORD PTR DS:[ESI+0x0C]
	MOV WORD PTR DS:[EBX+0x0C],AX
	MOVZX EAX,AX
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x08],EAX
	SUB EAX, EAX
	MOV EDI,DWORD PTR [ESI+0x08]
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x08]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX, EBX
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AE350(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD406_proc_100AE406]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV EBX, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m8110_ptr]
	TEST ESI, ESI
	JZ loc_100AE3D4
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	XOR EAX, EAX
	MOV AX, CX
	MOV EDI, ESI
	MOV WORD PTR DS:[EBX+0x0C],CX
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x08],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x08]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	JMP loc_100AE3EA
loc_100AE3D4:
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBX+0x08],EAX
	MOV BYTE PTR [EAX],0x00
	MOV WORD PTR DS:[EBX+0x0C],0x0000
loc_100AE3EA:
	MOV EAX, EBX
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1___1MxString__UAE_XZ()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD470_proc_100AE470]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8110_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.mAD47A_sub_100AE47A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE47A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AE490()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD0FD0_sub_100D1FD0])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE4A0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AE4B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	CMP DWORD PTR [ESI+0x08],EAX
	JZ loc_100AE505
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV AX,WORD PTR DS:[ESI+0x0C]
	ADD ESP, 0x04
	MOV WORD PTR DS:[EBX+0x0C],AX
	MOVZX EAX,AX
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x08],EAX
	SUB EAX, EAX
	MOV EDI,DWORD PTR [ESI+0x08]
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x08]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_100AE505:
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1___4MxString__QAEABV0_PBD_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	CMP EAX, ESI
	JZ loc_100AE56F
	PUSH EAX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	XOR EAX, EAX
	MOV AX, CX
	MOV EDI, ESI
	MOV WORD PTR DS:[EBX+0x0C],CX
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX+0x08],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x08]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_100AE56F:
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AE580(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD67B_proc_100AE67B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	MOV AX,WORD PTR DS:[EBX+0x0C]
	LEA EAX,DWORD PTR [EAX+ECX-0x01]
	MOV WORD PTR SS:[EBP+var_18+0x4],AX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	AND EAX, 0x0000FFFF
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_1C+0x4]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	XOR EDI, EDI
	MOV DI,WORD PTR DS:[EBX+0x0C]
	ADD EDI,DWORD PTR [EBP+var_1C+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	OR DWORD PTR [EBP+var_14+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mAD685_sub_100AE685])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_proc_100AE66C()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217226 = 0x4A4B28,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217220-0x4A4B20],0x01
	JZ loc_100AE67A
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
loc_100AE67A:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE685()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AE690(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	PUSH EBP
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EBX+0x0C]
	NOT ECX
	LEA EBP,DWORD PTR [EAX+ECX-0x01]
	LEA ECX,DWORD PTR [EAX+ECX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI,DWORD PTR [ESP+arg1+0x14]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	XOR EDX, EDX
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV DX,WORD PTR DS:[EBX+0x0C]
	ADD EDI, EDX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [EBX+0x08]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV WORD PTR DS:[EBX+0x0C],BP
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX, EBX
	POP EBP
	POP EDI
	MOV DWORD PTR [EBX+0x08],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AE740()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD792_proc_100AE792]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB7D00_sub_100B8D00])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8128_ptr]
	CALL_LONG(offset [LEGO1_text.mAD830_sub_100AE830])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100AE7D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAD81B_proc_100AE81B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8128_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAD840_sub_100AE840])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAD825_sub_100AE825])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AE825()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7D90_loc_100B8D90])
}
}

__declspec(naked) DWORD LEGO1_sub_100AE830()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x30],EAX
	MOV DWORD PTR [ECX+0x34],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AE840(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x0C]
	TEST ECX, ECX
	JZ loc_100AE860
	CALL_LONG(offset [LEGO1_text.mBE670_sub_100BF670])
	MOV ECX,DWORD PTR [ESI+0x0C]
	TEST ECX, ECX
	JZ loc_100AE86D
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	JMP loc_100AE86D
loc_100AE860:
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
loc_100AE86D:
	LEA EDI,DWORD PTR [ESI+0x10]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	MOV EAX,DWORD PTR [ESI+0x34]
	TEST EAX, EAX
	JZ loc_100AE884
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_100AE884:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD830_sub_100AE830])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+r+0xC],0x00
	JNZ loc_100AE8A0
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB7E90_sub_100B8E90])
loc_100AE8A0:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AE8B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_3C = -0x3C,
		var_38 = -0x38,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mADA51_proc_100AEA51]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x2C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, 0xFFFFFFFF
	XOR EBX, EBX
	MOV BYTE PTR [EBP+var_10+0x3],BL
	CALL_LONG(offset [LEGO1_text.mB7E40_sub_100B8E40])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
	LEA ECX,DWORD PTR [ESI+0x10]
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	PUSH EBX
	LEA EAX,DWORD PTR [ESI+0x30]
	MOV BYTE PTR [EBP+var_10+0x3],0x01
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mD2722_j_DirectSoundCreate])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [ESI+0x30]
	PUSH 0x02
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],EBX
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EAX+0x0C],EBX
	MOV DWORD PTR [EAX+0x10],EBX
	MOV DWORD PTR [EBP+var_3C+0x4],0x00000014
	CALL_LONG(offset [LEGO1_text.mAF980__IsSound3D_MxOmni__SAEXZ])
	MOV DWORD PTR [EBP+var_38+0x4],0x00000011
	TEST AL, AL
	JNZ loc_100AE951
	MOV DWORD PTR [EBP+var_38+0x4],0x00000081
loc_100AE951:
	MOV EAX,DWORD PTR [ESI+0x30]
	LEA EBX,DWORD PTR [ESI+0x34]
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EBX
	PUSH ECX
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	TEST EAX, EAX
	JZ loc_100AE99E
	CALL_LONG(offset [LEGO1_text.mAF980__IsSound3D_MxOmni__SAEXZ])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mAF990__SetSound3D_MxOmni__SAXE_Z])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV DWORD PTR [EBP+var_38+0x4],0x00000081
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EBX
	PUSH ECX
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
loc_100AE99E:
	MOV WORD PTR SS:[EBP+var_24+0x4],0x0001
	CALL_LONG(offset [LEGO1_text.mAF980__IsSound3D_MxOmni__SAEXZ])
	MOV WORD PTR SS:[EBP+var_20+0x2],0x0002
	TEST AL, AL
	JNZ loc_100AE9B9
	MOV WORD PTR SS:[EBP+var_20+0x2],0x0001
loc_100AE9B9:
	MOV DWORD PTR [EBP+var_20+0x4],0x00002B11
	MOV WORD PTR SS:[EBP+var_14+0x2],0x0010
	MOV AX,WORD PTR SS:[EBP+var_20+0x2]
	ADD AX, AX
	MOV WORD PTR SS:[EBP+var_18+0x4],AX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	AND EAX, 0x0000FFFF
	MOV ECX, EAX
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*2+ECX]
	MOV WORD PTR SS:[EBP+var_14+0x4],0x0000
	LEA EDI,DWORD PTR [EAX*8+ECX]
	LEA ECX,DWORD PTR [EDI*8+ECX]
	LEA EAX,DWORD PTR [ECX*8+ECX]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x38])
	CMP BYTE PTR [EBP+arg2+0x4],0x00
	MOV EDI, EAX
	JZ_LONG(offset [LEGO1_text.mADA68_loc_100AEA68])
	PUSH 0x20
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EBX, EAX
	MOV EAX, 0x00000000
	TEST EBX, EBX
	JZ loc_100AEA32
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EBX
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mB7BB0_sub_100B8BB0])
loc_100AEA32:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x0C],EAX
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
	PUSH 0x00
	MOV ECX, EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mBE610_sub_100BF610])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.mADA79_loc_100AEA79])
	JMP_LONG(offset [LEGO1_text.mADA7B_loc_100AEA7B])
}
}

__declspec(naked) DWORD LEGO1_sub_100AEAB0()
{
__asm{
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mAD840_sub_100AE840])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AEBBA()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AEBD0(DWORD arg1, DWORD arg2)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mADCD9_proc_100AECD9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x10]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV ESI,DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
loc_100AEC3C:
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JNZ loc_100AEC49
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ESI,DWORD PTR [EAX+0x10]
	JMP loc_100AEC4F
loc_100AEC49:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EAX+0x08]
loc_100AEC4F:
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_100AECA0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	MOV ESI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	JZ loc_100AECA0
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ESI,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x20],ESI
	JNZ loc_100AEC3C
	CMP DWORD PTR [EAX+0x1C],EDX
	JNZ loc_100AEC3C
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mADCD1_sub_100AECD1])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mADCE3_sub_100AECE3])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
loc_100AEC8E:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_100AECA0:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mADCD1_sub_100AECD1])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mADCE3_sub_100AECE3])
	XOR EAX, EAX
	JMP loc_100AEC8E
}
}

__declspec(naked) DWORD LEGO1_sub_100AECD1()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AECE3()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AECF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	TEST EAX, EAX
	JNZ loc_100AED00
	MOV EAX, 0xFFFFD8F0
	RETN 0x0004
loc_100AED00:
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x1141C+EAX*4]
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AEDF5()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AEE07()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AEEF5()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AEF07()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AEF10()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mADF90_proc_100AEF90]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA ECX,DWORD PTR [ESI+0x48]
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8168_ptr]
	CALL_LONG(offset [LEGO1_text.mAE080_sub_100AF080])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100AEFF0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAE061_proc_100AF061]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m8168_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mAEE90_sub_100AFE90])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.mAE04B_sub_100AF04B])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mAE056_sub_100AF056])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAE06B_sub_100AF06B])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AF04B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x48
	JMP_LONG(offset [LEGO1_text.mB5D60___1MxCriticalSection__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AF056()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x08
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AF06B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AF080()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x18],EAX
	MOV DWORD PTR [ECX+0x1C],EAX
	MOV DWORD PTR [ECX+0x20],EAX
	MOV DWORD PTR [ECX+0x24],EAX
	MOV DWORD PTR [ECX+0x28],EAX
	MOV DWORD PTR [ECX+0x2C],EAX
	MOV DWORD PTR [ECX+0x30],EAX
	MOV DWORD PTR [ECX+0x34],EAX
	MOV DWORD PTR [ECX+0x38],EAX
	MOV DWORD PTR [ECX+0x3C],EAX
	MOV DWORD PTR [ECX+0x40],EAX
	MOV DWORD PTR [ECX+0x44],EAX
	MOV BYTE PTR [ECX+0x64],AL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AF0B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x115B0], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100AF0C0()
{
	enum{
		var_28 = -0x28,
		var_20 = -0x20,
		var_18 = -0x18,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAE6AD_proc_100AF6AD]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV DWORD PTR [EBP+var_28+0x4],0xFFFFFFFF
	PUSH EBX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	PUSH EDI
	PUSH 0x10
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP EAX, ESI
	JZ_LONG(offset [LEGO1_text.mAE1A5_loc_100AF1A5])
	MOV AL,BYTE PTR [EBP+var_18+0x3]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV EBX, 0x00000001
	MOV BYTE PTR [ECX],AL
	MOV DL,BYTE PTR [EBP+var_20+0x3]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV BYTE PTR [ECX+0x01],DL
	MOV DWORD PTR [ECX+0x08],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x113F0],ESI
	JNZ loc_100AF142
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],EBX
	MOV DWORD PTR [offset LEGO1_data + 0x113F0], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x113F0]
	MOV DWORD PTR [EAX+0x08],ESI
loc_100AF142:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.mAE185_sub_100AF185])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x113F0]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x0C],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX, ECX
	JMP_LONG(offset [LEGO1_text.mAE1A7_loc_100AF1A7])
}
}

__declspec(naked) DWORD LEGO1_sub_100AF185()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AF7A0()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF7BE
loc_100AF7AD:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF7BB
	MOV EDX, EAX
	JMP loc_100AF7AD
loc_100AF7BB:
	MOV DWORD PTR [ECX],EDX
	RET
loc_100AF7BE:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100AF7D2
loc_100AF7C6:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100AF7C6
loc_100AF7D2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100AF7DB
	MOV DWORD PTR [ECX],EDX
loc_100AF7DB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AF7E0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF80A
loc_100AF7FC:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF82F
	MOV ECX, EAX
	JMP loc_100AF7FC
loc_100AF80A:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_100AF826
loc_100AF816:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100AF816
loc_100AF826:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100AF833
loc_100AF82F:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
loc_100AF833:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF867
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF863
loc_100AF84E:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF85C
	MOV EDX, EAX
	JMP loc_100AF84E
loc_100AF85C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_100AF871
loc_100AF863:
	MOV EDX, EBX
	JMP loc_100AF871
loc_100AF867:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_100AF871:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_100AF90A
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100AF89B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100AF89B
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_100AF89D
loc_100AF89B:
	MOV DWORD PTR [EAX],EDX
loc_100AF89D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_100AF8CE
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x113F0]
	CMP DWORD PTR [EDI],EAX
	JZ loc_100AF8C5
	MOV EAX, EDX
loc_100AF8B3:
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF8C1
	MOV EAX, EDI
	JMP loc_100AF8B3
loc_100AF8C1:
	MOV DWORD PTR [EBX],EAX
	JMP loc_100AF8CE
loc_100AF8C5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_100AF8CE:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_100AF96A
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100AF8FF
	MOV EAX, EDX
loc_100AF8EC:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF8FB
	MOV EAX, EBX
	JMP loc_100AF8EC
loc_100AF8FB:
	MOV DWORD PTR [EDI],EAX
	JMP loc_100AF96A
loc_100AF8FF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_100AF96A
loc_100AF90A:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_100AF91E
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_100AF933
loc_100AF91E:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_100AF933:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AF94D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AF94D
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_100AF94F
loc_100AF94D:
	MOV DWORD PTR [EAX],ECX
loc_100AF94F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x10
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x10]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_100AF96A:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_100AFC13
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_100AFC0C
loc_100AF980:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_100AFC0C
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_100AFA0B
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_100AF9F0
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EAX+0x08],EDI
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AF9C7
	MOV DWORD PTR [EDI+0x04],EAX
loc_100AF9C7:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_100AF9E3
	MOV EDI,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDI],EAX
	JZ loc_100AF9E3
	MOV DWORD PTR [EDI+0x08],EBP
	JMP loc_100AF9E5
loc_100AF9E3:
	MOV DWORD PTR [EDI],EBP
loc_100AF9E5:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100AF9F0:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100AFA94
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100AFA94
	JMP loc_100AFA7A
loc_100AFA0B:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_100AFA61
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX]
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EAX],EDI
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFA38
	MOV DWORD PTR [EDI+0x04],EAX
loc_100AFA38:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_100AFA55
	MOV EDI,DWORD PTR [EAX+0x04]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JZ loc_100AFA55
	MOV EDI,DWORD PTR [EAX+0x04]
loc_100AFA55:
	MOV DWORD PTR [EDI],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_100AFA61:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100AFB5E
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100AFB5E
loc_100AFA7A:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_100AF980
	JMP FAR loc_100AFC0C
loc_100AFA94:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_100AFAF0
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFAC2
	MOV DWORD PTR [EAX+0x04],EDI
loc_100AFAC2:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AFAE2
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JNZ loc_100AFAE2
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_100AFAE4
loc_100AFAE2:
	MOV DWORD PTR [EAX],EBX
loc_100AFAE4:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100AFAF0:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFB22
	MOV DWORD PTR [EAX+0x04],EDI
loc_100AFB22:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AFB52
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AFB46
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_100AFC0C
loc_100AFB46:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_100AFC0C
loc_100AFB52:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_100AFC0C
loc_100AFB5E:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_100AFBB4
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFB8C
	MOV DWORD PTR [EAX+0x04],EDI
loc_100AFB8C:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AFBA8
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100AFBA8
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_100AFBAA
loc_100AFBA8:
	MOV DWORD PTR [EAX],EBX
loc_100AFBAA:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_100AFBB4:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFBE5
	MOV DWORD PTR [EAX+0x04],EBX
loc_100AFBE5:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100AFC04
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100AFC04
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_100AFC06
loc_100AFC04:
	MOV DWORD PTR [EAX],EDI
loc_100AFC06:
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EBX+0x04],EDI
loc_100AFC0C:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_100AFC13:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100AFC40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EDI, EBX
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x113F0]
	JZ loc_100AFC73
loc_100AFC53:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAEC40_sub_100AFC40])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x113F0]
	JNZ loc_100AFC53
loc_100AFC73:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100AFCC1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAE6D0_loc_100AF6D0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AFD27()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AFD9F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100AFE29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAFBD0_loc_100B0BD0])
}
}

__declspec(naked) DWORD LEGO1_sub_100AFE81()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAEC80_loc_100AFC80])
}
}

__declspec(naked) DWORD LEGO1_sub_100AFE90()
{
	enum{
		var_B8 = -0xB8,
		var_9C = -0x9C,
		var_94 = -0x94,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAF078_proc_100B0078]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000A8
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	MOV ESI, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA EDX,DWORD PTR [EBP+var_B8+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EDX
	MOV DWORD PTR [EBP+var_9C+0x4],ESI
	MOV WORD PTR SS:[EBP+var_94+0x4],0xFFFE
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(DWORD PTR [EAX+0x24])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.mAF082_sub_100B0082])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x28]
	TEST EAX, EAX
	JZ loc_100AFF31
	CMP DWORD PTR [EAX+0x08],0x00
	JZ loc_100AFF27
	XOR ESI, ESI
loc_100AFF09:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x28]
	MOV EDX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EDX+0x08],ESI
	JZ loc_100AFF27
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x28]
	CMP DWORD PTR [ECX+0x08],ESI
	JNZ loc_100AFF09
loc_100AFF27:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x28]
	MOV BYTE PTR [ECX+0x3C],0x00
loc_100AFF31:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x38]
	TEST ECX, ECX
	JZ loc_100AFF41
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF41:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x30]
	TEST ECX, ECX
	JZ loc_100AFF51
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF51:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x34]
	TEST ECX, ECX
	JZ loc_100AFF61
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF61:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x2C]
	TEST ECX, ECX
	JZ loc_100AFF71
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF71:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x40]
	TEST ECX, ECX
	JZ loc_100AFF81
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF81:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x3C]
	TEST ECX, ECX
	JZ loc_100AFF91
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFF91:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_100AFFA1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFFA1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x20]
	TEST ECX, ECX
	JZ loc_100AFFB1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFFB1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x28]
	TEST ECX, ECX
	JZ loc_100AFFC1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFFC1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x24]
	TEST ECX, ECX
	JZ loc_100AFFD1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100AFFD1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x44]
	TEST EAX, EAX
	JZ loc_100B0051
	CMP DWORD PTR [EAX+0x0C],0x00
	JZ loc_100B002C
loc_100AFFE1:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x44]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	LEA EDX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAE7E0_sub_100AF7E0])
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JZ loc_100B0020
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAF068_sub_100B0068])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100B0020:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x44]
	CMP DWORD PTR [ECX+0x0C],0x00
	JNZ loc_100AFFE1
loc_100B002C:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x44]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	TEST ECX, ECX
	JZ loc_100B0051
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAF070_sub_100B0070])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100B0051:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(DWORD PTR [EAX+0x14])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100B0068()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0070()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAEE40_loc_100AFE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0082()
{
	enum{
		arg1217179 = 0x4A4A6C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100B0090(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX, 0xFFFFFFFF
	MOV EDX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [EDX+0x20],0x00
	JZ loc_100B00B1
	CMP DWORD PTR [EDX+0x1C],EAX
	JZ loc_100B00B1
	MOV ECX,DWORD PTR [ECX+0x40]
	TEST ECX, ECX
	JZ loc_100B00B1
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mB89B0_sub_100B99B0])
loc_100B00B1:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100B00C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [ECX+0x40]
	TEST ECX, ECX
	JZ loc_100B00D1
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB89F0_sub_100B99F0])
loc_100B00D1:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100B02C1()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAF630_loc_100B0630])
}
}

__declspec(naked) DWORD LEGO1_sub_100B02EB()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAF4A0_loc_100B04A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0489()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD LEGO1_sub_100B04E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0619()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0671()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD LEGO1__GetInstance_MxOmni__SAPAV1_XZ()
{
__asm{
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x115B0]
	RET
}
}

__declspec(naked) DWORD LEGO1__DestroyInstance_MxOmni__SAXXZ()
{
__asm{
	CMP DWORD PTR [offset LEGO1_data + 0x115B0],0x00
	JZ loc_100B06AF
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x115B0]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [offset LEGO1_data + 0x115B0],0x00000000
loc_100B06AF:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100B06B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAF7CF_proc_100B07CF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg2+0x4]
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV EDX, ESI
	MOV EAX,DWORD PTR [EDI+0x10]
loc_100B06D9:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_100B06F9
	OR CL, CL
	JZ loc_100B06F5
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_100B06F9
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100B06D9
loc_100B06F5:
	XOR EAX, EAX
	JMP loc_100B06FE
loc_100B06F9:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100B06FE:
	TEST EAX, EAX
	JNZ loc_100B0709
	MOV AL, 0x01
	JMP FAR loc_100B07AE
loc_100B0709:
	PUSH offset [LEGO1_data.m11DBC_str]
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JZ FAR loc_100B07AC
	MOV EDI,DWORD PTR [EDI+0x00000098]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m3E50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
loc_100B0757:
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JNZ loc_100B0764
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100B076A
loc_100B0764:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100B076A:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_100B07A0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_100B07A0
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAF6B0_sub_100B06B0])
	ADD ESP, 0x08
	TEST AL, AL
	JZ loc_100B0757
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAF7D9_sub_100B07D9])
	MOV AL, 0x01
	JMP loc_100B07AE
loc_100B07A0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAF7D9_sub_100B07D9])
loc_100B07AC:
	XOR AL, AL
loc_100B07AE:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100B07D9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100B07F0(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAF865_proc_100B0865]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x48]
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EAX+0x04],0x02
	JZ loc_100B0849
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mAF86F_sub_100B086F])
	XOR EAX, EAX
loc_100B0838:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100B0849:
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAF880_sub_100B0880])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAF86F_sub_100B086F])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	JMP loc_100B0838
}
}

__declspec(naked) DWORD LEGO1_sub_100B086F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100B0880(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EBX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [EBX+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB8870_sub_100B9870])
	TEST EAX, EAX
	JZ loc_100B08D9
	LEA EDI,DWORD PTR [EAX+0x54]
	PUSH 0x00
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_100B08D9
	PUSH offset [LEGO1_data.m700_str]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mAF6B0_sub_100B06B0])
	ADD ESP, 0x08
	TEST AL, AL
	JNZ loc_100B08D9
	PUSH 0x01
	MOV ECX, EDI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mBEA80_sub_100BFA80])
	TEST EAX, EAX
	JZ loc_100B08D9
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX])
loc_100B08D9:
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_100B08E6
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100B08E6:
	MOV ECX,DWORD PTR [ESI+0x0C]
	TEST ECX, ECX
	JZ loc_100B08F3
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100B08F3:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1__GetHD_MxOmni__SAPBDXZ()
{
__asm{
	MOV EAX, offset LEGO1_data + 0x115B8
	RET
}
}

__declspec(naked) DWORD LEGO1__SetHD_MxOmni__SAXPBD_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ECX, 0xFFFFFFFF
	PUSH EDI
	SUB EAX, EAX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, offset LEGO1_data + 0x115B8
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1__GetCD_MxOmni__SAPBDXZ()
{
__asm{
	MOV EAX, offset LEGO1_data + 0x119B8
	RET
}
}

__declspec(naked) DWORD LEGO1__SetCD_MxOmni__SAXPBD_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ECX, 0xFFFFFFFF
	PUSH EDI
	SUB EAX, EAX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, offset LEGO1_data + 0x119B8
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1__IsSound3D_MxOmni__SAEXZ()
{
__asm{
	MOV AL, BYTE PTR [offset LEGO1_data + 0x11DB8]
	RET
}
}

__declspec(naked) DWORD LEGO1__SetSound3D_MxOmni__SAXE_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	MOV BYTE PTR [offset LEGO1_data + 0x11DB8], AL
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100B09A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x40]
	CALL_LONG(offset [LEGO1_text.mB8B30_sub_100B9B30])
	TEST AL, AL
	JZ loc_100B09CA
	MOV EAX,DWORD PTR [ESI+0x28]
	MOV EAX,DWORD PTR [EAX+0x08]
	TEST EAX, EAX
	JZ loc_100B09C4
	CMP DWORD PTR [EAX+0x08],0x00
	JNZ loc_100B09CA
loc_100B09C4:
	MOV AL, 0x01
	POP ESI
	RETN 0x0004
loc_100B09CA:
	XOR AL, AL
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100B09D0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x64],0x00
	JNZ loc_100B09F7
	MOV ECX,DWORD PTR [ESI+0x3C]
	TEST ECX, ECX
	JZ loc_100B09F7
	CMP DWORD PTR [ESI+0x30],0x00
	JZ loc_100B09F7
	CALL_LONG(offset [LEGO1_text.mAD160_sub_100AE160])
	MOV ECX,DWORD PTR [ESI+0x30]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x34])
	MOV BYTE PTR [ESI+0x64],0x01
loc_100B09F7:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100B0A00()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x64],0x00
	JZ loc_100B0A27
	MOV ECX,DWORD PTR [ESI+0x3C]
	TEST ECX, ECX
	JZ loc_100B0A27
	CMP DWORD PTR [ESI+0x30],0x00
	JZ loc_100B0A27
	CALL_LONG(offset [LEGO1_text.mAD180_sub_100AE180])
	MOV ECX,DWORD PTR [ESI+0x30]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x38])
	MOV BYTE PTR [ESI+0x64],0x00
loc_100B0A27:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1___0MxOmniCreateFlags__QAE_XZ()
{
__asm{
	MOV AL,BYTE PTR [ECX]
	OR AL, 0x01
	MOV BYTE PTR [ECX],AL
	OR AL, 0x02
	MOV BYTE PTR [ECX],AL
	OR AL, 0x04
	MOV BYTE PTR [ECX],AL
	OR AL, 0x08
	MOV BYTE PTR [ECX],AL
	OR AL, 0x10
	MOV BYTE PTR [ECX],AL
	OR AL, 0x20
	MOV BYTE PTR [ECX],AL
	OR AL, 0x40
	MOV BYTE PTR [ECX],AL
	OR AL, 0x80
	MOV BYTE PTR [ECX],AL
	MOV AL,BYTE PTR [ECX+0x01]
	OR AL, 0x02
	MOV BYTE PTR [ECX+0x01],AL
	OR AL, 0x04
	MOV BYTE PTR [ECX+0x01],AL
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100B0AD4()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x18
	JMP_LONG(offset [LEGO1_text.mBDD50___1MxVideoParam__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0ADF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0AF4()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF360_loc_10010360])
}
}

__declspec(naked) DWORD __stdcall LEGO1___0MxOmniCreateParam__QAE_PBDPAUHWND____AAVMxVideoParam__VMxOmniCreateFlags___Z(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mAFBB0_proc_100B0BB0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m16E8_ptr]
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x18]
	MOV ESI, ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mBDC70___0MxVideoParam__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	LEA ECX,DWORD PTR [ESI+0x3C]
	CALL_LONG(offset [LEGO1_text.mAFA30___0MxOmniCreateFlags__QAE_XZ])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EBX
	PUSH EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m8218_ptr]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	PUSH ECX
	MOV DWORD PTR [ESI+0x14],EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mBDDE0___4MxVideoParam__QAEAAV0_ABV0__Z])
	MOV CX,WORD PTR SS:[EBP+arg4+0x4]
	MOV EAX, ESI
	MOV WORD PTR DS:[ESI+0x3C],CX
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_100B0C8F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAECE0_loc_100AFCE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0D77()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAECE0_loc_100AFCE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100B0D80()
{
	enum{
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.mB014D_proc_100B114D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x34
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ESI, 0x08
	ADD EAX, 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI], 0x00000000
	MOV DWORD PTR [EAX], 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_3C+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x10
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x14
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x18
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x1C
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x20
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x24
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x28
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x2C
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	MOV BYTE PTR [EBP+var_8+0x4],0x0B
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x30
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00
	ADD EAX, 0x34
	PUSH offset [LEGO1_data.m740_str]
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	MOV DWORD PTR [EBP+var_44+0x4],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX], offset [LEGO1_rdata.m8220_ptr]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	PUSH EAX
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x0D
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB00C1_sub_100B10C1])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	PUSH offset [LEGO1_data.m774_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0E
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_3C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB00B9_sub_100B10B9])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	PUSH offset [LEGO1_data.m760_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0F
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB00B1_sub_100B10B1])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	PUSH offset [LEGO1_data.m43C8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x10
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB00A9_sub_100B10A9])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	PUSH offset [LEGO1_data.m11E38_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x11
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB00A1_sub_100B10A1])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH offset [LEGO1_data.m184_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x12
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0099_sub_100B1099])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH offset [LEGO1_data.m7B4_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x13
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0091_sub_100B1091])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH offset [LEGO1_data.m11DF8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x14
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0089_sub_100B1089])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH offset [LEGO1_data.m11DCC_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x15
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0081_sub_100B1081])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH offset [LEGO1_data.m11E20_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x16
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0079_sub_100B1079])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH offset [LEGO1_data.m11E08_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x17
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0071_sub_100B1071])
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH offset [LEGO1_data.m11DE0_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x18
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	CALL_LONG(offset [LEGO1_text.mB0069_sub_100B1069])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	POP ESI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBP
	RET
}
}

