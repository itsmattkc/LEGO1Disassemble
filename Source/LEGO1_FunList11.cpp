#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_100686C4()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000084
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100686DC()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB740_loc_1000C740])
}
}

__declspec(naked) DWORD LEGO1_sub_100686F0()
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI, ECX
	XOR EBX, EBX
	MOV DWORD PTR [ESI+0x64],EBX
	MOV DWORD PTR [ESI+0x68],EBX
	MOV DWORD PTR [ESI+0x6C],EBX
	MOV DWORD PTR [ESI+0x74],EBX
	LEA ECX,DWORD PTR [ESI+0x000000A8]
	MOV DWORD PTR [ESI+0x70],EBX
	MOV DWORD PTR [ESI+0x78],EBX
	MOV DWORD PTR [ESI+0x7C],EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x2C])
	MOV DWORD PTR [ESI+0x000000A4],EBX
	MOV DWORD PTR [ESI+0x00000080],EBX
	LEA ECX,DWORD PTR [ESI+0x00000084]
	MOV BYTE PTR [ESI+0x00000095],BL
	MOV DWORD PTR [ESI+0x00000088],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x00000098],EBX
	CALL_LONG(offset [LEGO1_text.mAC7E0_sub_100AD7E0])
	MOV WORD PTR DS:[ESI+0x0000009C],BX
	MOV DWORD PTR [ESI+0x0000008C],EBX
	MOV DWORD PTR [ESI+0x00000090],EBX
	MOV BYTE PTR [ESI+0x00000094],BL
	MOV BYTE PTR [ESI+0x00000096],0x01
	MOV DWORD PTR [ESI+0x000000A0],EBX
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10068770(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m679A8_proc_100689A8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	LEA EAX,DWORD PTR [ECX+0x20]
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [EDX+0x64]
	TEST ECX, ECX
	JZ loc_100687B4
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100687B4:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x68]
	TEST EAX, EAX
	JZ loc_100687C7
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100687C7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x70]
	TEST ECX, ECX
	JZ loc_100687D7
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100687D7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x74],0x00
	JZ loc_100687F7
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m69A60_sub_1006AA60])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x74]
	TEST ECX, ECX
	JZ loc_100687F7
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100687F7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x78]
	TEST EAX, EAX
	JZ loc_1006880A
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006880A:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x00000098],0x00
	JZ FAR loc_100688E9
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000098]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	CMP EDX, EAX
	JZ FAR loc_100688C4
loc_1006883A:
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	PUSH offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EDI+0x0C]
	ADD EDI, 0x0C
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006888B
loc_10068878:
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],ECX
	JZ loc_10068886
	MOV EAX, ECX
	JMP loc_10068878
loc_10068886:
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	JMP loc_100688AF
loc_1006888B:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_100688A4
loc_10068896:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10068896
loc_100688A4:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100688AF
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_100688AF:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX+0x00000098]
	CMP DWORD PTR [EDX+0x04],ECX
	JNZ FAR loc_1006883A
loc_100688C4:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000098]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	TEST ECX, ECX
	JZ loc_100688E9
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m679A0_sub_100689A0])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100688E9:
	XOR EBX, EBX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x00000090],EBX
	JZ loc_1006893E
	XOR ESI, ESI
	CMP BYTE PTR [EAX+0x00000094],BL
	JBE loc_1006892C
loc_10068900:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000090]
	MOV EAX,DWORD PTR [EBX+ECX]
	TEST EAX, EAX
	JZ loc_10068919
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10068919:
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EBX, 0x04
	INC ESI
	MOV CL,BYTE PTR [EAX+0x00000094]
	CMP ECX, ESI
	JG loc_10068900
loc_1006892C:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000090]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006893E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x0000008C]
	TEST EAX, EAX
	JZ loc_10068954
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10068954:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x000000A0]
	TEST EAX, EAX
	JZ loc_1006896A
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006896A:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m676F0_sub_100686F0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m679B2_sub_100689B2])
	CMP BYTE PTR [EBP+arg1+0x4],0x00
	JNZ loc_1006898E
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB17B0_sub_100B27B0])
loc_1006898E:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100689A0()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m679C0_loc_100689C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100689B2()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10068A01()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m67A10_loc_10068A10])
}
}

__declspec(naked) DWORD LEGO1_sub_10068AE0()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EDX
	JZ loc_10068AFE
loc_10068AED:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068AFB
	MOV EDX, EAX
	JMP loc_10068AED
loc_10068AFB:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10068AFE:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10068B12
loc_10068B06:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10068B06
loc_10068B12:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10068B1B
	MOV DWORD PTR [ECX],EDX
loc_10068B1B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10068B20(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],ECX
	JZ loc_10068B4A
loc_10068B3C:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068B6F
	MOV ECX, EAX
	JMP loc_10068B3C
loc_10068B4A:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10068B66
loc_10068B56:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10068B56
loc_10068B66:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10068B73
loc_10068B6F:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
loc_10068B73:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EBX
	JZ loc_10068BA7
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EDX
	JZ loc_10068BA3
loc_10068B8E:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068B9C
	MOV EDX, EAX
	JMP loc_10068B8E
loc_10068B9C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10068BB1
loc_10068BA3:
	MOV EDX, EBX
	JMP loc_10068BB1
loc_10068BA7:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10068BB1:
	CMP DWORD PTR [ESP+var_4+0x14],ECX
	JNZ FAR loc_10068C4A
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068BDB
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068BDB
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10068BDD
loc_10068BDB:
	MOV DWORD PTR [EAX],EDX
loc_10068BDD:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10068C0E
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7680]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10068C05
	MOV EDI, EDX
loc_10068BF3:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068C01
	MOV EDI, EAX
	JMP loc_10068BF3
loc_10068C01:
	MOV DWORD PTR [EBX],EDI
	JMP loc_10068C0E
loc_10068C05:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10068C0E:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_10068CA8
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7680]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068C3F
	MOV EAX, EDX
loc_10068C2C:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EBX
	JZ loc_10068C3B
	MOV EAX, EBX
	JMP loc_10068C2C
loc_10068C3B:
	MOV DWORD PTR [EDI],EAX
	JMP loc_10068CA8
loc_10068C3F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_10068CA8
loc_10068C4A:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_10068C5E
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10068C73
loc_10068C5E:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10068C73:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068C8D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068C8D
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10068C8F
loc_10068C8D:
	MOV DWORD PTR [EAX],ECX
loc_10068C8F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ECX+0x14],EBX
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EBP
loc_10068CA8:
	CMP DWORD PTR [ECX+0x14],0x01
	JNZ FAR loc_10068F48
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_10068F41
loc_10068CBE:
	CMP DWORD PTR [EDX+0x14],0x01
	JNZ FAR loc_10068F41
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_10068D49
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_10068D2E
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068D05
	MOV DWORD PTR [EAX+0x04],EDI
loc_10068D05:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068D21
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068D21
	MOV DWORD PTR [EAX+0x08],EBP
	JMP loc_10068D23
loc_10068D21:
	MOV DWORD PTR [EAX],EBP
loc_10068D23:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10068D2E:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10068DD2
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10068DD2
	JMP loc_10068DB8
loc_10068D49:
	CMP DWORD PTR [EDI+0x14],0x00
	JNZ loc_10068D9F
	MOV DWORD PTR [EDI+0x14],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068D76
	MOV DWORD PTR [EAX+0x04],EDI
loc_10068D76:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068D93
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068D93
	MOV EAX,DWORD PTR [EDI+0x04]
loc_10068D93:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_10068D9F:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10068E93
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ FAR loc_10068E93
loc_10068DB8:
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10068CBE
	JMP FAR loc_10068F41
loc_10068DD2:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_10068E2E
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068E00
	MOV DWORD PTR [EAX+0x04],EDI
loc_10068E00:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068E20
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JNZ loc_10068E20
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_10068E22
loc_10068E20:
	MOV DWORD PTR [EAX],EBX
loc_10068E22:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10068E2E:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068E60
	MOV DWORD PTR [EAX+0x04],EBX
loc_10068E60:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068E8A
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068E81
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10068F3E
loc_10068E81:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10068F3E
loc_10068E8A:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10068F3E
loc_10068E93:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x14],0x01
	JNZ loc_10068EE9
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068EC1
	MOV DWORD PTR [EAX+0x04],EDI
loc_10068EC1:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068EDD
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10068EDD
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_10068EDF
loc_10068EDD:
	MOV DWORD PTR [EAX],EBX
loc_10068EDF:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_10068EE9:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+0x14],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x14],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_10068F1A
	MOV DWORD PTR [EAX+0x04],EBX
loc_10068F1A:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068F39
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10068F39
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_10068F3B
loc_10068F39:
	MOV DWORD PTR [EAX],EDI
loc_10068F3B:
	MOV DWORD PTR [EDI+0x08],EBX
loc_10068F3E:
	MOV DWORD PTR [EBX+0x04],EDI
loc_10068F41:
	MOV DWORD PTR [EDX+0x14],0x00000001
loc_10068F48:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10068F70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EDI, EBX
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EBX
	JZ loc_10068FA3
loc_10068F83:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m67F70_sub_10068F70])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EDI
	JNZ loc_10068F83
loc_10068FA3:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10068FB0(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6812F_proc_1006912F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	MOV DWORD PTR [EBP+var_14+0x4],0xFFFFFFFF
	PUSH EBX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98080_sub_10099080])
	PUSH 0x04
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_100690E6
	CMP DWORD PTR [EBP+var_30+0x4],0x11
	JNZ FAR loc_100690E6
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x000000A4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_100690E6
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_100690E6
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	ADD EAX, 0x04
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_100690E6
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	ADD EAX, 0x08
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ loc_100690E6
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ loc_100690E6
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ loc_100690E6
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100690C1
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m9FB30_sub_100A0B30])
loc_100690C1:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [ESI+0x64],EAX
	TEST EAX, EAX
	JZ loc_100690E6
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [EBP+var_28+0x4]
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH EDX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST EAX, EAX
	JNZ loc_100690E6
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_100690E6:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10069100
	MOV ECX,DWORD PTR [ESI+0x64]
	TEST ECX, ECX
	JZ loc_100690F9
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_100690F9:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m676F0_sub_100686F0])
loc_10069100:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m68139_sub_10069139])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_10069122()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10069139()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10069150(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x2C]
	PUSH EBP
	LEA EAX,DWORD PTR [ESI+0x01]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m83C00_sub_10084C00])
	ADD ESP, 0x04
	TEST AL, AL
	JZ loc_100691B0
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBP, EAX
	TEST EBP, EBP
	JZ FAR loc_1006929D
	LEA EDI,DWORD PTR [ESI+0x01]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EBP
	REP MOVSD
	MOV ECX, EAX
	JMP FAR loc_10069298
loc_100691B0:
	MOV EAX,DWORD PTR [EBX+0x1C]
	LEA EDX,DWORD PTR [ESP+var_20+0x30]
	MOVSX ECX,WORD PTR [EAX+0x24]
	PUSH ECX
	PUSH offset [LEGO1_data.m40F0]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6A8F0_sub_1006B8F0])
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	MOV EDI, ESI
	SUB EAX, EAX
	LEA EDX,DWORD PTR [ECX-0x01]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	LEA EDI,DWORD PTR [ESP+var_20+0x30]
	SUB EAX, EAX
	LEA EBP,DWORD PTR [EDX+ECX-0x01]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	LEA EDX,DWORD PTR [EBP+ECX+arg1217224-0x4A4B21]
	INC EDX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBP, EAX
	TEST EBP, EBP
	JZ FAR loc_1006929D
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EBP
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	LEA EDI,DWORD PTR [ESP+var_20+0x30]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI, EBP
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6A8F0_sub_1006B8F0])
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI, EBP
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
loc_10069298:
	AND ECX, 0x03
	REP MOVSB
loc_1006929D:
	MOV EAX, EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100692B0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m685A6_proc_100695A6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x18
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m68356_loc_10069356])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C30_ptr]
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C48_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [ESI+0x10],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C60_ptr]
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C78_ptr]
	JMP_LONG(offset [LEGO1_text.m68358_loc_10069358])
}
}

__declspec(naked) DWORD LEGO1_proc_10069336()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1006933E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E390_loc_1005F390])
}
}

__declspec(naked) DWORD LEGO1_proc_10069346()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E3F0_loc_1005F3F0])
}
}

__declspec(naked) DWORD LEGO1_proc_1006934E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E4F0_loc_1005F4F0])
}
}

__declspec(naked) DWORD LEGO1_loc_10069356()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m68358_loc_10069358])
}
}

__declspec(naked) DWORD LEGO1_loc_10069358()
{
	enum{
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	TEST EAX, EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ECX+0x74],EAX
	JZ FAR loc_10069589
	MOV EAX,DWORD PTR [ECX+0x64]
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],0x00000000
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],EDX
	TEST EDX, EDX
	JZ FAR loc_10069589
loc_10069385:
	MOV ESI,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH 0x00
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.m9FF20_sub_100A0F20])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m687C0_sub_100697C0])
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	XOR ESI, ESI
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.m9FF40_sub_100A0F40])
	CMP EAX, 0x02
	JNZ loc_100693F1
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CMP BYTE PTR [EAX],0x2A
	JNZ loc_100693C0
	INC EAX
	JMP loc_100693C3
loc_100693C0:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
loc_100693C3:
	PUSH 0x01
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82500_sub_10083500])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ FAR loc_1006956E
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CMP BYTE PTR [EAX],0x2A
	JNZ FAR loc_10069520
	MOV BYTE PTR [ESI+0x0C],0x00
	JMP FAR loc_10069520
loc_100693F1:
	CMP EAX, 0x04
	JNZ loc_10069469
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	INC EDI
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EBX
	REP MOVSD
	MOV ECX, EAX
	PUSH EBX
	AND ECX, 0x03
	REP MOVSB
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m68150_sub_10069150])
	MOV EDI, EAX
	PUSH 0x01
	PUSH EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84A80_sub_10085A80])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ FAR loc_1006950E
	JMP FAR loc_1006950A
loc_10069469:
	CMP EAX, 0x03
	JNZ FAR loc_10069520
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX, 0xFFFFFFFF
	INC EDI
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EBX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI, EBX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	LEA EAX,DWORD PTR [EBX+ECX-0x02]
	CMP EAX, EBX
	JBE loc_100694DD
loc_100694C4:
	MOV CL,BYTE PTR [EAX]
	CMP CL, 0x30
	JL loc_100694D0
	CMP CL, 0x39
	JLE loc_100694D5
loc_100694D0:
	CMP CL, 0x5F
	JNZ loc_100694DD
loc_100694D5:
	MOV BYTE PTR [EAX],0x00
	DEC EAX
	CMP EAX, EBX
	JA loc_100694C4
loc_100694DD:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m68150_sub_10069150])
	MOV EDI, EAX
	PUSH 0x01
	PUSH EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1006950E
loc_1006950A:
	MOV BYTE PTR [ESI+0x0C],0x00
loc_1006950E:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10069520:
	TEST ESI, ESI
	JZ loc_1006956E
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH 0x0C
	MOV EBX,DWORD PTR [ECX+0x74]
	MOV EDI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000005
	TEST EAX, EAX
	JZ loc_10069553
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x08],0x00000000
	JMP loc_10069555
loc_10069553:
	XOR EAX, EAX
loc_10069555:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	TEST EDI, EDI
	JZ loc_10069565
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_10069568
loc_10069565:
	MOV DWORD PTR [EBX+0x10],EAX
loc_10069568:
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
loc_1006956E:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	INC DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	CMP EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JB FAR loc_10069385
loc_10069589:
	MOV EAX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10069599()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100695C0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m687A1_proc_100697A1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000110
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x18
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m68669_loc_10069669])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C30_ptr]
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C48_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [ESI+0x10],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C60_ptr]
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m5E3E0_proc_1005F3E0]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4C78_ptr]
	JMP_LONG(offset [LEGO1_text.m6866B_loc_1006966B])
}
}

__declspec(naked) DWORD LEGO1_proc_10069649()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_10069651()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E390_loc_1005F390])
}
}

__declspec(naked) DWORD LEGO1_proc_10069659()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E3F0_loc_1005F3F0])
}
}

__declspec(naked) DWORD LEGO1_proc_10069661()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5E4F0_loc_1005F4F0])
}
}

__declspec(naked) DWORD LEGO1_loc_10069669()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m6866B_loc_1006966B])
}
}

__declspec(naked) DWORD LEGO1_loc_1006966B()
{
	enum{
		arg1217153 = 0x4A4A04,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	TEST EAX, EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ECX+0x70],EAX
	JZ FAR loc_10069791
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ECX+0x00000088]
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD EAX, 0x08
	XOR EBX, EBX
	MOV EDX,DWORD PTR [ECX+0x64]
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	CMP EAX, EBX
	JZ FAR loc_10069791
loc_100696AD:
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.m9FF20_sub_100A0F20])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m688B0_sub_100698B0])
	TEST AL, AL
	JNZ FAR loc_10069787
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.m9FF40_sub_100A0F40])
	CMP EAX, 0x05
	JZ loc_100696E8
	CMP EAX, 0x06
	JNZ FAR loc_10069787
loc_100696E8:
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [ECX+0x64]
	CALL_LONG(offset [LEGO1_text.m9FF20_sub_100A0F20])
	MOV EDI, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	MOV EDI,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB EAX, EAX
	LEA EDX,DWORD PTR [ECX-0x01]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+arg1217153-0x4A4B20]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	LEA ESI,DWORD PTR [EDX+EBP+arg1217153-0x4A4B21]
loc_10069734:
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B6A0_sub_1008C6A0])
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ loc_10069749
	CMP BYTE PTR [ESI],0x5F
	JNZ loc_1006974F
loc_10069749:
	MOV BYTE PTR [ESI],0x00
	DEC ESI
	JMP loc_10069734
loc_1006974F:
	LEA EAX,DWORD PTR [EBP+arg1217153-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	LEA EAX,DWORD PTR [EBP+arg1217153-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x00
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m688B0_sub_100698B0])
loc_10069787:
	INC EBX
	CMP EBX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JB FAR loc_100696AD
loc_10069791:
	MOV EAX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100697C0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	PUSH EBP
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	CMP BYTE PTR [EAX],0x00
	JZ loc_100697DC
	MOV EBX, EAX
loc_100697DC:
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	TEST ESI, ESI
	JZ loc_100697F6
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	LEA EDX,DWORD PTR [ECX-0x01]
	JMP loc_100697F8
loc_100697F6:
	XOR EDX, EDX
loc_100697F8:
	MOV EDI, EBX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	LEA EAX,DWORD PTR [EDX+ECX+0x01]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX, EAX
	TEST EDX, EDX
	JZ FAR loc_100698A1
	MOV BYTE PTR [EDX],0x00
	TEST ESI, ESI
	JZ loc_10069874
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EDX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI, offset LEGO1_data + 0x7684
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EBP, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI, EDX
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
loc_10069874:
	MOV EDI, EBX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EBX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI, EDX
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EBX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBX
	AND ECX, 0x03
	REP MOVSB
loc_100698A1:
	MOV EAX, EDX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100698B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m689BF_proc_100699BF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV BYTE PTR [EBP+var_14+0x3],0x00
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m687C0_sub_100697C0])
	CMP BYTE PTR [EAX],0x2A
	MOV ESI, EAX
	JNZ loc_100698FD
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m68150_sub_10069150])
	MOV EDI, EAX
	PUSH ESI
	MOV ESI, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100698FD:
	TEST ESI, ESI
	JZ loc_10069946
	CMP BYTE PTR [ESI],0x00
	JZ loc_10069946
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [EBX+0x08],0x00
	JBE loc_10069946
	MOV ECX,DWORD PTR [EBX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, ECX
	JZ loc_10069946
loc_1006991B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	TEST EAX, EAX
	JZ loc_10069939
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10069965
loc_10069939:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBX+0x04],ECX
	JNZ loc_1006991B
loc_10069946:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV AL,BYTE PTR [EBP+var_14+0x3]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_10069965:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EAX+0x70]
	MOV ECX,DWORD PTR [EBX+0x14]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	JZ loc_10069999
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	PUSH EDI
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6DA00_sub_1006EA00])
	JMP loc_1006999B
loc_10069999:
	XOR EAX, EAX
loc_1006999B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100699B0
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x08],EAX
	JMP loc_100699B3
loc_100699B0:
	MOV DWORD PTR [EBX+0x10],EAX
loc_100699B3:
	MOV BYTE PTR [EBP+var_14+0x3],0x01
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP loc_10069946
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100699E0(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m68AF6_proc_10069AF6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x70]
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_10069A49:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_10069A56
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10069A5C
loc_10069A56:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10069A5C:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_10069AA3
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_10069AA3
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m687C0_sub_100697C0])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_10069A98
	PUSH EDI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10069AC4
loc_10069A98:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_10069A49
loc_10069AA3:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m68B00_sub_10069B00])
	XOR EAX, EAX
loc_10069AB1:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_10069AC4:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m68B00_sub_10069B00])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	JMP loc_10069AB1
}
}

__declspec(naked) DWORD LEGO1_sub_10069B00()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD LEGO1_sub_10069B10()
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m68D67_proc_10069D67]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	MOV AL,BYTE PTR [EBP+var_18+0x3]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	MOV BYTE PTR [EBP+var_2C+0x4],AL
	PUSH ESI
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	PUSH EDI
	XOR ESI, ESI
	MOV BYTE PTR [EBP+var_28+0x1],CL
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x7688],ESI
	JNZ loc_10069B70
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x7688], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7688]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10069B70:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m68D4F_sub_10069D4F])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x7688]
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	XOR ESI, ESI
	MOV DWORD PTR [EAX+0x18],ESI
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV DWORD PTR [EAX],EAX
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EDX+0x08],EDX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [EDX+0x0000008C]
	TEST EDI, EDI
	JZ loc_10069BCC
	XOR EAX, EAX
	MOV AL,BYTE PTR [EDX+0x00000094]
	LEA ECX,DWORD PTR [EAX*4+0x00000000]
	XOR EAX, EAX
	SHR ECX, 0x02
	REP STOSD
loc_10069BCC:
	PUSH 0x00
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX+0x64]
	LEA EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m693C0_sub_1006A3C0])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX+0x68]
	TEST EAX, EAX
	JZ loc_10069C01
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EDX+0x6C],0x00000000
loc_10069C01:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EDX+0x6C],0x00000000
	LEA ECX,DWORD PTR [EAX*4+0x00000004]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [EBP+var_20+0x4]
	MOV EDI, EAX
	MOV DWORD PTR [EDX+0x68],EAX
	LEA ECX,DWORD PTR [EBX*4+0x00000004]
	SHR ECX, 0x02
	XOR EAX, EAX
	REP STOSD
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP EAX, ECX
	JZ FAR loc_10069D33
loc_10069C47:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [EAX+0x14]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV EAX,DWORD PTR [EDX+0x68]
	MOV DWORD PTR [EBX*4+EAX],ECX
	MOV EAX,DWORD PTR [EDX+0x68]
	MOV ECX,DWORD PTR [EBX*4+EAX]
	CMP DWORD PTR [ECX+0x000000E4],0x00
	JZ loc_10069CD2
	XOR ESI, ESI
	CMP BYTE PTR [EDX+0x00000094],0x00
	JBE loc_10069CD2
	XOR EDI, EDI
loc_10069C75:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX+0x0000008C]
	CMP DWORD PTR [EDI+EAX],0x00
	JNZ loc_10069CAB
	MOV EAX,DWORD PTR [EDX+0x00000090]
	MOV ECX,DWORD PTR [EDI+EAX]
	TEST ECX, ECX
	JZ loc_10069CAB
	MOV EAX,DWORD PTR [EDX+0x68]
	MOV EDX,DWORD PTR [EBX*4+EAX]
	MOV EAX,DWORD PTR [EDX+0x000000E4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10069CC0
loc_10069CAB:
	XOR EAX, EAX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	ADD EDI, 0x04
	INC ESI
	MOV AL,BYTE PTR [EDX+0x00000094]
	CMP EAX, ESI
	JG loc_10069C75
	JMP loc_10069CD2
loc_10069CC0:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX+0x68]
	MOV ECX,DWORD PTR [EBX*4+EAX]
	MOV EAX,DWORD PTR [EDX+0x0000008C]
	MOV DWORD PTR [ESI*4+EAX],ECX
loc_10069CD2:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EDX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069CFD
loc_10069CEF:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069D1E
	MOV ECX, EAX
	JMP loc_10069CEF
loc_10069CFD:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10069D16
loc_10069D08:
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10069D08
loc_10069D16:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10069D21
loc_10069D1E:
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
loc_10069D21:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	INC DWORD PTR [EDX+0x6C]
	CMP DWORD PTR [EBP+var_28+0x4],EAX
	JNZ FAR loc_10069C47
loc_10069D33:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m68D71_sub_10069D71])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10069D4F()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B22]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10069D71()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m69320_loc_1006A320])
}
}

__declspec(naked) DWORD LEGO1_sub_10069E50()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069E6E
loc_10069E5D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069E6B
	MOV EDX, EAX
	JMP loc_10069E5D
loc_10069E6B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10069E6E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10069E82
loc_10069E76:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10069E76
loc_10069E82:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10069E8B
	MOV DWORD PTR [ECX],EDX
loc_10069E8B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10069E90(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217230 = 0x4A4B38,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069EBA
loc_10069EAC:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069EDF
	MOV ECX, EAX
	JMP loc_10069EAC
loc_10069EBA:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10069ED6
loc_10069EC6:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10069EC6
loc_10069ED6:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10069EE3
loc_10069EDF:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
loc_10069EE3:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069F17
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069F13
loc_10069EFE:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069F0C
	MOV EDX, EAX
	JMP loc_10069EFE
loc_10069F0C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10069F21
loc_10069F13:
	MOV EDX, EBX
	JMP loc_10069F21
loc_10069F17:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10069F21:
	CMP DWORD PTR [ESP+var_4+0x14],ECX
	JNZ FAR loc_10069FBA
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10069F4B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10069F4B
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10069F4D
loc_10069F4B:
	MOV DWORD PTR [EAX],EDX
loc_10069F4D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10069F7E
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7688]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10069F75
	MOV EDI, EDX
loc_10069F63:
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069F71
	MOV EDI, EAX
	JMP loc_10069F63
loc_10069F71:
	MOV DWORD PTR [EBX],EDI
	JMP loc_10069F7E
loc_10069F75:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10069F7E:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_1006A01A
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7688]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10069FAF
	MOV EBX, EDX
loc_10069F9C:
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_10069FAB
	MOV EBX, EAX
	JMP loc_10069F9C
loc_10069FAB:
	MOV DWORD PTR [EDI],EBX
	JMP loc_1006A01A
loc_10069FAF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_1006A01A
loc_10069FBA:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_10069FCE
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10069FE3
loc_10069FCE:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10069FE3:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10069FFD
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10069FFD
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10069FFF
loc_10069FFD:
	MOV DWORD PTR [EAX],ECX
loc_10069FFF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x18
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x18]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x18],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_1006A01A:
	CMP DWORD PTR [ECX+0x18],0x01
	JNZ FAR loc_1006A2B8
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_1006A2B1
loc_1006A030:
	CMP DWORD PTR [EDX+0x18],0x01
	JNZ FAR loc_1006A2B1
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_1006A0B8
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x18],0x00
	JNZ loc_1006A09D
	MOV DWORD PTR [EDI+0x18],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A075
	MOV DWORD PTR [EDI+0x04],EBP
loc_1006A075:
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EBP
	JZ loc_1006A091
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EDI],EBP
	JZ loc_1006A091
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_1006A093
loc_1006A091:
	MOV DWORD PTR [EDI],EAX
loc_1006A093:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1006A09D:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006A143
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006A143
	JMP loc_1006A129
loc_1006A0B8:
	CMP DWORD PTR [EDI+0x18],0x00
	JNZ loc_1006A110
	MOV DWORD PTR [EDI+0x18],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A0E7
	MOV DWORD PTR [EDI+0x04],EBP
loc_1006A0E7:
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EBP
	JZ loc_1006A104
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EBP
	JZ loc_1006A104
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_1006A104:
	MOV DWORD PTR [EDI],EAX
	MOV DWORD PTR [EAX+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1006A110:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006A203
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006A203
loc_1006A129:
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_1006A030
	JMP FAR loc_1006A2B1
loc_1006A143:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ loc_1006A19E
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A171
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006A171:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A190
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A190
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1006A192
loc_1006A190:
	MOV DWORD PTR [EAX],EBX
loc_1006A192:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1006A19E:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x18]
	MOV DWORD PTR [EDI+0x18],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x18],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A1D0
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006A1D0:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A1FA
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A1F1
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006A2AE
loc_1006A1F1:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006A2AE
loc_1006A1FA:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006A2AE
loc_1006A203:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ loc_1006A259
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A231
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006A231:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A24D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A24D
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1006A24F
loc_1006A24D:
	MOV DWORD PTR [EAX],EBX
loc_1006A24F:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_1006A259:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x18]
	MOV DWORD PTR [EDI+0x18],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x18],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A28A
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006A28A:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A2A9
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A2A9
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1006A2AB
loc_1006A2A9:
	MOV DWORD PTR [EAX],EBX
loc_1006A2AB:
	MOV DWORD PTR [EBX+0x08],EDI
loc_1006A2AE:
	MOV DWORD PTR [EDI+0x04],EBX
loc_1006A2B1:
	MOV DWORD PTR [EDX+0x18],0x00000001
loc_1006A2B8:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006A2E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EDI, EBX
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A313
loc_1006A2F3:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m692E0_sub_1006A2E0])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x7688]
	JNZ loc_1006A2F3
loc_1006A313:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1006A361()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m69370_loc_1006A370])
}
}

__declspec(naked) DWORD LEGO1_sub_1006A3B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m68D80_loc_10069D80])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006A3C0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_C+0xC],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg3+0x18]
	PUSH EBP
	XOR EDI, EDI
	MOV EBP,DWORD PTR [ESP+arg2+0x1C]
	MOV DWORD PTR [ESP+var_4+0x1C],EDI
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	MOV EBX,DWORD PTR [EAX+0x04]
	TEST EBX, EBX
	JZ loc_1006A442
	MOV AL,BYTE PTR [EBX]
	CMP AL, 0x2D
	JZ loc_1006A442
	CMP AL, 0x2A
	JNZ loc_1006A3FD
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m68150_sub_10069150])
	MOV EBX, EAX
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
loc_1006A3FD:
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1006A40C
	MOV EAX,DWORD PTR [ESI+0x000000E4]
loc_1006A40C:
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m687C0_sub_100697C0])
	MOV EDI, EAX
	TEST ESI, ESI
	JNZ loc_1006A493
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m689E0_sub_100699E0])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1006A487
	PUSH ESI
loc_1006A42E:
	MOV EAX,DWORD PTR [ESP+var_8+0x20]
	PUSH EDI
	MOV ECX,DWORD PTR [ESP+arg1+0x24]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_C+0x2C]
	CALL_LONG(offset [LEGO1_text.m694F0_sub_1006A4F0])
loc_1006A442:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV EAX,DWORD PTR [ESP+var_4+0x20]
	ADD ESP, 0x04
	XOR EBX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	TEST EDI, EDI
	JLE loc_1006A47D
loc_1006A461:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV EDX,DWORD PTR [ESP+arg1+0x20]
	DB(0x90) 
	MOV ECX,DWORD PTR [EBX*4+EAX]
	INC EBX
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [ESP+var_C+0x28]
	CALL_LONG(offset [LEGO1_text.m693C0_sub_1006A3C0])
	CMP EBX, EDI
	JL loc_1006A461
loc_1006A47D:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x000C
loc_1006A487:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	MOV WORD PTR DS:[EAX+0x20],0x0000
	JMP loc_1006A442
loc_1006A493:
	PUSH ESI
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	TEST EAX, EAX
	JZ loc_1006A4A3
	PUSH EAX
	JMP loc_1006A42E
loc_1006A4A3:
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m689E0_sub_100699E0])
	TEST EAX, EAX
	JZ loc_1006A442
	MOV EAX,DWORD PTR [ESP+r+0x20]
	PUSH 0x00
	MOV ECX,DWORD PTR [ESP+var_10+0x24]
	PUSH EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m693C0_sub_1006A3C0])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV EAX,DWORD PTR [ESP+var_8+0x24]
	ADD ESP, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006A4F0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x3C]
	PUSH EDI
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [EDX+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A549
loc_1006A508:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV EDI,DWORD PTR [ESP+arg3+0x40]
loc_1006A50F:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDI]
	JNZ loc_1006A52F
	OR CL, CL
	JZ loc_1006A52B
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDI+0x01]
	JNZ loc_1006A52F
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR CL, CL
	JNZ loc_1006A50F
loc_1006A52B:
	XOR EAX, EAX
	JMP loc_1006A534
loc_1006A52F:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006A534:
	TEST EAX, EAX
	JL loc_1006A53E
	MOV EDX, ESI
	MOV ESI,DWORD PTR [ESI]
	JMP loc_1006A541
loc_1006A53E:
	MOV ESI,DWORD PTR [ESI+0x08]
loc_1006A541:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x7688]
	JNZ loc_1006A508
loc_1006A549:
	MOV DWORD PTR [ESP+var_34+0x40],EDX
	CMP DWORD PTR [EBX+0x04],EDX
	JZ loc_1006A586
	MOV ECX,DWORD PTR [ESP+arg3+0x40]
	MOV EAX,DWORD PTR [EDX+0x0C]
loc_1006A559:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_1006A579
	OR DL, DL
	JZ loc_1006A575
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_1006A579
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_1006A559
loc_1006A575:
	XOR EAX, EAX
	JMP loc_1006A57E
loc_1006A579:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006A57E:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	JGE loc_1006A591
loc_1006A586:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ESP+var_24+0x40],EAX
	LEA EAX,DWORD PTR [ESP+var_24+0x40]
loc_1006A591:
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBX+0x04],EAX
	JNZ FAR loc_1006A735
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [ESP+arg4+0x40]
	INC EAX
	MOV EDX,DWORD PTR [ESP+arg2+0x40]
	MOV WORD PTR DS:[EDX+0x20],AX
	MOV EDI,DWORD PTR [ESP+arg3+0x40]
	MOV DWORD PTR [ESP+var_18+0x40],EAX
	MOV DWORD PTR [ESP+var_1C+0x40],ECX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDI,DWORD PTR [ESP+arg3+0x44]
	MOV DWORD PTR [ESP+var_34+0x44],EAX
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [ESP+var_34+0x40]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [ESP+var_34+0x40]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ESP+var_34+0x40],EAX
	MOV EAX, 0x00000001
	MOV EDX,DWORD PTR [ESP+var_24+0x40]
	MOV ECX,DWORD PTR [ESP+var_20+0x40]
	MOV DWORD PTR [ESP+var_30+0x40],EDX
	MOV DWORD PTR [ESP+var_2C+0x40],ECX
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A66A
loc_1006A620:
	MOV EDI, ESI
	MOV ECX,DWORD PTR [ESP+var_34+0x40]
	MOV EDX,DWORD PTR [ESI+0x0C]
loc_1006A629:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1006A649
	OR AL, AL
	JZ loc_1006A645
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1006A649
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1006A629
loc_1006A645:
	XOR EAX, EAX
	JMP loc_1006A64E
loc_1006A649:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006A64E:
	TEST EAX, EAX
	SETL CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_1006A660
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_1006A662
loc_1006A660:
	MOV ESI,DWORD PTR [ESI]
loc_1006A662:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x7688]
	JNZ loc_1006A620
loc_1006A66A:
	CMP DWORD PTR [EBX+0x08],0x00
	JZ loc_1006A68E
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_8+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m697A0_sub_1006A7A0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP FAR loc_1006A718
loc_1006A68E:
	MOV DWORD PTR [ESP+var_28+0x40],EDI
	TEST EAX, EAX
	JZ loc_1006A6C1
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1006A6B8
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_10+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m697A0_sub_1006A7A0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP loc_1006A718
loc_1006A6B8:
	LEA ECX,DWORD PTR [ESP+var_28+0x40]
	CALL_LONG(offset [LEGO1_text.m69750_sub_1006A750])
loc_1006A6C1:
	MOV EAX,DWORD PTR [ESP+var_28+0x40]
	MOV EDX,DWORD PTR [ESP+var_34+0x40]
	MOV ECX,DWORD PTR [EAX+0x0C]
loc_1006A6CC:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1006A6EC
	OR AL, AL
	JZ loc_1006A6E8
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1006A6EC
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1006A6CC
loc_1006A6E8:
	XOR EAX, EAX
	JMP loc_1006A6F1
loc_1006A6EC:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006A6F1:
	TEST EAX, EAX
	JGE loc_1006A710
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_24+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m697A0_sub_1006A7A0])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP loc_1006A718
loc_1006A710:
	MOV EAX,DWORD PTR [ESP+var_28+0x40]
	MOV DWORD PTR [ESP+var_34+0x40],EAX
loc_1006A718:
	MOV EAX,DWORD PTR [ESP+var_1C+0x40]
	MOV ECX,DWORD PTR [ESP+var_18+0x40]
	MOV EDX,DWORD PTR [ESP+var_34+0x40]
	POP EDI
	ADD EDX, 0x10
	POP ESI
	POP EBX
	MOV DWORD PTR [EDX],EAX
	MOV DWORD PTR [EDX+0x04],ECX
	ADD ESP, 0x34
	RETN 0x0010
loc_1006A735:
	MOV EAX,DWORD PTR [EAX+0x14]
	MOV ECX,DWORD PTR [ESP+arg2+0x40]
	MOV WORD PTR DS:[ECX+0x20],AX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1006A750()
{
__asm{
	MOV EDX,DWORD PTR [ECX]
	CMP DWORD PTR [EDX+0x18],0x00
	JNZ loc_1006A766
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ loc_1006A766
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006A766:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A782
loc_1006A770:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A77F
	MOV EAX, EDX
	JMP loc_1006A770
loc_1006A77F:
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006A782:
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JNZ loc_1006A794
loc_1006A789:
	MOV DWORD PTR [ECX],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006A789
loc_1006A794:
	MOV DWORD PTR [ECX],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006A7A0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7688]
	MOV EDI, EAX
	ADD EDI, 0x0C
	MOV EDX,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7688]
	MOV DWORD PTR [EAX+0x08],EBX
	JZ loc_1006A7F1
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EBP,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI+0x08],EBP
loc_1006A7F1:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_1006A848
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JNZ loc_1006A848
	MOV EAX,DWORD PTR [EDX]
	MOV EDI,DWORD PTR [ECX+0x0C]
loc_1006A80A:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_1006A82A
	OR DL, DL
	JZ loc_1006A826
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_1006A82A
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1006A80A
loc_1006A826:
	XOR EAX, EAX
	JMP loc_1006A82F
loc_1006A82A:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006A82F:
	TEST EAX, EAX
	JL loc_1006A848
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006A86A
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006A86A
loc_1006A848:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_1006A85D
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006A86A
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006A86A
loc_1006A85D:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_1006A86A:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1006AA31
loc_1006A87A:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBP,DWORD PTR [EAX+0x18]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],0x00
	JNZ FAR loc_1006AA31
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX]
	CMP EBX, EAX
	JNZ FAR loc_1006A959
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EBX+0x18],0x00
	JZ FAR loc_1006AA06
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_1006A8E6
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A8C6
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006A8C6:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006A8E0
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006A8E0
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1006A8E2
loc_1006A8E0:
	MOV DWORD PTR [EAX],EDX
loc_1006A8E2:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006A8E6:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x18],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A918
	MOV DWORD PTR [EAX+0x04],EDX
loc_1006A918:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006A94C
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006A93F
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1006AA25
loc_1006A93F:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1006AA25
loc_1006A94C:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1006AA25
loc_1006A959:
	CMP DWORD PTR [EBX+0x18],0x00
	JZ FAR loc_1006AA06
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1006A9A1
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A97E
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006A97E:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006A99A
	MOV EAX,DWORD PTR [EDI]
	LEA EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBX],ECX
	JNZ loc_1006A99A
	MOV DWORD PTR [EBX],EDX
	JMP loc_1006A99C
loc_1006A99A:
	MOV DWORD PTR [EAX],EDX
loc_1006A99C:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006A9A1:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x18],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x7688]
	JZ loc_1006A9D3
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006A9D3:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A9FD
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006A9F4
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1006AA25
loc_1006A9F4:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1006AA25
loc_1006A9FD:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1006AA25
loc_1006AA06:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],0x00000001
	MOV DWORD PTR [EBX+0x18],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x18],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1006AA25:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_1006A87A
loc_1006AA31:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x18],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1006AA60()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m69B53_proc_1006AB53]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EBX, EBX
	MOV EDI,DWORD PTR [ESI+0x74]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1006AAC5:
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JNZ loc_1006AAD2
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1006AAD8
loc_1006AAD2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1006AAD8:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_1006AB1F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1006AB1F
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP BYTE PTR [ESI+0x00000096],BL
	MOV EDI,DWORD PTR [EAX+0x000000E4]
	JNZ loc_1006AB10
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m83C00_sub_10084C00])
	ADD ESP, 0x04
	TEST AL, AL
	JNZ loc_1006AAC5
loc_1006AB10:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82C30_sub_10083C30])
	JMP loc_1006AAC5
loc_1006AB1F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m69B5D_sub_1006AB5D])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006AB5D()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD LEGO1_sub_1006AB70()
{
__asm{
	CMP BYTE PTR [ECX+0x00000096],0x00
	JZ loc_1006AB8B
	PUSH ECX
	MOV EAX,DWORD PTR [ECX+0x74]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m62270_sub_10063270])
	RET
loc_1006AB8B:
	MOV EAX,DWORD PTR [ECX+0x74]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m62780_sub_10063780])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006ABA0()
{
__asm{
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX+0x64]
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m69BB0_sub_1006ABB0])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006ABB0(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x0C
	XOR EAX, EAX
	MOV DWORD PTR [ESP+var_8+0xC],ECX
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg2+0x10]
	PUSH ESI
	MOV BYTE PTR [ESP+var_8+0x13],AL
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg1+0x18]
	PUSH EBP
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV ESI,DWORD PTR [ECX+0x04]
	TEST ESI, ESI
	JZ loc_1006AC3D
	CMP BYTE PTR [ESI],0x2D
	JZ loc_1006AC3D
	MOV EAX, 0x00000000
	TEST EBX, EBX
	JZ loc_1006ABEB
	MOV EAX,DWORD PTR [EBX+0x000000E4]
loc_1006ABEB:
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m687C0_sub_100697C0])
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	TEST EBX, EBX
	JNZ loc_1006AC10
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m689E0_sub_100699E0])
	MOV EBX, EAX
	TEST EBX, EBX
	JNZ loc_1006AC3D
	JMP loc_1006AC63
loc_1006AC10:
	PUSH EBX
	MOV ECX, EBX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	TEST EAX, EAX
	JNZ loc_1006AC3D
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m689E0_sub_100699E0])
	TEST EAX, EAX
	JZ loc_1006AC63
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	PUSH 0x00
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m69BB0_sub_1006ABB0])
	TEST AL, AL
	JZ loc_1006AC63
	JMP loc_1006AC5E
loc_1006AC3D:
	MOV EBP,DWORD PTR [EDI+0x08]
	XOR ESI, ESI
loc_1006AC42:
	CMP EBP, ESI
	JLE loc_1006AC5E
	PUSH EBX
	MOV EAX,DWORD PTR [EDI+0x0C]
	MOV ECX,DWORD PTR [ESI*4+EAX]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_8+0x24]
	CALL_LONG(offset [LEGO1_text.m69BB0_sub_1006ABB0])
	TEST AL, AL
	JZ loc_1006AC63
	INC ESI
	JMP loc_1006AC42
loc_1006AC5E:
	MOV BYTE PTR [ESP+var_8+0x1B],0x01
loc_1006AC63:
	CMP DWORD PTR [ESP+var_4+0x1C],0x00
	JZ loc_1006AC77
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006AC77:
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006AC90()
{
	enum{
		var_C = -0xC,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX+0x00000098],0x00
	MOV ESI, ECX
	JZ FAR loc_1006AD26
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV EDI, EAX
	MOV EAX,DWORD PTR [ESI+0x00000098]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0xC],ECX
	CMP EAX, ECX
	JZ loc_1006AD26
loc_1006ACBE:
	MOV EAX,DWORD PTR [ESP+var_4+0xC]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV EDX,DWORD PTR [EAX+0x0C]
	PUSH ECX
	PUSH EDX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV EDX,DWORD PTR [ESP+var_C+0x14]
	MOV ECX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],ECX
	JZ loc_1006ACEE
loc_1006ACE0:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006AD13
	MOV ECX, EAX
	JMP loc_1006ACE0
loc_1006ACEE:
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_1006AD0A
loc_1006ACFA:
	MOV DWORD PTR [ESP+var_C+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1006ACFA
loc_1006AD0A:
	MOV EAX,DWORD PTR [ESP+var_C+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1006AD17
loc_1006AD13:
	MOV DWORD PTR [ESP+var_C+0x14],ECX
loc_1006AD17:
	MOV EAX,DWORD PTR [ESI+0x00000098]
	MOV ECX,DWORD PTR [ESP+var_C+0x14]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ loc_1006ACBE
loc_1006AD26:
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006AFC0(DWORD arg1, DWORD arg2)
{
	enum{
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6A106_proc_1006B106]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x6C]
	PUSH EDI
	MOV ESI, ECX
	INC EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	SHL EAX, 0x03
	LEA ECX,DWORD PTR [EAX*8+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_1006B021
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [EBP+var_14+0x4]
	DEC EBX
	JS loc_1006B01C
loc_1006B00F:
	MOV ECX, EDI
	ADD EDI, 0x48
	CALL_LONG(offset [LEGO1_text.m6A120_sub_1006B120])
	DEC EBX
	JNS loc_1006B00F
loc_1006B01C:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	JMP loc_1006B023
loc_1006B021:
	XOR ECX, ECX
loc_1006B023:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x01
	MOV DWORD PTR [EAX],ECX
	JBE loc_1006B06B
	MOV EBX, 0x00000048
	MOV EDI, 0x00000004
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	DEC EAX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
loc_1006B046:
	MOV EAX,DWORD PTR [ESI+0x68]
	MOV EDX,DWORD PTR [EDI+EAX]
	TEST EDX, EDX
	JZ loc_1006B060
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	ADD EDX, 0x10
	PUSH EDX
	MOV ECX,DWORD PTR [EAX]
	ADD ECX, EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
loc_1006B060:
	ADD EBX, 0x48
	ADD EDI, 0x04
	DEC DWORD PTR [EBP+var_18+0x4]
	JNZ loc_1006B046
loc_1006B06B:
	FLD DWORD PTR [EBP+arg2+0x4]
	MOV EAX,DWORD PTR [ESI+0x78]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX, ESI
	MOV EAX,DWORD PTR [ESI+0x64]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6A900_sub_1006B900])
	CMP DWORD PTR [EBP+var_14+0x4],0x01
	JBE loc_1006B0F1
	MOV EBX, 0x00000048
	MOV EDI, 0x00000004
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	DEC EAX
	MOV DWORD PTR [EBP+var_14+0x4],EAX
loc_1006B09A:
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	MOV ECX,DWORD PTR [ESI+0x68]
	MOV DWORD PTR [EBP+var_58+0x4],EAX
	MOV DWORD PTR [EBP+var_5C+0x4],offset [LEGO1_rdata.m300_ptr]
	CMP DWORD PTR [EDI+ECX],0x00
	JZ loc_1006B0E6
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	MOV EAX,DWORD PTR [EAX]
	ADD EAX, EBX
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m348_ptr])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x68]
	MOV ECX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EDI+EAX]
	ADD ECX, EBX
	ADD EAX, 0x10
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	MOV EDX,DWORD PTR [ESI+0x68]
	PUSH ECX
	MOV ECX,DWORD PTR [EDI+EDX]
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
loc_1006B0E6:
	ADD EBX, 0x48
	ADD EDI, 0x04
	DEC DWORD PTR [EBP+var_14+0x4]
	JNZ loc_1006B09A
loc_1006B0F1:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006B120()
{
__asm{
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m300_ptr]
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006B140(DWORD arg1)
{
	enum{
		var_160 = -0x160,
		var_120 = -0x120,
		var_11C = -0x11C,
		var_118 = -0x118,
		var_D8 = -0xD8,
		var_D4 = -0xD4,
		var_D0 = -0xD0,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6A4DD_proc_1006B4DD]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000150
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	TEST ESI, ESI
	JNZ loc_1006B183
loc_1006B16B:
	MOV EAX, 0xFFFFFFFF
loc_1006B170:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1006B183:
	PUSH 0x48
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_4C+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1006B1B7
	LEA EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [EBP+var_94+0x4],EDI
	JMP loc_1006B1C1
loc_1006B1B7:
	MOV DWORD PTR [EBP+var_94+0x4],0x00000000
loc_1006B1C1:
	LEA EAX,DWORD PTR [EBP+var_118+0x4]
	PUSH 0x00
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_11C+0x4],EAX
	LEA EAX,DWORD PTR [ESI+0x10]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV DWORD PTR [EBP+var_120+0x4],offset [LEGO1_rdata.m300_ptr]
	CALL_LONG(offset [LEGO1_text.m69FC0_sub_1006AFC0])
	TEST EAX, EAX
	JNZ FAR loc_1006B4AA
	MOV EAX, 0x00000001
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x6C]
	CMP EDX, EAX
	JB loc_1006B21F
	MOV ECX,DWORD PTR [ECX+0x68]
	ADD ECX, 0x04
loc_1006B20F:
	CMP DWORD PTR [ECX],ESI
	JZ FAR loc_1006B2D3
	ADD ECX, 0x04
	INC EAX
	CMP EAX, EDX
	JBE loc_1006B20F
loc_1006B21F:
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	LEA ECX,DWORD PTR [EBP+var_120+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+var_94+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x38])
	MOV EDX,DWORD PTR [EBP+var_94+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [ECX+0x000000A0],EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	LEA EDX,DWORD PTR [EBP+var_D0+0x4]
	LEA EDI,DWORD PTR [EBP+var_D0+0x4]
	MOV WORD PTR DS:[ECX+0x0000009C],0x0001
	MOV DWORD PTR [EBP+var_D4+0x4],EDX
	MOV EAX,DWORD PTR [ECX+0x78]
	MOV EDX, offset [LEGO1_rdata.m300_ptr]
	MOV ECX, 0x00000010
	LEA EBX,DWORD PTR [EBP+var_88+0x4]
	MOV DWORD PTR [EBP+var_D8+0x4],EDX
	MOV ESI,DWORD PTR [EAX+0x04]
	REP MOVSD
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8C+0x4],EBX
	MOV DWORD PTR [EBP+var_90+0x4],EDX
	MOV EAX,DWORD PTR [ECX+0x000000A0]
	MOV ECX,DWORD PTR [EBP+var_D4+0x4]
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_90+0x4]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m33C_ptr])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	LEA EAX,DWORD PTR [EBP+var_90+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [ECX+0x78]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x28])
	XOR EAX, EAX
	JMP FAR loc_1006B170
loc_1006B2D3:
	SHL EAX, 0x03
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	LEA ESI,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EBP+var_160+0x4]
	ADD ESI,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3500_sub_10004500])
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	XOR ESI, ESI
	CALL_LONG(DWORD PTR [EAX+0x28])
	LEA ECX,DWORD PTR [EBP+var_120+0x4]
	MOV EAX,DWORD PTR [EBP+var_120+0x4]
	CALL_LONG(DWORD PTR [EAX+0x24])
	MOV DWORD PTR [EBP+var_4C+0x4],ESI
	MOV DWORD PTR [EBP+var_30+0x4],ESI
	MOV DWORD PTR [EBP+var_2C+0x4],ESI
loc_1006B30F:
	MOV EDI,DWORD PTR [EBP+var_4C+0x4]
	LEA EDX,DWORD PTR [EDI+0x01]
	MOV ECX, EDX
	MOV DWORD PTR [EBP+var_28+0x4],EDX
	CMP EDX, 0x04
	JGE loc_1006B34E
	LEA EBX,DWORD PTR [EDX*4+EDI]
	SHL EBX, 0x02
	ADD EBX,DWORD PTR [EBP+var_1C+0x4]
loc_1006B328:
	MOV EDX,DWORD PTR [EBP+var_4C+0x4]
	LEA EAX,DWORD PTR [EDI*4+EDX]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	FLD DWORD PTR [EAX*4+EDX]
	FABS
	FLD DWORD PTR [EBX]
	FABS
	FCOMPP
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1006B345
	MOV EDI, ECX
loc_1006B345:
	ADD EBX, 0x10
	INC ECX
	CMP ECX, 0x04
	JL loc_1006B328
loc_1006B34E:
	CMP EDI,DWORD PTR [EBP+var_4C+0x4]
	JZ loc_1006B370
	MOV EDX,DWORD PTR [EBP+var_4C+0x4]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EDX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m6A500_sub_1006B500])
	MOV EDX,DWORD PTR [EBP+var_4C+0x4]
	LEA ECX,DWORD PTR [EBP+var_120+0x4]
	PUSH EDX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m6A500_sub_1006B500])
loc_1006B370:
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	ADD EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EAX], 0x3A83126F
	JGE loc_1006B38A
	CMP DWORD PTR [EAX], 0xBA83126F
	JB FAR loc_1006B4AA
loc_1006B38A:
	MOV EAX,DWORD PTR [EAX]
	XOR ECX, ECX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	FLD DWORD PTR [EBP+var_18+0x4]
	JMP loc_1006B398
loc_1006B396:
	FSTP DWORD PTR [EAX]
loc_1006B398:
	MOV EAX,DWORD PTR [EBP+var_11C+0x4]
	ADD EAX, ESI
	ADD EAX, ECX
	ADD ECX, 0x04
	CMP ECX, 0x10
	FLD DWORD PTR [EAX]
	FDIV ST,ST(1)
	JL loc_1006B396
	FSTP DWORD PTR [EAX]
	FSTP ST(0)
	FLD DWORD PTR [EBP+var_18+0x4]
	XOR ECX, ECX
	JMP loc_1006B3BB
loc_1006B3B9:
	FSTP DWORD PTR [EAX]
loc_1006B3BB:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, ESI
	ADD EAX, ECX
	ADD ECX, 0x04
	CMP ECX, 0x10
	FLD DWORD PTR [EAX]
	FDIV ST,ST(1)
	JL loc_1006B3B9
	FSTP DWORD PTR [EAX]
	FSTP ST(0)
	XOR ECX, ECX
	MOV EDI,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	MOV DWORD PTR [EBP+var_18+0x4],EDI
loc_1006B3DD:
	MOV EDX,DWORD PTR [EBP+var_4C+0x4]
	CMP DWORD PTR [EBP+var_34+0x4],EDX
	JZ FAR loc_1006B477
	MOV EBX,DWORD PTR [EBP+var_11C+0x4]
	LEA EDX,DWORD PTR [EBP+var_48+0x4]
	ADD EBX, ESI
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX,DWORD PTR [EBP+var_18+0x4]
	JMP loc_1006B3FF
loc_1006B3FC:
	FSTP DWORD PTR [EDX-0x04]
loc_1006B3FF:
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EBX]
	ADD EBX, 0x04
	ADD EDX, 0x04
	LEA EDI,DWORD PTR [EBP+var_38+0x4]
	CMP EDX, EDI
	JB loc_1006B3FC
	FSTP DWORD PTR [EDX-0x04]
	XOR EDX, EDX
	JMP loc_1006B419
loc_1006B417:
	FSTP DWORD PTR [EAX]
loc_1006B419:
	MOV EAX,DWORD PTR [EBP+var_11C+0x4]
	ADD EAX, ECX
	ADD EAX, EDX
	ADD EDX, 0x04
	CMP EDX, 0x10
	FLD DWORD PTR [EAX]
	FSUB DWORD PTR [EDX+EBP+var_4C+0x4]
	JL loc_1006B417
	FSTP DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	LEA EAX,DWORD PTR [EBP+var_48+0x4]
	ADD EDX, ESI
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	ADD EDI,DWORD PTR [EBP+var_1C+0x4]
	JMP loc_1006B446
loc_1006B443:
	FSTP DWORD PTR [EAX-0x04]
loc_1006B446:
	FLD DWORD PTR [EDI]
	FMUL DWORD PTR [EDX]
	ADD EDX, 0x04
	ADD EAX, 0x04
	LEA EBX,DWORD PTR [EBP+var_38+0x4]
	CMP EAX, EBX
	JB loc_1006B443
	FSTP DWORD PTR [EAX-0x04]
	XOR EDX, EDX
	JMP loc_1006B460
loc_1006B45E:
	FSTP DWORD PTR [EAX]
loc_1006B460:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, ECX
	ADD EAX, EDX
	ADD EDX, 0x04
	CMP EDX, 0x10
	FLD DWORD PTR [EAX]
	FSUB DWORD PTR [EDX+EBP+var_4C+0x4]
	JL loc_1006B45E
	FSTP DWORD PTR [EAX]
loc_1006B477:
	ADD ECX, 0x10
	INC DWORD PTR [EBP+var_34+0x4]
	ADD DWORD PTR [EBP+var_18+0x4],0x10
	CMP ECX, 0x40
	JL FAR loc_1006B3DD
	ADD ESI, 0x10
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	ADD DWORD PTR [EBP+var_30+0x4],0x04
	ADD DWORD PTR [EBP+var_2C+0x4],0x14
	CMP DWORD PTR [EBP+var_2C+0x4],0x50
	MOV DWORD PTR [EBP+var_4C+0x4],EDX
	JL FAR loc_1006B30F
	JMP FAR loc_1006B21F
loc_1006B4AA:
	CMP DWORD PTR [EBP+var_94+0x4],0x00
	JZ loc_1006B4C2
	MOV EAX,DWORD PTR [EBP+var_94+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006B4C2:
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JZ FAR loc_1006B16B
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP FAR loc_1006B16B
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006B500(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	PUSH EDI
	SHL ESI, 0x04
	PUSH EBP
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	MOV EDX, 0x00000004
	SHL EDI, 0x04
loc_1006B51A:
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EDI, 0x04
	LEA EBX,DWORD PTR [ESI+EAX]
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+EAX-0x04]
	MOV DWORD PTR [ESP+var_4+0x14],EBP
	MOV DWORD PTR [EBX],EAX
	MOV EBP,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	ADD ESI, 0x04
	DEC EDX
	MOV DWORD PTR [EDI+EBP+arg1217223-0x4A4B20],EBX
	JNZ loc_1006B51A
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006B550()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [ESI+0x00000080],EAX
	TEST EAX, EAX
	JZ loc_1006B5CE
	MOV ECX,DWORD PTR [ESI+0x40]
	CALL_LONG(offset [LEGO1_text.mB7360_sub_100B8360])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1006B5CE
	MOV EDI,DWORD PTR [ESI+0x1C]
	MOV ECX, EDI
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x40])
	MOV ECX,DWORD PTR [EBX+0x10]
	ADD ECX,DWORD PTR [EDI+0x34]
	CMP EAX, ECX
	JL loc_1006B5CE
	MOV ECX,DWORD PTR [ESI+0x40]
	CALL_LONG(offset [LEGO1_text.mB7250_sub_100B8250])
	MOV EBX,DWORD PTR [ESI]
	MOV ECX, ESI
	PUSH EAX
	MOV EDI, EAX
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV EBP, EAX
	PUSH EDI
	MOV ECX,DWORD PTR [ESI+0x40]
	CALL_LONG(offset [LEGO1_text.mB7390_sub_100B8390])
	TEST EBP, EBP
	JNZ loc_1006B5C9
	MOV EAX, 0x00000001
	MOV CL,BYTE PTR [ESI+0x08]
	SHL EAX, CL
	MOV ECX, ESI
	OR DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI+0x08],0x00000002
	CALL_LONG(DWORD PTR [EBX+0x30])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
loc_1006B5C9:
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x40])
loc_1006B5CE:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006B5E0()
{
	enum{
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6A793_proc_1006B793]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	CALL_LONG(offset [LEGO1_text.m69C90_sub_1006AC90])
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m682B0_sub_100692B0])
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m685C0_sub_100695C0])
	TEST BYTE PTR [EBX+0x7C],0x02
	JZ loc_1006B628
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m69BA0_sub_1006ABA0])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m6A819_loc_1006B819])
loc_1006B628:
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m68B10_sub_10069B10])
	PUSH 0x01
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6B8A0_sub_1006C8A0])
	CMP DWORD PTR [EBX+0x78],0x00
	JNZ_LONG(offset [LEGO1_text.m6A6F9_loc_1006B6F9])
	MOV EAX,DWORD PTR [EBX+0x1C]
	MOV ECX,DWORD PTR [EAX+0x58]
	FLD DWORD PTR [ECX]
	FABS
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x50C0]
	FNSTSW AX
	TEST AH,0x01
	JZ_LONG(offset [LEGO1_text.m6A739_loc_1006B739])
	FLD DWORD PTR [ECX+0x04]
	FABS
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x50C0]
	FNSTSW AX
	TEST AH,0x01
	JZ_LONG(offset [LEGO1_text.m6A739_loc_1006B739])
	FLD DWORD PTR [ECX+0x08]
	FABS
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x50C0]
	FNSTSW AX
	TEST AH,0x01
	JZ_LONG(offset [LEGO1_text.m6A739_loc_1006B739])
	MOV EAX,DWORD PTR [EBX+0x68]
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m6A6F9_loc_1006B6F9])
	MOV EAX,DWORD PTR [EAX+0x04]
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m6A6F9_loc_1006B6F9])
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	ADD EAX, 0x10
	PUSH EAX
	MOV DWORD PTR [EBP+var_58+0x4],ECX
	MOV DWORD PTR [EBP+var_5C+0x4],offset [LEGO1_rdata.m300_ptr]
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m328_ptr])
	PUSH 0x48
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	JZ loc_1006B6ED
	LEA ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EAX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV ECX, 0x00000010
	MOV DWORD PTR [EAX], offset [LEGO1_rdata.m300_ptr]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV ESI,DWORD PTR [EBP+var_58+0x4]
	REP MOVSD
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP loc_1006B6EF
loc_1006B6ED:
	XOR EAX, EAX
loc_1006B6EF:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBX+0x78],EAX
	JMP_LONG(offset [LEGO1_text.m6A6F9_loc_1006B6F9])
}
}

__declspec(naked) DWORD LEGO1_sub_1006B8D0()
{
__asm{
	JMP_LONG(offset [LEGO1_text.mB21A0_loc_100B31A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006B8E0()
{
__asm{
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m67770_sub_10068770])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006B8F0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV EAX,DWORD PTR [EAX+0x18]
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006B900(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x48
	MOV DWORD PTR [ESP+var_48+0x48],offset [LEGO1_rdata.m300_ptr]
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESP+var_40+0x50]
	MOV EAX,DWORD PTR [ESP+arg3+0x50]
	MOV DWORD PTR [ESP+var_44+0x50],ECX
	TEST EAX, EAX
	MOV ECX,DWORD PTR [ESI+0x04]
	JNZ loc_1006B968
	XOR EDX, EDX
	MOV EAX,DWORD PTR [EDI+0x68]
	MOV DX,WORD PTR DS:[ECX+0x20]
	MOV EAX,DWORD PTR [EDX*4+EAX]
	TEST EAX, EAX
	JNZ loc_1006B965
	LEA ECX,DWORD PTR [ESP+var_48+0x50]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m320_ptr])
	MOV EAX,DWORD PTR [ESP+var_44+0x50]
	MOV ECX, 0x3F800000
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [ESP+var_44+0x50]
	MOV DWORD PTR [EAX+0x14],ECX
	MOV EAX,DWORD PTR [ESP+var_44+0x50]
	MOV DWORD PTR [EAX+0x28],ECX
	MOV EAX,DWORD PTR [ESP+var_44+0x50]
	MOV DWORD PTR [EAX+0x3C],ECX
	JMP loc_1006B973
loc_1006B965:
	ADD EAX, 0x10
loc_1006B968:
	LEA ECX,DWORD PTR [ESP+var_48+0x50]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m328_ptr])
loc_1006B973:
	MOV EAX,DWORD PTR [EDI+0x68]
	MOV ECX,DWORD PTR [ESP+arg2+0x50]
	LEA EDX,DWORD PTR [ESP+var_48+0x50]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mA7FD0_sub_100A8FD0])
	ADD ESP, 0x10
	POP EDI
	POP ESI
	ADD ESP, 0x48
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006B9A0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217250 = 0x4A4B88,
		arg1217256 = 0x4A4BA0,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x00000094
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg3+0xA0]
	PUSH EBP
	MOV EBP, ECX
	TEST EAX, EAX
	MOV DWORD PTR [ESP+var_90+0xA4],offset [LEGO1_rdata.m300_ptr]
	LEA ECX,DWORD PTR [ESP+var_88+0xA4]
	MOV DWORD PTR [ESP+var_8C+0xA4],ECX
	MOV ECX,DWORD PTR [EBX+0x04]
	JNZ loc_1006BA10
	XOR EDX, EDX
	MOV EAX,DWORD PTR [EBP+arg1217250-0x4A4B20]
	MOV DX,WORD PTR DS:[ECX+0x20]
	MOV EAX,DWORD PTR [EDX*4+EAX]
	TEST EAX, EAX
	JNZ loc_1006BA0D
	LEA ECX,DWORD PTR [ESP+var_90+0xA4]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m320_ptr])
	MOV EAX,DWORD PTR [ESP+var_8C+0xA4]
	MOV ECX, 0x3F800000
	MOV DWORD PTR [EAX],ECX
	MOV EAX,DWORD PTR [ESP+var_8C+0xA4]
	MOV DWORD PTR [EAX+0x14],ECX
	MOV EAX,DWORD PTR [ESP+var_8C+0xA4]
	MOV DWORD PTR [EAX+0x28],ECX
	MOV EAX,DWORD PTR [ESP+var_8C+0xA4]
	MOV DWORD PTR [EAX+0x3C],ECX
	JMP loc_1006BA1B
loc_1006BA0D:
	ADD EAX, 0x10
loc_1006BA10:
	LEA ECX,DWORD PTR [ESP+var_90+0xA4]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m328_ptr])
loc_1006BA1B:
	MOV EAX,DWORD PTR [ESP+arg1+0xA4]
	CMP DWORD PTR [EAX+0x14],0x00
	JZ loc_1006BA8F
	LEA EAX,DWORD PTR [ESP+var_40+0xA4]
	MOV ESI,DWORD PTR [ESP+var_8C+0xA4]
	MOV EDI, EAX
	MOV ECX, 0x00000010
	MOV DWORD PTR [ESP+var_48+0xA4],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESP+var_44+0xA4],EAX
	REP MOVSD
	FILD DWORD PTR [ESP+arg2+0xA4]
	LEA ECX,DWORD PTR [ESP+var_48+0xA4]
	MOV ESI,DWORD PTR [ESP+arg2+0xA4]
	MOV EAX,DWORD PTR [ESP+arg1+0xA4]
	PUSH ECX
	SUB ESP, 0x04
	MOV ECX,DWORD PTR [EAX+0x14]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9E490_sub_1009F490])
	MOV EAX,DWORD PTR [EBP+arg1217256-0x4A4B20]
	TEST EAX, EAX
	JZ loc_1006BA96
	MOV ECX,DWORD PTR [EAX+0x00000098]
	TEST ECX, ECX
	JZ loc_1006BA96
	LEA EAX,DWORD PTR [ESP+var_48+0xA4]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m113E0_sub_100123E0])
	JMP loc_1006BA96
loc_1006BA8F:
	MOV ESI,DWORD PTR [ESP+arg2+0xA4]
loc_1006BA96:
	MOV EAX,DWORD PTR [EBP+arg1217250-0x4A4B20]
	LEA ECX,DWORD PTR [ESP+var_90+0xA4]
	PUSH EAX
	PUSH ESI
	PUSH ECX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mA7E80_sub_100A8E80])
	ADD ESP, 0x10
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000094
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1006BCAA()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006C07D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1006C19B()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6B520_loc_1006C520])
}
}

__declspec(naked) DWORD LEGO1_sub_1006C1B0()
{
__asm{
	MOV EDX,DWORD PTR [ECX]
	CMP DWORD PTR [EDX+0x14],0x00
	JNZ loc_1006C1C6
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ loc_1006C1C6
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006C1C6:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006C1E2
loc_1006C1D0:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EDX
	JZ loc_1006C1DF
	MOV EAX, EDX
	JMP loc_1006C1D0
loc_1006C1DF:
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006C1E2:
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JNZ loc_1006C1F4
loc_1006C1E9:
	MOV DWORD PTR [ECX],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006C1E9
loc_1006C1F4:
	MOV DWORD PTR [ECX],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006C200(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7680]
	MOV DWORD PTR [EAX],EBX
	ADD EAX, 0x0C
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x7680]
	MOV DWORD PTR [EAX-0x04],EBX
	MOV EBX,DWORD PTR [ESP+arg4+0x14]
	JZ loc_1006C249
	MOV EDX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006C249:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_1006C2A0
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JNZ loc_1006C2A0
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [ECX+0x0C]
loc_1006C262:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_1006C282
	OR DL, DL
	JZ loc_1006C27E
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_1006C282
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1006C262
loc_1006C27E:
	XOR EAX, EAX
	JMP loc_1006C287
loc_1006C282:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006C287:
	TEST EAX, EAX
	JL loc_1006C2A0
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006C2C2
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006C2C2
loc_1006C2A0:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_1006C2B5
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006C2C2
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006C2C2
loc_1006C2B5:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_1006C2C2:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1006C489
loc_1006C2D2:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBP,DWORD PTR [EAX+0x14]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],0x00
	JNZ FAR loc_1006C489
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX]
	CMP EBX, EAX
	JNZ FAR loc_1006C3B1
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_1006C45E
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_1006C33E
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006C31E
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006C31E:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006C338
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006C338
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1006C33A
loc_1006C338:
	MOV DWORD PTR [EAX],EDX
loc_1006C33A:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006C33E:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006C370
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006C370:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006C3A4
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006C397
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006C47D
loc_1006C397:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006C47D
loc_1006C3A4:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006C47D
loc_1006C3B1:
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_1006C45E
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1006C3F9
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006C3D6
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006C3D6:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006C3F2
	MOV EAX,DWORD PTR [EDI]
	LEA EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBX],ECX
	JNZ loc_1006C3F2
	MOV DWORD PTR [EBX],EDX
	JMP loc_1006C3F4
loc_1006C3F2:
	MOV DWORD PTR [EAX],EDX
loc_1006C3F4:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006C3F9:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x7680],EAX
	JZ loc_1006C42B
	MOV DWORD PTR [EAX+0x04],EDX
loc_1006C42B:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006C455
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006C44C
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006C47D
loc_1006C44C:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006C47D
loc_1006C455:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006C47D
loc_1006C45E:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],0x00000001
	MOV DWORD PTR [EBX+0x14],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1006C47D:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_1006C2D2
loc_1006C489:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x14],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1006C561()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6B4B0_loc_1006C4B0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006C78C()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4A0F0_loc_1004B0F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006C7A0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x64]
	TEST ECX, ECX
	JZ loc_1006C7BA
	MOV EAX,DWORD PTR [ESI+0x78]
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EAX
	PUSH EDX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6A9A0_sub_1006B9A0])
loc_1006C7BA:
	MOV BYTE PTR [ESI+0x00000095],0x01
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006C8A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x6C]
	PUSH EDI
	TEST EAX, EAX
	JZ loc_1006C8E8
	CMP DWORD PTR [ECX+0x68],0x00
	JZ loc_1006C8E8
	MOV ESI, 0x00000001
	CMP EAX, ESI
	JB loc_1006C8E8
	MOV EDI, 0x00000004
	MOV DL,BYTE PTR [ESP+arg1+0x8]
loc_1006C8C1:
	MOV EAX,DWORD PTR [ECX+0x68]
	MOV EAX,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [EAX+0x00000104]
	TEST EAX, EAX
	JZ loc_1006C8DF
	TEST DL, DL
	JZ loc_1006C8DB
	OR BYTE PTR [EAX+0x10],0x01
	JMP loc_1006C8DF
loc_1006C8DB:
	AND BYTE PTR [EAX+0x10],0xFE
loc_1006C8DF:
	ADD EDI, 0x04
	INC ESI
	CMP DWORD PTR [ECX+0x6C],ESI
	JNB loc_1006C8C1
loc_1006C8E8:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1006CDD0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6BE37_proc_1006CE37]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m67420_sub_10068420])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m900_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5170_ptr]
	CALL_LONG(offset [LEGO1_text.m6C0B0_sub_1006D0B0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006D041()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m67670_loc_10068670])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D050()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6C09B_proc_1006D09B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5170_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m6C0E0_sub_1006D0E0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6C0A5_sub_1006D0A5])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006D0A5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C000_loc_1006D000])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D0B0()
{
__asm{
	XOR EAX, EAX
	MOV EDX, 0xFFFFFFFF
	MOV DWORD PTR [ECX+0x000000C0],EAX
	MOV DWORD PTR [ECX+0x000000C4],EAX
	MOV WORD PTR DS:[ECX+0x000000D4],AX
	MOV DWORD PTR [ECX+0x000000CC],EDX
	MOV DWORD PTR [ECX+0x000000D0],EDX
	MOV DWORD PTR [ECX+0x000000C8],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006D0E0(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x20]
	MOV ESI, ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	MOV EAX,DWORD PTR [ESI+0x000000C4]
	TEST EAX, EAX
	JZ loc_1006D101
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006D101:
	MOV ECX,DWORD PTR [ESI+0x000000C8]
	TEST ECX, ECX
	JZ loc_1006D111
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1006D111:
	MOV DWORD PTR [ESI+0x68],0x00000000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6C0B0_sub_1006D0B0])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+r+0xC],0x00
	JNZ loc_1006D134
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6A8E0_sub_1006B8E0])
loc_1006D134:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1006D2A7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D343()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C260_loc_1006D260])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D3B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C3D0_loc_1006D3D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D411()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C2C0_loc_1006D2C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D47F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D52B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C260_loc_1006D260])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D599()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C2C0_loc_1006D2C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006D680(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6C7BF_proc_1006D7BF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	LEA EAX,DWORD PTR [ECX+0x20]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV EAX,DWORD PTR [ESI+0x64]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ECX+EBX+0x58]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m685C0_sub_100695C0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m68B10_sub_10069B10])
	MOV EAX,DWORD PTR [ESI+0x68]
	TEST EAX, EAX
	JZ loc_1006D76F
	MOV EDI,DWORD PTR [ESI+0x000000C8]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	MOV EBX,DWORD PTR [EDI+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	TEST EAX, EAX
	JZ loc_1006D738
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX, ECX
	MOV DWORD PTR [ECX+0x04],EBX
	MOV DWORD PTR [ECX+0x08],0x00000000
	JMP loc_1006D73A
loc_1006D738:
	XOR EAX, EAX
loc_1006D73A:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	TEST EBX, EBX
	JZ loc_1006D747
	MOV DWORD PTR [EBX+0x08],EAX
	JMP loc_1006D74A
loc_1006D747:
	MOV DWORD PTR [EDI+0x10],EAX
loc_1006D74A:
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EDI+0x14],EAX
	INC DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [ESI+0x6C]
	MOV ECX,DWORD PTR [ESI+0x68]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	MOV EAX,DWORD PTR [ESI+0x64]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV DWORD PTR [ESI+0x68],0x00000000
loc_1006D76F:
	PUSH offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV ECX,DWORD PTR [ESI+0x70]
	TEST ECX, ECX
	JZ loc_1006D794
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x70],0x00000000
loc_1006D794:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6C7C9_sub_1006D7C9])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_proc_1006D7B2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006D7C9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006D7E0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6C847_proc_1006D847]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m67420_sub_10068420])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m900_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5278_ptr]
	CALL_LONG(offset [LEGO1_text.m6CA50_sub_1006DA50])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006D9F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6CA3B_proc_1006DA3B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5278_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m6CA60_sub_1006DA60])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6CA45_sub_1006DA45])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006DA45()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6C000_loc_1006D000])
}
}

__declspec(naked) DWORD LEGO1_sub_1006DA50()
{
__asm{
	MOV DWORD PTR [ECX+0x000000C0],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006DA60(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	LEA ESI,DWORD PTR [ECX+0x20]
	MOV EDI, ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	MOV EAX,DWORD PTR [EDI+0x000000C0]
	TEST EAX, EAX
	JZ loc_1006DA81
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006DA81:
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m6CA50_sub_1006DA50])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+arg1+0x8],0x00
	JNZ loc_1006DA9D
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m6CAC0_sub_1006DAC0])
loc_1006DA9D:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1006DAC0()
{
__asm{
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m6CA60_sub_1006DA60])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006DB40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ECX+0x64]
	PUSH EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6CB60_sub_1006DB60])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006DB60(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217232 = 0x4A4B40,
		arg1217233 = 0x4A4B44,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x68]
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	PUSH EBP
	TEST EAX, EAX
	MOV EBP,DWORD PTR [ESI+0x04]
	JZ loc_1006DBA0
	XOR ECX, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0x18]
	MOV CX,WORD PTR SS:[EBP+arg1217232-0x4A4B20]
	MOV EBX,DWORD PTR [ECX*4+EAX]
	TEST EBX, EBX
	JZ loc_1006DBA4
	FILD DWORD PTR [ESP+arg2+0x18]
	SUB ESP, 0x04
	MOV ECX, EBP
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9F990_sub_100A0990])
	MOV BYTE PTR [EBX+0x0C],AL
	JMP loc_1006DBA4
loc_1006DBA0:
	MOV EDI,DWORD PTR [ESP+arg2+0x18]
loc_1006DBA4:
	MOV EAX,DWORD PTR [ESP+var_4+0x18]
	MOV EAX,DWORD PTR [EAX+0x000000C0]
	TEST EAX, EAX
	JZ loc_1006DBE6
	XOR ECX, ECX
	MOV CX,WORD PTR SS:[EBP+arg1217233-0x4A4B22]
	MOV EBX,DWORD PTR [ECX*4+EAX]
	TEST EBX, EBX
	JZ loc_1006DBE6
	MOV DWORD PTR [ESP+var_8+0x18],EDI
	SUB ESP, 0x04
	MOV ECX, EBP
	FILD DWORD PTR [ESP+var_8+0x1C]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m9F990_sub_100A0990])
	MOV CL,BYTE PTR [EBX+0x0C]
	TEST AL, AL
	JZ loc_1006DBE0
	AND CL, -0x11
	JMP loc_1006DBE3
loc_1006DBE0:
	OR CL, 0x10
loc_1006DBE3:
	MOV BYTE PTR [EBX+0x0C],CL
loc_1006DBE6:
	XOR EBX, EBX
	CMP DWORD PTR [ESI+0x08],EBX
	JBE loc_1006DC04
loc_1006DBED:
	PUSH EDI
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EBX*4+EAX]
	INC EBX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_4+0x20]
	CALL_LONG(offset [LEGO1_text.m6CB60_sub_1006DB60])
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_1006DBED
loc_1006DC04:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006DC10()
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6CD9A_proc_1006DD9A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	MOV AL,BYTE PTR [EBP+var_14+0x3]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	PUSH ESI
	MOV BYTE PTR [EBP+var_2C+0x4],AL
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	XOR ESI, ESI
	MOV BYTE PTR [EBP+var_28+0x1],CL
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x768C],ESI
	JNZ loc_1006DC6E
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x768C], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x768C]
	MOV DWORD PTR [EAX+0x08],ESI
loc_1006DC6E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6CD82_sub_1006DD82])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x768C]
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	XOR ESI, ESI
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EAX+0x18],ESI
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV DWORD PTR [EAX],EAX
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EDX+0x08],EDX
	MOV EAX,DWORD PTR [ECX+0x64]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m6D3F0_sub_1006E3F0])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000C0]
	TEST EAX, EAX
	JZ loc_1006DCD3
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1006DCD3:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	LEA ECX,DWORD PTR [EAX*4+0x00000004]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ECX+0x000000C0],EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EDX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EDX]
loc_1006DCFA:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1006DCFD:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],EAX
	JZ loc_1006DD68
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV ESI,DWORD PTR [EAX+0x14]
	MOV EAX,DWORD PTR [ECX+0x000000C0]
	MOV DWORD PTR [ESI*4+EAX],EDX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX+0x0C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX+0x08]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DD45
loc_1006DD37:
	MOV EAX,DWORD PTR [ECX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DCFA
	MOV ECX, EAX
	JMP loc_1006DD37
loc_1006DD45:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_1006DD5E
loc_1006DD50:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1006DD50
loc_1006DD5E:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1006DCFD
	JMP loc_1006DCFA
loc_1006DD68:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6CDA4_sub_1006DDA4])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006DD82()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B22]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006DDA4()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6D350_loc_1006E350])
}
}

__declspec(naked) DWORD LEGO1_sub_1006DE80()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DE9E
loc_1006DE8D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DE9B
	MOV EDX, EAX
	JMP loc_1006DE8D
loc_1006DE9B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_1006DE9E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_1006DEB2
loc_1006DEA6:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_1006DEA6
loc_1006DEB2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_1006DEBB
	MOV DWORD PTR [ECX],EDX
loc_1006DEBB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006DEC0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217230 = 0x4A4B38,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DEF0
loc_1006DEDC:
	MOV ECX,DWORD PTR [EAX]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DEEA
	MOV EAX, ECX
	JMP loc_1006DEDC
loc_1006DEEA:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	JMP loc_1006DF19
loc_1006DEF0:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_1006DF0C
loc_1006DEFC:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1006DEFC
loc_1006DF0C:
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1006DF19
	MOV DWORD PTR [ESP+arg2+0x14],ECX
loc_1006DF19:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DF4D
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DF49
loc_1006DF34:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DF42
	MOV EDX, EAX
	JMP loc_1006DF34
loc_1006DF42:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_1006DF57
loc_1006DF49:
	MOV EDX, EBX
	JMP loc_1006DF57
loc_1006DF4D:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_1006DF57:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_1006DFF0
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1006DF81
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1006DF81
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1006DF83
loc_1006DF81:
	MOV DWORD PTR [EAX],EDX
loc_1006DF83:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_1006DFB4
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x768C]
	CMP DWORD PTR [EDI],EAX
	JZ loc_1006DFAB
	MOV EAX, EDX
loc_1006DF99:
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DFA7
	MOV EAX, EDI
	JMP loc_1006DF99
loc_1006DFA7:
	MOV DWORD PTR [EBX],EAX
	JMP loc_1006DFB4
loc_1006DFAB:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_1006DFB4:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_1006E050
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1006DFE5
	MOV EAX, EDX
loc_1006DFD2:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006DFE1
	MOV EAX, EBX
	JMP loc_1006DFD2
loc_1006DFE1:
	MOV DWORD PTR [EDI],EAX
	JMP loc_1006E050
loc_1006DFE5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_1006E050
loc_1006DFF0:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_1006E004
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_1006E019
loc_1006E004:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_1006E019:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E033
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E033
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1006E035
loc_1006E033:
	MOV DWORD PTR [EAX],ECX
loc_1006E035:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x18
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x18]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x18],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_1006E050:
	CMP DWORD PTR [ECX+0x18],0x01
	JNZ FAR loc_1006E2F0
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_1006E2E9
loc_1006E066:
	CMP DWORD PTR [EDX+0x18],0x01
	JNZ FAR loc_1006E2E9
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_1006E0F1
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x18],0x00
	JNZ loc_1006E0D6
	MOV DWORD PTR [EDI+0x18],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E0AD
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E0AD:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E0C9
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E0C9
	MOV DWORD PTR [EAX+0x08],EBP
	JMP loc_1006E0CB
loc_1006E0C9:
	MOV DWORD PTR [EAX],EBP
loc_1006E0CB:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1006E0D6:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006E17A
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006E17A
	JMP loc_1006E160
loc_1006E0F1:
	CMP DWORD PTR [EDI+0x18],0x00
	JNZ loc_1006E147
	MOV DWORD PTR [EDI+0x18],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E11E
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E11E:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E13B
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E13B
	MOV EAX,DWORD PTR [EDI+0x04]
loc_1006E13B:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1006E147:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006E23B
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ FAR loc_1006E23B
loc_1006E160:
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_1006E066
	JMP FAR loc_1006E2E9
loc_1006E17A:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ loc_1006E1D6
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E1A8
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E1A8:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E1C8
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JNZ loc_1006E1C8
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1006E1CA
loc_1006E1C8:
	MOV DWORD PTR [EAX],EBX
loc_1006E1CA:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1006E1D6:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x18]
	MOV DWORD PTR [EDI+0x18],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x18],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E208
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E208:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E232
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E229
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006E2E6
loc_1006E229:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006E2E6
loc_1006E232:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_1006E2E6
loc_1006E23B:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x18],0x01
	JNZ loc_1006E291
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV DWORD PTR [EDI+0x18],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E269
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E269:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E285
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E285
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1006E287
loc_1006E285:
	MOV DWORD PTR [EAX],EBX
loc_1006E287:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_1006E291:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x18]
	MOV DWORD PTR [EDI+0x18],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x18],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E2C2
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E2C2:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E2E1
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E2E1
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1006E2E3
loc_1006E2E1:
	MOV DWORD PTR [EAX],EBX
loc_1006E2E3:
	MOV DWORD PTR [EBX+0x08],EDI
loc_1006E2E6:
	MOV DWORD PTR [EDI+0x04],EBX
loc_1006E2E9:
	MOV DWORD PTR [EDX+0x18],0x00000001
loc_1006E2F0:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006E310(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EDI, EBX
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E343
loc_1006E323:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6D310_sub_1006E310])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x768C]
	JNZ loc_1006E323
loc_1006E343:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1006E391()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6D3A0_loc_1006E3A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1006E3E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m6CDB0_loc_1006DDB0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006E3F0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],ECX
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg2+0x8]
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [EDI+0x04]
	TEST ESI, ESI
	JZ loc_1006E436
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x00000080]
	CALL_LONG(offset [LEGO1_text.m1F020_sub_10020020])
	TEST EAX, EAX
	JZ loc_1006E430
	MOV EBP,DWORD PTR [ESP+arg1+0x14]
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+var_4+0x18]
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m6D470_sub_1006E470])
	JMP loc_1006E43A
loc_1006E430:
	MOV WORD PTR DS:[EDI+0x22],0x0000
loc_1006E436:
	MOV EBP,DWORD PTR [ESP+arg1+0x14]
loc_1006E43A:
	MOV ESI,DWORD PTR [EBX+0x08]
	XOR EDI, EDI
	TEST ESI, ESI
	JLE loc_1006E45A
loc_1006E443:
	MOV EAX,DWORD PTR [EBX+0x0C]
	INC EDI
	MOV ECX,DWORD PTR [EDI*4+EAX-0x04]
	PUSH ECX
	PUSH EBP
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m6D3F0_sub_1006E3F0])
	CMP EDI, ESI
	JL loc_1006E443
loc_1006E45A:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006E470(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x3C]
	PUSH EDI
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [EDX+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E4C9
loc_1006E488:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV EDI,DWORD PTR [ESP+arg3+0x40]
loc_1006E48F:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDI]
	JNZ loc_1006E4AF
	OR CL, CL
	JZ loc_1006E4AB
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDI+0x01]
	JNZ loc_1006E4AF
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR CL, CL
	JNZ loc_1006E48F
loc_1006E4AB:
	XOR EAX, EAX
	JMP loc_1006E4B4
loc_1006E4AF:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006E4B4:
	TEST EAX, EAX
	JL loc_1006E4BE
	MOV EDX, ESI
	MOV ESI,DWORD PTR [ESI]
	JMP loc_1006E4C1
loc_1006E4BE:
	MOV ESI,DWORD PTR [ESI+0x08]
loc_1006E4C1:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x768C]
	JNZ loc_1006E488
loc_1006E4C9:
	MOV DWORD PTR [ESP+var_34+0x40],EDX
	CMP DWORD PTR [EBX+0x04],EDX
	JZ loc_1006E506
	MOV ECX,DWORD PTR [ESP+arg3+0x40]
	MOV EAX,DWORD PTR [EDX+0x0C]
loc_1006E4D9:
	MOV DL,BYTE PTR [ECX]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_1006E4F9
	OR DL, DL
	JZ loc_1006E4F5
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_1006E4F9
	ADD ECX, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_1006E4D9
loc_1006E4F5:
	XOR EAX, EAX
	JMP loc_1006E4FE
loc_1006E4F9:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006E4FE:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	JGE loc_1006E511
loc_1006E506:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ESP+var_24+0x40],EAX
	LEA EAX,DWORD PTR [ESP+var_24+0x40]
loc_1006E511:
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EBX+0x04],EAX
	JNZ FAR loc_1006E6B5
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [ESP+arg4+0x40]
	INC EAX
	MOV EDX,DWORD PTR [ESP+arg2+0x40]
	MOV WORD PTR DS:[EDX+0x22],AX
	MOV EDI,DWORD PTR [ESP+arg3+0x40]
	MOV DWORD PTR [ESP+var_18+0x40],EAX
	MOV DWORD PTR [ESP+var_1C+0x40],ECX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDI,DWORD PTR [ESP+arg3+0x44]
	MOV DWORD PTR [ESP+var_34+0x44],EAX
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [ESP+var_34+0x40]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EAX,DWORD PTR [ESP+var_34+0x40]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ESP+var_34+0x40],EAX
	MOV EAX, 0x00000001
	MOV EDX,DWORD PTR [ESP+var_24+0x40]
	MOV ECX,DWORD PTR [ESP+var_20+0x40]
	MOV DWORD PTR [ESP+var_30+0x40],EDX
	MOV DWORD PTR [ESP+var_2C+0x40],ECX
	MOV ESI,DWORD PTR [EDI+0x04]
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E5EA
loc_1006E5A0:
	MOV EDI, ESI
	MOV ECX,DWORD PTR [ESP+var_34+0x40]
	MOV EDX,DWORD PTR [ESI+0x0C]
loc_1006E5A9:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1006E5C9
	OR AL, AL
	JZ loc_1006E5C5
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1006E5C9
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1006E5A9
loc_1006E5C5:
	XOR EAX, EAX
	JMP loc_1006E5CE
loc_1006E5C9:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006E5CE:
	TEST EAX, EAX
	SETL CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_1006E5E0
	MOV ESI,DWORD PTR [ESI+0x08]
	JMP loc_1006E5E2
loc_1006E5E0:
	MOV ESI,DWORD PTR [ESI]
loc_1006E5E2:
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x768C]
	JNZ loc_1006E5A0
loc_1006E5EA:
	CMP DWORD PTR [EBX+0x08],0x00
	JZ loc_1006E60E
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_8+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6D720_sub_1006E720])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP FAR loc_1006E698
loc_1006E60E:
	MOV DWORD PTR [ESP+var_28+0x40],EDI
	TEST EAX, EAX
	JZ loc_1006E641
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1006E638
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_10+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6D720_sub_1006E720])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP loc_1006E698
loc_1006E638:
	LEA ECX,DWORD PTR [ESP+var_28+0x40]
	CALL_LONG(offset [LEGO1_text.m6D6D0_sub_1006E6D0])
loc_1006E641:
	MOV EAX,DWORD PTR [ESP+var_28+0x40]
	MOV EDX,DWORD PTR [ESP+var_34+0x40]
	MOV ECX,DWORD PTR [EAX+0x0C]
loc_1006E64C:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1006E66C
	OR AL, AL
	JZ loc_1006E668
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1006E66C
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1006E64C
loc_1006E668:
	XOR EAX, EAX
	JMP loc_1006E671
loc_1006E66C:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006E671:
	TEST EAX, EAX
	JGE loc_1006E690
	LEA EAX,DWORD PTR [ESP+var_34+0x40]
	LEA ECX,DWORD PTR [ESP+var_24+0x40]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m6D720_sub_1006E720])
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_34+0x40],ECX
	JMP loc_1006E698
loc_1006E690:
	MOV EAX,DWORD PTR [ESP+var_28+0x40]
	MOV DWORD PTR [ESP+var_34+0x40],EAX
loc_1006E698:
	MOV EAX,DWORD PTR [ESP+var_1C+0x40]
	MOV ECX,DWORD PTR [ESP+var_18+0x40]
	MOV EDX,DWORD PTR [ESP+var_34+0x40]
	POP EDI
	ADD EDX, 0x10
	POP ESI
	POP EBX
	MOV DWORD PTR [EDX],EAX
	MOV DWORD PTR [EDX+0x04],ECX
	ADD ESP, 0x34
	RETN 0x0010
loc_1006E6B5:
	MOV EAX,DWORD PTR [EAX+0x14]
	MOV ECX,DWORD PTR [ESP+arg2+0x40]
	MOV WORD PTR DS:[ECX+0x22],AX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1006E6D0()
{
__asm{
	MOV EDX,DWORD PTR [ECX]
	CMP DWORD PTR [EDX+0x18],0x00
	JNZ loc_1006E6E6
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ loc_1006E6E6
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006E6E6:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E702
loc_1006E6F0:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E6FF
	MOV EAX, EDX
	JMP loc_1006E6F0
loc_1006E6FF:
	MOV DWORD PTR [ECX],EAX
	RET
loc_1006E702:
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JNZ loc_1006E714
loc_1006E709:
	MOV DWORD PTR [ECX],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006E709
loc_1006E714:
	MOV DWORD PTR [ECX],EAX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006E720(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217230 = 0x4A4B38,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x1C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x18],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	MOV EDI, EAX
	ADD EDI, 0x0C
	MOV EDX,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x768C]
	MOV DWORD PTR [EAX+0x08],EBX
	JZ loc_1006E771
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EBP,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI+0x08],EBP
loc_1006E771:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_1006E7C8
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x768C],EAX
	JNZ loc_1006E7C8
	MOV EAX,DWORD PTR [EDX]
	MOV EDI,DWORD PTR [ECX+0x0C]
loc_1006E78A:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_1006E7AA
	OR DL, DL
	JZ loc_1006E7A6
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_1006E7AA
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1006E78A
loc_1006E7A6:
	XOR EAX, EAX
	JMP loc_1006E7AF
loc_1006E7AA:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1006E7AF:
	TEST EAX, EAX
	JL loc_1006E7C8
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006E7EA
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006E7EA
loc_1006E7C8:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, ECX
	JZ loc_1006E7DD
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1006E7EA
	MOV DWORD PTR [EAX],EDX
	JMP loc_1006E7EA
loc_1006E7DD:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_1006E7EA:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1006E9B0
loc_1006E7FA:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x18]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_1006E9B0
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_1006E8D9
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217230-0x4A4B20],0x00
	JZ FAR loc_1006E986
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP EDX, ECX
	JNZ loc_1006E866
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E846
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006E846:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006E860
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006E860
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1006E862
loc_1006E860:
	MOV DWORD PTR [EAX],EDX
loc_1006E862:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006E866:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x18],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E898
	MOV DWORD PTR [EAX+0x04],EDI
loc_1006E898:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E8CC
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1006E8BF
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006E9A4
loc_1006E8BF:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006E9A4
loc_1006E8CC:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1006E9A4
loc_1006E8D9:
	CMP DWORD PTR [EBP+arg1217230-0x4A4B20],0x00
	JZ FAR loc_1006E986
	MOV EDX,DWORD PTR [EAX]
	CMP EDX, ECX
	JNZ loc_1006E921
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E8FE
	MOV DWORD PTR [EAX+0x04],ECX
loc_1006E8FE:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1006E91A
	MOV EAX,DWORD PTR [EDI]
	LEA EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBX],ECX
	JNZ loc_1006E91A
	MOV DWORD PTR [EBX],EDX
	JMP loc_1006E91C
loc_1006E91A:
	MOV DWORD PTR [EAX],EDX
loc_1006E91C:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1006E921:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x18],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x18],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x768C]
	JZ loc_1006E953
	MOV DWORD PTR [EAX+0x04],EDX
loc_1006E953:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006E97D
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1006E974
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006E9A4
loc_1006E974:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006E9A4
loc_1006E97D:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1006E9A4
loc_1006E986:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x18],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1006E9A4:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_1006E7FA
loc_1006E9B0:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x18],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006EA00(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1006EA20()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6DB24_proc_1006EB24]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x00000120]
	MOV EBX, ECX
	MOV ESI, EDI
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [EBX+0x0000010C]
	CALL_LONG(offset LEGO1_text + 0x2B850)
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_18+0x4],0x00000006
loc_1006EA6D:
	MOV ECX, ESI
	ADD ESI, 0x18
	CALL_LONG(offset [LEGO1_text.m6DC80_RetThis_3])
	DEC DWORD PTR [EBP+var_18+0x4]
	JNS loc_1006EA6D
	XOR ESI, ESI
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m5338_ptr]
	MOV WORD PTR DS:[EBX+0x000000FC],SI
	MOV DWORD PTR [EBX+0x0000011C],ESI
	MOV DWORD PTR [EBX+0x00000100],ESI
	MOV DWORD PTR [EBX+0x000001CC],ESI
	XOR EAX, EAX
	MOV ECX, 0x0000002A
	PUSH 0x01
	MOV DWORD PTR [EBX+0x00000104],ESI
	MOV DWORD PTR [EBX+0x000000F8],0xFFFFFFFF
	MOV DWORD PTR [EBX+0x00000108],0xFFFFFFFF
	REP STOSD
	MOV WORD PTR DS:[EBX+0x000001C8],0xFFFF
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[EBX+0x000001D0],SI
	MOV EAX, EBX
	MOV WORD PTR DS:[EBX+0x000001D2],SI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV WORD PTR DS:[EBX+0x000001D4],SI
	POP EDI
	MOV WORD PTR DS:[EBX+0x000001D6],SI
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_RetThis_3()
{
__asm{
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006EC90()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6DD77_proc_1006ED77]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5338_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
loc_1006ECCA:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOVSX EAX,SI
	MOV ECX,DWORD PTR [EDX+0x00000100]
	MOV ECX,DWORD PTR [EAX*4+ECX+0x78]
	TEST ECX, ECX
	JZ loc_1006ECE5
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_1006ECE5:
	INC SI
	CMP SI, 0x07
	JL loc_1006ECCA
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],EDX
	JNZ loc_1006ED26
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_1006ED26:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m6DD69_sub_1006ED69])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6DD81_sub_1006ED81])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006ED69()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000010C
	JMP_LONG(offset [LEGO1_text.m2B990_loc_1002C990])
}
}

__declspec(naked) DWORD LEGO1_sub_1006ED81()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006F080(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4584]
	MOV EDI,DWORD PTR [EBX+0x0C]
	MOV EAX,DWORD PTR [EDI+0x20]
	CMP DWORD PTR [ECX],EAX
	JNZ loc_1006F0C2
	CMP DWORD PTR [EDI+0x1C],0x000001F3
	JNZ loc_1006F0C2
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	PUSH 0x00
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH 0x00
	PUSH 0x10
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m538_PostMessageA])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1006F0C2:
	CMP DWORD PTR [ESI+0x0C],EAX
	JNZ_LONG(offset [LEGO1_text.m6E16D_loc_1006F16D])
	MOV EAX,DWORD PTR [EDI+0x1C]
	CMP EAX, 0x28
	JZ loc_1006F0EB
	CMP EAX, 0x29
	JZ loc_1006F0EB
	CMP EAX, 0x2A
	JZ loc_1006F0EB
	CMP EAX, 0x2B
	JZ loc_1006F0EB
	CMP EAX, 0x2C
	JNZ_LONG(offset [LEGO1_text.m6E16D_loc_1006F16D])
loc_1006F0EB:
	MOV AX,WORD PTR DS:[ESI+0x000001D4]
	TEST AX, AX
	JZ loc_1006F100
	DEC AX
	MOV WORD PTR DS:[ESI+0x000001D4],AX
loc_1006F100:
	CMP WORD PTR DS:[ESI+0x000001D4],0x00
	JNZ_LONG(offset [LEGO1_text.m6E16D_loc_1006F16D])
	PUSH 0x0B
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	MOV AX,WORD PTR DS:[ESI+0x000000FC]
	ADD ESP, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m38780_sub_10039780])
	MOVSX EAX,WORD PTR [ESI+0x000000FC]
	DEC EAX
	CMP EAX, 0x04
	JA_LONG(offset [LEGO1_text.m6E164_loc_1006F164])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m6E478_proc_1006F478+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1006F9A0()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x01
	LEA ECX,DWORD PTR [ESI+0x0000010C]
	LEA EDI,DWORD PTR [ESI+0x0C]
	CALL_LONG(offset [LEGO1_text.m2BDC0_sub_1002CDC0])
	PUSH 0x01
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x02
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x03
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0A
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0B
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0C
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0D
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0E
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	PUSH 0x01
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
	PUSH 0x0F
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x15
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x16
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x17
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x18
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x19
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH 0x12
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH 0x01
	CALL_LONG(DWORD PTR [EBX+0x54])
	PUSH offset [LEGO1_data.m7804_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m184_str]
	MOV EDI, 0x00000187
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000120],EAX
	MOV DWORD PTR [ESI+0x00000128],EDI
	MOV DWORD PTR [ESI+0x0000012C],0x000000B6
	PUSH offset [LEGO1_data.m77F4_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x00000130],0x000001AB
	MOV DWORD PTR [ESI+0x00000134],0x000000E6
	MOV DWORD PTR [ESI+0x00000124],0x00000003
	PUSH offset [LEGO1_data.m184_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000140],0x00000130
	MOV DWORD PTR [ESI+0x00000144],0x000000E1
	PUSH offset [LEGO1_data.m77E4_str]
	MOV DWORD PTR [ESI+0x00000138],EAX
	PUSH offset [LEGO1_data.m184_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x00000148],0x0000015E
	MOV DWORD PTR [ESI+0x0000014C],0x0000010C
	MOV DWORD PTR [ESI+0x0000013C],0x0000000A
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000158],0x0000012D
	MOV DWORD PTR [ESI+0x0000015C],0x00000085
	PUSH offset [LEGO1_data.m77D4_str]
	MOV DWORD PTR [ESI+0x00000150],EAX
	PUSH offset [LEGO1_data.m184_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x00000160],0x0000015B
	MOV DWORD PTR [ESI+0x00000164],0x000000B5
	MOV DWORD PTR [ESI+0x00000154],0x0000000B
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000170],0x00000121
	MOV DWORD PTR [ESI+0x00000174],0x000000B6
	PUSH offset [LEGO1_data.m77C4_str]
	MOV DWORD PTR [ESI+0x00000168],EAX
	PUSH offset [LEGO1_data.m184_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x00000178],0x0000014F
	MOV DWORD PTR [ESI+0x0000017C],0x000000E1
	MOV DWORD PTR [ESI+0x0000016C],0x0000000C
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000180],EAX
	MOV DWORD PTR [ESI+0x00000190],EDI
	MOV DWORD PTR [ESI+0x00000188],0x0000015E
	PUSH offset [LEGO1_data.m77B4_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x0000018C],0x000000A1
	MOV DWORD PTR [ESI+0x00000194],0x000000D1
	MOV DWORD PTR [ESI+0x00000184],0x0000000D
	PUSH offset [LEGO1_data.m184_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x000001A0],0x00000188
	MOV DWORD PTR [ESI+0x000001A4],0x00000082
	PUSH offset [LEGO1_data.m77A4_str]
	MOV DWORD PTR [ESI+0x00000198],EAX
	PUSH offset [LEGO1_data.m184_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x000001A8],0x000001B6
	MOV DWORD PTR [ESI+0x000001AC],0x000000B0
	MOV DWORD PTR [ESI+0x0000019C],0x0000000E
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x000001B8],0x0000018C
	MOV DWORD PTR [ESI+0x000001BC],0x000000E5
	PUSH offset [LEGO1_data.m7794_str]
	MOV DWORD PTR [ESI+0x000001B0],EAX
	PUSH offset [LEGO1_data.m184_str]
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x000001C0],0x000001BA
	MOV DWORD PTR [ESI+0x000001C4],0x00000110
	MOV DWORD PTR [ESI+0x000001B4],0x0000000F
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH 0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x000001CC],EAX
	CALL_LONG(offset [LEGO1_text.m6FDC0_sub_10070DC0])
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1006FD00(DWORD arg1, DWORD arg2)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	TEST ECX, ECX
	JZ FAR loc_1006FD96
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	TEST AL, AL
	JNZ loc_1006FD6C
	MOV EAX,DWORD PTR [ESI+0x0000011C]
	MOV EDI,DWORD PTR [EAX+0x18]
	MOV DWORD PTR [EAX+0x18],0x000003E8
	ADD EAX, 0x18
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mBD440_sub_100BE440])
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	MOV EBP,DWORD PTR [ESP+arg1+0x14]
	MOV EBX,DWORD PTR [ESP+r+0x14]
	PUSH EBP
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EAX,DWORD PTR [ESI+0x0000011C]
	MOV DWORD PTR [EAX+0x18],EDI
	JMP loc_1006FD84
loc_1006FD6C:
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	MOV EBP,DWORD PTR [ESP+arg1+0x14]
	MOV EBX,DWORD PTR [ESP+r+0x14]
	PUSH EBP
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
loc_1006FD84:
	PUSH EBP
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m6FD10_sub_10070D10])
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_1006FD96:
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006FDA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	XOR EAX, EAX
	PUSH EDI
	MOV ESI, ECX
	CMP BYTE PTR [ESP+arg1+0x8],0x20
	JNZ_LONG(offset [LEGO1_text.m6EE68_loc_1006FE68])
	CMP BYTE PTR [ESI+0x000000F6],AL
	JZ_LONG(offset [LEGO1_text.m6EE68_loc_1006FE68])
	MOV EAX,DWORD PTR [ESI+0x00000100]
	MOV EAX,DWORD PTR [EAX+0x74]
	CMP EAX, 0x0D
	JA_LONG(offset [LEGO1_text.m6EDDA_loc_1006FDDA])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m6EE84_proc_1006FE84+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m6EE70_proc_1006FE70+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1006FEB0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP DWORD PTR [ESI+0x0000011C],0x00
	JZ_LONG(offset [LEGO1_text.m6F2DE_loc_100702DE])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [ESP+arg2+0x10]
	DEC ECX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	DEC ECX
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x00000084]
	CALL_LONG(offset [LEGO1_text.m284E0_sub_100294E0])
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV ECX,DWORD PTR [EDX+0x1C]
	SUB ECX, 0x1E
	CMP ECX, 0x04
	JA_LONG(offset [LEGO1_text.m6EF2F_loc_1006FF2F])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m6F2E8_proc_100702E8+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10070370(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217232 = 0x4A4B40,
		arg1217234 = 0x4A4B48,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg1+0x10]
	CMP WORD PTR SS:[EBP+arg1217234-0x4A4B20],0x01
	JNZ_LONG(offset [LEGO1_text.m6F7DB_loc_100707DB])
	MOV WORD PTR DS:[ESI+0x000001D0],0x0000
	MOV EBX, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m703D0_sub_100713D0])
	MOV EDI, EBX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX,DWORD PTR [EBP+arg1217232-0x4A4B20]
	ADD ECX, EBX
	CMP ECX, 0x18
	JA_LONG(offset [LEGO1_text.m6F7B7_loc_100707B7])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m6F7E4_proc_100707E4+ECX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10070870(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV ECX,DWORD PTR [EBX+0x08]
	TEST ECX, ECX
	JZ FAR loc_10070A67
	PUSH offset [LEGO1_data.m70_str]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JZ FAR loc_100709E0
	MOV EDI,DWORD PTR [ESI+0x00000100]
	MOV ECX,DWORD PTR [EDI+0x74]
	CMP ECX, 0x05
	JZ FAR loc_100709E0
	CMP ECX, 0x0C
	JZ FAR loc_100709E0
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP EAX, 0x05
	JZ loc_100708D5
	CMP EAX, 0x06
	JZ loc_10070929
	CMP EAX, 0x07
	JZ FAR loc_1007097D
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100708D5:
	MOV WORD PTR DS:[ESI+0x000001D0],0x0000
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x10],0x00
	JNZ loc_100708EE
	LEA ECX,DWORD PTR [EDI+0x08]
	JMP loc_100708F1
loc_100708EE:
	LEA ECX,DWORD PTR [EDI+0x14]
loc_100708F1:
	CALL_LONG(offset [LEGO1_text.m13D00_sub_10014D00])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70300_sub_10071300])
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data.m76A0_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14860_sub_10015860])
	ADD ESP, 0x08
	MOV EAX, DWORD PTR [offset LEGO1_data.m76A4_ptr]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14860_sub_10015860])
	ADD ESP, 0x08
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10070929:
	CMP ECX, 0x08
	JNZ FAR loc_10070A8F
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m703D0_sub_100713D0])
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data.m76A0_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14860_sub_10015860])
	ADD ESP, 0x08
	MOV EAX, DWORD PTR [offset LEGO1_data.m76A4_ptr]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14860_sub_10015860])
	ADD ESP, 0x08
	MOV EAX,DWORD PTR [ESI+0x00000100]
	MOV ECX, ESI
	PUSH 0x00000216
	MOV DWORD PTR [EAX+0x74],0x00000002
	CALL_LONG(offset [LEGO1_text.m70300_sub_10071300])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1007097D:
	CMP ECX, 0x08
	JNZ FAR loc_10070A8F
	CMP DWORD PTR [EDI+0x78],0x00
	JZ loc_1007099A
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m38980__Save_LegoGameState__QAEJK_Z])
loc_1007099A:
	MOV EAX,DWORD PTR [ESI+0x00000100]
	PUSH 0x0000020C
	MOV ECX, ESI
	MOV EBX, 0x00000001
	MOV DWORD PTR [EAX+0x74],0x0000000C
	CALL_LONG(offset [LEGO1_text.m70300_sub_10071300])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000088],BL
	MOV BYTE PTR [EAX+0x00000336],0x00
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	POP EDI
	MOV BYTE PTR [EAX+0x00000336],BL
	MOV EAX, 0x00000001
	POP ESI
	POP EBX
	RETN 0x0004
loc_100709E0:
	MOV ECX,DWORD PTR [EBX+0x08]
	PUSH offset [LEGO1_data.m328C_str]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JZ FAR loc_10070A8F
	MOV EAX,DWORD PTR [ESI+0x00000114]
	CMP BYTE PTR [EAX+0x2E],0x00
	JZ FAR loc_10070A8F
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	CMP EAX, 0x28
	JZ loc_10070A55
	CMP EAX, 0x29
	JZ loc_10070A55
	CMP EAX, 0x2A
	JZ loc_10070A55
	CMP EAX, 0x2B
	JZ loc_10070A55
	CMP EAX, 0x2C
	JZ loc_10070A55
	CMP EAX, 0x0000022D
	JZ loc_10070A55
	CMP EAX, 0x0000022E
	JZ loc_10070A55
	CMP EAX, 0x00000231
	JZ loc_10070A55
	CMP EAX, 0x00000230
	JZ loc_10070A55
	CMP EAX, 0x0000022B
	JZ loc_10070A55
	CMP EAX, 0x0000022C
	JZ loc_10070A55
	CMP EAX, 0x0000022F
	JNZ loc_10070A8F
loc_10070A55:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m703D0_sub_100713D0])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10070A67:
	MOV EAX,DWORD PTR [ESI+0x00000100]
	CMP DWORD PTR [EAX+0x74],0x08
	JNZ loc_10070A8F
	MOV WORD PTR DS:[ESI+0x000001D0],0x0000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6FCB0_sub_10070CB0])
	PUSH 0x0000020A
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70300_sub_10071300])
loc_10070A8F:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10070C20(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV DWORD PTR [ECX+0x00000108],EAX
	MOV ESI, ECX
	MOV CL,BYTE PTR [ESP+arg2+0x4]
	PUSH ECX
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B310__EnableFullScreenMovie_LegoVideoManager__QAEXEE_Z])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000336],0x01
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000335],0x01
	PUSH 0x0B
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EAX+0x58]
	CALL_LONG(offset [LEGO1_text.mB9640_sub_100BA640])
	MOV EAX,DWORD PTR [ESI+0x00000108]
	CMP EAX, -0x01
	JZ loc_10070CA5
	CMP EAX, 0x04
	JL loc_10070C8B
	CMP EAX, 0x05
	JG loc_10070C8B
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6FE90_sub_10070E90])
loc_10070C8B:
	PUSH 0x00
	MOV EAX,DWORD PTR [ESI+0x00000108]
	PUSH EAX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4574]
	PUSH ECX
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_10070CA5:
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10070CB0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x00000108]
	CMP EAX, -0x01
	JZ loc_10070CCE
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4574]
	PUSH EAX
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_10070CCE:
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B300_sub_1007C300])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000335],0x00
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	PUSH 0x07
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14820_sub_10015820])
	ADD ESP, 0x08
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10070D10(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR DI, DI
	PUSH EBP
	MOV EBX,DWORD PTR [ESP+arg1+0x10]
loc_10070D1D:
	MOVSX EAX,DI
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EDX,DWORD PTR [ECX*8+ESI+0x00000130]
	MOV EBP,DWORD PTR [ECX*8+ESI+0x00000134]
	CMP DWORD PTR [ECX*8+ESI+0x00000128],EBX
	LEA EAX,DWORD PTR [ECX*8+ESI]
	MOV ECX,DWORD PTR [ECX*8+ESI+0x0000012C]
	JG loc_10070D54
	CMP EDX, EBX
	JL loc_10070D54
	CMP ECX,DWORD PTR [ESP+arg2+0x10]
	JG loc_10070D54
	CMP EBP,DWORD PTR [ESP+arg2+0x10]
	JGE loc_10070D5C
loc_10070D54:
	INC DI
	CMP DI, 0x07
	JL loc_10070D1D
loc_10070D5C:
	CMP DI, 0x07
	JNZ loc_10070D66
	MOV DI, 0xFFFF
loc_10070D66:
	MOV AX,WORD PTR DS:[ESI+0x000001C8]
	CMP DI, AX
	JZ loc_10070DAD
	CMP AX, 0xFFFF
	JZ loc_10070D8C
	MOVSX EAX,AX
	PUSH 0x00
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV ECX,DWORD PTR [EDX*8+ESI+0x00000120]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_10070D8C:
	MOV WORD PTR DS:[ESI+0x000001C8],DI
	CMP DI, -0x01
	JZ loc_10070DAD
	MOVSX EAX,DI
	PUSH 0x01
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV ECX,DWORD PTR [EDX*8+ESI+0x00000120]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_10070DAD:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10070DC0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ESP+arg1],0x00
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	JZ_LONG(offset [LEGO1_text.m6FE5E_loc_10070E5E])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	XOR ECX, ECX
	MOV CL,BYTE PTR [EAX+0x0C]
	DEC ECX
	CMP ECX, 0x04
	JA_LONG(offset [LEGO1_text.m6FE6F_loc_10070E6F])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m6FE78_proc_10070E78+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10070E90()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV EAX,DWORD PTR [EAX+0x10]
	CMP EAX, 0x01
	JZ loc_10070EA7
	CMP EAX, 0x02
	JZ loc_10070EB0
	JMP loc_10070EC4
loc_10070EA7:
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4564]
	JMP loc_10070EB7
loc_10070EB0:
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4568]
loc_10070EB7:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m59F10__RemoveWorld_LegoOmni__QAEXABVMxAtomId__J_Z])
loc_10070EC4:
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m26120_sub_10027120])
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2F590_sub_10030590])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5DE80_sub_1005EE80])
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m822A0_sub_100832A0])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3BEA0_sub_1003CEA0])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV DWORD PTR [EAX+0x00000428],0x00000000
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV DWORD PTR [EAX+0x0000042C],0x00000000
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m6E9A0_sub_1006F9A0])
	MOV WORD PTR DS:[ESI+0x000000FC],0x0001
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m38780_sub_10039780])
	PUSH offset [LEGO1_data.m144_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	TEST EAX, EAX
	JZ loc_10070F5C
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
loc_10070F5C:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10071024()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10071030()
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m70234_proc_10071234]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x000000B4],0x00
	JZ loc_100710B8
loc_10071059:
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	MOV ECX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH ECX
	PUSH EAX
	MOV EDI,DWORD PTR [ECX+0x0C]
	LEA ECX,DWORD PTR [ESI+0x000000A8]
	CALL_LONG(offset [LEGO1_text.m1C890_sub_1001D890])
	MOV EBX,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JZ loc_100710A5
	MOV EAX,DWORD PTR [EDI+0x1C]
	MOV DWORD PTR [EBP+var_28+0x4],EDI
	TEST EAX, EAX
	JZ loc_100710AF
	PUSH 0x00
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x40])
	JMP loc_100710AF
loc_100710A5:
	TEST EDI, EDI
	JZ loc_100710AF
	PUSH 0x01
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX])
loc_100710AF:
	CMP DWORD PTR [ESI+0x000000B4],0x00
	JNZ loc_10071059
loc_100710B8:
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	LEA EAX,DWORD PTR [ESI+0x000000B8]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX, 0xFFFFFFFF
loc_10071106:
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [ECX+0x10]
	ADD ECX, 0x10
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	TEST EAX, EAX
	JZ loc_1007111B
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],EDX
loc_1007111B:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_10071196
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	LEA EDI,DWORD PTR [EDX+0x04]
	LEA EBX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [EDI],0x00
	JZ loc_1007113E
	MOV ECX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10071142
loc_1007113E:
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [ECX],EAX
loc_10071142:
	MOV EAX,DWORD PTR [EBX]
	TEST EAX, EAX
	JZ loc_1007114F
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_10071157
loc_1007114F:
	MOV EAX,DWORD PTR [EDI]
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDI+0x14],EAX
loc_10071157:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	DEC DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV EAX,DWORD PTR [EAX+0x1C]
	TEST EAX, EAX
	JZ loc_10071106
	PUSH 0x00
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x40])
	JMP FAR loc_10071106
loc_10071196:
	XOR DI, DI
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
loc_100711A5:
	MOV ECX,DWORD PTR [ESI+0x00000100]
	MOVSX EAX,DI
	MOV ECX,DWORD PTR [EAX*4+ECX+0x78]
	TEST ECX, ECX
	JZ loc_100711BD
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_100711BD:
	INC DI
	CMP DI, 0x07
	JL loc_100711A5
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B520_sub_1007C520])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA54D0__RemoveAll_ViewManager__QAEXPAVViewROI___Z])
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4584]
	PUSH 0x000001F3
	PUSH EAX
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m7023E_sub_1007123E])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

