#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_1007123E()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10071250()
{
	enum{
		var_A8 = -0xA8,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m702E6_proc_100712E6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8C+0x4],0x000001F3
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4584]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m702DE_sub_100712DE])
	MOV WORD PTR SS:[EBP+var_84+0x4],0xFFFE
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m702F0_sub_100712F0])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100712DE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100712F0()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071300(DWORD arg1)
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m703B4_proc_100713B4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4548]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_90+0x4],ECX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m703AC_sub_100713AC])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m703D0_sub_100713D0])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x000000F8],ECX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m703BE_sub_100713BE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100713AC()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100713BE()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100713D0()
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m70487_proc_10071487]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	CMP DWORD PTR [ECX+0x000000F8],-0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_10071472
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX+0x000000F8]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4548]
	MOV DWORD PTR [EBP+var_90+0x4],ECX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7047F_sub_1007147F])
	MOV WORD PTR SS:[EBP+var_88+0x4],0xFFFE
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x000000F8],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m70491_sub_10071491])
loc_10071472:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007147F()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10071491()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100714A0()
{
	enum{
		var_A8 = -0xA8,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m70530_proc_10071530]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8C+0x4],0x00000190
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4580]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m70528_sub_10071528])
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m7053A_sub_1007153A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10071528()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007153A()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10071550()
{
	enum{
		var_A8 = -0xA8,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m705E6_proc_100715E6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8C+0x4],0x00000190
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4580]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m705DE_sub_100715DE])
	MOV WORD PTR SS:[EBP+var_84+0x4],0xFFFE
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m705F0_sub_100715F0])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100715DE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100715F0()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10071600()
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m707E1_proc_100717E1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI+0x08],0x00000000
	MOV DWORD PTR [ESI+0x14],0x00000000
	MOV WORD PTR DS:[ESI+0x0C],0x0000
	MOV WORD PTR DS:[ESI+0x0E],0x0000
	MOV WORD PTR DS:[ESI+0x10],0x0000
	LEA EBX,DWORD PTR [ESI+0x20]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV WORD PTR DS:[ESI+0x18],0x0000
	MOV WORD PTR DS:[ESI+0x1A],0x0000
	MOV WORD PTR DS:[ESI+0x1C],0x0000
	MOV EDI, 0x00000002
loc_10071676:
	MOV ECX, EBX
	ADD EBX, 0x0C
	CALL_LONG(offset [LEGO1_text.m16C00_sub_10017C00])
	DEC EDI
	JNS loc_10071676
	LEA EBX,DWORD PTR [ESI+0x44]
	MOV EDI, 0x00000002
loc_1007168B:
	MOV ECX, EBX
	ADD EBX, 0x0C
	CALL_LONG(offset [LEGO1_text.m16C00_sub_10017C00])
	DEC EDI
	JNS loc_1007168B
	XOR EDI, EDI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m53A8_ptr]
	MOV WORD PTR DS:[ESI+0x6C],DI
	MOV DWORD PTR [ESI+0x68],EDI
	MOV DWORD PTR [ESI+0x08],offset [LEGO1_data.m76A8]
	MOV WORD PTR DS:[ESI+0x0C],0x000E
	MOV DWORD PTR [ESI+0x14],offset LEGO1_data + 0x76E0
	MOV WORD PTR DS:[ESI+0x18],0x0005
	MOV WORD PTR DS:[ESI+0x6E],DI
	MOV WORD PTR DS:[ESI+0x70],DI
	MOV DWORD PTR [ESI+0x20],offset LEGO1_data + 0x76F8
	MOV WORD PTR DS:[ESI+0x24],0x0005
	MOV WORD PTR DS:[ESI+0x10],DI
	MOV WORD PTR DS:[ESI+0x0E],DI
	MOV WORD PTR DS:[ESI+0x1C],DI
	MOV WORD PTR DS:[ESI+0x1A],DI
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV WORD PTR DS:[ESI+0x28],DI
	PUSH EAX
	MOV WORD PTR DS:[ESI+0x26],DI
	LEA ECX,DWORD PTR [ESI+0x2C]
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7710
	MOV WORD PTR SS:[EBP+var_18+0x4],0x0003
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	MOV EBX, 0x00000004
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [ESI+0x38]
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7720
	MOV WORD PTR SS:[EBP+var_18+0x4],BX
	PUSH EAX
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [ESI+0x44]
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7730
	MOV WORD PTR SS:[EBP+var_18+0x4],BX
	PUSH EAX
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7740
	MOV WORD PTR SS:[EBP+var_18+0x4],BX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	PUSH ECX
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	LEA ECX,DWORD PTR [ESI+0x50]
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7750
	MOV WORD PTR SS:[EBP+var_18+0x4],0x0003
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x5C]
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	MOV DWORD PTR [EBP+var_1C+0x4],offset LEGO1_data + 0x7760
	MOV WORD PTR SS:[EBP+var_18+0x4],0x0002
	MOV WORD PTR SS:[EBP+var_14+0x2],DI
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV WORD PTR SS:[EBP+var_14+0x4],DI
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x68]
	LEA EDI,DWORD PTR [ESI+0x78]
	CALL_LONG(offset [LEGO1_text.m70800_sub_10071800])
	XOR EAX, EAX
	MOV ECX, 0x00000007
	REP STOSD
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071800(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV AX,WORD PTR DS:[EDX+0x04]
	MOV WORD PTR DS:[ECX+0x04],AX
	MOV AX,WORD PTR DS:[EDX+0x08]
	MOV WORD PTR DS:[ECX+0x08],AX
	MOV EAX, ECX
	MOV DX,WORD PTR DS:[EDX+0x06]
	MOV WORD PTR DS:[ECX+0x06],DX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10071920()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m70997_proc_10071997]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m53A8_ptr]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
loc_1007194B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOVSX ECX,SI
	LEA EDI,DWORD PTR [ECX*4+EAX+0x78]
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10071974
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_10071968
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10071968:
	MOV ECX,DWORD PTR [EDI]
	TEST ECX, ECX
	JZ loc_10071974
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10071974:
	INC SI
	CMP SI, 0x07
	JL loc_1007194B
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m709A1_sub_100719A1])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100719A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100719B0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m70AB5_proc_10071AB5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, ECX
	XOR EDI, EDI
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CMP DWORD PTR [EBP+arg1+0x4],EDI
	JZ loc_100719F2
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x53F0
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_1C+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],EDI
loc_100719F2:
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	XOR ECX, ECX
	MOV BYTE PTR [ESI+0x08],AL
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [ESI+0x10],ECX
	MOV DWORD PTR [ESI+0x14],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1510_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX],EDX
	MOV EDX, 0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x18],DX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m54C8_ptr]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],EDX
	MOV DWORD PTR [ESI+EDI+0x04],offset [LEGO1_rdata.m53F8_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX-0x20]
	MOV DWORD PTR [ESI+EAX],EDI
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [ESI+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_10071A7B()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217218-0x4A4B20],0x01
	JZ loc_10071A8C
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x24
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_10071A8C:
	RET
	TEST BYTE PTR [EBP-0x18],0x02
	JZ loc_10071A9E
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_10071A9E:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10071AD0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	MOV DWORD PTR [ECX-0x24],offset [LEGO1_rdata.m54C8_ptr]
	PUSH offset [LEGO1_text.m70B2C_proc_10071B2C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX-0x20]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+ECX-0x20],offset [LEGO1_rdata.m53F8_ptr]
	MOV EAX,DWORD PTR [EDX-0x20]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x20]
	MOV DWORD PTR [EDX+EAX-0x24],ECX
	CALL_LONG(offset [LEGO1_text.m70B36_sub_10071B36])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10071B36()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x04
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071CB0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [EAX],EDX
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOVSX EDX,WORD PTR [ECX+0x18]
	MOV ECX,DWORD PTR [EDX*4+EAX]
	CALL_LONG(offset [LEGO1_text.m1B130_sub_1001C130])
	MOV ECX,DWORD PTR [ESP+arg2]
	FSTP DWORD PTR [ECX]
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071D40(DWORD arg1, DWORD arg2)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x0C],0x00
	JNZ FAR loc_10071F01
	MOV EBX,DWORD PTR [ESP+arg2+0x1C]
	CMP EBX, 0x01
	JZ loc_10071D76
	CMP EBX, 0x02
	JZ FAR loc_10071E4D
	CMP EBX, 0x03
	JZ FAR loc_10071EC1
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10071D76:
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_10071DEA
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70FA0_sub_10071FA0])
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESP+var_C+0x1C],EDI
	PUSH 0x14
	MOV DWORD PTR [ESP+var_8+0x20],EBX
	MOV DWORD PTR [ESP+var_10+0x20],EAX
	LEA EBX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [ESP+var_4+0x20],0x00
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_10071DB9
	MOV ECX,DWORD PTR [ESP+var_10+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_10071DBE
loc_10071DB9:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10071DBE:
	MOV DWORD PTR [EBX],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX],EAX
	ADD EAX, 0x08
	JZ loc_10071DDE
	LEA EDX,DWORD PTR [ESP+var_C+0x1C]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX],ECX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10071DDE:
	POP EDI
	INC DWORD PTR [ESI+0x08]
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10071DEA:
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	PUSH 0x00
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4568]
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	MOV DWORD PTR [ESP+var_C+0x2C],EDI
	ADD ESP, 0x10
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESP+var_8+0x1C],EBX
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [ESP+var_4+0x1C],0x01
	MOV ECX,DWORD PTR [EDI]
	PUSH ECX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70F70_sub_10071F70])
	MOV EDX, EAX
	MOV DWORD PTR [EDI],EAX
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX],EDX
	ADD EDX, 0x08
	JZ loc_10071E41
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
loc_10071E41:
	POP EDI
	INC DWORD PTR [ESI+0x08]
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10071E4D:
	CMP DWORD PTR [ESI+0x08],0x00
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	JNZ loc_10071E96
	MOV EAX,DWORD PTR [ESI+0x04]
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	LEA EDX,DWORD PTR [ESP+var_10+0x1C]
	PUSH ECX
	PUSH EAX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x24],EDI
	PUSH EDX
	MOV DWORD PTR [ESP+var_8+0x28],EBX
	MOV BYTE PTR [ESP+var_4+0x28],0x01
	CALL_LONG(offset [LEGO1_text.m70F10_sub_10071F10])
	PUSH 0x00
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4568]
	PUSH EDI
	PUSH ECX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10071E96:
	MOV DWORD PTR [ESP+var_C+0x1C],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	LEA EDI,DWORD PTR [ESP+var_C+0x1C]
	LEA ECX,DWORD PTR [ESP+var_10+0x1C]
	MOV DWORD PTR [ESP+var_8+0x1C],EBX
	PUSH EDI
	MOV BYTE PTR [ESP+var_4+0x20],0x00
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70F10_sub_10071F10])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10071EC1:
	CMP DWORD PTR [ESI+0x08],0x00
	JNZ loc_10071F01
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	MOV EAX,DWORD PTR [ESI+0x04]
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	LEA EDX,DWORD PTR [ESP+var_10+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],EDI
	PUSH ECX
	PUSH EAX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x24],EBX
	PUSH EDX
	MOV BYTE PTR [ESP+var_4+0x28],0x01
	CALL_LONG(offset [LEGO1_text.m70F10_sub_10071F10])
	PUSH 0x00
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4568]
	PUSH EDI
	PUSH ECX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_10071F01:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071F10(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x14
	MOV EBX,DWORD PTR [EDI+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EBX, EBX
	JZ loc_10071F31
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EBX
	JMP loc_10071F36
loc_10071F31:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10071F36:
	MOV DWORD PTR [EDI+0x04],EAX
	LEA EDI,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDI, EDI
	MOV DWORD PTR [ECX],EAX
	JZ loc_10071F59
	MOV EDX,DWORD PTR [ESP+arg3+0xC]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI],ECX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI+0x08],EDX
loc_10071F59:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10071F70(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_10071F8E
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_10071F8E:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10071FA0()
{
__asm{
	JMP_LONG(offset [LEGO1_text.m148B0_loc_100158B0])
}
}

__declspec(naked) DWORD LEGO1_sub_10071FB0()
{
	enum{
		var_B4 = -0xB4,
		var_98 = -0x98,
		var_94 = -0x94,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	MOV DWORD PTR [ECX+0x0C],0x00000001
	PUSH offset [LEGO1_text.m710B7_proc_100720B7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000A4
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x08],0x00
	JZ FAR loc_100720A2
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ FAR loc_100720A2
loc_10072001:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [EAX+0x10],0x00
	JZ loc_10072069
	LEA ECX,DWORD PTR [EBP+var_B4+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4568]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_94+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m710AF_sub_100720AF])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA EDX,DWORD PTR [EBP+var_B4+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_98+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABF70_sub_100ACF70])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m710C1_sub_100720C1])
loc_10072069:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV ECX,DWORD PTR [EAX]
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV EAX, ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	DEC DWORD PTR [ECX+0x08]
	CMP DWORD PTR [ECX+0x04],EDX
	JNZ FAR loc_10072001
loc_100720A2:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100720AF()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100720C1()
{
	enum{
		arg1217180 = 0x4A4A70,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217180-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100720D0(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR ECX, ECX
	CMP DWORD PTR [ESI+0x0C],ECX
	JNZ FAR loc_100721F8
	XOR EBP, EBP
	CMP DWORD PTR [ESI+0x08],ECX
	JZ FAR loc_100721F8
	MOV EBX,DWORD PTR [ESP+arg1+0x1C]
	CMP EBX, ECX
	JZ loc_10072131
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EDI]
	MOV EDX, EAX
	CMP EAX, EDI
	JZ loc_10072148
loc_10072102:
	CMP BYTE PTR [EDX+0x10],CL
	JZ loc_1007210C
	CMP DWORD PTR [EDX+0x08],EBX
	JZ loc_10072114
loc_1007210C:
	MOV EDX,DWORD PTR [EDX]
	CMP EDX, EDI
	JNZ loc_10072102
	JMP loc_10072148
loc_10072114:
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EDX+0x04]
	PUSH EDX
	MOV DWORD PTR [ECX],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	JMP loc_10072143
loc_10072131:
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	MOV EDX,DWORD PTR [ECX]
	MOV ECX, ESI
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m71220_sub_10072220])
loc_10072143:
	MOV EBP, 0x00000001
loc_10072148:
	TEST EBP, EBP
	JZ FAR loc_100721F8
	CMP DWORD PTR [ESI+0x08],0x00
	JBE FAR loc_100721F8
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	ADD EAX, 0x08
	MOV EDX,DWORD PTR [ESP+var_8+0x1C]
	MOV EBP,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	MOV EDI,DWORD PTR [EDX]
	CMP EDI, ECX
	JZ loc_100721D4
loc_1007217C:
	CMP DWORD PTR [EDI+0x0C],0x01
	JNZ loc_100721CA
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x1C],ECX
	CMP EDI, ECX
	JZ loc_100721CA
	XOR EBX, EBX
loc_10072191:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	CMP BYTE PTR [EAX+0x10],BL
	JNZ loc_10072202
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x1C],ECX
	LEA ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	CMP EDI,DWORD PTR [ESP+var_8+0x1C]
	JNZ loc_10072191
loc_100721CA:
	MOV EDI,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP DWORD PTR [ESI+0x04],EDI
	JNZ loc_1007217C
loc_100721D4:
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	CMP BYTE PTR [EAX+0x08],0x00
	JNZ loc_100721F8
	MOV BYTE PTR [EAX+0x08],0x01
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4568]
	PUSH EDX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_100721F8:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10072202:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m70FA0_sub_10071FA0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10072220(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH ESI
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX, ECX
	MOV DWORD PTR [ESP+arg2+0x8],ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX],ECX
	POP ESI
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10072270()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m71425_proc_10072425]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x000000FC]
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	PUSH offset [LEGO1_text.m527F0_proc_100537F0]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	PUSH 0x14
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B250_sub_1008C250])
	LEA EAX,DWORD PTR [ESI+0x0000217C]
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH offset [LEGO1_text.m527F0_proc_100537F0]
	PUSH 0x14
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B250_sub_1008C250])
	MOV AL,BYTE PTR [EBP+var_14+0x3]
	PUSH 0x14
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [ESI+0x00004220],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EAX+0x04],EAX
	MOV DWORD PTR [ESI+0x00004224],EAX
	MOV DWORD PTR [ESI+0x00004228],EBX
	MOV DWORD PTR [ESI+0x0000422C],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5628_ptr]
	MOV DWORD PTR [ESI+0x000000F8],EBX
	MOV BYTE PTR [ESI+0x000041FC],BL
	MOV DWORD PTR [ESI+0x00004200],EBX
	MOV DWORD PTR [ESI+0x00004204],EBX
	MOV DWORD PTR [ESI+0x00004208],EBX
	MOV DWORD PTR [ESI+0x0000420C],EBX
	LEA EDI,DWORD PTR [ESI+0x00004230]
	XOR EAX, EAX
	MOV ECX, 0x0000000F
	MOV DWORD PTR [ESI+0x00004210],EBX
	MOV DWORD PTR [ESI+0x00004214],0xBF800000
	MOV BYTE PTR [ESI+0x0000421E],BL
	REP STOSD
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	FLD DWORD PTR [EAX+0x38]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x55F8]
	FSTP DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x38],ECX
	MOV BYTE PTR [EAX+0x5C],BL
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	FLD DWORD PTR [EAX+0x48]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x55F8]
	FSTP DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ESI
	MOV DWORD PTR [EAX+0x48],ECX
	MOV BYTE PTR [EAX+0x5C],BL
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100723C5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00004220
	JMP_LONG(offset [LEGO1_text.m71440_loc_10072440])
}
}

__declspec(naked) DWORD LEGO1_proc_100723D3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00004220
	JMP_LONG(offset [LEGO1_text.m714B0_loc_100724B0])
}
}

__declspec(naked) DWORD LEGO1_proc_100723E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00004220
	JMP_LONG(offset [LEGO1_text.m71650_loc_10072650])
}
}

__declspec(naked) DWORD LEGO1_proc_100723EF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x14
	ADD EAX, 0x0000217C
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007240A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x14
	ADD EAX, 0x000000FC
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100724F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m71440_loc_10072440])
}
}

__declspec(naked) DWORD LEGO1_sub_10072691()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m714B0_loc_100724B0])
}
}

__declspec(naked) DWORD LEGO1_sub_100726A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7176A_proc_1007276A]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5628_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m71D50_sub_10072D50])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m71726_sub_10072726])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m71734_sub_10072734])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7174F_sub_1007274F])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m71774_sub_10072774])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10072726()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00004220
	JMP_LONG(offset [LEGO1_text.m71650_loc_10072650])
}
}

__declspec(naked) DWORD LEGO1_sub_10072734()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x14
	ADD EAX, 0x0000217C
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007274F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m528A0_sub_100538A0]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x14
	ADD EAX, 0x000000FC
	PUSH 0x000001A0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10072774()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10072780(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	LEA EDX,DWORD PTR [EDX*4+EAX]
	SHL EDX, 0x05
	ADD EDX, ECX
	ADD EDX, 0x000000FC
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m717C0_sub_100727C0])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100727A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	LEA EDX,DWORD PTR [EDX*4+EAX]
	SHL EDX, 0x05
	ADD EDX, ECX
	ADD EDX, 0x0000217C
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m717D0_sub_100727D0])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100727C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	CALL_LONG(offset [LEGO1_text.m52930_sub_10053930])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100727D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	CALL_LONG(offset [LEGO1_text.m52930_sub_10053930])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100727E0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217246 = 0x4A4B78,
		arg1217247 = 0x4A4B7C,
	};

__asm{
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	LEA EAX,DWORD PTR [ECX+0x00000250]
	MOV EDI, ECX
	XOR ECX, ECX
loc_100727F1:
	TEST BYTE PTR [EAX],0x04
	JZ loc_10072810
	ADD EAX, 0x000001A0
	INC ECX
	CMP ECX, 0x14
	JL loc_100727F1
loc_10072801:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RETN 0x0010
loc_10072810:
	MOV DWORD PTR [ESP+var_1C+0x30],0x00000000
	LEA EAX,DWORD PTR [ECX*2+ECX]
	PUSH ECX
	MOV DWORD PTR [ESP+var_18+0x34],0x00000001
	LEA EAX,DWORD PTR [EAX*4+ECX]
	PUSH 0x01
	SHL EAX, 0x05
	PUSH EDI
	LEA EBX,DWORD PTR [EDI+EAX+0x000000FC]
	LEA ESI,DWORD PTR [EDI+EAX]
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m52980_sub_10053980])
	MOV EAX,DWORD PTR [ESP+arg4+0x30]
	MOV EBP,DWORD PTR [ESP+arg3+0x30]
	MOV ECX,DWORD PTR [ESP+arg2+0x30]
	PUSH EAX
	PUSH EBP
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m52B40_sub_10053B40])
	TEST EAX, EAX
	JZ loc_10072867
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RETN 0x0010
loc_10072867:
	MOV EAX,DWORD PTR [ESI+0x00000298]
	LEA ECX,DWORD PTR [ESP+var_1C+0x30]
	ADD ESI, 0x0000025C
	MOV DWORD PTR [ESP+var_20+0x30],EAX
	LEA EAX,DWORD PTR [ESP+var_20+0x30]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESP+arg2+0x38]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x3C]
	PUSH EBP
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m49380_sub_1004A380])
	TEST EAX, EAX
	JNZ FAR loc_10072940
	LEA EAX,DWORD PTR [ESP+var_C+0x30]
	PUSH EBP
	LEA ECX,DWORD PTR [ESP+var_14+0x34]
	MOV DWORD PTR [ESP+var_10+0x34],EAX
	MOV DWORD PTR [ESP+var_14+0x34],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	LEA EAX,DWORD PTR [ESP+var_2C+0x3C]
	LEA ECX,DWORD PTR [ESP+var_20+0x3C]
	MOV EBP,DWORD PTR [ESP+var_20+0x3C]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217247-0x4A4B20])
	MOV ECX,DWORD PTR [ESP+var_4+0x3C]
	MOV EAX,DWORD PTR [ESP+var_20+0x3C]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_1C+0x3C]
	CALL_LONG(DWORD PTR [EAX+0x48])
	MOV ECX,DWORD PTR [EDI+0x00004208]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBP,DWORD PTR [ESP+var_20+0x3C]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ECX+EAX+0x58]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [ESP+var_20+0x3C]
	ADD EAX, 0x30
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217246-0x4A4B20])
	MOV ECX,DWORD PTR [ESP+var_2C+0x3C]
	MOV EAX,DWORD PTR [ESP+var_28+0x3C]
	MOV DWORD PTR [ESP+var_24+0x3C],0x00000000
	PUSH ECX
	PUSH EAX
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m52CB0_sub_10053CB0])
	TEST EAX, EAX
	JNZ loc_10072940
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m456A0_sub_100466A0])
	MOV ECX,DWORD PTR [ESP+var_28+0x3C]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m563F0_sub_100573F0])
	PUSH 0x41200000
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX+0x30])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RETN 0x0010
loc_10072940:
	CMP DWORD PTR [ESP+var_18+0x30],0x00
	JZ FAR loc_10072801
	MOV EAX,DWORD PTR [ESP+var_20+0x30]
	MOV ECX, EBX
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m52D30_sub_10053D30])
	TEST EAX, EAX
	JNZ FAR loc_10072801
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m456A0_sub_100466A0])
	PUSH 0x41200000
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX+0x30])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10072980(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217309 = 0x4A4C74,
		arg1217312 = 0x4A4C80,
		arg1217327 = 0x4A4CBC,
	};

__asm{
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_C+0xC],ECX
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg2+0x10]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH EDI
	PUSH EBP
	XOR EDI, EDI
	LEA EBP,DWORD PTR [ECX+0x0000217C]
loc_1007299B:
	CMP EDI, 0x14
	JGE FAR loc_10072A7A
	TEST BYTE PTR [EBP+arg1217309-0x4A4B20],0x04
	JNZ FAR loc_10072A6E
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EDI
	MOV DWORD PTR [ESP+var_4+0x20],0x00000000
	PUSH 0x00
	PUSH ECX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m52980_sub_10053980])
	MOV EAX,DWORD PTR [ESP+arg4+0x1C]
	MOV ECX,DWORD PTR [ESP+arg3+0x1C]
	PUSH EAX
	PUSH ECX
	PUSH EBX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m52B40_sub_10053B40])
	TEST EAX, EAX
	JNZ FAR loc_10072A89
	MOV EAX,DWORD PTR [EBP+arg1217327-0x4A4B20]
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	LEA EDX,DWORD PTR [EBP+arg1217312-0x4A4B20]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x1C]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESP+arg3+0x24]
	PUSH EDX
	PUSH EAX
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m49380_sub_1004A380])
	TEST EAX, EAX
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	PUSH EAX
	JNZ loc_10072A62
	MOV ECX,DWORD PTR [ESP+var_4+0x20]
	PUSH ECX
	PUSH ESI
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m52CB0_sub_10053CB0])
	TEST EAX, EAX
	JNZ loc_10072A6E
	LEA EAX,DWORD PTR [EDI*2+EDI]
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	LEA EAX,DWORD PTR [EAX*4+EDI]
	SHL EAX, 0x05
	LEA EDI,DWORD PTR [ECX+EAX+0x0000217C]
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m456A0_sub_100466A0])
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m563F0_sub_100573F0])
	PUSH 0x41200000
	MOV EBX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x30])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
loc_10072A62:
	PUSH ESI
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m52D30_sub_10053D30])
	TEST EAX, EAX
	JZ loc_10072A98
loc_10072A6E:
	ADD EBP, 0x000001A0
	INC EDI
	JMP FAR loc_1007299B
loc_10072A7A:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
loc_10072A89:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
loc_10072A98:
	LEA EAX,DWORD PTR [EDI*2+EDI]
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	LEA EAX,DWORD PTR [EAX*4+EDI]
	SHL EAX, 0x05
	LEA EDI,DWORD PTR [ECX+EAX+0x0000217C]
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m456A0_sub_100466A0])
	PUSH 0x41200000
	MOV EBX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x30])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_10072AD0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	DEC EAX
	CMP EAX, 0x05
	JA_LONG(offset [LEGO1_text.m71C0F_loc_10072C0F])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m71C14_proc_10072C14+EAX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10072D50(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	MOV BYTE PTR [EAX+0x5C],0x01
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m53CD0_sub_10054CD0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	CMP DWORD PTR [EAX+0x64],ESI
	JNZ loc_10072D86
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10072D86:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10072DC5
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	CMP EAX,DWORD PTR [ESI+0x0000420C]
	JNZ loc_10072DB8
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x000000E4])
loc_10072DB8:
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
loc_10072DC5:
	CMP BYTE PTR [ESP+r+0x8],0x00
	JNZ loc_10072DD5
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1D9D0_sub_1001E9D0])
loc_10072DD5:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007310A()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007311C()
{
	enum{
		arg1217181 = 0x4A4A74,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217181-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10073240()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00004270]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_10073264
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3A060_sub_1003B060])
	MOV DWORD PTR [ESI+0x00004270],0x00000000
loc_10073264:
	MOV EAX, 0x00000001
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10073360(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00004208]
	CALL_LONG(offset [LEGO1_text.m407A0_sub_100417A0])
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m71AD0_sub_10072AD0])
	XOR EAX, EAX
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10073390(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	TEST BYTE PTR [offset LEGO1_data + 0x7814],0x1
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH ECX
	JNZ loc_100733AE
	MOV ECX,DWORD PTR [ESI+0x00004200]
	JMP loc_100733B4
loc_100733AE:
	MOV ECX,DWORD PTR [ESI+0x00004204]
loc_100733B4:
	CALL_LONG(offset [LEGO1_text.m3F350_sub_10040350])
	PUSH 0x03
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m71AD0_sub_10072AD0])
	XOR EAX, EAX
	POP ESI
	INC BYTE PTR [offset LEGO1_data + 0x7814]
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100733D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP DWORD PTR [ECX+0x00004200],0x00
	MOV EAX,DWORD PTR [ESP+arg1]
	JZ loc_100733E6
	MOV DWORD PTR [ECX+0x00004204],EAX
	RETN 0x0004
loc_100733E6:
	MOV DWORD PTR [ECX+0x00004200],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100733F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x00004208],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10073400()
{
__asm{
	MOV EDX,DWORD PTR [ECX+0x000000F8]
	MOV EAX, 0x00000002
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	MOV DWORD PTR [EDX+0x08],EAX
	PUSH 0x03
	MOV DWORD PTR [ECX+0x00004270],EAX
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10073430()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x000000F8]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	MOV DWORD PTR [EAX+0x08],0x00000003
	MOV DWORD PTR [ECX+0x00004270],0x00000002
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10073460(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDX,DWORD PTR [ECX+0x00004200]
	MOV ESI, ECX
	MOV ECX, 0x00000004
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	MOV EDX,DWORD PTR [ESI+0x00004204]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	MOV EDX,DWORD PTR [ESI+0x00004208]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	LEA ECX,DWORD PTR [ESI+0x00004220]
	CALL_LONG(offset [LEGO1_text.m70FB0_sub_10071FB0])
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	MOV ECX,DWORD PTR [ESI+0x0000420C]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m3640_sub_10004640])
	PUSH offset [LEGO1_data.m7834_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [ESI+0x0000420C]
	LEA EAX,DWORD PTR [ECX+0x000001F4]
	LEA EDX,DWORD PTR [ECX+0x000001A8]
	PUSH EAX
	LEA ESI,DWORD PTR [ECX+0x00000160]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX+0x54]
	PUSH ESI
	ADD EAX, 0x10
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m72510_sub_10073510])
	ADD ESP, 0x14
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_nullsub_1()
{
__asm{
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10073510(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_54 = -0x54,
		var_4C = -0x4C,
		var_44 = -0x44,
		var_3C = -0x3C,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
	};

__asm{
	SUB ESP, 0x30
	PUSH ESI
	PUSH offset [LEGO1_data.m78F0_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ESI,DWORD PTR [ESP+arg1+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x0C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x08]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x04]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x1C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x18]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x14]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x10]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x2C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x28]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x24]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x20]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x3C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x38]
	FSTP QWORD PTR [ESP+var_44+0x54]
	FLD DWORD PTR [EAX+0x34]
	FSTP QWORD PTR [ESP+var_4C+0x54]
	FLD DWORD PTR [EAX+0x30]
	FSTP QWORD PTR [ESP]
	PUSH offset [LEGO1_data.m78CC_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	PUSH offset [LEGO1_data.m78B4_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ESI,DWORD PTR [ESP+arg2+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x0C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x08]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x04]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x1C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x18]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x14]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x10]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x2C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x28]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x24]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x20]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x3C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x38]
	FSTP QWORD PTR [ESP+var_44+0x54]
	FLD DWORD PTR [EAX+0x34]
	FSTP QWORD PTR [ESP+var_4C+0x54]
	FLD DWORD PTR [EAX+0x30]
	FSTP QWORD PTR [ESP]
	PUSH offset [LEGO1_data.m78CC_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	PUSH offset [LEGO1_data.m78A0_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ESI,DWORD PTR [ESP+arg3+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x0C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x08]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x04]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x1C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x18]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x14]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x10]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x2C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x28]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x24]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x20]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x3C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x38]
	FSTP QWORD PTR [ESP+var_44+0x54]
	FLD DWORD PTR [EAX+0x34]
	FSTP QWORD PTR [ESP+var_4C+0x54]
	FLD DWORD PTR [EAX+0x30]
	FSTP QWORD PTR [ESP]
	PUSH offset [LEGO1_data.m78CC_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	PUSH offset [LEGO1_data.m7890_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ESI,DWORD PTR [ESP+arg4+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x0C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x08]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x04]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x1C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x18]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x14]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x10]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x2C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x28]
	PUSH offset [LEGO1_data.m78E0_str]
	FSTP QWORD PTR [ESP+var_44+0x58]
	FLD DWORD PTR [EAX+0x24]
	FSTP QWORD PTR [ESP+var_4C+0x58]
	FLD DWORD PTR [EAX+0x20]
	FSTP QWORD PTR [ESP+var_54+0x58]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	MOV EAX,DWORD PTR [ESI+0x04]
	SUB ESP, 0x08
	FLD DWORD PTR [EAX+0x3C]
	SUB ESP, 0x08
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_3C+0x54]
	FLD DWORD PTR [EAX+0x38]
	FSTP QWORD PTR [ESP+var_44+0x54]
	FLD DWORD PTR [EAX+0x34]
	FSTP QWORD PTR [ESP+var_4C+0x54]
	FLD DWORD PTR [EAX+0x30]
	FSTP QWORD PTR [ESP]
	PUSH offset [LEGO1_data.m78CC_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	LEA EAX,DWORD PTR [ESP+var_10+0x58]
	LEA ECX,DWORD PTR [ESP+var_28+0x58]
	MOV ESI,DWORD PTR [ESP+arg5+0x58]
	MOV DWORD PTR [ESP+var_14+0x58],EAX
	MOV DWORD PTR [ESP+var_2C+0x58],ECX
	ADD ESP, 0x24
	CMP DWORD PTR [ESI+0x30],0x00
	MOV EAX, offset [LEGO1_rdata.m1E8_ptr]
	MOV DWORD PTR [ESP+var_18+0x34],EAX
	MOV DWORD PTR [ESP+var_30+0x34],EAX
	JZ FAR loc_100739BA
	MOV EAX,DWORD PTR [ESI+0x04]
	LEA ECX,DWORD PTR [ESP+var_18+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m208_ptr])
	MOV EAX,DWORD PTR [ESI+0x1C]
	LEA ECX,DWORD PTR [ESP+var_34+0x38]
	MOV ESI,DWORD PTR [ESP+var_34+0x38]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x20])
	PUSH offset [LEGO1_data.m7878_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ECX,DWORD PTR [ESP+var_14+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	FLD DWORD PTR [ECX+0x0C]
	MOV ECX,DWORD PTR [ESP+var_10+0x38]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_28+0x38]
	FLD DWORD PTR [ECX+0x08]
	MOV ECX,DWORD PTR [ESP+r+0x38]
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_28+0x38]
	FLD DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x38]
	PUSH offset [LEGO1_data.m7864_str]
	FSTP QWORD PTR [ESP+var_2C+0x38]
	FLD DWORD PTR [ECX]
	FSTP QWORD PTR [ESP+var_34+0x38]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
	PUSH offset [LEGO1_data.m7848_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	MOV ECX,DWORD PTR [ESP+var_2C+0x38]
	ADD ESP, 0x04
	SUB ESP, 0x08
	FLD DWORD PTR [ECX+0x0C]
	MOV ECX,DWORD PTR [ESP+var_28+0x38]
	SUB ESP, 0x08
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_28+0x38]
	FLD DWORD PTR [ECX+0x08]
	MOV ECX,DWORD PTR [ESP+var_18+0x38]
	SUB ESP, 0x08
	FSTP QWORD PTR [ESP+var_28+0x38]
	FLD DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+var_10+0x38]
	PUSH offset [LEGO1_data.m7864_str]
	FSTP QWORD PTR [ESP+var_2C+0x38]
	FLD DWORD PTR [ECX]
	FSTP QWORD PTR [ESP+var_34+0x38]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x24
loc_100739BA:
	POP ESI
	ADD ESP, 0x30
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100739C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDX,DWORD PTR [ECX+0x00004200]
	MOV ESI, ECX
	MOV ECX, 0x00000004
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	MOV EDX,DWORD PTR [ESI+0x00004204]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	MOV EDX,DWORD PTR [ESI+0x00004208]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+EDI+0x000000E0],ECX
	LEA ECX,DWORD PTR [ESI+0x00004220]
	CALL_LONG(offset [LEGO1_text.m70FB0_sub_10071FB0])
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	MOV ECX,DWORD PTR [ESI+0x0000420C]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m3670_sub_10004670])
	PUSH offset [LEGO1_data.m7904_str]
	CALL_LONG(offset [LEGO1_text.m72500_nullsub_1])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [ESI+0x0000420C]
	LEA EAX,DWORD PTR [ECX+0x000001F4]
	LEA EDX,DWORD PTR [ECX+0x000001A8]
	PUSH EAX
	LEA ESI,DWORD PTR [ECX+0x00000160]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX+0x54]
	PUSH ESI
	ADD EAX, 0x10
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m72510_sub_10073510])
	ADD ESP, 0x14
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10073A60()
{
__asm{
	MOV AL,BYTE PTR [ECX+0x0000421E]
	XOR EDX, EDX
	DEC AL
	PUSH 0x00
	MOV DL, AL
	MOV BYTE PTR [ECX+0x0000421E],AL
	MOV ECX,DWORD PTR [EDX*4+ECX+0x00004230]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10073EA0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m72EFD_proc_10073EFD]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB50B0_sub_100B60B0])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x4C],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m56B0_ptr]
	MOV BYTE PTR [ESI+0x4E],AL
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x1C])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10074020()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m73074_proc_10074074]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m56B0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7307E_sub_1007407E])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007407E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB5390_loc_100B6390])
}
}

__declspec(naked) DWORD LEGO1_sub_100742B7()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_100742C9()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007445F()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10074518()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100745C9()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_100745E0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m73681_proc_10074681]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x000000F8],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5730_ptr]
	MOV WORD PTR DS:[ESI+0x00000100],AX
	MOV DWORD PTR [ESI+0x00000104],EAX
	MOV WORD PTR DS:[ESI+0x00000108],AX
	MOV DWORD PTR [ESI+0x000000FC],EAX
	MOV DWORD PTR [ESI+0x0000010C],EAX
	MOV DWORD PTR [ESI+0x00000110],EAX
	MOV DWORD PTR [ESI+0x00000114],EAX
	MOV BYTE PTR [ESI+0x00000118],AL
	PUSH ESI
	MOV DWORD PTR [ESI+0x0000011C],EAX
	MOV DWORD PTR [ESI+0x00000120],EAX
	MOV BYTE PTR [ESI+0x00000128],AL
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100747F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m738A1_proc_100748A1]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5730_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],EDX
	JNZ loc_10074841
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10074841:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EDX+0x00000104]
	MOV DWORD PTR [ECX+0x08],0x00000003
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [offset LEGO1_data + 0x7918],0x00000003
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m738AB_sub_100748AB])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100748AB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10074C9E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10074CA6()
{
	enum{
		arg1217142 = 0x4A49D8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217142-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10074D95()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10074DA7()
{
	enum{
		arg1217179 = 0x4A4A6C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
	MOV EDI, EDI
	JMP_LONG(offset [LEGO1_text.m73DB4_proc_10074DB4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10074DD0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR EAX, EAX
	CMP BYTE PTR [ESP+arg1],0x20
	JNZ loc_10074DFC
	CMP DWORD PTR [offset LEGO1_data + 0x7918],EAX
	JNZ loc_10074DFC
	PUSH 0x00000203
	ADD ECX, 0x0C
	PUSH 0x000001F4
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV EAX, 0x00000001
loc_10074DFC:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10074E00(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m74618_proc_10075618]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA ESI,DWORD PTR [ECX+0x0C]
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV ECX,DWORD PTR [ESI]
	CMP DWORD PTR [EDX+0x20],ECX
	JZ loc_10074E3B
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m74694_loc_10075694])
loc_10074E3B:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV WORD PTR DS:[EDX+0x00000108],0x0000
	MOV EDI,DWORD PTR [EDX+0x00000104]
	LEA ECX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [ECX]
	SUB EAX, 0x05
	CMP EAX, 0x0A
	JA_LONG(offset [LEGO1_text.m7468F_loc_1007568F])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m746C8_proc_100756C8+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10074F00()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10074F08()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007504E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075056()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100750EB()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100750F3()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075199()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100751A1()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075236()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007523E()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100752E4()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100752EC()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007537D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075385()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007542B()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075433()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100754C8()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100754D0()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075576()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007557E()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075610()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075622()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075710(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m74F4F_proc_10075F4F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	CMP WORD PTR DS:[ECX+0x00000100],0x01
	JNZ_LONG(offset [LEGO1_text.m74F64_loc_10075F64])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EAX+0x14]
	MOV EDX,DWORD PTR [EAX+0x10]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3CD70__PickROI__YAPAVLegoROI__JJ_Z])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m74F64_loc_10075F64])
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	CMP BYTE PTR [EAX],0x2A
	JNZ loc_10075767
	INC EAX
loc_10075767:
	PUSH EAX
	PUSH offset [LEGO1_data.m7944_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m74F64_loc_10075F64])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000088],0x01
	MOV BYTE PTR [EAX+0x00000336],0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV WORD PTR DS:[ECX+0x00000100],0x0003
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x00000104]
	LEA ECX,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [ECX]
	CMP EAX, 0x06
	JNZ FAR loc_10075842
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [EAX+0x00000128],0x00
	JNZ loc_10075838
	MOV BYTE PTR [EAX+0x00000128],0x01
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV EBX,DWORD PTR [EAX]
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x18])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH offset [LEGO1_data.m154_str]
	MOV EAX,DWORD PTR [ECX+0x00000104]
	MOV DWORD PTR [EAX+0x08],0x00000009
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [EAX+0x18],0x00000009
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00000203
	PUSH 0x000001F4
	MOV DWORD PTR [ECX+0x000000FC],0x0000001F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x0C
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
loc_10075838:
	MOV EAX, 0x00000001
	JMP_LONG(offset [LEGO1_text.m74F66_loc_10075F66])
loc_10075842:
	CMP EAX, 0x0A
	JZ loc_10075851
	CMP EAX, 0x08
	JNZ loc_10075838
	CMP EAX, 0x0A
	JNZ loc_10075886
loc_10075851:
	MOV DWORD PTR [ECX], 0x0000000B
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	PUSH 0x00000203
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x000001F4
	ADD EAX, 0x0C
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV EAX, 0x00000001
	JMP_LONG(offset [LEGO1_text.m74F66_loc_10075F66])
loc_10075886:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOVSX EAX,WORD PTR [EAX+0x000000F8]
	DEC EAX
	CMP EAX, 0x04
	JA loc_10075838
	JMP_LONG(DWORD PTR [offset LEGO1_text.m74F78_proc_10075F78+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1007593D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075945()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100759E2()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100759EA()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075A98()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075AA0()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075B3D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075B45()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075BF3()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075BFB()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075C98()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075CA0()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075D4A()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075D52()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075DEF()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075DF7()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075EA5()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075EAD()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075F47()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075F59()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10075F90(DWORD arg1)
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m751A5_proc_100761A5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP WORD PTR DS:[EAX+0x28],0x01
	PUSH ESI
	JNZ_LONG(offset [LEGO1_text.m7520B_loc_1007620B])
	MOV EAX,DWORD PTR [EAX+0x20]
	CMP EAX, 0x03
	JZ loc_10075FD6
	CMP EAX, 0x04
	JZ_LONG(offset [LEGO1_text.m750E4_loc_100760E4])
	JMP_LONG(offset [LEGO1_text.m7520B_loc_1007620B])
loc_10075FD6:
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00000203
	ADD ESI, 0x0C
	PUSH 0x000001F4
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP WORD PTR DS:[ECX+0x00000100],0x01
	JNZ_LONG(offset [LEGO1_text.m750B1_loc_100760B1])
	MOV ECX,DWORD PTR [ECX+0x00000104]
	MOV DWORD PTR [ECX+0x08],0x0000000E
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4558]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EDX,DWORD PTR [ECX]
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	LEA EDX,DWORD PTR [EBP+var_18+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7509E_sub_1007609E])
	MOV DWORD PTR [EBP+var_90+0x4],0x000001F7
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m750A6_sub_100760A6])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x0000010C],0x000001F7
	MOV WORD PTR DS:[EAX+0x00000108],0x0001
	JMP_LONG(offset [LEGO1_text.m7520B_loc_1007620B])
}
}

__declspec(naked) DWORD LEGO1_sub_1007609E()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100760A6()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007619D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100761AF()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10076370()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m753E7_proc_100763E7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV WORD PTR DS:[ESI+0x0C],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV WORD PTR DS:[ESI+0x0E],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m57A0_ptr]
	MOV WORD PTR DS:[ESI+0x10],AX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV WORD PTR DS:[ESI+0x12],AX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV WORD PTR DS:[ESI+0x14],AX
	MOV WORD PTR DS:[ESI+0x16],AX
	MOV EAX, ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007651F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_10076670()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m756D6_proc_100766D6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5808_ptr]
	MOV DWORD PTR [ESI+0x0000013C],0x41A00000
	MOV DWORD PTR [ESI+0x00000150],0x40400000
	MOV BYTE PTR [ESI+0x00000148],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100768D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_10076B60()
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
	};

__asm{
	SUB ESP, 0x54
	PUSH ESI
	PUSH EDI
	PUSH 0x0B
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	CMP BYTE PTR [EAX+0x22],0x00
	JNZ FAR loc_10076C26
	MOV BYTE PTR [EAX+0x22],0x01
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX,DWORD PTR [EAX+0x54]
	LEA EAX,DWORD PTR [ESP+var_40+0x5C]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	MOV DWORD PTR [ESP+var_48+0x5C],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	FLD DWORD PTR [EAX+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x57E0]
	FSTP DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [EAX+0x24]
	FADD QWORD PTR [offset LEGO1_rdata + 0x57E8]
	ADD EAX, 0x30
	FSTP DWORD PTR [ESP+var_54+0x5C]
	FLD DWORD PTR [EAX-0x10]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x57E0]
	FST DWORD PTR [ESP+var_4C+0x5C]
	FADD DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	ADD EAX, 0x34
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_54+0x5C]
	PUSH 0x01
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x74]
	PUSH 0x01
	ADD EAX, 0x38
	LEA ECX,DWORD PTR [ESP+var_48+0x78]
	PUSH ECX
	PUSH 0x0000035A
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_50+0x80]
	FSTP DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
loc_10076C26:
	POP EDI
	POP ESI
	ADD ESP, 0x54
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10076D20()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m75DF3_proc_10076DF3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	LEA EDI,DWORD PTR [ESI+0x00000100]
	XOR EAX, EAX
	MOV ECX, 0x0000001A
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [ESI+0x000000F8],0x80000000
	MOV BYTE PTR [ESI+0x000000FC],0x01
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5928_ptr]
	REP STOSD
	MOV ECX, 0x00000046
	LEA EDI,DWORD PTR [ESI+0x00000168]
	REP STOSD
	MOV WORD PTR DS:[ESI+0x0000028E],BX
	MOV ECX, 0x0000000A
	LEA EDI,DWORD PTR [ESI+0x00000290]
	REP STOSD
	MOV EDI, 0xFFFFFFFF
	LEA EAX,DWORD PTR [ESI+0x00000280]
	PUSH ESI
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x08],EDI
	MOV WORD PTR DS:[EAX+0x0C],DI
	MOV WORD PTR DS:[ESI+0x000002B8],BX
	MOV DWORD PTR [ESI+0x000002BC],EBX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV BYTE PTR [ESI+0x000002C1],BL
	MOV DWORD PTR [ESI+0x000002C4],EBX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x000002C8],EBX
	MOV DWORD PTR [ESI+0x000002CC],EBX
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10076F50()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7604D_proc_1007704D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5928_ptr]
	SUB ESP, 0x08
	XOR EAX, EAX
	MOV WORD PTR SS:[EBP+var_10+0x2],AX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	PUSH ESI
	PUSH EDI
loc_10076F80:
	MOVSX ESI,WORD PTR [EBP+var_10+0x2]
	XOR DI, DI
	MOV EAX, ESI
	SHL ESI, 0x03
	SUB ESI, EAX
loc_10076F8E:
	MOVSX EAX,DI
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	LEA EBX,DWORD PTR [EAX*4+ECX+0x00000168]
	MOV EAX,DWORD PTR [EBX]
	TEST EAX, EAX
	JZ loc_10076FC2
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_10076FB0
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10076FB0:
	MOV ECX,DWORD PTR [EBX]
	TEST ECX, ECX
	JZ loc_10076FBC
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10076FBC:
	MOV DWORD PTR [EBX], 0x00000000
loc_10076FC2:
	INC DI
	CMP DI, 0x07
	JL loc_10076F8E
	INC WORD PTR SS:[EBP+var_10+0x2]
	CMP WORD PTR SS:[EBP+var_10+0x2],0x0A
	JL loc_10076F80
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EAX+0x64],ECX
	JNZ loc_10076FFE
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10076FFE:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [ECX+0x000002CC]
	TEST EAX, EAX
	JZ loc_10077031
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_10077031:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m76057_sub_10077057])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10077057()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100772D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	PUSH EBX
	PUSH ESI
	CMP AL, 0x61
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	JB loc_100772EC
	CMP AL, 0x7A
	JA loc_100772EC
	MOVZX DI,AL
	SUB DI, 0x20
	JMP loc_100772F0
loc_100772EC:
	MOVZX DI,AL
loc_100772F0:
	CMP DI, 0x41
	JL loc_100772FC
	CMP DI, 0x5A
	JLE loc_10077337
loc_100772FC:
	CMP DI, 0x08
	JZ FAR loc_10077411
	CMP DI, 0x20
	JNZ FAR loc_1007748F
	PUSH 0x000001FA
	ADD ESI, 0x0C
	PUSH 0x000001F4
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	JMP FAR loc_1007748F
loc_10077337:
	CMP DI, 0x08
	JZ FAR loc_10077417
	MOV BX,WORD PTR DS:[ESI+0x0000028E]
	CMP BX, 0x07
	JGE FAR loc_10077411
	MOVSX EAX,DI
	LEA EBP,DWORD PTR [EAX*4+ESI-0x04]
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0000008C])
	MOVSX ECX,BX
	MOV DWORD PTR [ECX*4+ESI+0x00000168],EAX
	MOVSX EDX,WORD PTR [ESI+0x0000028E]
	CMP DWORD PTR [EDX*4+ESI+0x00000168],0x00
	JZ FAR loc_1007748F
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH 0x01
	MOV ECX,DWORD PTR [EAX+0x1C]
	INC WORD PTR DS:[ECX+0x24]
	MOVSX EDX,WORD PTR [ESI+0x0000028E]
	MOV ECX,DWORD PTR [EDX*4+ESI+0x00000168]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOVSX EDX,WORD PTR [ESI+0x0000028E]
	PUSH 0x04
	MOV ECX,DWORD PTR [EDX*4+ESI+0x00000168]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x44])
	MOVSX EAX,WORD PTR [ESI+0x0000028E]
	PUSH 0x79
	MOV ECX,DWORD PTR [EAX*4+ESI+0x00000168]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	SHL EDX, 0x03
	SUB EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	ADD EDX, 0x00000157
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	CMP WORD PTR DS:[ESI+0x0000028E],0x00
	JNZ loc_100773F5
	MOV ECX,DWORD PTR [ESI+0x00000290]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_100773F5:
	SUB DI, 0x41
	MOVSX EAX,WORD PTR [ESI+0x0000028E]
	MOV WORD PTR DS:[EAX*2+ESI+0x00000280],DI
	INC WORD PTR DS:[ESI+0x0000028E]
	JMP loc_1007748F
loc_10077411:
	CMP DI, 0x08
	JNZ loc_1007748F
loc_10077417:
	MOV AX,WORD PTR DS:[ESI+0x0000028E]
	TEST AX, AX
	JLE loc_1007748F
	DEC AX
	PUSH 0x00
	MOVSX EDX,AX
	MOV WORD PTR DS:[ESI+0x0000028E],AX
	MOV ECX,DWORD PTR [EDX*4+ESI+0x00000168]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOVSX EDX,WORD PTR [ESI+0x0000028E]
	MOV ECX,DWORD PTR [EDX*4+ESI+0x00000168]
	TEST ECX, ECX
	JZ loc_10077455
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10077455:
	MOVSX EAX,WORD PTR [ESI+0x0000028E]
	MOV DWORD PTR [EAX*4+ESI+0x00000168],0x00000000
	CMP WORD PTR DS:[ESI+0x0000028E],0x00
	JNZ loc_1007747E
	MOV ECX,DWORD PTR [ESI+0x00000290]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_1007747E:
	MOVSX EAX,WORD PTR [ESI+0x0000028E]
	MOV WORD PTR DS:[EAX*2+ESI+0x00000280],0xFFFF
loc_1007748F:
	MOV EAX, 0x00000001
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100774A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV AX,WORD PTR DS:[EDI+0x28]
	CMP AX, 0x0001
	JL FAR loc_100775A9
	CMP AX, 0x001C
	JG FAR loc_100775A9
	CMP DWORD PTR [EDI+0x20],0x05
	JNZ FAR loc_1007755A
	CMP AX, 0x001C
	JNZ loc_10077527
	PUSH 0x000001FA
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH 0x000001F4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x10],0x00
	MOV EAX,DWORD PTR [ESI+0x000002BC]
	JNZ loc_10077501
	MOV DWORD PTR [EAX+0x74],0x0000000F
	JMP loc_10077508
loc_10077501:
	MOV DWORD PTR [EAX+0x74],0x00000002
loc_10077508:
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10077527:
	JLE loc_10077534
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10077534:
	CMP AX, 0x001B
	JL loc_10077541
	MOV EAX, 0x00000008
	JMP loc_10077547
loc_10077541:
	MOVSX EAX,AX
	ADD EAX, 0x40
loc_10077547:
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m762D0_sub_100772D0])
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1007755A:
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	PUSH 0x000001FA
	LEA ECX,DWORD PTR [ESI+0x0C]
	MOV BYTE PTR [EAX+0x00000088],0x01
	PUSH 0x000001F4
	MOV BYTE PTR [EAX+0x00000336],BL
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [EDI+0x20]
loc_10077587:
	MOVSX EAX,BX
	MOV EDX,DWORD PTR [EAX*4+ESI+0x00000290]
	MOV EDI,DWORD PTR [EDX+0x1C]
	CMP DWORD PTR [EDI+0x1C],ECX
	JZ loc_100775A1
	INC BX
	CMP BX, 0x0A
	JL loc_10077587
loc_100775A1:
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m765C0_sub_100775C0])
loc_100775A9:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100775C0(DWORD arg1)
{
	enum{
		var_140 = -0x140,
		var_124 = -0x124,
		var_120 = -0x120,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m767B8_proc_100777B8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX+0x000002BC]
	SUB ESP, 0x00000130
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EAX+0x78],0x00
	JZ loc_100775FB
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m38980__Save_LegoGameState__QAEJK_Z])
loc_100775FB:
	MOV AX,WORD PTR SS:[EBP+arg1+0x4]
	TEST AX, AX
	JNZ loc_1007761B
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x00000280
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m396E0_sub_1003A6E0])
	JMP loc_1007761D
loc_1007761B:
	DEC AX
loc_1007761D:
	MOV WORD PTR SS:[EBP+var_14+0x2],AX
	MOVSX EAX,WORD PTR [EBP+var_14+0x2]
	CMP EAX, -0x01
	JZ_LONG(offset [LEGO1_text.m766FA_loc_100776FA])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m767CD_loc_100777CD])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AD00_sub_1003BD00])
	LEA ECX,DWORD PTR [EBP+var_140+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4550]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_120+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m766E7_sub_100776E7])
	MOV DWORD PTR [EBP+var_124+0x4],0x00000037
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	LEA EAX,DWORD PTR [EBP+var_140+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF50__Start__YAJPAVMxDSAction___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m766EF_sub_100776EF])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EAX+0x000002C1],0x01
	MOV ECX,DWORD PTR [EBP+var_14+0x2]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m39540_sub_1003A540])
	MOV AX,WORD PTR SS:[EBP+var_14+0x2]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	INC AX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m76860_sub_10077860])
	PUSH 0x02
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m392E0__SerializePlayersInfo_LegoGameState__QAEXF_Z])
	JMP_LONG(offset [LEGO1_text.m767F4_loc_100777F4])
}
}

__declspec(naked) DWORD LEGO1_sub_100776E7()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100776EF()
{
	enum{
		arg1217145 = 0x4A49E4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217145-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100777B0()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100777C2()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10077860(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217254 = 0x4A4B98,
	};

__asm{
	PUSH EBX
	PUSH ESI
	XOR SI, SI
	PUSH EDI
	PUSH EBP
	MOV EBX, ECX
	MOVSX EDI,WORD PTR [ESP+arg1+0x10]
	MOV EAX, EDI
	SHL EDI, 0x03
	SUB EDI, EAX
loc_10077875:
	MOV EAX,DWORD PTR [EBX+0x000002BC]
	MOVSX EBP,SI
	MOV ECX,DWORD PTR [EBP*4+EAX+arg1217254-0x4A4B20]
	TEST ECX, ECX
	JZ loc_1007788C
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007788C:
	INC SI
	LEA EAX,DWORD PTR [EBP+EDI]
	LEA EAX,DWORD PTR [EAX*4+EBX+0x00000168]
	CMP SI, 0x07
	MOV EDX,DWORD PTR [EBX+0x000002BC]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP*4+EDX+arg1217254-0x4A4B20],ECX
	MOV DWORD PTR [EAX], 0x00000000
	JL loc_10077875
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100778C0()
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m76CA9_proc_10077CA9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x10],0x00
	JNZ_LONG(offset [LEGO1_text.m76C89_loc_10077C89])
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV ECX, offset LEGO1_data + 0x1D4
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV EAX,DWORD PTR [EAX+0x00000110]
loc_1007790F:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_1007792F
	OR DL, DL
	JZ loc_1007792B
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_1007792F
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_1007790F
loc_1007792B:
	XOR EAX, EAX
	JMP loc_10077934
loc_1007792F:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10077934:
	TEST EAX, EAX
	JZ FAR loc_100779BD
	XOR EBX, EBX
	MOV EDI, 0x00000001
	PUSH EBX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDI
	ADD EAX, 0x0C
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV ESI, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],EBX
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2230_ptr]
	MOV DWORD PTR [EBP+var_20+0x4],0x00000013
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	MOV WORD PTR SS:[EBP+var_18+0x4],DI
	PUSH ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV BYTE PTR [EBP+var_14+0x2],BL
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mAB6C0_sub_100AC6C0])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m769FB_sub_100779FB])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	INC WORD PTR DS:[ECX+0x000002B8]
loc_100779BD:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EAX+0x0000016C]
loc_100779CB:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ_LONG(offset [LEGO1_text.m76A03_loc_10077A03])
	OR DL, DL
	JZ loc_100779E7
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ_LONG(offset [LEGO1_text.m76A03_loc_10077A03])
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_100779CB
loc_100779E7:
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m76A08_loc_10077A08])
}
}

__declspec(naked) DWORD LEGO1_sub_100779FB()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1ABF0_loc_1001BBF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10077AD3()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1ABF0_loc_1001BBF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10077BAD()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1ABF0_loc_1001BBF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10077CB3()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1ABF0_loc_1001BBF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10077F28()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10077F30()
{
	enum{
		arg1217173 = 0x4A4A54,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217173-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10077FA9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10077FBB()
{
	enum{
		arg1217173 = 0x4A4A54,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217173-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10078115()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10078127()
{
	enum{
		arg1217157 = 0x4A4A14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217157-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100781D0()
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	XOR EBP, EBP
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV EBX, EAX
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	MOVSX EAX,WORD PTR [ESI+0x0C]
	DEC EAX
	CMP EAX, 0x03
	JA_LONG(offset [LEGO1_text.m772C9_loc_100782C9])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m77340_proc_10078340+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10078350()
{
	enum{
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000290]
	MOV ESI, ECX
	ADD EAX, 0x40
	JZ loc_100783CD
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	CMP ECX, EAX
	JZ loc_1007836F
	MOV ECX,DWORD PTR [ECX+0x08]
	JMP loc_10078373
loc_1007836F:
	MOV ECX,DWORD PTR [ESP+var_4+0x8]
loc_10078373:
	TEST ECX, ECX
	JZ loc_10078382
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x78])
	MOV DWORD PTR [ESI+0x000002C8],EAX
loc_10078382:
	PUSH offset [LEGO1_data.m7984_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m184_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_100783A4
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x78])
	MOV DWORD PTR [ESI+0x000002C4],EAX
loc_100783A4:
	MOV EAX,DWORD PTR [ESI+0x000002C8]
	TEST EAX, EAX
	JZ loc_100783CD
	CMP DWORD PTR [ESI+0x000002C4],0x00
	JZ loc_100783CD
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mBAFB0_sub_100BBFB0])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x000002CC],EAX
	MOV AL, 0x01
	POP ESI
	ADD ESP, 0x04
	RET
loc_100783CD:
	XOR AL, AL
	POP ESI
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10078400()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m774E0_proc_100784E0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m67420_sub_10068420])
	LEA ECX,DWORD PTR [ESI+0x000000C8]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	CALL_LONG(offset [LEGO1_text.m9FB30_sub_100A0B30])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV WORD PTR DS:[ESI+0x000000BC],DI
	LEA EAX,DWORD PTR [ESI+0x000000E8]
	MOV WORD PTR DS:[ESI+0x000000BE],DI
	MOV DWORD PTR [ESI+0x000000E4],EAX
	MOV WORD PTR DS:[ESI+0x000000C0],DI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m59E0_ptr]
	MOV DWORD PTR [ESI+0x00000128],EDI
	MOV DWORD PTR [ESI+0x000000C4],EDI
	MOV DWORD PTR [ESI+0x00000130],EDI
	MOV DWORD PTR [ESI+0x0000012C],EDI
	MOV DWORD PTR [ESI+0x00000134],EDI
	MOV DWORD PTR [ESI+0x00000138],EDI
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x0000013C],EDI
	MOV DWORD PTR [ESI+0x00000140],EDI
	MOV DWORD PTR [ESI+0x00000144],EAX
	MOV DWORD PTR [ESI+0x00000148],EAX
	MOV DWORD PTR [ESI+0x0000014C],EDI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x000000E0],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x000000E0],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10078680()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7777C_proc_1007877C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m59E0_ptr]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CMP DWORD PTR [ECX+0x00000128],ESI
	JZ loc_10078718
	CMP WORD PTR DS:[ECX+0x000000BE],SI
	JLE loc_10078706
loc_100786C0:
	MOVSX EAX,SI
	INC SI
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA EDI,DWORD PTR [ECX*4+0x00000000]
	MOV ECX,DWORD PTR [EAX+0x00000128]
	MOV EDX,DWORD PTR [EDI+ECX]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x00000128]
	MOV EAX,DWORD PTR [EDI+EDX+0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP WORD PTR DS:[ECX+0x000000BE],SI
	JG loc_100786C0
loc_10078706:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000128]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10078718:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000CC]
	MOV DWORD PTR [ECX+0x08],0x00000000
	MOV ECX,DWORD PTR [EAX+0x000000CC]
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [EDX], 0x00000000
	MOV EAX,DWORD PTR [EAX+0x0000014C]
	TEST EAX, EAX
	JZ loc_1007874A
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007874A:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m7776E_sub_1007876E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m77786_sub_10078786])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007876E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000C8
	JMP_LONG(offset [LEGO1_text.m9FBC0_loc_100A0BC0])
}
}

__declspec(naked) DWORD LEGO1_sub_10078786()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m67670_loc_10068670])
}
}

__declspec(naked) DWORD LEGO1_sub_10078E11()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079050(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOVSX EAX,WORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EAX*2+EAX]
	LEA EDI,DWORD PTR [ECX*4+0x00000000]
	MOV EAX,DWORD PTR [ESI+0x00000128]
	ADD EAX, EDI
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m78090_sub_10079090])
	MOV ECX,DWORD PTR [ESI+0x00000128]
	MOV EDX,DWORD PTR [EDI+ECX+0x04]
	MOV ECX, ESI
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m785D0_sub_100795D0])
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079090(DWORD arg1, DWORD arg2)
{
	enum{
		var_28 = -0x28,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x28
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0x30]
	PUSH EDI
	MOV EDI, ECX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0x38]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ FAR loc_1007914F
	PUSH EBX
	MOV EAX,DWORD PTR [EDI+0x64]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m786B0_sub_100796B0])
	MOV ECX,DWORD PTR [EDI+0x64]
	MOV EBX, EAX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m786B0_sub_100796B0])
	MOV EDX, EAX
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [ESP+var_28+0x34]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x04]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	LEA EDI,DWORD PTR [ESP+var_28+0x34]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EDX+0x04]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV DI,WORD PTR DS:[EBX+0x20]
	MOV CX,WORD PTR DS:[EDX+0x20]
	MOV WORD PTR DS:[EBX+0x20],CX
	MOV WORD PTR DS:[EDX+0x20],DI
loc_1007914F:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x28
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10079160()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m785A4_proc_100795A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x64]
	PUSH EDI
	MOV EBX, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CF90_sub_1003DF90])
	MOV WORD PTR SS:[EBP+var_10+0x2],AX
	ADD ESP, 0x04
	MOV WORD PTR SS:[EBP+var_18+0x2],0x0000
loc_10079199:
	MOV AX,WORD PTR SS:[EBP+var_18+0x2]
	CMP WORD PTR SS:[EBP+var_10+0x2],AX
	JLE FAR loc_10079291
	MOVSX EAX,AX
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x64]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3CFD0_sub_1003DFD0])
	ADD ESP, 0x08
	MOV ESI,DWORD PTR [EAX+0x04]
	MOV ECX, EBX
	MOV EDI,DWORD PTR [ESI+0x04]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m78B20_sub_10079B20])
	TEST AL, AL
	JZ loc_1007922F
	MOV DWORD PTR [EBX+0x000000C4],ESI
	CMP WORD PTR DS:[ESI+0x0A],0x00
	JNZ FAR loc_10079288
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10079203
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m9EAA0_sub_1009FAA0])
loc_10079203:
	INC WORD PTR SS:[EBP+var_18+0x2]
	MOV ECX,DWORD PTR [EBX+0x000000C4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR DS:[ECX+0x0A],0x0001
	MOV ECX,DWORD PTR [EBX+0x000000C4]
	MOV DWORD PTR [ECX+0x14],EAX
	MOV DWORD PTR [ECX+0x28],0x00000000
	JMP FAR loc_10079199
loc_1007922F:
	PUSH EDI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m78B80_sub_10079B80])
	TEST AL, AL
	JZ loc_1007924B
	INC WORD PTR DS:[EBX+0x000000BE]
	INC WORD PTR SS:[EBP+var_18+0x2]
	JMP FAR loc_10079199
loc_1007924B:
	TEST DWORD PTR [EBX+0x00000134],0x7FFFFFFF
	JNZ loc_10079288
	PUSH EDI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m78BF0_sub_10079BF0])
	TEST AL, AL
	JZ loc_10079288
	MOV EAX,DWORD PTR [EBX+0x64]
	FILD DWORD PTR [EAX+0x08]
	XOR EAX, EAX
	FSTP DWORD PTR [EBX+0x00000134]
	FLD DWORD PTR [EBX+0x00000134]
	MOV AX,WORD PTR DS:[ESI+0x08]
	DEC EAX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	FIDIV DWORD PTR [EBP+var_18+0x4]
	FSTP DWORD PTR [EBX+0x00000138]
loc_10079288:
	INC WORD PTR SS:[EBP+var_18+0x2]
	JMP FAR loc_10079199
loc_10079291:
	MOVSX ESI,WORD PTR [EBX+0x000000BE]
	LEA EAX,DWORD PTR [ESI*2+ESI]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	TEST EAX, EAX
	JZ loc_100792CC
	MOV EDI, EAX
	DEC ESI
	JS loc_100792C7
loc_100792BA:
	MOV ECX, EDI
	ADD EDI, 0x0C
	CALL_LONG(offset [LEGO1_text.m785C0_sub_100795C0])
	DEC ESI
	JNS loc_100792BA
loc_100792C7:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	JMP loc_100792CE
loc_100792CC:
	XOR EAX, EAX
loc_100792CE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV WORD PTR SS:[EBP+var_18+0x2],0x0000
	MOV DWORD PTR [EBX+0x00000128],EAX
loc_100792E1:
	MOV AX,WORD PTR SS:[EBP+var_18+0x2]
	CMP WORD PTR SS:[EBP+var_10+0x2],AX
	JLE FAR loc_100793BB
	MOVSX EAX,AX
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x64]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3CFD0_sub_1003DFD0])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDX
	MOV DWORD PTR [EBP+var_20+0x4],EDX
	CALL_LONG(offset [LEGO1_text.mD0FD0_sub_100D1FD0])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX, EBX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m78B40_sub_10079B40])
	TEST AL, AL
	JZ FAR loc_100793B2
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	SUB EAX, EAX
	LEA ESI,DWORD PTR [ECX-0x01]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_20+0x4]
	MOVSX ECX,BYTE PTR [EDX+ESI-0x01]
	LEA ESI,DWORD PTR [ECX*2+ECX]
	MOV ECX, 0xFFFFFFFF
	MOV EDX,DWORD PTR [EBX+0x00000128]
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [ESI*4+EDX+0xFFFFFCF8],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOVSX ECX,BYTE PTR [EAX+ECX-0x02]
	MOV EAX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [ECX*2+ECX]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [EDX*4+EAX+0xFFFFFCF8]
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	AND ECX, 0x03
	REP MOVSB
loc_100793B2:
	INC WORD PTR SS:[EBP+var_18+0x2]
	JMP FAR loc_100792E1
loc_100793BB:
	XOR EAX, EAX
	MOV WORD PTR SS:[EBP+var_14+0x4],AX
	MOV WORD PTR SS:[EBP+var_18+0x2],AX
loc_100793C5:
	MOV AX,WORD PTR SS:[EBP+var_18+0x2]
	CMP WORD PTR SS:[EBP+var_10+0x2],AX
	JLE FAR loc_100794CC
	MOVSX EAX,AX
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x64]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3CFD0_sub_1003DFD0])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ECX, EBX
	PUSH EDX
	MOV DWORD PTR [EBP+var_20+0x4],EDX
	CALL_LONG(offset [LEGO1_text.m78B80_sub_10079B80])
	TEST AL, AL
	JZ FAR loc_100794C3
	MOV WORD PTR SS:[EBP+var_14+0x2],0x0000
	CMP WORD PTR DS:[EBX+0x000000BE],0x00
	JLE FAR loc_100794C3
loc_10079413:
	MOVSX EAX,WORD PTR [EBP+var_14+0x2]
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	SHL ECX, 0x02
	SUB EAX, EAX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ESI,DWORD PTR [EBX+0x00000128]
	NOT ECX
	DEC ECX
	MOV EDX,DWORD PTR [EBP+var_24+0x4]
	SUB ECX, 0x02
	PUSH ECX
	PUSH EAX
	MOV EAX,DWORD PTR [EDX+ESI+0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_100794AE
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [EBP+var_24+0x4]
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBX+0x00000128]
	MOV DWORD PTR [EDX+ECX],EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX+0x00000128]
	MOV EDI,DWORD PTR [EDX+EDI]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	INC WORD PTR SS:[EBP+var_14+0x4]
	MOV AX,WORD PTR SS:[EBP+var_14+0x4]
	CMP WORD PTR DS:[EBX+0x000000BE],AX
	JZ loc_100794C3
loc_100794AE:
	INC WORD PTR SS:[EBP+var_14+0x2]
	MOV AX,WORD PTR SS:[EBP+var_14+0x2]
	CMP WORD PTR DS:[EBX+0x000000BE],AX
	JG FAR loc_10079413
loc_100794C3:
	INC WORD PTR SS:[EBP+var_18+0x2]
	JMP FAR loc_100793C5
loc_100794CC:
	PUSH 0x10
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EDI, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	TEST ESI, ESI
	JZ loc_100794F4
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98D60_sub_10099D60])
	MOV EDI, EAX
loc_100794F4:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x34
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	TEST EAX, EAX
	JZ loc_1007951C
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m9ECF0_sub_1009FCF0])
	JMP loc_1007951E
loc_1007951C:
	XOR EAX, EAX
loc_1007951E:
	MOV DWORD PTR [EDI+0x04],EAX
	MOV ECX,DWORD PTR [EBX+0x64]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ESI,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ESI+0x04]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m9F360_sub_100A0360])
	MOV DWORD PTR [EDI+0x08],0x00000001
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EBX+0x64]
	PUSH offset [LEGO1_data.m79C4_str]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m78720_sub_10079720])
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV DWORD PTR [EDI+0x0C],ESI
	MOV DWORD PTR [EBX+0x000000CC],EDI
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007957D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007958A()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10079597()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100795C0()
{
__asm{
	XOR EAX, EAX
	MOV WORD PTR DS:[ECX+0x08],AX
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100795D0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m78663_proc_10079663]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x04
	MOV EDX,DWORD PTR [ECX+0x64]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX,DWORD PTR [EDX+0x04]
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m786B0_sub_100796B0])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10079651
	MOV EDI,DWORD PTR [ESI+0x1C]
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EBX, EAX
	MOV EAX, 0x00000000
	TEST EBX, EBX
	JZ loc_1007962D
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m9FF60_sub_100A0F60])
loc_1007962D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	XOR ECX, ECX
	PUSH EDI
	MOV DWORD PTR [EAX+0x04],ECX
	MOV BYTE PTR [EAX+0x08],CL
	MOV WORD PTR DS:[ESI+0x0E],0x0001
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [ESI+0x30],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10079651:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079680(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ECX+0x64]
	PUSH EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m786B0_sub_100796B0])
	XOR EDX, EDX
	TEST EAX, EAX
	JZ loc_100796AD
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV WORD PTR DS:[EAX+0x0E],DX
	PUSH ECX
	MOV DWORD PTR [EAX+0x1C],EDX
	MOV DWORD PTR [EAX+0x30],EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100796AD:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100796B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],ECX
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	PUSH EDI
	TEST EBX, EBX
	PUSH EBP
	JZ loc_1007970E
	MOV ESI,DWORD PTR [EBX+0x04]
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	PUSH EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100796E7
	MOV EAX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
loc_100796E7:
	XOR EBP, EBP
	XOR ESI, ESI
	CMP DWORD PTR [EBX+0x08],EBP
	JBE loc_1007970E
loc_100796F0:
	PUSH EDI
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV ECX,DWORD PTR [EBP+EAX]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m786B0_sub_100796B0])
	TEST EAX, EAX
	JNZ loc_10079710
	ADD EBP, 0x04
	INC ESI
	CMP DWORD PTR [EBX+0x08],ESI
	JA loc_100796F0
loc_1007970E:
	XOR EAX, EAX
loc_10079710:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079720(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH EBP
	TEST ESI, ESI
	JZ loc_1007977E
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH EDI
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_10079757
	MOV EAX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
loc_10079757:
	XOR EBX, EBX
	XOR EBP, EBP
	CMP DWORD PTR [ESI+0x08],EBX
	JBE loc_1007977E
loc_10079760:
	PUSH EDI
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EBX+EAX]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m78720_sub_10079720])
	TEST EAX, EAX
	JNZ loc_10079780
	ADD EBX, 0x04
	INC EBP
	CMP DWORD PTR [ESI+0x08],EBP
	JA loc_10079760
loc_1007977E:
	XOR EAX, EAX
loc_10079780:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079790(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		arg1 = 0x4,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x28
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x34]
	PUSH EBP
	MOVSX EAX,WORD PTR [EBX+0x000000C0]
	PUSH ESI
	MOV ECX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDX*4+ECX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ FAR loc_100798BE
	MOV BP,WORD PTR DS:[EBX+0x000000C0]
	INC BP
	CMP WORD PTR DS:[EBX+0x000000BE],BP
	JLE loc_100797FC
loc_100797D4:
	MOVSX ECX,BP
	PUSH ESI
	MOV EAX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [ECX*2+ECX]
	MOV ECX,DWORD PTR [EDX*4+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100797FC
	INC BP
	CMP WORD PTR DS:[EBX+0x000000BE],BP
	JG loc_100797D4
loc_100797FC:
	MOVSX EAX,WORD PTR [EBX+0x000000C0]
	MOV ECX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	SUB EAX, EAX
	MOV EDI,DWORD PTR [EDX*4+ECX]
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [ESP+var_28+0x38]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOVSX EAX,BP
	MOV EDX,DWORD PTR [EBX+0x00000128]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	SUB EAX, EAX
	LEA EBP,DWORD PTR [ECX*4+0x00000000]
	MOV ECX, 0xFFFFFFFF
	MOV EDI,DWORD PTR [EBP+EDX]
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOVSX EDI,WORD PTR [EBX+0x000000C0]
	LEA EDI,DWORD PTR [EDI*2+EDI]
	MOV EDI,DWORD PTR [EDI*4+EDX]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	LEA EDI,DWORD PTR [ESP+var_28+0x38]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV EAX,DWORD PTR [EBX+0x00000128]
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+EAX]
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOVSX EAX,WORD PTR [EBX+0x000000C0]
	MOV ECX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	LEA ESI,DWORD PTR [EBP+ECX+arg1217226-0x4A4B20]
	LEA ECX,DWORD PTR [EDX*4+ECX+0x08]
	MOV AX,WORD PTR DS:[ECX]
	MOV DX,WORD PTR DS:[ESI]
	MOV WORD PTR DS:[ECX],DX
	MOV WORD PTR DS:[ESI],AX
loc_100798BE:
	MOV AX,WORD PTR DS:[EBX+0x000000C0]
	MOV ECX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m78050_sub_10079050])
	MOV AX,WORD PTR DS:[EBX+0x000000C0]
	MOV ECX,DWORD PTR [EBX+0x00000080]
	INC AX
	MOV WORD PTR DS:[EBX+0x000000C0],AX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m21CF0_sub_10022CF0])
	MOV AX,WORD PTR DS:[EBX+0x000000C0]
	CMP WORD PTR DS:[EBX+0x000000BE],AX
	JLE loc_10079911
	MOVSX EAX,AX
	MOV ECX,DWORD PTR [EBX+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDX*4+ECX+0x04]
	MOV ECX, EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m78680_sub_10079680])
loc_10079911:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x28
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079920(DWORD arg1)
{
	enum{
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x000000C4]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	TEST EAX, EAX
	JZ FAR loc_10079A81
	MOV EDI,DWORD PTR [EAX+0x14]
	LEA EDX,DWORD PTR [ESP+var_10+0x5C]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX,DWORD PTR [EDI+0x14]
	MOV EBX,DWORD PTR [EDI+0x10]
	MOV EBP,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [ESP+var_14+0x5C],EDX
	MOV DWORD PTR [ESP+var_10+0x5C],EBP
	MOV EDX, offset [LEGO1_rdata.m1E8_ptr]
	MOV DWORD PTR [ESP+var_C+0x5C],EBX
	MOV DWORD PTR [ESP+var_18+0x5C],EDX
	MOV DWORD PTR [ESP+var_8+0x5C],ECX
	MOV DWORD PTR [ESP+var_4+0x5C],EAX
	MOV DWORD PTR [ESP+var_4C+0x5C],EDX
	FLD DWORD PTR [ESP+arg1+0x5C]
	FCHS
	MOV DWORD PTR [ESP+var_44+0x5C],0x00000000
	FST DWORD PTR [ESP+var_38+0x5C]
	LEA EAX,DWORD PTR [ESP+var_44+0x5C]
	LEA ECX,DWORD PTR [ESP+var_28+0x5C]
	MOV DWORD PTR [ESP+var_48+0x5C],EAX
	MOV DWORD PTR [ESP+var_2C+0x5C],ECX
	FMUL DWORD PTR [offset LEGO1_rdata + 0x59C0]
	MOV DWORD PTR [ESP+var_40+0x5C],0x3F800000
	MOV DWORD PTR [ESP+var_3C+0x5C],0x00000000
	FLD ST(0)
	FCOS
	MOV DWORD PTR [ESP+var_30+0x5C],EDX
	FSTP DWORD PTR [ESP+var_38+0x5C]
	FSIN
	FSTP DWORD PTR [ESP+var_34+0x5C]
	FLD QWORD PTR [offset LEGO1_rdata + 0x59B8]
	FSQRT
	FDIVR DWORD PTR [ESP+var_34+0x5C]
	FLD DWORD PTR [EAX]
	FMUL ST,ST(1)
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_48+0x5C]
	ADD EAX, 0x04
	FLD DWORD PTR [EAX]
	FMUL ST,ST(1)
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_48+0x5C]
	LEA ECX,DWORD PTR [ESP+var_18+0x5C]
	ADD EAX, 0x08
	FMUL DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	LEA EAX,DWORD PTR [ESP+var_4C+0x5C]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_30+0x64]
	CALL_LONG(offset [LEGO1_text.m1BF0_sub_10002BF0])
	MOV ECX,DWORD PTR [ESP+var_2C+0x5C]
	FLD DWORD PTR [ECX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x59D0]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10079A0B
	OR BYTE PTR [EDI],0x01
	JMP loc_10079A0E
loc_10079A0B:
	AND BYTE PTR [EDI],0xFE
loc_10079A0E:
	MOV EAX,DWORD PTR [ESP+var_2C+0x5C]
	MOV ECX,DWORD PTR [ESI+0x000000C4]
	MOV EDX,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x0C],EAX
	MOV EBX,DWORD PTR [ESP+var_2C+0x5C]
	MOV ECX,DWORD PTR [ESI+0x000000C4]
	MOV EDX,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDX+0x10],EAX
	MOV EBX,DWORD PTR [ESP+var_2C+0x5C]
	MOV ECX,DWORD PTR [ESI+0x000000C4]
	MOV EDX,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDX+0x14],EAX
	MOV EBX,DWORD PTR [ESP+var_2C+0x5C]
	MOV ECX,DWORD PTR [ESI+0x000000C4]
	MOV EDX,DWORD PTR [ECX+0x14]
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV ECX,DWORD PTR [ESI+0x00000140]
	CMP DWORD PTR [ECX+0x54],0x00
	JZ loc_10079A81
	FLD DWORD PTR [ESI+0x0000012C]
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX, ESI
	LEA EAX,DWORD PTR [ESI+0x000000C8]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6A9A0_sub_1006B9A0])
loc_10079A81:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10079A90()
{
	enum{
		var_4 = -0x4,
	};

__asm{
	FLD DWORD PTR [ECX+0x00000134]
	FCOMP DWORD PTR [ECX+0x0000012C]
	SUB ESP, 0x04
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10079AC7
	MOV DWORD PTR [ECX+0x00000130],0x00000000
	MOV DWORD PTR [ECX+0x0000012C],0x00000000
	MOV WORD PTR DS:[ECX+0x000000BC],0x0001
	ADD ESP, 0x04
	RET
loc_10079AC7:
	FLD DWORD PTR [ECX+0x00000138]
	FADD DWORD PTR [ECX+0x00000130]
	FCOM DWORD PTR [ECX+0x0000012C]
	FSTP DWORD PTR [ESP+var_4+0x4]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10079B01
	MOV WORD PTR DS:[ECX+0x000000BC],0x0001
	MOV EAX,DWORD PTR [ESP+var_4+0x4]
	MOV DWORD PTR [ECX+0x00000130],EAX
	MOV DWORD PTR [ECX+0x0000012C],EAX
	ADD ESP, 0x04
	RET
loc_10079B01:
	FLD DWORD PTR [ECX+0x00000138]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x59D8]
	FADD DWORD PTR [ECX+0x0000012C]
	FSTP DWORD PTR [ECX+0x0000012C]
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079B20(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH offset [LEGO1_data.m79C4_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	CMP EAX, 0x01
	SBB CL, CL
	NEG CL
	MOV AL, CL
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079B40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EDI
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x57
	JZ loc_10079B73
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x77
	JZ loc_10079B73
	XOR AL, AL
	POP EDI
	RETN 0x0004
loc_10079B73:
	MOV AL, 0x01
	POP EDI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079B80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EDI
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x4E
	JZ loc_10079BDB
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x6E
	JZ loc_10079BDB
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x59
	JZ loc_10079BDB
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x79
	JZ loc_10079BDB
	XOR AL, AL
	POP EDI
	RETN 0x0004
loc_10079BDB:
	MOV AL, 0x01
	POP EDI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079BF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EDI
	MOV ECX, 0xFFFFFFFF
	MOV EDI, offset [LEGO1_data.m79D0_str]
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	PUSH ECX
	PUSH offset [LEGO1_data.m79D0_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	CMP EAX, 0x01
	SBB CL, CL
	POP EDI
	NEG CL
	MOV AL, CL
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079C30(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	JZ loc_10079C4B
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10079C4B:
	MOV DX,WORD PTR DS:[EBX+0x000000C0]
	CMP WORD PTR DS:[EBX+0x000000BE],DX
	JLE loc_10079C92
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	MOVSX EAX,DX
	NOT ECX
	DEC ECX
	LEA EDX,DWORD PTR [EAX*2+EAX]
	SUB ECX, 0x03
	PUSH ECX
	MOV ECX,DWORD PTR [EBX+0x00000128]
	MOV EAX,DWORD PTR [EDX*4+ECX]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_10079C92
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10079C92:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079CA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	XOR BX, BX
	PUSH EDI
	CMP WORD PTR DS:[ECX+0x000000C0],BX
	MOV EDI, ECX
	JLE loc_10079CDD
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
loc_10079CB5:
	MOVSX EAX,BX
	MOV ECX,DWORD PTR [EDI+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDX*4+ECX]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10079CE5
	INC BX
	CMP WORD PTR DS:[EDI+0x000000C0],BX
	JG loc_10079CB5
loc_10079CDD:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10079CE5:
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079CF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EDI
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x59
	JZ loc_10079D23
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EDX+ECX-0x03],0x79
	JZ loc_10079D23
	XOR AL, AL
	POP EDI
	RETN 0x0004
loc_10079D23:
	MOV AL, 0x01
	POP EDI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079D30(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EDI
	MOV EDI, EDX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	POP EDI
	MOV AL,BYTE PTR [EDX+ECX-0x02]
	SUB AL, 0x30
	CMP AL, 0x01
	SBB AL, AL
	INC AL
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079D60(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	XOR BX, BX
	PUSH EDI
	CMP WORD PTR DS:[ECX+0x000000BE],BX
	MOV EDI, ECX
	JLE loc_10079D9D
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
loc_10079D75:
	MOVSX EAX,BX
	MOV ECX,DWORD PTR [EDI+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDX*4+ECX]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10079DA5
	INC BX
	CMP WORD PTR DS:[EDI+0x000000BE],BX
	JG loc_10079D75
loc_10079D9D:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10079DA5:
	MOVSX EAX,BX
	MOV ECX,DWORD PTR [EDI+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	POP EDI
	POP ESI
	MOV EAX,DWORD PTR [EDX*4+ECX+0x04]
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10079DC0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH EBX
	PUSH ESI
	XOR BX, BX
	PUSH EDI
	CMP WORD PTR DS:[ECX+0x000000BE],BX
	MOV EDI, ECX
	JLE loc_10079E19
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
loc_10079DD5:
	MOVSX EAX,BX
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x00000128]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDX*4+ECX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10079E03
	INC BX
	CMP WORD PTR DS:[EDI+0x000000BE],BX
	JG loc_10079DD5
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_10079E03:
	MOVSX EDX,BX
	MOV AX,WORD PTR SS:[ESP+arg2+0xC]
	MOV ECX,DWORD PTR [EDI+0x00000128]
	LEA EBX,DWORD PTR [EDX*2+EDX]
	MOV WORD PTR DS:[EBX*4+ECX+0x08],AX
loc_10079E19:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10079E20()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000140]
	MOVSX EDX,WORD PTR [ECX+0x000000C0]
	MOV ESI,DWORD PTR [EAX+0x54]
	LEA EDX,DWORD PTR [EDX*2+EDX]
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000128]
	MOV ECX,DWORD PTR [EDX*4+EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	MOV ESI,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [ESI+0x10])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10079E50()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m78F10_proc_10079F10]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x20]
	MOV EDI, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mD38_ptr]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mCD8_ptr]
	CALL_LONG(offset [LEGO1_text.mB44E0_sub_100B54E0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mBE8_ptr]
	CALL_LONG(offset [LEGO1_text.mB1760_sub_100B2760])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5AA0_ptr]
	CALL_LONG(offset [LEGO1_text.m790D0_sub_1007A0D0])
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007A070()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m790BB_proc_1007A0BB]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5AA0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m790E0_sub_1007A0E0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m790C5_sub_1007A0C5])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007A0C5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB740_loc_1000C740])
}
}

__declspec(naked) DWORD LEGO1_sub_1007A0D0()
{
__asm{
	MOV DWORD PTR [ECX+0x64],0x00000000
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007A0E0(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	PUSH EDI
	LEA ESI,DWORD PTR [ECX+0x20]
	MOV EDI, ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5D80_sub_100B6D80])
	MOV ECX,DWORD PTR [EDI+0x64]
	TEST ECX, ECX
	JZ loc_1007A0FB
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007A0FB:
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m790D0_sub_1007A0D0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB5DE0_sub_100B6DE0])
	CMP BYTE PTR [ESP+r+0xC],0x00
	JNZ loc_1007A119
	PUSH 0x00
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB17B0_sub_100B27B0])
loc_1007A119:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007A130(DWORD arg1)
{
	enum{
		var_450 = -0x450,
		var_50 = -0x50,
		var_28 = -0x28,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7921D_proc_1007A21D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x00000440
	MOV DWORD PTR [EBP+var_14+0x4],0xFFFFFFFF
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98080_sub_10099080])
	PUSH 0x28
	LEA ECX,DWORD PTR [EBP+var_50+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ loc_1007A1D5
	PUSH 0x00000400
	LEA EAX,DWORD PTR [EBP+var_450+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ loc_1007A1D5
	PUSH 0x00000414
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1007A1C6
	LEA EAX,DWORD PTR [EBP+var_450+0x4]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mBDED0_sub_100BEED0])
loc_1007A1C6:
	XOR ECX, ECX
	TEST EAX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],CL
	MOV DWORD PTR [ESI+0x64],EAX
	JZ loc_1007A1D5
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1007A1D5:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1007A1EF
	MOV ECX,DWORD PTR [ESI+0x64]
	TEST ECX, ECX
	JZ loc_1007A1EF
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV DWORD PTR [ESI+0x64],0x00000000
loc_1007A1EF:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m79227_sub_1007A227])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1007A210()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007A227()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD LEGO1_sub_1007A2B0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m79345_proc_1007A345]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	XOR ECX, ECX
	LEA EAX,DWORD PTR [ESI+0x00000170]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI+0x00000168],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x0000016C],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5B60_ptr]
	LEA EAX,DWORD PTR [ESI+0x00000184]
	MOV DWORD PTR [ESI+0x00000154],ECX
	MOV DWORD PTR [ESI+0x00000180],EAX
	MOV DWORD PTR [ESI+0x00000164],ECX
	MOV DWORD PTR [ESI+0x00000168],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x0000017C],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x0000017C],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1007A470()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m794C4_proc_1007A4C4]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5B60_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m794CE_sub_1007A4CE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007A4CE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007A4E0(DWORD arg1)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_1C = -0x1C,
		var_C = -0xC,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x24
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX+0x54],0x00
	MOV ESI, ECX
	JZ loc_1007A4FA
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x24
	RETN 0x0004
loc_1007A4FA:
	MOV EDI,DWORD PTR [ESP+arg1+0x2C]
	LEA EAX,DWORD PTR [ESP+var_C+0x2C]
	PUSH EDI
	PUSH offset [LEGO1_data.m7A64_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA ECX,DWORD PTR [ESP+var_C+0x38]
	ADD ESP, 0x0C
	MOV EAX,DWORD PTR [offset LEGO1_data.m7A38_ptr+EDI*4]
	PUSH 0x00
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	LEA ECX,DWORD PTR [ESP+var_28+0x38]
	MOV DWORD PTR [ESI+0x54],EAX
	MOV DWORD PTR [ESP+var_30+0x38],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_2C+0x38],ECX
	LEA ECX,DWORD PTR [ESP+var_30+0x38]
	MOV EDX,DWORD PTR [EAX+0x000000EC]
	PUSH EDX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4A8_ptr])
	MOV EAX,DWORD PTR [ESP+var_2C+0x38]
	ADD EAX, 0x04
	CMP EDI, 0x06
	FLD DWORD PTR [EAX]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x5B40]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESI+0x54]
	FLD DWORD PTR [EAX+0x000000FC]
	JGE loc_1007A577
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5B48]
	JMP loc_1007A57D
loc_1007A577:
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5B4C]
loc_1007A57D:
	FSTP DWORD PTR [ESP+var_1C+0x38]
	MOV EDI,DWORD PTR [ESI+0x54]
	MOV EAX,DWORD PTR [ESP+var_2C+0x38]
	PUSH EAX
	LEA ECX,DWORD PTR [EDI+0x000000A8]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA EDX,DWORD PTR [ESP+var_28+0x38]
	LEA ECX,DWORD PTR [EDI+0x000000B0]
loc_1007A59E:
	MOV EAX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EAX
	ADD ECX, 0x04
	LEA EAX,DWORD PTR [ESP+var_1C+0x38]
	CMP EDX, EAX
	JB loc_1007A59E
	MOV EAX,DWORD PTR [ESP+var_1C+0x38]
	LEA ECX,DWORD PTR [EDI+0x000000E8]
	MOV DWORD PTR [EDI+0x000000BC],EAX
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EDI+0x000000AC]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [EDI+0x000000F0]
	MOV EAX, 0x00000003
loc_1007A5D7:
	MOV EDX,DWORD PTR [ECX-0x40]
	ADD ECX, 0x04
	DEC EAX
	MOV DWORD PTR [ECX-0x04],EDX
	JNZ loc_1007A5D7
	MOV EAX,DWORD PTR [EDI+0x000000BC]
	MOV DWORD PTR [EDI+0x000000FC],EAX
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV DWORD PTR [ECX+0x00000104],ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EDI,DWORD PTR [EAX]
	MOV ECX, EAX
	PUSH ESI
	CALL_LONG(DWORD PTR [EDI+0x58])
	XOR EAX, EAX
	POP EDI
	MOV DWORD PTR [ESI+0x00000164],0x00000001
	POP ESI
	ADD ESP, 0x24
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007A620()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m799D0_sub_1007A9D0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
	MOV EAX,DWORD PTR [ESI+0x54]
	TEST EAX, EAX
	JZ loc_1007A656
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82C30_sub_10083C30])
	MOV DWORD PTR [ESI+0x54],0x00000000
loc_1007A656:
	MOV DWORD PTR [ESI+0x00000164],0x00000000
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007A670(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg2 = 0x8,
		arg1217225 = 0x4A4B24,
		arg1217258 = 0x4A4BA8,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	PUSH EBP
	MOV EBX, offset [LEGO1_rdata.m518_ptr]
	LEA ECX,DWORD PTR [ESI+0x0000017C]
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x18]
	MOV DWORD PTR [ESP+var_8+0x18],EBX
	PUSH EAX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217258-0x4A4B20])
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],EBX
	PUSH EAX
	LEA EBX,DWORD PTR [ESI+0x00000168]
	MOV ECX, EBX
	MOV EDI,DWORD PTR [EBX]
	CALL_LONG(DWORD PTR [EDI+0x00000088])
	MOV EBP,DWORD PTR [ESP+r+0x1C]
	MOV ECX, EBX
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x30
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x58])
	MOV DWORD PTR [ESP+var_C+0x1C],0x41000000
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x68])
	MOV DWORD PTR [ESI+0x00000190],0x00000000
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x14
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	MOV DWORD PTR [ESI+0x00000164],0x00000002
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1EA70_sub_1001FA70])
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m563F0_sub_100573F0])
	PUSH EBP
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV DWORD PTR [ESI+0x000000DC],0x00000004
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x14])
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV BYTE PTR [ECX+0x0C],0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1007A969()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007A990()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x00000154],0x00
	JNZ loc_1007A9C0
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x01
	MOV ECX,DWORD PTR [ESI+0x54]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	MOV ECX,DWORD PTR [EAX+0x40]
	PUSH EDX
	PUSH offset [LEGO1_data.m7A70_str]
	CALL_LONG(offset [LEGO1_text.m3CAE0_sub_1003DAE0])
	MOV DWORD PTR [ESI+0x00000154],EAX
loc_1007A9C0:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007A9D0()
{
__asm{
	PUSH ESI
	LEA ESI,DWORD PTR [ECX+0x00000154]
	CMP DWORD PTR [ESI],0x00
	JZ loc_1007A9F0
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH ESI
	MOV ECX,DWORD PTR [EAX+0x40]
	CALL_LONG(offset [LEGO1_text.m3CB80_sub_1003DB80])
	MOV DWORD PTR [ESI], 0x00000000
loc_1007A9F0:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007AA00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV ECX,DWORD PTR [ECX+0x00000154]
	TEST ECX, ECX
	JZ loc_1007AA14
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5CE0_sub_10006CE0])
loc_1007AA14:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007AA20()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m79AF9_proc_1007AAF9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mBD1F0_sub_100BE1F0])
	XOR EDX, EDX
	MOV DWORD PTR [EBP+var_8+0x4],EDX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m5C88_ptr]
	MOV DWORD PTR [ESI+0x64],EDX
	LEA EBX,DWORD PTR [ESI+0x78]
	MOV DWORD PTR [ESI+0x68],EDX
	MOV EDI, EBX
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	MOV DWORD PTR [ESI+0x6C],EDX
	MOV DWORD PTR [ESI+0x74],EDX
	MOV BYTE PTR [ESI+0x000000E6],DL
	REP STOSD
	MOV DWORD PTR [EBX], 0x0000006C
	MOV DWORD PTR [ESI+0x000004E8],EDX
	MOV EAX,DWORD PTR [ESI+0x00000510]
	MOV BYTE PTR [ESI+0x000004EC],DL
	MOV DWORD PTR [ESI+0x000004F0],EDX
	MOV DWORD PTR [ESI+0x000004F4],EDX
	MOV BYTE PTR [ESI+0x00000501],DL
	MOV DWORD PTR [ESI+0x0000050C],EAX
	MOV DWORD PTR [ESI+0x00000508],EAX
	MOV DWORD PTR [ESI+0x00000504],EAX
	MOV DWORD PTR [ESI+0x00000514],EDX
	MOV BYTE PTR [ESI+0x00000500],DL
	MOV BYTE PTR [ESI+0x0000052C],DL
	MOV DWORD PTR [ESI+0x00000528],EDX
	MOV DWORD PTR [ESI+0x00000540],EDX
	MOV BYTE PTR [ESI+0x000000E5],DL
	MOV EAX, ESI
	POP EDI
	MOV BYTE PTR [ESI+0x00000554],DL
	MOV BYTE PTR [ESI+0x00000555],DL
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007AB40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m79B9C_proc_1007AB9C]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m5C88_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m7A5E0_sub_1007B5E0])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000004F0]
	TEST ECX, ECX
	JZ loc_1007AB83
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007AB83:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m79BA6_sub_1007ABA6])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007ABA6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mBD2A0_loc_100BE2A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007ABB0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m79C1E_proc_1007AC1E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX+0x74],0x00
	MOV ESI, ECX
	JNZ loc_1007AC08
	PUSH 0x00000894
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1007ABFE
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m9A0A0_sub_1009B0A0])
loc_1007ABFE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x74],EAX
loc_1007AC08:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	CMP DWORD PTR [ESI+0x74],0x01
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	SBB EAX, EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007B1FD()
{
	enum{
		arg1217210 = 0x4A4AE8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7A590_loc_1007B590])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B2C0()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B2D2()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B357()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B3F3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7A310_loc_1007B310])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B459()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7A370_loc_1007B370])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B4CF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B57B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m7A310_loc_1007B310])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B5D1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m9B010_loc_1009C010])
}
}

__declspec(naked) DWORD LEGO1_sub_1007B5E0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000514]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_1007B5FD
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x00000514],0x00000000
loc_1007B5FD:
	MOV EAX,DWORD PTR [ESI+0x00000528]
	TEST EAX, EAX
	JZ loc_1007B617
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x00000528],0x00000000
loc_1007B617:
	MOV EAX,DWORD PTR [ESI+0x00000540]
	TEST EAX, EAX
	JZ loc_1007B632
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m358_DeleteObject])
	MOV DWORD PTR [ESI+0x00000540],0x00000000
loc_1007B632:
	MOV ECX,DWORD PTR [ESI+0x64]
	TEST ECX, ECX
	JZ loc_1007B63F
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007B63F:
	MOV ECX,DWORD PTR [ESI+0x6C]
	TEST ECX, ECX
	JZ loc_1007B663
	MOV EAX,DWORD PTR [ESI+0x68]
	TEST EAX, EAX
	JZ loc_1007B656
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA170_sub_100AB170])
loc_1007B656:
	MOV ECX,DWORD PTR [ESI+0x6C]
	TEST ECX, ECX
	JZ loc_1007B663
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007B663:
	MOV ECX,DWORD PTR [ESI+0x68]
	TEST ECX, ECX
	JZ loc_1007B670
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007B670:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mBDA50_sub_100BEA50])
	MOV ECX,DWORD PTR [ESI+0x000004E8]
	TEST ECX, ECX
	JZ loc_1007B687
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007B687:
	MOV EAX,DWORD PTR [ESI+0x000004F4]
	TEST EAX, EAX
	JZ loc_1007B69A
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1007B69A:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__MoveCursor_LegoVideoManager__QAEXHH_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [ECX+0x0000050C],EAX
	MOV DWORD PTR [ECX+0x00000510],EDX
	MOV BYTE PTR [ECX+0x00000501],0x01
	CMP EAX, 0x0000026F
	JLE loc_1007B6CC
	MOV DWORD PTR [ECX+0x0000050C],0x0000026F
loc_1007B6CC:
	CMP EDX, 0x000001CF
	JLE loc_1007B6DE
	MOV DWORD PTR [ECX+0x00000510],0x000001CF
loc_1007B6DE:
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007B6F0(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV AL,BYTE PTR [ESP+arg1]
	SUB ESP, 0x04
	TEST AL, AL
	PUSH ESI
	MOV ESI, ECX
	JZ loc_1007B754
	CMP BYTE PTR [ESI+0x0000052C],0x00
	JNZ loc_1007B754
	MOV BYTE PTR [ESI+0x0000052C],0x01
	MOV DWORD PTR [ESI+0x00000550],0x3F800000
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1007B736
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	FSTP DWORD PTR [ESI+0x0000054C]
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1007B736:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	FILD DWORD PTR [ESP+var_4+0x8]
	FSTP DWORD PTR [ESI+0x0000054C]
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1007B754:
	MOV BYTE PTR [ESI+0x0000052C],AL
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1007BB87()
{
	enum{
		arg1217210 = 0x4A4AE8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007BBA9()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1007BBC0()
{
	enum{
		var_D8 = -0xD8,
		var_D4 = -0xD4,
		var_C8 = -0xC8,
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B8 = -0xB8,
		var_B4 = -0xB4,
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_40 = -0x40,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_24 = -0x24,
		var_8 = -0x8,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x000000B0
	MOV EAX, offset [LEGO1_data.m7A98_str]
	LEA EDX,DWORD PTR [ESP+var_A4+0xB0]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ESI+0x00000528],0x00
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDX+0x04],EAX
	JNZ FAR loc_1007BDCF
	PUSH offset [LEGO1_data.m7A90_str]
	PUSH 0x02
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00000190
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x0C
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m364_CreateFontA])
	PUSH 0x00
	MOV DWORD PTR [ESI+0x00000540],EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m520_GetDC])
	MOV EBX, EAX
	MOV EBP,DWORD PTR [offset LEGO1_idata.m368_SelectObject]
	MOV EAX,DWORD PTR [ESI+0x00000540]
	PUSH EAX
	PUSH EBX
	CALL_LONG(EBP)
	LEA EBP,DWORD PTR [ESI+0x00000544]
	LEA EDI,DWORD PTR [ESP+var_D8+0xF4]
	PUSH EBP
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	LEA EAX,DWORD PTR [ESP+var_D4+0xF4]
	PUSH ECX
	PUSH EAX
	PUSH EBX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m360_GetTextExtentPointA])
	PUSH EBX
	PUSH 0x00
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m51C_ReleaseDC])
	MOV EAX,DWORD PTR [ESI+0x00000548]
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x58]
	CALL_LONG(offset [LEGO1_text.mBB8B0_sub_100BC8B0])
	MOV ECX,DWORD PTR [ESI+0x00000548]
	MOV EDX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH ECX
	MOV DWORD PTR [ESI+0x00000528],EAX
	PUSH EDX
	LEA EAX,DWORD PTR [ESI+0x00000530]
	PUSH 0x00
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m518_SetRect])
	MOV ECX,DWORD PTR [ESI+0x00000528]
	TEST ECX, ECX
	JNZ loc_1007BCC2
	MOV EAX,DWORD PTR [ESI+0x00000540]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m358_DeleteObject])
	MOV DWORD PTR [ESI+0x00000540],0x00000000
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000B0
	RET
loc_1007BCC2:
	LEA EAX,DWORD PTR [ESP+0x00000090]
	PUSH EAX
	PUSH 0x08
	PUSH ECX
	MOV DWORD PTR [EAX], 0x00000000
	MOV DWORD PTR [EAX+0x04],0x00000000
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x74])
	LEA EDI,DWORD PTR [ESP+var_B4+0xD8]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_B0+0xD8]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x00000528]
	PUSH ECX
	MOV DWORD PTR [ESP+var_A8+0xD8],0x0000006C
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	TEST EAX, EAX
	JZ loc_1007BD47
	MOV EAX,DWORD PTR [ESI+0x00000528]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV ECX,DWORD PTR [ESI+0x00000540]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m358_DeleteObject])
	MOV DWORD PTR [ESI+0x00000528],0x00000000
	MOV DWORD PTR [ESI+0x00000540],0x00000000
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000B0
	RET
loc_1007BD47:
	MOV EDX,DWORD PTR [ESP+0x48]
	XOR EBX, EBX
	CMP DWORD PTR [ESP+var_AC+0xD8],EBX
	JBE loc_1007BD7C
loc_1007BD53:
	MOV EBP,DWORD PTR [ESP+var_A8+0xD8]
	MOV EDI, EDX
	XOR EAX, EAX
	INC EBX
	IMUL EBP,DWORD PTR [ESP+var_60+0xD8]
	SHR EBP, 0x03
	MOV ECX, EBP
	SHR ECX, 0x02
	REP STOSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP STOSB
	ADD EDX,DWORD PTR [ESP+var_A4+0xD8]
	CMP EBX,DWORD PTR [ESP+var_AC+0xD8]
	JB loc_1007BD53
loc_1007BD7C:
	MOV EAX,DWORD PTR [ESI+0x00000528]
	MOV ECX,DWORD PTR [ESP+var_90+0xD8]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1007BDA3
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_1007BDB4
loc_1007BDA3:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_B4+0xD8],ECX
	FILD DWORD PTR [ESP+var_B4+0xD8]
loc_1007BDB4:
	FSTP DWORD PTR [ESI+0x0000054C]
	MOV DWORD PTR [ESI+0x00000550],0x3F800000
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000B0
	RET
loc_1007BDCF:
	LEA EDI,DWORD PTR [ESI+0x0000054C]
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	FLD DWORD PTR [EDI]
	FADD DWORD PTR [offset LEGO1_rdata + 0x5C78]
	JZ loc_1007BDFD
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	FCOMPP
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_1007C01D
	JMP loc_1007BE1B
loc_1007BDFD:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_9C+0xC0],ECX
	FILD DWORD PTR [ESP+var_9C+0xC0]
	FCOMPP
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_1007C01D
loc_1007BE1B:
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1007BE2E
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_1007BE3F
loc_1007BE2E:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_B0+0xC0],ECX
	FILD DWORD PTR [ESP+var_B0+0xC0]
loc_1007BE3F:
	FSUB DWORD PTR [EDI]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5C7C]
	FSTP DWORD PTR [ESP+var_B0+0xC0]
	FLD DWORD PTR [ESI+0x00000550]
	FDIV DWORD PTR [ESP+var_B0+0xC0]
	SUB ESP, 0x08
	LEA EAX,DWORD PTR [ESP+var_30+0xC8]
	PUSH offset [LEGO1_data.m7A88_str]
	PUSH EAX
	FSTP QWORD PTR [ESP+var_C8+0xD0]
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	MOV DWORD PTR [ESP+var_A8+0xD0],EAX
	ADD ESP, 0x10
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1007BE88
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_1007BE99
loc_1007BE88:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_B0+0xC0],ECX
	FILD DWORD PTR [ESP+var_B0+0xC0]
loc_1007BE99:
	FSTP DWORD PTR [EDI]
	LEA EDI,DWORD PTR [ESP+var_9C+0xC0]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_9C+0xC4]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x00000528]
	PUSH ECX
	MOV DWORD PTR [ESP+var_9C+0xCC],0x0000006C
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	TEST EAX, EAX
	JNZ loc_1007BF14
	MOV EDX,DWORD PTR [ESP+var_8C+0xD4]
	XOR EBX, EBX
	CMP DWORD PTR [ESP+var_A8+0xD4],EBX
	JBE loc_1007BF00
loc_1007BED7:
	MOV EBP,DWORD PTR [ESP+var_A4+0xD4]
	MOV EDI, EDX
	XOR EAX, EAX
	INC EBX
	IMUL EBP,DWORD PTR [ESP+var_5C+0xD4]
	SHR EBP, 0x03
	MOV ECX, EBP
	SHR ECX, 0x02
	REP STOSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP STOSB
	ADD EDX,DWORD PTR [ESP+var_A0+0xD4]
	CMP EBX,DWORD PTR [ESP+var_A8+0xD4]
	JB loc_1007BED7
loc_1007BF00:
	MOV EAX,DWORD PTR [ESI+0x00000528]
	MOV ECX,DWORD PTR [ESP+var_8C+0xD4]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
loc_1007BF14:
	MOV EAX,DWORD PTR [ESI+0x00000528]
	LEA ECX,DWORD PTR [ESP+var_C0+0xD4]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x44])
	TEST EAX, EAX
	JZ loc_1007BF61
	MOV EAX,DWORD PTR [ESI+0x00000528]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV DWORD PTR [ESI+0x00000528],0x00000000
	MOV ECX,DWORD PTR [ESI+0x00000540]
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m358_DeleteObject])
	MOV DWORD PTR [ESI+0x00000540],0x00000000
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000B0
	RET
loc_1007BF61:
	MOV EAX,DWORD PTR [ESI+0x00000540]
	MOV ECX,DWORD PTR [ESP+var_C0+0xD4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m368_SelectObject])
	MOV ECX,DWORD PTR [ESP+var_C0+0xD4]
	PUSH 0x0000FFFF
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m36C_SetTextColor])
	MOV ECX,DWORD PTR [ESP+var_C0+0xD4]
	PUSH 0x00
	PUSH ECX
	LEA EDI,DWORD PTR [ESI+0x00000544]
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m350_SetBkColor])
	MOV ECX,DWORD PTR [ESP+var_C0+0xD4]
	PUSH 0x02
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m378_SetBkMode])
	MOV ECX,DWORD PTR [ESP+var_BC+0xD4]
	PUSH EDI
	LEA EAX,DWORD PTR [ESP+var_40+0xD4]
	PUSH ECX
	MOV EDX,DWORD PTR [ESP+var_B8+0xD4]
	PUSH EAX
	PUSH EDX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m35C_GetTextExtentPoint32A])
	MOV ECX,DWORD PTR [ESI+0x00000548]
	MOV EAX,DWORD PTR [EDI]
	LEA EDX,DWORD PTR [ESP+var_24+0xD4]
	PUSH ECX
	PUSH EAX
	PUSH 0x00
	PUSH 0x00
	PUSH EDX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m518_SetRect])
	MOV ECX,DWORD PTR [ESP+var_A8+0xC0]
	PUSH 0x00
	LEA EAX,DWORD PTR [ESP+var_2C+0xC0]
	PUSH ECX
	LEA EDX,DWORD PTR [ESP+var_8+0xC0]
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+var_A0+0xC0]
	PUSH EDX
	PUSH 0x02
	PUSH 0x00
	PUSH 0x00
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m354_ExtTextOutA])
	MOV EAX,DWORD PTR [ESI+0x00000528]
	MOV ECX,DWORD PTR [ESP+var_AC+0xC0]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x68])
	MOV DWORD PTR [ESI+0x00000550],0x3F800000
	JMP loc_1007C02F
loc_1007C01D:
	FLD DWORD PTR [ESI+0x00000550]
	FADD DWORD PTR [offset LEGO1_rdata + 0x5C50]
	FSTP DWORD PTR [ESI+0x00000550]
loc_1007C02F:
	MOV EDX,DWORD PTR [ESI+0x00000528]
	TEST EDX, EDX
	JZ loc_1007C073
	MOV EAX,DWORD PTR [ESI+0x58]
	PUSH 0x11
	LEA ECX,DWORD PTR [ESI+0x00000530]
	MOV EAX,DWORD PTR [EAX+0x30]
	PUSH ECX
	PUSH EDX
	PUSH 0x14
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x14
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x1C])
	MOV ECX,DWORD PTR [ESI+0x68]
	MOV EDX,DWORD PTR [ESI+0x0000053C]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV EAX,DWORD PTR [ESI+0x00000538]
	PUSH EAX
	PUSH 0x14
	PUSH 0x14
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x2C])
loc_1007C073:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000B0
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1007C176()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C180(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m7B271_proc_1007C271]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x08]
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_1007C1E5:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1007C1F2
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x14]
	JMP loc_1007C1F8
loc_1007C1F2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1007C1F8:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1007C249
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1007C249
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EAX+0x1C]
	TEST EAX, EAX
	JZ loc_1007C1E5
	PUSH EDI
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1007C1E5
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7B27B_sub_1007C27B])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
loc_1007C237:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1007C249:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m7B27B_sub_1007C27B])
	XOR EAX, EAX
	JMP loc_1007C237
}
}

__declspec(naked) DWORD LEGO1_sub_1007C27B()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C2D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX, 0xFFFFFFFF
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x3C]
	TEST ECX, ECX
	JZ loc_1007C2F7
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mBE490_sub_100BF490])
	MOV ECX,DWORD PTR [ESI+0x58]
	MOV EAX,DWORD PTR [ESI+0x3C]
	PUSH EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x20])
	XOR EAX, EAX
loc_1007C2F7:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C300(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH 0x01
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m7B310__EnableFullScreenMovie_LegoVideoManager__QAEXEE_Z])
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1__EnableFullScreenMovie_LegoVideoManager__QAEXEE_Z(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV BL,BYTE PTR [ESP+arg1+0x1C]
	CMP BYTE PTR [ESI+0x000004EC],BL
	JZ FAR loc_1007C401
	MOV BYTE PTR [ESI+0x000004EC],BL
	TEST BL, BL
	JNZ FAR loc_1007C3BD
	MOV ECX,DWORD PTR [ESI+0x58]
	CALL_LONG(offset [LEGO1_text.mB9640_sub_100BA640])
	MOV EAX,DWORD PTR [ESI+0x58]
	AND BYTE PTR [EAX+0x20],0xF7
	MOV ECX,DWORD PTR [ESI+0x000004F0]
	MOV EDI,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI+0x30])
	MOV ECX,DWORD PTR [ESI+0x000004F0]
	TEST ECX, ECX
	JZ loc_1007C363
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1007C363:
	MOV DWORD PTR [ESI+0x000004F0],0x00000000
	MOV DWORD PTR [ESP+var_14+0x20],0x00000000
	MOV DWORD PTR [ESP+var_10+0x20],0x00000000
	MOV EAX,DWORD PTR [ESI+0x34]
	LEA ECX,DWORD PTR [ESP+var_14+0x20]
	SUB EAX,DWORD PTR [ESI+0x2C]
	PUSH ECX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x20],EAX
	MOV EAX,DWORD PTR [ESI+0x38]
	SUB EAX,DWORD PTR [ESI+0x30]
	MOV DWORD PTR [ESP+var_4+0x20],EAX
	CALL_LONG(offset [LEGO1_text.mBDA60__InvalidateRect_MxVideoManager__QAEXAAVMxRect32___Z])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mBD3E0_sub_100BE3E0])
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m7B4C0_sub_1007C4C0])
	MOV BYTE PTR [ESI+0x000000E4],0x01
	MOV BYTE PTR [ESI+0x00000500],0x00
	JMP loc_1007C401
loc_1007C3BD:
	MOV ECX,DWORD PTR [ESI+0x3C]
	CALL_LONG(offset [LEGO1_text.mBE0B0_sub_100BF0B0])
	PUSH 0x00
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x000004F0],EAX
	CALL_LONG(offset [LEGO1_text.m7B4C0_sub_1007C4C0])
	MOV EDI,DWORD PTR [ESI+0x58]
	MOV DL,BYTE PTR [ESP+arg1+0x20]
	MOV AL,BYTE PTR [EDI+0x20]
	ADD EDI, 0x20
	LEA ECX,DWORD PTR [EDX*8+0x00000000]
	XOR CL, AL
	AND CL, 0x08
	XOR CL, AL
	MOV BYTE PTR [EDI],CL
	MOV BYTE PTR [ESI+0x000000E4],0x00
	MOV BYTE PTR [ESI+0x00000500],0x01
	JMP loc_1007C405
loc_1007C401:
	MOV DL,BYTE PTR [ESP+arg1+0x20]
loc_1007C405:
	MOV EAX,DWORD PTR [ESI+0x58]
	TEST BL, BL
	JZ loc_1007C42B
	MOV BL,BYTE PTR [EAX+0x20]
	ADD EAX, 0x20
	LEA ECX,DWORD PTR [EDX*8+0x00000000]
	POP EDI
	XOR CL, BL
	POP ESI
	AND CL, 0x08
	XOR CL, BL
	POP EBX
	MOV BYTE PTR [EAX],CL
	ADD ESP, 0x10
	RETN 0x0008
loc_1007C42B:
	AND BYTE PTR [EAX+0x20],0xF7
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C440(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	FLD DWORD PTR [ESP+arg1]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5C80]
	SUB ESP, 0x04
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESP+arg2+0x8]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5C80]
	MOV BYTE PTR [ESP+var_4+0x8],AL
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESP+arg3+0x8]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x5C80]
	MOV BYTE PTR [ESP+r+0x5],AL
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	MOV ECX,DWORD PTR [ESI+0x3C]
	MOV BYTE PTR [ESP+r+0x6],AL
	MOV BYTE PTR [ESP+r+0x7],0x84
	LEA EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mBE2D0_sub_100BF2D0])
	MOV EAX,DWORD PTR [ESI+0x3C]
	MOV BYTE PTR [EAX+0x0000040C],0x01
	MOV ECX,DWORD PTR [ESI+0x68]
	MOV EAX,DWORD PTR [ESP+arg3+0x8]
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x10]
	MOV EDX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ECX]
	PUSH EDX
	PUSH ESI
	CALL_LONG(DWORD PTR [EAX+0x1C])
	POP ESI
	ADD ESP, 0x04
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1007C4C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x3C]
	MOV CL,BYTE PTR [ESP+arg1]
	MOV BYTE PTR [EAX+0x0000040C],CL
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_1007C4D0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg3]
	PUSH ESI
	TEST EDX, EDX
	JNZ loc_1007C4E0
	MOV EDX,DWORD PTR [ECX+0x34]
	SUB EDX,DWORD PTR [ECX+0x2C]
	INC EDX
loc_1007C4E0:
	MOV ESI,DWORD PTR [ESP+arg4+0x4]
	TEST ESI, ESI
	JNZ loc_1007C4EF
	MOV ESI,DWORD PTR [ECX+0x38]
	SUB ESI,DWORD PTR [ECX+0x30]
	INC ESI
loc_1007C4EF:
	CMP BYTE PTR [ECX+0x00000555],0x00
	JNZ loc_1007C512
	MOV EAX,DWORD PTR [ECX+0x68]
	PUSH ESI
	PUSH EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [ESP+arg2+0xC]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	PUSH EDX
	PUSH EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x2C])
loc_1007C512:
	POP ESI
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1007C520()
{
__asm{
	XOR EDX, EDX
	MOV EAX,DWORD PTR [ECX+0x3C]
	MOV BYTE PTR [ECX+0x000000E5],0x01
	MOV BYTE PTR [ECX+0x000000E4],DL
	MOV BYTE PTR [EAX+0x0000040C],DL
	MOV ECX,DWORD PTR [ECX+0x58]
	CALL_LONG(offset [LEGO1_text.mB9640_sub_100BA640])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5BFF0_sub_1005CFF0])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000335],0x01
	RET
}
}

__declspec(naked) DWORD LEGO1__EnableRMDevice_LegoVideoManager__QAEHXZ()
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP BYTE PTR [ESI+0x00000555],0x00
	JNZ loc_1007C57F
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
loc_1007C57F:
	MOV EAX,DWORD PTR [ESI+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_8+0x20],0xFFFFFFFF
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV EAX,DWORD PTR [ESI+0x64]
	MOV ECX,DWORD PTR [ESI+0x74]
	MOV DWORD PTR [ESP+var_4+0x20],EDX
	MOV DWORD PTR [ESP+var_C+0x20],0x00000000
	MOV EBX,DWORD PTR [ECX+0x00000884]
	MOV EBP,DWORD PTR [ECX+0x00000888]
	MOV EDI,DWORD PTR [EAX+0x04]
	CALL_LONG(offset [LEGO1_text.m9D4D0_sub_1009E4D0])
	LEA ECX,DWORD PTR [ESP+var_C+0x20]
	MOV EAX,DWORD PTR [EDI]
	PUSH ECX
	PUSH EBP
	PUSH EBX
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x40])
	TEST EAX, EAX
	JNZ FAR loc_1007C72D
	MOV ECX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [ESP+var_14+0x30]
	MOV DWORD PTR [ESP+var_20+0x30],0x00000000
	LEA EDX,DWORD PTR [ESP+var_20+0x30]
	MOV DWORD PTR [EAX+0x04],ECX
	FLD DWORD PTR [ESI+0x00000564]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x00000560]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x0000056C]
	MOV EDX,DWORD PTR [ESP+var_10+0x30]
	PUSH 0x00
	PUSH 0x00
	MOV EAX,DWORD PTR [EDI]
	PUSH ECX
	PUSH EDX
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x50])
	TEST EAX, EAX
	JNZ FAR loc_1007C72D
	MOV EAX,DWORD PTR [ESI+0x00000558]
	MOV ECX,DWORD PTR [ESP+var_20+0x30]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x3C])
	MOV ECX,DWORD PTR [ESI+0x0000055C]
	MOV EDX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x38])
	MOV ECX,DWORD PTR [ESI+0x00000568]
	MOV EDX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x40])
	MOV ECX,DWORD PTR [ESI+0x0000056C]
	MOV EDX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x48])
	MOV ECX,DWORD PTR [ESI+0x00000570]
	MOV EDX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x4C])
	MOV ECX,DWORD PTR [ESI+0x00000574]
	MOV EDX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [ESI+0x00000578]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x0000057C]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x50])
	MOV ECX,DWORD PTR [ESI+0x00000580]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x58])
	MOV ECX,DWORD PTR [ESI+0x00000584]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	MOV ECX,DWORD PTR [ESI+0x00000588]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	PUSH ECX
	PUSH EDX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x4C])
	MOV ECX,DWORD PTR [ESI+0x0000058C]
	MOV EDX,DWORD PTR [ESP+var_1C+0x30]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x44])
	MOV EAX,DWORD PTR [ESI+0x0000056C]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV ECX,DWORD PTR [ESI+0x00000574]
	MOV EAX,DWORD PTR [ESP+var_20+0x30]
	PUSH ECX
	PUSH offset [LEGO1_text.mA0240_proc_100A1240]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST EAX, EAX
	JNZ loc_1007C72D
	MOV ECX,DWORD PTR [ESP+var_20+0x30]
	MOV EAX,DWORD PTR [ESI+0x68]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_18+0x30],0x00000000
	MOV EBX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV BYTE PTR [ESI+0x00000555],0x00
loc_1007C72D:
	MOV EAX,DWORD PTR [ESP+var_18+0x30]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
}
}

__declspec(naked) DWORD LEGO1__DisableRMDevice_LegoVideoManager__QAEHXZ()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP BYTE PTR [ESI+0x00000555],0x00
	JZ loc_1007C75F
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
loc_1007C75F:
	MOV EAX,DWORD PTR [ESI+0x68]
	XOR EBP, EBP
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV EDI,DWORD PTR [EDX+0x04]
	TEST EDI, EDI
	JZ FAR loc_1007C91B
	LEA EAX,DWORD PTR [ESP+var_C+0x20]
	MOV DWORD PTR [ESP+var_C+0x20],EBP
	MOV EBX,DWORD PTR [EDI]
	PUSH EAX
	PUSH EDI
	CALL_LONG(DWORD PTR [EBX+0x5C])
	TEST EAX, EAX
	JNZ FAR loc_1007C8D5
	CMP DWORD PTR [ESP+var_14+0x28],EBP
	JZ FAR loc_1007C8D5
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
	CMP EAX, 0x01
	JNZ FAR loc_1007C8D5
	LEA EAX,DWORD PTR [ESP+var_18+0x28]
	MOV ECX,DWORD PTR [ESP+var_14+0x28]
	MOV DWORD PTR [ESP+var_18+0x28],EBP
	PUSH EAX
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST EAX, EAX
	JNZ FAR loc_1007C8CB
	MOV EAX,DWORD PTR [ESP+var_18+0x28]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x0000008C])
	FSTP DWORD PTR [ESI+0x00000558]
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	FSTP DWORD PTR [ESI+0x0000055C]
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000080])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	MOV DWORD PTR [ESP+var_10+0x28],EAX
	MOV DWORD PTR [ESP+var_C+0x28],EBP
	PUSH ECX
	FILD QWORD PTR [ESP+var_C+0x28]
	FSTP DWORD PTR [ESI+0x00000560]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000084])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	MOV DWORD PTR [ESP+var_10+0x28],EAX
	MOV DWORD PTR [ESP+var_C+0x28],EBP
	PUSH ECX
	FILD QWORD PTR [ESP+var_C+0x28]
	FSTP DWORD PTR [ESI+0x00000564]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	FSTP DWORD PTR [ESI+0x00000568]
	LEA ECX,DWORD PTR [ESI+0x0000056C]
	MOV EDX,DWORD PTR [ESP+var_18+0x28]
	MOV EAX,DWORD PTR [EDX]
	PUSH ECX
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x64])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000094])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	MOV DWORD PTR [ESI+0x00000570],EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	MOV ECX,DWORD PTR [ESP+var_14+0x28]
	MOV DWORD PTR [ESI+0x00000574],EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESI+0x00000574]
	MOV EDX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	PUSH offset [LEGO1_text.mA0240_proc_100A1240]
	PUSH EDX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	MOV ECX,DWORD PTR [ESP+var_18+0x28]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESI+0x74]
	MOV BYTE PTR [ESI+0x00000555],0x01
	MOV EAX,DWORD PTR [ECX+0x00000884]
	PUSH EAX
	MOV EBP,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBP+arg1217225-0x4A4B20])
	MOV ECX,DWORD PTR [ESI+0x74]
	MOV EAX,DWORD PTR [ECX+0x00000888]
	PUSH EAX
	MOV EBP,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBP+arg1217225-0x4A4B20])
	JMP loc_1007C8D5
loc_1007C8CB:
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	PUSH EAX
	MOV EBP,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBP+arg1217226-0x4A4B20])
loc_1007C8D5:
	PUSH EDI
	CALL_LONG(DWORD PTR [EBX+0x78])
	PUSH EDI
	MOV DWORD PTR [ESI+0x00000578],EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	PUSH EDI
	MOV DWORD PTR [ESI+0x0000057C],EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	PUSH EDI
	MOV DWORD PTR [ESI+0x00000580],EAX
	CALL_LONG(DWORD PTR [EBX+0x00000094])
	PUSH EDI
	MOV DWORD PTR [ESI+0x00000584],EAX
	CALL_LONG(DWORD PTR [EBX+0x60])
	PUSH EDI
	MOV DWORD PTR [ESI+0x00000588],EAX
	CALL_LONG(DWORD PTR [EBX+0x48])
	PUSH EDI
	MOV DWORD PTR [ESI+0x0000058C],EAX
	CALL_LONG(DWORD PTR [EBX+0x08])
loc_1007C91B:
	CMP BYTE PTR [ESI+0x00000555],0x01
	SBB EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
}
}

