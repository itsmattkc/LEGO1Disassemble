#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_1002FB30()
{
__asm{
	PUSH EBX
	MOV EAX, offset LEGO1_data + 0x14C30
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
loc_1002FB3A:
	MOV DWORD PTR [EAX], 0x00000000
	ADD EAX, 0x2C
	CMP EAX, offset LEGO1_data + 0x14EF0
	JB loc_1002FB3A
	MOVSX EAX,BYTE PTR [ESI+0x20]
	XOR EBX, EBX
	TEST EAX, EAX
	MOV BYTE PTR [ESI+0x09],BL
	JZ loc_1002FB71
	LEA EDI,DWORD PTR [ESI+0x0C]
loc_1002FB5A:
	MOV EAX,DWORD PTR [EDI]
	ADD EDI, 0x04
	PUSH EAX
	INC EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOVSX EAX,BYTE PTR [ESI+0x20]
	ADD ESP, 0x04
	CMP EAX, EBX
	JA loc_1002FB5A
loc_1002FB71:
	MOV BYTE PTR [ESI+0x20],0x00
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FB80(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0xFFFFFFFF
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, offset LEGO1_data + 0x14C30
	PUSH EBP
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	MOV EAX,DWORD PTR [ESI]
	MOV EBP,DWORD PTR [EAX+0x08]
loc_1002FB9F:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBX+0x08]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1002FBF8
	PUSH 0x04
	LEA EAX,DWORD PTR [EBX+0x0C]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1002FBF8
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x10]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1002FBF8
	PUSH 0x01
	LEA EAX,DWORD PTR [EBX+0x12]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1002FBF8
	ADD EBX, 0x2C
	CMP EBX, offset LEGO1_data + 0x14EF0
	JB loc_1002FB9F
	PUSH 0x01
	ADD EDI, 0x08
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1002FBF8
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000000
loc_1002FBF8:
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FC10(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_8+0x8],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	MOV DWORD PTR [ESP+var_4+0x10],0xFFFFFFFF
	PUSH EDI
	PUSH EBP
	MOV EDI, offset LEGO1_data + 0x14C30
	MOV EBP,DWORD PTR [ESP+arg1+0x18]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ESI,DWORD PTR [EAX+0x04]
loc_1002FC34:
	PUSH 0x04
	LEA EAX,DWORD PTR [EDI+0x08]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002FCAE
	PUSH 0x04
	LEA EAX,DWORD PTR [EDI+0x0C]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002FCAE
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002FCAE
	PUSH 0x01
	LEA EAX,DWORD PTR [EDI+0x11]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002FCAE
	MOV AL,BYTE PTR [EDI+0x11]
	PUSH EBX
	MOV BYTE PTR [EDI+0x12],AL
	MOV ECX,DWORD PTR [ESP+var_C+0x20]
	ADD EDI, 0x2C
	CALL_LONG(offset [LEGO1_text.m2ECC0_sub_1002FCC0])
	INC EBX
	CMP EDI, offset LEGO1_data + 0x14EF0
	JB loc_1002FC34
	MOV EDI,DWORD PTR [ESP+var_10+0x20]
	PUSH 0x01
	ADD EDI, 0x08
	MOV ECX, EBP
	PUSH EDI
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_1002FCAE
	CMP DWORD PTR [offset LEGO1_data + 0x37CC],0x01
	JG loc_1002FCA6
	MOV BYTE PTR [EDI],0x00
loc_1002FCA6:
	MOV DWORD PTR [ESP+var_C+0x20],0x00000000
loc_1002FCAE:
	MOV EAX,DWORD PTR [ESP+var_C+0x20]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FCC0(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	LEA ECX,DWORD PTR [ESI*4+ESI]
	LEA ECX,DWORD PTR [ECX*8+ECX]
	SUB ECX, ESI
	MOV AL,BYTE PTR [offset LEGO1_data + 0x14C41+ECX]
	TEST AL, AL
	JLE loc_1002FD09
	MOVSX EAX,AL
	XOR EDX, EDX
	MOV DL,BYTE PTR [offset LEGO1_data + 0x3468+ESI]
	SUB EDX, EAX
	MOV DWORD PTR [ESP+var_4+0x8],EDX
	FILD DWORD PTR [ESP+var_4+0x8]
	FMUL DWORD PTR [offset LEGO1_data + 0x3428+ESI*4]
	POP ESI
	ADD ESP, 0x04
	FSUBR DWORD PTR [offset LEGO1_data + 0x348C+ECX]
	FSTP DWORD PTR [offset LEGO1_data + 0x14C44+ECX]
	RETN 0x0004
loc_1002FD09:
	JNZ loc_1002FD4F
	MOVSX EAX,AL
	XOR EDX, EDX
	MOV DL,BYTE PTR [offset LEGO1_data + 0x3468+ESI]
	SUB EDX, EAX
	MOV DWORD PTR [ESP+var_4+0x8],EDX
	FILD DWORD PTR [ESP+var_4+0x8]
	FMUL DWORD PTR [offset LEGO1_data + 0x3428+ESI*4]
	FSUBR DWORD PTR [offset LEGO1_data + 0x348C+ECX]
	FSTP DWORD PTR [offset LEGO1_data + 0x14C44+ECX]
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x14C30+ECX]
	TEST EAX, EAX
	JZ loc_1002FD5B
	MOV EAX,DWORD PTR [EAX+0x54]
	TEST EAX, EAX
	JZ loc_1002FD5B
	MOV BYTE PTR [EAX+0x0C],0x00
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1002FD4F:
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x348C+ECX]
	MOV DWORD PTR [offset LEGO1_data + 0x14C44+ECX],EAX
loc_1002FD5B:
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FD70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR EDX, EDX
	MOV EAX, offset LEGO1_data + 0x14C30
	MOV ECX,DWORD PTR [ESP+arg1]
loc_1002FD7B:
	CMP DWORD PTR [EAX],ECX
	JZ loc_1002FD8A
	ADD EAX, 0x2C
	INC EDX
	CMP EAX, offset LEGO1_data + 0x14EF0
	JB loc_1002FD7B
loc_1002FD8A:
	CMP EDX, 0x10
	JNB loc_1002FD9F
	LEA EAX,DWORD PTR [EDX*4+EDX]
	LEA EAX,DWORD PTR [EAX*8+EAX]
	SUB EAX, EDX
	ADD EAX, offset LEGO1_data + 0x14C30
	RETN 0x0004
loc_1002FD9F:
	XOR EAX, EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FDB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP DWORD PTR [offset LEGO1_data + 0x37CC],0x01
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	JG loc_1002FDC6
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1002FDC6:
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1002FE2F
	TEST BYTE PTR [EDI+0x13],0x01
	JZ loc_1002FE2F
	CMP BYTE PTR [EDI+0x11],0xFF
	JNZ loc_1002FE2F
	MOV EAX,DWORD PTR [EBX+0x54]
	MOV CL,BYTE PTR [ESI+0x08]
	INC CL
	MOV BYTE PTR [ESI+0x08],CL
	CMP CL, 0x05
	JB loc_1002FDF8
	MOV BYTE PTR [ESI+0x08],0x00
loc_1002FDF8:
	MOV BYTE PTR [EAX+0x0C],0x00
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x08]
	MOV ECX,DWORD PTR [offset LEGO1_data.m3410_ptr+EAX*4]
	MOV DWORD PTR [EDI+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	PUSH EAX
	MOV ECX, ESI
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m2EA90_sub_1002FA90])
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1002FE27
	MOV EAX,DWORD PTR [EAX+0x54]
	MOV BYTE PTR [EAX+0x0C],0x01
loc_1002FE27:
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1002FE2F:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FE40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	XOR BL, BL
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	TEST EAX, EAX
	JZ loc_1002FE6F
	TEST BYTE PTR [EAX+0x13],0x02
	JZ loc_1002FE6F
	MOV ECX,DWORD PTR [EAX+0x08]
	INC ECX
	MOV DWORD PTR [EAX+0x08],ECX
	CMP DWORD PTR [offset LEGO1_data + 0x3738],ECX
	JA loc_1002FE6D
	MOV DWORD PTR [EAX+0x08],0x00000000
loc_1002FE6D:
	MOV BL, 0x01
loc_1002FE6F:
	MOV AL, BL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FE80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	PUSH ESI
	XOR BL, BL
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1002FEC1
	TEST BYTE PTR [EDI+0x13],0x04
	JZ loc_1002FEC1
	MOV ECX,DWORD PTR [EDI+0x0C]
	SUB EAX, offset LEGO1_data + 0x14C30
	INC ECX
	MOV ESI, 0x0000002C
	CDQ
	IDIV ESI
	MOV DWORD PTR [EDI+0x0C],ECX
	CMP DWORD PTR [offset LEGO1_data + 0x3748+EAX*4],ECX
	JA loc_1002FEBF
	MOV DWORD PTR [EDI+0x0C],0x00000000
loc_1002FEBF:
	MOV BL, 0x01
loc_1002FEC1:
	MOV AL, BL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FED0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	XOR BL, BL
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	TEST EAX, EAX
	JZ loc_1002FEF9
	TEST BYTE PTR [EAX+0x13],0x08
	JZ loc_1002FEF9
	MOV CL,BYTE PTR [EAX+0x10]
	INC CL
	MOV BYTE PTR [EAX+0x10],CL
	CMP CL, 0x03
	JBE loc_1002FEF7
	MOV BYTE PTR [EAX+0x10],BL
loc_1002FEF7:
	MOV BL, 0x01
loc_1002FEF9:
	MOV AL, BL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FF00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1002FF32
	TEST BYTE PTR [ECX+0x13],0x04
	JZ loc_1002FF32
	SUB EAX, offset LEGO1_data + 0x14C30
	MOV ESI, 0x0000002C
	CDQ
	IDIV ESI
	POP ESI
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x3788+EAX*4]
	ADD EAX,DWORD PTR [ECX+0x0C]
	RETN 0x0004
loc_1002FF32:
	XOR EAX, EAX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1002FF40(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	TEST EAX, EAX
	JZ loc_1002FF80
	TEST BYTE PTR [EAX+0x13],0x02
	JZ loc_1002FF80
	CMP BYTE PTR [ESP+arg2],0x00
	JZ loc_1002FF6B
	XOR ECX, ECX
	MOV CL,BYTE PTR [EAX+0x10]
	ADD ECX,DWORD PTR [offset LEGO1_data + 0x3740]
	MOV EAX, ECX
	RETN 0x0008
loc_1002FF6B:
	TEST EAX, EAX
	JZ loc_1002FF7B
	MOV EAX,DWORD PTR [EAX+0x08]
	ADD EAX,DWORD PTR [offset LEGO1_data + 0x373C]
	RETN 0x0008
loc_1002FF7B:
	XOR EAX, EAX
	RETN 0x0008
loc_1002FF80:
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1002FF90(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x37C8]
	PUSH EDI
	TEST EAX, EAX
	JZ loc_1002FFA4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1002FFA4:
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	TEST ESI, ESI
	JZ loc_1002FFF1
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [offset LEGO1_data + 0x37C8], EAX
	ADD ESP, 0x04
	MOV EDX, EAX
	TEST EDX, EDX
	JZ loc_1002FFFB
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EDX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	RET
loc_1002FFF1:
	MOV DWORD PTR [offset LEGO1_data + 0x37C8],0x00000000
loc_1002FFFB:
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10030000(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	TEST EAX, EAX
	JNZ loc_10030017
	XOR AL, AL
	POP ESI
	RETN 0x0004
loc_10030017:
	SUB EAX, offset LEGO1_data + 0x14C30
	MOV ECX, 0x0000002C
	CDQ
	IDIV ECX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m2F030_sub_10030030])
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10030030(DWORD arg1)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg1+0x5C]
	CMP EBP, 0x10
	JB loc_1003004C
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
loc_1003004C:
	LEA EAX,DWORD PTR [EBP*4+EBP+arg1217224-0x4A4B20]
	LEA EAX,DWORD PTR [EAX*8+EAX]
	SUB EAX, EBP
	LEA ESI,DWORD PTR [offset LEGO1_data + 0x14C30+EAX]
	TEST ESI, ESI
	JNZ loc_1003006B
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
loc_1003006B:
	MOV BYTE PTR [ESP+var_48+0x5B],0x01
	CMP BYTE PTR [ESI+0x11],0x00
	JGE loc_1003007F
	MOV AL,BYTE PTR [offset LEGO1_data + 0x3468+EBP]
	MOV BYTE PTR [ESI+0x11],AL
loc_1003007F:
	MOV AL,BYTE PTR [ESI+0x11]
	TEST AL, AL
	JG loc_1003008D
	MOV BYTE PTR [ESP+var_48+0x5B],0x00
	JMP loc_100300FA
loc_1003008D:
	MOV EDX,DWORD PTR [ESI]
	SUB AL, 0x02
	CMP AL, 0x01
	MOV EBX,DWORD PTR [EDX+0x54]
	MOV BYTE PTR [ESI+0x11],AL
	JNZ loc_100300A5
	MOV BYTE PTR [ESI+0x11],0x00
	MOV BYTE PTR [EBX+0x0C],0x00
	JMP loc_100300FA
loc_100300A5:
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m2ECC0_sub_1002FCC0])
	LEA EAX,DWORD PTR [ESP+var_40+0x5C]
	MOV ECX, 0x00000010
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	MOV DWORD PTR [ESP+var_48+0x5C],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [EBX+0x14]
	REP MOVSD
	LEA ECX,DWORD PTR [EBP*4+EBP+arg1217224-0x4A4B20]
	LEA EAX,DWORD PTR [ECX*8+ECX]
	MOV ECX,DWORD PTR [ESP+var_44+0x5C]
	SUB EAX, EBP
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x14C44+EAX]
	LEA EAX,DWORD PTR [ESP+var_48+0x5C]
	PUSH EAX
	MOV DWORD PTR [ECX+0x34],EDX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA36B0_sub_100A46B0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
loc_100300FA:
	MOV AL,BYTE PTR [ESP+var_48+0x5B]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10030110(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	XOR EDX, EDX
	PUSH EDI
	XOR ESI, ESI
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
loc_1003011A:
	LEA EDI,DWORD PTR [offset LEGO1_data + 0x14C30+ESI]
	CMP EDI, EAX
	JZ loc_10030137
	ADD ESI, 0x2C
	INC EDX
	CMP ESI, 0x000002C0
	JL loc_1003011A
	XOR AL, AL
	POP EDI
	POP ESI
	RETN 0x0004
loc_10030137:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m2F030_sub_10030030])
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10030150(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217245 = 0x4A4B74,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV BL,BYTE PTR [ESP+arg3+0x10]
	MOV DWORD PTR [ESI+0x2C],EAX
	TEST BL, BL
	JZ loc_10030186
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH offset [LEGO1_data.m37E4_str]
	MOV ECX,DWORD PTR [EAX+0x40]
	CALL_LONG(offset [LEGO1_text.m3C170_sub_1003D170])
	PUSH 0x3C
	MOV ECX, EAX
	PUSH 0x23
	MOV DWORD PTR [ESI+0x24],EAX
	CALL_LONG(offset [LEGO1_text.m5CB0_sub_10006CB0])
loc_10030186:
	CMP BYTE PTR [ESI+0x20],0x00
	JNZ loc_100301A2
	MOV AL,BYTE PTR [ESP+arg4+0x10]
	MOV BYTE PTR [ESI+0x28],AL
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x32
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
loc_100301A2:
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOVSX ECX,BYTE PTR [ESI+0x20]
	ADD ESP, 0x04
	MOV DWORD PTR [ECX*4+ESI+0x0C],EAX
	MOV CL,BYTE PTR [ESI+0x20]
	MOV EBP,DWORD PTR [ESP+r+0x14]
	MOVSX EAX,CL
	INC CL
	MOV EDI,DWORD PTR [EAX*4+ESI+0x0C]
	MOV BYTE PTR [ESI+0x20],CL
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBP+arg1217245-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_100301E2
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_100301EB
loc_100301E2:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
loc_100301EB:
	ADD ECX,DWORD PTR [ESP+arg1+0x14]
	ADD ECX, 0x000003E8
	CMP BL, 0x01
	MOV DWORD PTR [EDI+0x08],ECX
	MOV EAX,DWORD PTR [EDI+0x04]
	PUSH -0x02
	PUSH EBP
	MOV ECX,DWORD PTR [EAX+0x14]
	SBB AL, AL
	MOV EDX,DWORD PTR [ECX+0x34]
	MOV ECX, ESI
	MOV DWORD PTR [EDI+0x0C],EDX
	NEG AL
	MOV BYTE PTR [EDI+0x10],AL
	CALL_LONG(offset [LEGO1_text.m2F7B0_sub_100307B0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_10030590()
{
	enum{
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1217229 = 0x4A4B34,
	};

__asm{
	SUB ESP, 0x50
	MOV DWORD PTR [ESP+var_4C+0x50],ECX
	PUSH EBX
	PUSH ESI
	MOV EBX, offset LEGO1_data + 0x14C30
	MOV DWORD PTR [ESP+var_50+0x58],0x00000000
	PUSH EDI
	PUSH EBP
loc_100305A8:
	MOV EAX,DWORD PTR [ESP+var_50+0x60]
	MOV ECX,DWORD PTR [ESP+var_4C+0x60]
	MOV BYTE PTR [EBX+0x11],0xFF
	MOV BYTE PTR [EBX+0x12],0xFF
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ECC0_sub_1002FCC0])
	MOV EAX,DWORD PTR [EBX]
	TEST EAX, EAX
	JZ loc_1003060A
	MOV EBP,DWORD PTR [EAX+0x54]
	MOV ECX, 0x00000010
	MOV DWORD PTR [ESP+var_48+0x60],offset [LEGO1_rdata.m300_ptr]
	LEA EAX,DWORD PTR [ESP+var_40+0x60]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x60],EAX
	MOV ESI,DWORD PTR [EBP+arg1217229-0x4A4B20]
	REP MOVSD
	MOV ECX,DWORD PTR [ESP+var_44+0x60]
	MOV EDX,DWORD PTR [EBX+0x14]
	LEA EAX,DWORD PTR [ESP+var_48+0x60]
	MOV DWORD PTR [ECX+0x34],EDX
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.mA36B0_sub_100A46B0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EBP
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
loc_1003060A:
	ADD EBX, 0x2C
	INC DWORD PTR [ESP+var_50+0x60]
	CMP EBX, offset LEGO1_data + 0x14EF0
	JB loc_100305A8
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x50
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10030630()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1217225 = 0x4A4B24,
		arg1217230 = 0x4A4B38,
	};

__asm{
	SUB ESP, 0x20
	MOV DWORD PTR [ESP+var_4+0x20],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [ESP+var_C+0x30],EAX
	TEST EAX, EAX
	JNZ loc_10030655
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x20
	RET
loc_10030655:
	MOV ESI, offset LEGO1_data + 0x14C58
loc_1003065A:
	CMP DWORD PTR [ESI-0x28],0x00
	JZ FAR loc_1003076F
	MOV EAX,DWORD PTR [ESI-0x10]
	TEST EAX, EAX
	JZ FAR loc_1003076F
	MOV ECX,DWORD PTR [ESP+var_C+0x30]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1F020_sub_10020020])
	MOV EDI, EAX
	MOV DWORD PTR [ESI],EAX
	TEST EDI, EDI
	JZ FAR loc_1003076F
	LEA EAX,DWORD PTR [ESP+var_18+0x30]
	MOV ECX,DWORD PTR [ESI-0x0C]
	MOV EDX,DWORD PTR [ESI-0x08]
	MOV DWORD PTR [ESP+var_1C+0x30],EAX
	MOV EAX,DWORD PTR [ESI-0x04]
	MOV DWORD PTR [ESP+var_18+0x30],ECX
	MOV DWORD PTR [ESP+var_14+0x30],EDX
	MOV DWORD PTR [ESP+var_10+0x30],EAX
	MOV DWORD PTR [ESP+var_20+0x30],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_8+0x30],0x00000000
	CMP BYTE PTR [EDI+0x04],0x00
	JBE loc_10030700
	XOR EBX, EBX
loc_100306BA:
	MOV EBP,DWORD PTR [EDI+0x2C]
	MOV ECX,DWORD PTR [ESP+var_1C+0x30]
	ADD EBP, EBX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x34]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_20+0x38]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2F40]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_100306FA
	ADD EBX, 0x18
	XOR EAX, EAX
	MOV AL,BYTE PTR [EDI+0x04]
	INC DWORD PTR [ESP+var_C+0x34]
	CMP EAX,DWORD PTR [ESP+var_C+0x34]
	JG loc_100306BA
	JMP loc_10030700
loc_100306FA:
	MOV DWORD PTR [ESI], 0x00000000
loc_10030700:
	MOV EDI,DWORD PTR [ESI]
	TEST EDI, EDI
	JZ loc_1003076F
	MOV EBX,DWORD PTR [EDI+0x18]
	ADD EDI, 0x14
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	PUSH EBX
	MOV EBP,DWORD PTR [ESP+var_20+0x34]
	LEA ECX,DWORD PTR [ESP+var_20+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FADD DWORD PTR [EBX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2F48]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10030751
	MOV EBX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	LEA ECX,DWORD PTR [ESP+var_24+0x34]
	PUSH EBX
	MOV EBP,DWORD PTR [ESP+var_20+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FADD DWORD PTR [EBX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2F40]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1003076F
loc_10030751:
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+var_20+0x34]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ECX+0x08]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FADD DWORD PTR [ECX+0x0C]
	FDIV DWORD PTR [ECX+0x04]
	FCHS
	FSTP DWORD PTR [ESI-0x08]
loc_1003076F:
	ADD ESI, 0x2C
	CMP ESI, offset LEGO1_data + 0x14F18
	JB FAR loc_1003065A
	MOV EAX,DWORD PTR [ESP+var_8+0x34]
	POP EBP
	POP EDI
	POP ESI
	MOV BYTE PTR [EAX+0x09],0x01
	XOR EAX, EAX
	POP EBX
	ADD ESP, 0x20
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10030790(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ECX+0x09],0x00
	JNZ loc_1003079B
	CALL_LONG(offset [LEGO1_text.m2F630_sub_10030630])
loc_1003079B:
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX], 0x00000010
	MOV EAX, offset LEGO1_data + 0x14C30
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100307B0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2ED70_sub_1002FD70])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100307FA
	CMP BYTE PTR [ESI+0x11],0x00
	JGE loc_100307DD
	SUB EAX, offset LEGO1_data + 0x14C30
	MOV ECX, 0x0000002C
	CDQ
	IDIV ECX
	MOV AL,BYTE PTR [offset LEGO1_data + 0x3468+EAX]
	MOV BYTE PTR [ESI+0x11],AL
loc_100307DD:
	MOV CL,BYTE PTR [ESI+0x11]
	TEST CL, CL
	JLE loc_100307FA
	MOV EAX,DWORD PTR [ESP+arg2+0x4]
	ADD CL, AL
	MOV BYTE PTR [ESI+0x11],CL
	CMP CL, 0x01
	JG loc_100307FA
	TEST EAX, EAX
	JGE loc_100307FA
	MOV BYTE PTR [ESI+0x11],0x00
loc_100307FA:
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10030800()
{
__asm{
	MOV EAX, offset LEGO1_data + 0x14C42
loc_10030805:
	MOV CL,BYTE PTR [EAX-0x01]
	ADD EAX, 0x2C
	CMP EAX, offset LEGO1_data + 0x14F02
	MOV BYTE PTR [EAX-0x2C],CL
	JB loc_10030805
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10030820()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2F8E9_proc_100308E9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	LEA ECX,DWORD PTR [ESI+0x0000012C]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	CALL_LONG(offset LEGO1_text + 0x2B850)
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2FB8_ptr]
	MOV DWORD PTR [ESI+0x000000FC],EDI
	MOV DWORD PTR [ESI+0x00000100],EDI
	MOV DWORD PTR [ESI+0x00000104],EDI
	MOV DWORD PTR [ESI+0x00000108],EDI
	MOV DWORD PTR [ESI+0x0000010C],EDI
	MOV DWORD PTR [ESI+0x00000110],EDI
	MOV DWORD PTR [ESI+0x00000114],EDI
	MOV DWORD PTR [ESI+0x00000118],EDI
	MOV DWORD PTR [ESI+0x0000011C],EDI
	MOV DWORD PTR [ESI+0x00000120],EDI
	MOV DWORD PTR [ESI+0x00000124],EDI
	PUSH ESI
	MOV DWORD PTR [ESI+0x00000128],EDI
	MOV DWORD PTR [ESI+0x000000F8],EDI
	MOV DWORD PTR [ESI+0x0000013C],EDI
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10030A50()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2FB09_proc_10030B09]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2FB8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	PUSH 0x00
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4B470__SetWaitIndicator_MxTransitionManager__QAEXPAVMxVideoPresenter___Z])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],ECX
	JNZ loc_10030AB2
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10030AB2:
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10030AC9
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m32050_sub_10033050])
loc_10030AC9:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m2FAFB_sub_10030AFB])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2FB13_sub_10030B13])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10030AFB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x0000012C
	JMP_LONG(offset [LEGO1_text.m2B990_loc_1002C990])
}
}

__declspec(naked) DWORD LEGO1_sub_10030B13()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10030D90()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x000000F8]
	MOV EDI, ECX
	MOV EAX,DWORD PTR [EAX+0x18]
	SUB EAX, 0x02
	CMP EAX, 0x08
	JA_LONG(offset [LEGO1_text.m2FDB5_loc_10030DB5])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m2FEE4_proc_10030EE4+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m2FED0_proc_10030ED0+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10030EF0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x000000F8]
	MOVSX EAX,WORD PTR [ECX+0x1C]
	CMP EAX, 0x01
	JZ loc_10030F12
	CMP EAX, 0x02
	JZ loc_10030F3F
	CMP EAX, 0x03
	JZ FAR loc_10030F90
	POP ESI
	RET
loc_10030F12:
	MOV DWORD PTR [ESI+0x0000013C],0x00000002
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	POP ESI
	MOV DWORD PTR [EAX+0x18],0x00000000
	RET
loc_10030F3F:
	CMP BYTE PTR [ECX+0x1E],0x00
	JZ loc_10030F64
	MOV BYTE PTR [ECX+0x1E],0x00
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	MOV DWORD PTR [EAX+0x18],0x00000000
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5BFF0_sub_1005CFF0])
	POP ESI
	RET
loc_10030F64:
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x01
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5BFF0_sub_1005CFF0])
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	POP ESI
	MOV BYTE PTR [EAX+0x1E],0x01
	RET
loc_10030F90:
	MOV DWORD PTR [ESI+0x0000013C],0x00000008
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	POP ESI
	MOV DWORD PTR [EAX+0x18],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10031030(DWORD arg1)
{
	enum{
		var_A8 = -0xA8,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m30491_proc_10031491]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	CMP WORD PTR DS:[EDI+0x28],0x01
	JNZ_LONG(offset [LEGO1_text.m302AF_loc_100312AF])
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EDI+0x20]
	SUB EAX, 0x0000041C
	CMP EAX, 0x70
	JA_LONG(offset [LEGO1_text.m302A3_loc_100312A3])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m30510_proc_10031510+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m304A8_proc_100314A8+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_100313CA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003149B()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
	MOV EDI, EDI
	JMP_LONG(offset [LEGO1_text.m304A8_proc_100314A8])
}
}

__declspec(naked) DWORD LEGO1_sub_10031590()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	MOV EDI, EAX
loc_100315B3:
	LEA EAX,DWORD PTR [EBX+0x0000046A]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	TEST EAX, EAX
	JZ loc_100315DF
	MOV ECX, EBX
	MOV EDX,DWORD PTR [EAX]
	SUB ECX, EDI
	CMP ECX, 0x01
	SBB CL, CL
	NEG CL
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x54])
loc_100315DF:
	INC EBX
	CMP EBX, 0x06
	JL loc_100315B3
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100315F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m307E5_proc_100317E5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_1003165B
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	CMP EAX,DWORD PTR [ESI+0x00000118]
	JNZ loc_1003163B
	MOV ECX,DWORD PTR [ESI+0x00000118]
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV EDI, EAX
	JMP loc_1003165E
loc_1003163B:
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	CMP EAX,DWORD PTR [ESI+0x0000011C]
	JNZ loc_1003165B
	MOV ECX,DWORD PTR [ESI+0x0000011C]
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV EDI, EAX
	JMP loc_1003165E
loc_1003165B:
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
loc_1003165E:
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	MOV EAX,DWORD PTR [EAX+0x18]
	CMP EAX, 0x03
	JZ loc_10031678
	CMP EAX, 0x08
	JZ loc_10031680
	CMP EAX, 0x0A
	JZ loc_10031688
	JMP loc_10031696
loc_10031678:
	MOV ECX,DWORD PTR [ESI+0x000000FC]
	JMP loc_1003168E
loc_10031680:
	MOV ECX,DWORD PTR [ESI+0x00000104]
	JMP loc_1003168E
loc_10031688:
	MOV ECX,DWORD PTR [ESI+0x00000108]
loc_1003168E:
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV EDI, EAX
loc_10031696:
	TEST EDI, EDI
	JNZ_LONG(offset [LEGO1_text.m307C0_loc_100317C0])
	MOVSX EAX,WORD PTR [EBX+0x0C]
	SUB EAX, 0x0000012C
	CMP EAX, 0x0A
	JA_LONG(offset [LEGO1_text.m307C0_loc_100317C0])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m30810_proc_10031810+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m307F8_proc_100317F8+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_100317EF()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031AC3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031B86()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031BFD()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031C74()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031D0D()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031DA9()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031E45()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031EE1()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10031F7D()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10032549()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10032620()
{
__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH 0x437A0000
	MOV ECX,DWORD PTR [EAX+0x68]
	PUSH 0x3DCCCCCD
	PUSH 0x42B40000
	CALL_LONG(offset [LEGO1_text.mAA4D0_sub_100AB4D0])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV EAX,DWORD PTR [EAX+0x00000424]
	SUB EAX, 0x04
	CMP EAX, 0x3E
	JA_LONG(offset [LEGO1_text.m316F7_loc_100326F7])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m31724_proc_10032724+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m31700_proc_10032700+ECX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10032770(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m350_ptr]
	PUSH ESI
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m300_ptr]
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX, ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX, 0x00000010
	REP MOVSD
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100327A0()
{
__asm{
	PUSH ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x00
	PUSH 0x000003A7
	PUSH EAX
	LEA EDI,DWORD PTR [ESI+0x0C]
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	PUSH 0x000003BB
	PUSH 0x000003B4
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	CMP DWORD PTR [ESI+0x0000013C],0x3D
	JZ loc_100327E7
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	MOV DWORD PTR [EAX+0x18],0x00000000
loc_100327E7:
	MOV EAX,DWORD PTR [ESI+0x0000013C]
	LEA EDX,DWORD PTR [EAX-0x02]
	CMP EDX, 0x3E
	JA_LONG(offset [LEGO1_text.m31804_loc_10032804])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m31CEC_proc_10032CEC+EDX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m31C9C_proc_10032C9C+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10032D30(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_14 = -0x14,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m31EEF_proc_10032EEF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX+0x000000F8]
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP BYTE PTR [EAX+0x1F],0x00
	JZ_LONG(offset [LEGO1_text.m31E60_loc_10032E60])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	LEA EAX,DWORD PTR [ECX+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m31E03_loc_10032E03])
	CMP DWORD PTR [EAX+0x08],0x04
	JNZ_LONG(offset [LEGO1_text.m31E03_loc_10032E03])
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	TEST EAX, EAX
	JZ loc_10032D8D
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
loc_10032D8D:
	CMP BYTE PTR [EBP+arg4+0x4],0x00
	JZ loc_10032D9F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000098]
	PUSH ECX
	JMP loc_10032DA1
loc_10032D9F:
	PUSH 0x00
loc_10032DA1:
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B700_sub_1005C700])
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	TEST EAX, EAX
	JZ loc_10032DC7
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data.m3A44_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
loc_10032DC7:
	PUSH 0x07
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14820_sub_10015820])
	ADD ESP, 0x08
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000F8]
	MOV DWORD PTR [EAX+0x0000013C],0x00000000
	MOV BYTE PTR [ECX+0x1F],0x00
	JMP_LONG(offset [LEGO1_text.m31DF4_loc_10032DF4])
}
}

__declspec(naked) DWORD LEGO1_sub_10032E58()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10032EF9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10033050(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
	MOV EAX,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m130_str]
	MOV ECX, EDI
	MOV ESI,DWORD PTR [EAX+0x10]
	CALL_LONG(ESI)
	TEST AL, AL
	JZ loc_10033081
	MOV DWORD PTR [EBX+0x00000110],0x00000000
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10033081:
	PUSH offset [LEGO1_data.m410_str]
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST AL, AL
	JZ loc_1003309E
	MOV DWORD PTR [EBX+0x00000118],0x00000000
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1003309E:
	PUSH offset [LEGO1_data.m3D8_str]
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST AL, AL
	JZ loc_100330BB
	MOV DWORD PTR [EBX+0x00000128],0x00000000
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100330BB:
	PUSH offset [LEGO1_data.m3E0_str]
	MOV ECX, EDI
	CALL_LONG(ESI)
	TEST AL, AL
	JZ loc_100330D2
	MOV DWORD PTR [EBX+0x00000124],0x00000000
loc_100330D2:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100330E0()
{
__asm{
	PUSH ESI
	PUSH offset [LEGO1_data.m154_str]
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x000000F8],EAX
	TEST EAX, EAX
	JNZ loc_1003311C
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV DWORD PTR [ESI+0x000000F8],EAX
	MOV DWORD PTR [EAX+0x18],0x00000000
loc_1003311C:
	LEA ECX,DWORD PTR [ESI+0x0000012C]
	CALL_LONG(offset [LEGO1_text.m2BDE0_sub_1002CDE0])
	MOV ECX,DWORD PTR [ESI+0x00000100]
	CALL_LONG(offset [LEGO1_text.m169F0_sub_100179F0])
	MOV ECX,DWORD PTR [ESI+0x000000FC]
	CALL_LONG(offset [LEGO1_text.m371B0_sub_100381B0])
	MOV ECX,DWORD PTR [ESI+0x00000104]
	CALL_LONG(offset [LEGO1_text.m4BC40_sub_1004CC40])
	MOV ECX,DWORD PTR [ESI+0x00000108]
	CALL_LONG(offset [LEGO1_text.m353F0_sub_100363F0])
	MOV ECX,DWORD PTR [ESI+0x00000110]
	TEST ECX, ECX
	JZ loc_10033162
	CALL_LONG(offset [LEGO1_text.m2320_sub_10003320])
loc_10033162:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10033350()
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x000000F8]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	CMP DWORD PTR [EAX+0x18],0x0A
	JNZ loc_10033396
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10033396
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH offset [LEGO1_data.m3C4_str]
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x10])
	TEST AL, AL
	JNZ loc_10033396
	MOV ECX,DWORD PTR [ESI+0x00000108]
	CALL_LONG(offset [LEGO1_text.m36240_sub_10037240])
	MOV ECX,DWORD PTR [ESI+0x00000108]
	CALL_LONG(offset [LEGO1_text.m36250_sub_10037250])
loc_10033396:
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	CMP DWORD PTR [EAX+0x18],0x08
	JNZ loc_100333D6
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_100333D6
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH offset [LEGO1_data.m3B8_str]
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x10])
	TEST AL, AL
	JNZ loc_100333D6
	MOV ECX,DWORD PTR [ESI+0x00000104]
	CALL_LONG(offset [LEGO1_text.m4CB10_sub_1004DB10])
	MOV ECX,DWORD PTR [ESI+0x00000104]
	CALL_LONG(offset [LEGO1_text.m4CBE0_sub_1004DBE0])
loc_100333D6:
	MOV EAX,DWORD PTR [ESI+0x000000F8]
	CMP DWORD PTR [EAX+0x18],0x03
	JNZ loc_10033401
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10033401
	MOV ECX,DWORD PTR [ESI+0x000000FC]
	CALL_LONG(offset [LEGO1_text.m37380_sub_10038380])
	MOV ECX,DWORD PTR [ESI+0x000000FC]
	CALL_LONG(offset [LEGO1_text.m372B0_sub_100382B0])
loc_10033401:
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m60010_sub_10061010])
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_1003344E
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV EBX,DWORD PTR [EAX]
	MOV EBP, EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV EDI, EAX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [EBX+0x60])
	CMP AL,BYTE PTR [EDI+0x0C]
	JZ loc_1003344E
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x000000E4])
	MOV ECX,DWORD PTR [ESI+0x00000120]
	MOV BYTE PTR [ECX+0x00000160],0x00
loc_1003344E:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x23
	JNZ loc_10033472
	PUSH offset [LEGO1_data.m3814_str]
	PUSH offset [LEGO1_data.m3808_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
loc_10033472:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x1B
	JNZ loc_10033496
	PUSH offset [LEGO1_data.m37FC_str]
	PUSH offset [LEGO1_data.m3808_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
loc_10033496:
	MOV DWORD PTR [ESI+0x0000013C],0x00000002
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100334B0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m327E9_proc_100337E9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	LEA ECX,DWORD PTR [ESI+0x24]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV WORD PTR DS:[ESI+0x0C],BX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV WORD PTR DS:[ESI+0x0E],BX
	MOV DWORD PTR [ESI+0x08],EBX
	MOV WORD PTR DS:[ESI+0x10],BX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	LEA EAX,DWORD PTR [ESI+0x3C]
	LEA ECX,DWORD PTR [ESI+0x34]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x50]
	LEA ECX,DWORD PTR [ESI+0x48]
	MOV DWORD PTR [ESI+0x34],offset [LEGO1_rdata.m488_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [ESI+0x48],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESI+0x5C]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	LEA ECX,DWORD PTR [ESI+0x70]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	LEA EAX,DWORD PTR [ESI+0x00000088]
	LEA ECX,DWORD PTR [ESI+0x00000080]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x0000009C]
	LEA ECX,DWORD PTR [ESI+0x00000094]
	MOV DWORD PTR [ESI+0x00000080],offset [LEGO1_rdata.m488_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [ESI+0x00000094],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESI+0x000000A8]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	LEA ECX,DWORD PTR [ESI+0x000000BC]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	LEA EAX,DWORD PTR [ESI+0x000000D4]
	LEA ECX,DWORD PTR [ESI+0x000000CC]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [ESI+0x000000CC],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESI+0x000000E0]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x000000F4]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	LEA ECX,DWORD PTR [ESI+0x00000108]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	LEA EAX,DWORD PTR [ESI+0x00000120]
	LEA ECX,DWORD PTR [ESI+0x00000118]
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [ESI+0x00000118],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESI+0x0000012C]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x00000140]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	LEA ECX,DWORD PTR [ESI+0x00000164]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	LEA ECX,DWORD PTR [ESI+0x00000174]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x00000188]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x0000019C]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x0B
	LEA ECX,DWORD PTR [ESI+0x000001BC]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	LEA ECX,DWORD PTR [ESI+0x000001CC]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x000001E0]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x000001F4]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV BYTE PTR [EBP+var_8+0x4],0x0D
	LEA ECX,DWORD PTR [ESI+0x00000210]
	CALL_LONG(offset [LEGO1_text.m32800_sub_10033800])
	MOV BYTE PTR [EBP+var_8+0x4],0x0E
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3028_ptr]
	MOV BYTE PTR [ESI+0x1E],BL
	MOV DWORD PTR [ESI+0x18],0x00000001
	MOV WORD PTR DS:[ESI+0x10],BX
	MOV BYTE PTR [ESI+0x20],BL
	MOV WORD PTR DS:[ESI+0x0E],BX
	MOV BYTE PTR [ESI+0x1F],BL
	MOV DWORD PTR [ESI+0x08],offset LEGO1_data + 0x37F0
	MOV DWORD PTR [ESI+0x14],0xFFFFFFFF
	MOV BYTE PTR [ESI+0x22],BL
	MOV DWORD PTR [ESI+0x00000154],EBX
	MOV DWORD PTR [ESI+0x00000158],EBX
	MOV DWORD PTR [ESI+0x0000015C],EBX
	MOV DWORD PTR [ESI+0x00000160],EBX
	MOV DWORD PTR [ESI+0x000001B0],EBX
	MOV BYTE PTR [ESI+0x21],0x01
	MOV WORD PTR DS:[ESI+0x1C],0x0001
	MOV WORD PTR DS:[ESI+0x0C],0x0003
	MOV DWORD PTR [ESI+0x000001B4],EBX
	MOV DWORD PTR [ESI+0x000001B8],EBX
	MOV DWORD PTR [ESI+0x00000208],EBX
	MOV DWORD PTR [ESI+0x0000020C],EBX
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x0000025C],EBX
	MOV DWORD PTR [ESI+0x00000260],EBX
	MOV DWORD PTR [ESI+0x00000264],EBX
	MOV DWORD PTR [ESI+0x00000268],EBX
	CALL_LONG(offset [LEGO1_text.m336D0_sub_100346D0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10033800()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m32881_proc_10033881]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ESI+0x10],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x10],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x24],offset [LEGO1_rdata.m288_ptr]
	LEA EAX,DWORD PTR [ESI+0x18]
	LEA ECX,DWORD PTR [ESI+0x40]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x3C],ECX
	MOV DWORD PTR [ESI+0x24],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x38],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x38],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	LEA EAX,DWORD PTR [ESI+0x2C]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI+0x28],EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100339F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000210
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A07()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000001BC
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A15()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000164
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A23()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000108
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A31()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000BC
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A3F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x70
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A4A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x24
	JMP_LONG(offset [LEGO1_text.m32A70_loc_10033A70])
}
}

__declspec(naked) DWORD LEGO1_sub_10033A5F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_10033AB1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100343A0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	LEA ESI,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ECX+0x04],ESI
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX, ECX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI+0x08],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100343D0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg2+0x10]
	PUSH 0x04
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESP+var_4+0x14],EAX
	LEA EAX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [ESI]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX+0x08]
	MOV ECX, ESI
	CALL_LONG(EBX)
	MOV EAX,DWORD PTR [EDI+0x04]
	PUSH 0x04
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x18],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x18]
	PUSH EAX
	CALL_LONG(EBX)
	MOV ECX,DWORD PTR [EDI+0x08]
	PUSH 0x04
	MOV DWORD PTR [ESP+var_8+0x18],ECX
	LEA ECX,DWORD PTR [ESP+var_8+0x18]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EBX)
	MOV EAX, ESI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0014
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10034430(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	MOV EDI, ECX
	PUSH 0x04
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(EBX)
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH 0x04
	ADD EAX, 0x04
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(EBX)
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH 0x04
	ADD EAX, 0x08
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(EBX)
	MOV EAX, EDI
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10034470(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x02
	MOV EDI,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESP+r+0x12]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EDI)
	MOVSX EAX,WORD PTR [ESP+var_8+0x16]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBX, EAX
	MOVSX ECX,WORD PTR [ESP+var_8+0x16]
	PUSH ECX
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(EDI)
	MOVSX EAX,WORD PTR [ESP+var_8+0x16]
	MOV ECX,DWORD PTR [ESP+var_4+0x18]
	PUSH EBX
	MOV BYTE PTR [EBX+EAX],0x00
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX, ESI
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100344D0(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m33576_proc_10034576]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	MOV EDI,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EDI+0x14])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m33588_loc_10034588])
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ESP
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5030_sub_10006030])
	SUB ESP, 0x14
	LEA EAX,DWORD PTR [EBX+0x10]
	MOV DWORD PTR [EBP+var_20+0x4],ESP
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m333A0_sub_100343A0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m333D0_sub_100343D0])
	SUB ESP, 0x14
	LEA EAX,DWORD PTR [EBX+0x24]
	MOV DWORD PTR [EBP+var_1C+0x4],ESP
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD EBX, 0x38
	CALL_LONG(offset [LEGO1_text.m333A0_sub_100343A0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m333D0_sub_100343D0])
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_18+0x4],ESP
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m333A0_sub_100343A0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m333D0_sub_100343D0])
	JMP_LONG(offset [LEGO1_text.m33648_loc_10034648])
}
}

__declspec(naked) DWORD LEGO1_sub_10034660()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m336A0_sub_100346A0])
	LEA ECX,DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.m13D00_sub_10014D00])
	MOV DWORD PTR [ESI+0x14],EAX
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	MOV EAX,DWORD PTR [ESI+0x14]
	CMP EAX, -0x01
	JZ loc_1003469A
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1003469A:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100346A0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV ESI, ECX
	CMP EAX, -0x01
	JZ loc_100346C5
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	MOV DWORD PTR [ESI+0x14],0xFFFFFFFF
	ADD ESP, 0x10
loc_100346C5:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100346D0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m33B22_proc_10034B22]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	PUSH offset LEGO1_data + 0x1D4
	ADD ECX, 0x24
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	PUSH offset LEGO1_data + 0x1D4
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x70
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	PUSH offset LEGO1_data + 0x1D4
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x000000BC
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH offset LEGO1_data + 0x1D4
	MOV BYTE PTR [EAX+0x22],0x00
	LEA ECX,DWORD PTR [EAX+0x00000108]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000154]
	TEST EAX, EAX
	JZ loc_10034789
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_10034764
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10034764:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33AE2_sub_10034AE2])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000154],0x00000000
loc_10034789:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000158]
	TEST EAX, EAX
	JZ loc_100347DC
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_100347B7
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100347B7:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33AEA_sub_10034AEA])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000158],0x00000000
loc_100347DC:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x0000015C]
	TEST EAX, EAX
	JZ loc_1003482F
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_1003480A
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003480A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33AF2_sub_10034AF2])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x0000015C],0x00000000
loc_1003482F:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000160]
	TEST ECX, ECX
	JZ loc_1003484F
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000160],0x00000000
loc_1003484F:
	PUSH offset LEGO1_data + 0x1D4
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x00000164
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x000001B0]
	TEST EAX, EAX
	JZ loc_100348B5
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_10034890
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10034890:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33AFA_sub_10034AFA])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x000001B0],0x00000000
loc_100348B5:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x000001B4]
	TEST EAX, EAX
	JZ loc_10034908
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_100348E3
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100348E3:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33B02_sub_10034B02])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x000001B4],0x00000000
loc_10034908:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x000001B8]
	TEST ECX, ECX
	JZ loc_10034928
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x000001B8],0x00000000
loc_10034928:
	PUSH offset LEGO1_data + 0x1D4
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x000001BC
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000208]
	TEST EAX, EAX
	JZ loc_1003498E
	MOV DWORD PTR [EBP+var_8+0x4],0x00000005
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_10034969
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10034969:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33B0A_sub_10034B0A])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000208],0x00000000
loc_1003498E:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x0000020C]
	TEST ECX, ECX
	JZ loc_100349AE
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x0000020C],0x00000000
loc_100349AE:
	PUSH offset LEGO1_data + 0x1D4
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x00000210
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x0000025C]
	TEST EAX, EAX
	JZ loc_10034A14
	MOV DWORD PTR [EBP+var_8+0x4],0x00000006
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_100349EF
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100349EF:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33B12_sub_10034B12])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x0000025C],0x00000000
loc_10034A14:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000260]
	TEST EAX, EAX
	JZ loc_10034A67
	MOV DWORD PTR [EBP+var_8+0x4],0x00000007
	MOV ESI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ESI, ESI
	JZ loc_10034A42
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10034A42:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33B1A_sub_10034B1A])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000260],0x00000000
loc_10034A67:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000264]
	TEST EAX, EAX
	JZ loc_10034AB1
	MOV DWORD PTR [EBP+var_8+0x4],0x00000008
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST ECX, ECX
	JZ loc_10034A8C
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m33B40_sub_10034B40])
loc_10034A8C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m33B2C_sub_10034B2C])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000264],0x00000000
loc_10034AB1:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000268]
	TEST ECX, ECX
	JZ loc_10034AD1
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x00000268],0x00000000
loc_10034AD1:
	MOV AL, 0x01
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10034AE2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034AEA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034AF2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034AFA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034B02()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034B0A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034B12()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034B1A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10034B2C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10034B40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	TEST BYTE PTR [ESP+arg1+0x4],0x01
	JZ loc_10034B58
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10034B58:
	MOV EAX, ESI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10034B60()
{
__asm{
	PUSH EBX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	MOV ESI, ECX
	PUSH EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	MOV ECX,DWORD PTR [EAX+0x0000011C]
	ADD ESP, 0x08
	MOV EDI, EAX
	LEA EAX,DWORD PTR [ESI+0x24]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	LEA EAX,DWORD PTR [ESI+0x70]
	MOV ECX,DWORD PTR [EDI+0x00000114]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	LEA EAX,DWORD PTR [ESI+0x000000BC]
	MOV ECX,DWORD PTR [EDI+0x00000120]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	MOV ECX,DWORD PTR [EDI+0x00000110]
	TEST ECX, ECX
	JZ loc_10034BF8
	LEA EAX,DWORD PTR [ESI+0x00000108]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	MOV EAX,DWORD PTR [EDI+0x00000110]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [ESI+0x00000160],EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x00000160]
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV ECX,DWORD PTR [ESI+0x00000160]
	MOV DWORD PTR [ECX+0x00000088],EBX
	MOV ECX,DWORD PTR [ESI+0x00000160]
	MOV DWORD PTR [ECX+0x00000138],EBX
loc_10034BF8:
	MOV ECX,DWORD PTR [EDI+0x00000128]
	XOR EBX, EBX
	TEST ECX, ECX
	JZ loc_10034C4A
	LEA EAX,DWORD PTR [ESI+0x00000164]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	MOV EAX,DWORD PTR [EDI+0x00000128]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [ESI+0x000001B8],EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x000001B8]
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV ECX,DWORD PTR [ESI+0x000001B8]
	MOV DWORD PTR [ECX+0x00000088],EBX
	MOV ECX,DWORD PTR [ESI+0x000001B8]
	MOV DWORD PTR [ECX+0x00000138],EBX
loc_10034C4A:
	MOV ECX,DWORD PTR [EDI+0x00000118]
	XOR EBX, EBX
	TEST ECX, ECX
	JZ loc_10034C9C
	LEA EAX,DWORD PTR [ESI+0x000001BC]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	MOV EAX,DWORD PTR [EDI+0x00000118]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [ESI+0x0000020C],EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x0000020C]
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV ECX,DWORD PTR [ESI+0x0000020C]
	MOV DWORD PTR [ECX+0x00000088],EBX
	MOV ECX,DWORD PTR [ESI+0x0000020C]
	MOV DWORD PTR [ECX+0x00000138],EBX
loc_10034C9C:
	MOV ECX,DWORD PTR [EDI+0x00000124]
	XOR EBX, EBX
	TEST ECX, ECX
	JZ loc_10034CEE
	LEA EAX,DWORD PTR [ESI+0x00000210]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E770_sub_1002F770])
	MOV EAX,DWORD PTR [EDI+0x00000124]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [ESI+0x00000268],EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x00000268]
	MOV ECX, EDI
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV ECX,DWORD PTR [ESI+0x00000268]
	MOV DWORD PTR [ECX+0x00000088],EBX
	MOV ECX,DWORD PTR [ESI+0x00000268]
	MOV DWORD PTR [ECX+0x00000138],EBX
loc_10034CEE:
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10034D00()
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3477C_proc_1003577C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH EDI
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ESP, 0x08
	MOV ECX, offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EAX+0x2C]
loc_10034D3E:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_10034D5E
	OR DL, DL
	JZ loc_10034D5A
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_10034D5E
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10034D3E
loc_10034D5A:
	XOR EAX, EAX
	JMP loc_10034D63
loc_10034D5E:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10034D63:
	TEST EAX, EAX
	JZ loc_10034D7E
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD EAX, 0x24
	MOV ECX,DWORD PTR [ECX+0x0000011C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E830_sub_1002F830])
	JMP loc_10034DA0
loc_10034D7E:
	PUSH 0x3F000000
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x01
	PUSH 0x3F000000
	PUSH 0x04
	MOV EAX,DWORD PTR [ECX+0x0000011C]
	PUSH offset [LEGO1_data.m3974_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
loc_10034DA0:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EAX+0x78]
loc_10034DAB:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_10034DCB
	OR DL, DL
	JZ loc_10034DC7
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_10034DCB
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10034DAB
loc_10034DC7:
	XOR EAX, EAX
	JMP loc_10034DD0
loc_10034DCB:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10034DD0:
	TEST EAX, EAX
	JZ loc_10034DEB
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD EAX, 0x70
	MOV ECX,DWORD PTR [ECX+0x00000114]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E830_sub_1002F830])
	JMP loc_10034E0D
loc_10034DEB:
	PUSH 0x3F000000
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x00
	PUSH 0x3F000000
	PUSH 0x02
	MOV EAX,DWORD PTR [ECX+0x00000114]
	PUSH offset [LEGO1_data.m396C_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
loc_10034E0D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, offset LEGO1_data + 0x1D4
	MOV EAX,DWORD PTR [EAX+0x000000C4]
loc_10034E1B:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_10034E3B
	OR DL, DL
	JZ loc_10034E37
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_10034E3B
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10034E1B
loc_10034E37:
	XOR EAX, EAX
	JMP loc_10034E40
loc_10034E3B:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10034E40:
	TEST EAX, EAX
	JZ loc_10034E5D
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD EAX, 0x000000BC
	MOV ECX,DWORD PTR [ECX+0x00000120]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2E830_sub_1002F830])
	JMP loc_10034E7F
loc_10034E5D:
	PUSH 0x3F000000
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x00
	PUSH 0x3F000000
	PUSH 0x04
	MOV EAX,DWORD PTR [ECX+0x00000120]
	PUSH offset [LEGO1_data.m3960_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
loc_10034E7F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x00000160],0x00
	JZ FAR loc_100350FA
	MOV EAX,DWORD PTR [EAX+0x00000110]
	MOV ECX, offset LEGO1_data + 0x1D4
loc_10034E9A:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_10034EBA
	OR DL, DL
	JZ loc_10034EB6
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_10034EBA
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10034E9A
loc_10034EB6:
	XOR EAX, EAX
	JMP loc_10034EBF
loc_10034EBA:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10034EBF:
	TEST EAX, EAX
	JNZ loc_10034EDC
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x00000160]
	PUSH 0x00
	PUSH 0x28
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x000000E8])
	JMP loc_10034F54
loc_10034EDC:
	PUSH 0x3F000000
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x01
	PUSH 0x3F000000
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x00000110]
	PUSH ECX
	MOV EDX,DWORD PTR [EAX+0x00000160]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x00000140
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x0000012C
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x00000118
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000160]
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [ECX+0x00000160]
	MOV EAX,DWORD PTR [ESI]
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x58])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX+0x00000160]
	MOV DWORD PTR [EDX+0x00000154],ESI
loc_10034F54:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000160]
	MOV EDI,DWORD PTR [ECX+0x54]
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	MOV EAX,DWORD PTR [ESI+0x0C]
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EDI]
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x08]
	CALL_LONG(offset [LEGO1_text.m19690_sub_1001A690])
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EAX
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX],ECX
	ADD ECX, 0x08
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m34790_sub_10035790])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x00000108
	INC DWORD PTR [ESI+0x10]
	PUSH offset LEGO1_data + 0x1D4
	MOV EDX,DWORD PTR [ECX+0x58]
	MOV EAX,DWORD PTR [EDX+0x54]
	MOV BYTE PTR [EAX+0x0C],0x01
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x00000160],0x00000000
	MOV EAX,DWORD PTR [ECX+0x00000154]
	TEST EAX, EAX
	JZ loc_10035028
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3E930_sub_1003F930])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000154]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	TEST ECX, ECX
	JZ loc_1003501B
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI,DWORD PTR [ECX+0x10]
	TEST ESI, ESI
	JZ loc_10035003
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10035003:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m34135_sub_10035135])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003501B:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x00000154],0x00000000
loc_10035028:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x00000158]
	TEST EAX, EAX
	JZ loc_10035091
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3E930_sub_1003F930])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000158]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	TEST ECX, ECX
	JZ loc_10035084
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV ESI,DWORD PTR [ECX+0x10]
	TEST ESI, ESI
	JZ loc_1003506C
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003506C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3413D_sub_1003513D])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10035084:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x00000158],0x00000000
loc_10035091:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x0000015C]
	TEST EAX, EAX
	JZ loc_100350FA
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3E930_sub_1003F930])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x0000015C]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	TEST ECX, ECX
	JZ loc_100350ED
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ESI,DWORD PTR [ECX+0x10]
	TEST ESI, ESI
	JZ loc_100350D5
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100350D5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m34145_sub_10035145])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100350ED:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x0000015C],0x00000000
loc_100350FA:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x000001B8],0x00
	JZ_LONG(offset [LEGO1_text.m34324_loc_10035324])
	MOV EAX,DWORD PTR [EAX+0x0000016C]
	MOV ECX, offset LEGO1_data + 0x1D4
loc_10035115:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ_LONG(offset [LEGO1_text.m3414D_loc_1003514D])
	OR DL, DL
	JZ loc_10035131
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ_LONG(offset [LEGO1_text.m3414D_loc_1003514D])
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10035115
loc_10035131:
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m34152_loc_10035152])
}
}

__declspec(naked) DWORD LEGO1_sub_10035135()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003513D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035145()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003535F()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035367()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035518()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003576C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035774()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035786()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10035790(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_100357A0
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_100357A0:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100357B0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m34820_proc_10035820]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ESI+0x0000013C],0x42200000
	MOV DWORD PTR [ESI+0x00000150],0x3FE00000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3090_ptr]
	MOV BYTE PTR [ESI+0x00000148],0x01
	MOV DWORD PTR [ESI+0x00000164],0x3F800000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10035A29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_10035E10()
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
	};

__asm{
	SUB ESP, 0x54
	PUSH ESI
	PUSH EDI
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	CMP BYTE PTR [EAX+0x22],0x00
	JNZ FAR loc_10035ED6
	MOV BYTE PTR [EAX+0x22],0x01
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX,DWORD PTR [EAX+0x54]
	LEA EAX,DWORD PTR [ESP+var_40+0x5C]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	MOV DWORD PTR [ESP+var_48+0x5C],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	FLD DWORD PTR [EAX+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3070]
	FSTP DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [EAX+0x24]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3078]
	ADD EAX, 0x30
	FSTP DWORD PTR [ESP+var_54+0x5C]
	FLD DWORD PTR [EAX-0x10]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3070]
	FST DWORD PTR [ESP+var_4C+0x5C]
	FADD DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	ADD EAX, 0x34
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_54+0x5C]
	PUSH 0x01
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x74]
	PUSH 0x01
	ADD EAX, 0x38
	LEA ECX,DWORD PTR [ESP+var_48+0x78]
	PUSH ECX
	PUSH 0x0000035A
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_50+0x80]
	FSTP DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
loc_10035ED6:
	POP EDI
	POP ESI
	ADD ESP, 0x54
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10035EE0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m34F7A_proc_10035F7A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x00000168],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m31A8_ptr]
	MOV WORD PTR DS:[ESI+0x0000016A],CX
	MOV DWORD PTR [ESI+0x00000164],EAX
	MOV WORD PTR DS:[ESI+0x0000016C],AX
	MOV DWORD PTR [ESI+0x00000174],ECX
	MOV WORD PTR DS:[ESI+0x0000016E],AX
	MOV DWORD PTR [ESI+0x00000178],ECX
	MOV WORD PTR DS:[ESI+0x00000170],AX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV WORD PTR DS:[ESI+0x00000172],AX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0000013C],0x42200000
	MOV DWORD PTR [ESI+0x0000017C],0x3F800000
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10036150()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m351B1_proc_100361B1]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m31A8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m351BB_sub_100361BB])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100361BB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_100363F0()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	MOV ESI, EAX
	PUSH offset [LEGO1_data.mE8_str]
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	TEST EAX, EAX
	JNZ loc_10036417
	PUSH offset [LEGO1_data.mE8_str]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
loc_10036417:
	MOV DWORD PTR [EDI+0x00000164],EAX
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10036E60()
{
__asm{
	PUSH ESI
	PUSH 0x000002AF
	MOV EAX,DWORD PTR [ECX+0x00000164]
	MOV ESI, ECX
	MOV DWORD PTR [EAX+0x08],0x00000002
	CALL_LONG(offset [LEGO1_text.m362E0_sub_100372E0])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x00000174],EAX
	MOV DWORD PTR [ESI+0x00000178],EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10036EC0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m193F0_sub_1001A3F0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x54]
	PUSH 0x000000A1
	MOV BYTE PTR [EAX+0x0C],0x00
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A2
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A5
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A4
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A3
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A6
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000A7
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10037060()
{
	enum{
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x0A
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [ESI+0x00000164]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],0x01
	JNZ loc_10037097
	PUSH 0x00000378
	MOV ECX, ESI
	MOV DWORD PTR [EAX], 0x00000000
	CALL_LONG(offset [LEGO1_text.m36360_sub_10037360])
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RET
loc_10037097:
	CMP WORD PTR DS:[ESI+0x0000016C],0x00
	JZ loc_10037101
	CMP WORD PTR DS:[ESI+0x0000016E],0x00
	JZ loc_10037101
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	JZ loc_100370F3
	CMP EAX, 0x01
	JZ loc_100370FA
	MOV EDI,DWORD PTR [ESP+var_4+0xC]
loc_100370C7:
	MOV EAX,DWORD PTR [ESI+0x00000174]
	CMP EAX, -0x01
	JZ loc_100370E5
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_100370E5:
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m36360_sub_10037360])
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RET
loc_100370F3:
	MOV EDI, 0x00000385
	JMP loc_100370C7
loc_100370FA:
	MOV EDI, 0x00000389
	JMP loc_100370C7
loc_10037101:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	JZ loc_10037149
	CMP EAX, 0x01
	JZ loc_10037150
	MOV EDI,DWORD PTR [ESP+var_4+0xC]
loc_1003711D:
	MOV EAX,DWORD PTR [ESI+0x00000174]
	CMP EAX, -0x01
	JZ loc_1003713B
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1003713B:
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m36360_sub_10037360])
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RET
loc_10037149:
	MOV EDI, 0x00000384
	JMP loc_1003711D
loc_10037150:
	MOV EDI, 0x0000038A
	JMP loc_1003711D
}
}

__declspec(naked) DWORD LEGO1_sub_10037240()
{
__asm{
	PUSH 0x000001AB
	CALL_LONG(offset [LEGO1_text.m36340_sub_10037340])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10037250()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x00000174]
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m36340_sub_10037340])
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	PUSH 0x01
	MOV DWORD PTR [EAX+0x18],EDI
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV DWORD PTR [EAX+0x08],EDI
	MOV WORD PTR DS:[ESI+0x0000016E],DI
	MOV WORD PTR DS:[ESI+0x0000016C],DI
	OR DWORD PTR [offset LEGO1_data + 0x1198],0x40
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E700_sub_1005F700])
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV DWORD PTR [EAX+0x0C],0x80000000
	MOV DWORD PTR [ESI+0x00000164],EDI
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100372E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
	MOV DWORD PTR [EDI+0x00000178],ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10037310(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
	MOV DWORD PTR [EDI+0x00000178],ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10037340(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP EAX, -0x01
	JZ loc_1003735C
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1003735C:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10037360(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, -0x01
	JZ loc_10037380
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ESI
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_10037380:
	MOV DWORD PTR [EDI+0x00000174],ESI
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100373A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3642D_proc_1003742D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV WORD PTR DS:[ESI+0x10],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV WORD PTR DS:[ESI+0x12],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m32A0_ptr]
	MOV WORD PTR DS:[ESI+0x14],AX
	MOV DWORD PTR [ESI+0x08],EAX
	MOV WORD PTR DS:[ESI+0x16],AX
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV WORD PTR DS:[ESI+0x18],AX
	MOV WORD PTR DS:[ESI+0x1A],AX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV WORD PTR DS:[ESI+0x1C],AX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV WORD PTR DS:[ESI+0x1E],AX
	MOV WORD PTR DS:[ESI+0x20],AX
	MOV WORD PTR DS:[ESI+0x22],AX
	MOV EAX, ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10037719()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_10037730()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3678C_proc_1003778C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	XOR EAX, EAX
	PUSH ESI
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m32D8_ptr]
	MOV DWORD PTR [ESI+0x000000F8],EAX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100378F0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3696D_proc_1003796D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m32D8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],ECX
	JNZ loc_10037934
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10037934:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m36977_sub_10037977])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10037977()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10037A90(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m36C5B_proc_10037C5B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	CMP WORD PTR DS:[EBX+0x28],0x01
	JNZ_LONG(offset [LEGO1_text.m36B08_loc_10037B08])
	PUSH 0x000001FE
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH 0x000001F4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	MOV EAX,DWORD PTR [EBX+0x20]
	DEC EAX
	CMP EAX, 0x03
	JA_LONG(offset [LEGO1_text.m36B08_loc_10037B08])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m36C70_proc_10037C70+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10037BD2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10037BDA()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10037C53()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10037C65()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10037EF0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m36F7A_proc_10037F7A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m2C110_sub_1002D110])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1178_ptr]
	MOV DWORD PTR [ESI+0x7C],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3380_ptr]
	MOV DWORD PTR [ESI+0x00000080],ECX
	MOV DWORD PTR [ESI+0x00000084],ECX
	MOV DWORD PTR [ESI+0x00000088],ECX
	MOV DWORD PTR [ESI+0x0000008C],EAX
	MOV BYTE PTR [ESI+0x00000098],CL
	MOV DWORD PTR [ESI+0x00000090],0x80000000
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10038100()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m37154_proc_10038154]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3380_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3715E_sub_1003815E])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003815E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mD940_loc_1000E940])
}
}

__declspec(naked) DWORD LEGO1_sub_100381B0()
{
__asm{
	PUSH ESI
	PUSH offset [LEGO1_data.mD4_str]
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x7C],EAX
	TEST EAX, EAX
	JNZ loc_100381DF
	PUSH offset [LEGO1_data.mD4_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV DWORD PTR [ESI+0x7C],EAX
loc_100381DF:
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x00000088],EAX
	TEST EAX, EAX
	JNZ loc_10038211
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV DWORD PTR [ESI+0x00000088],EAX
loc_10038211:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10038220(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH 0x00
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m63740_sub_10064740])
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV AL,BYTE PTR [EAX+0x0C]
	MOV ECX,DWORD PTR [ESI+0x7C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m38510_sub_10039510])
	MOV DWORD PTR [ESI+0x00000080],EAX
	MOV EAX,DWORD PTR [ESI+0x7C]
	MOV DWORD PTR [EAX+0x0C],0x00000001
	MOV ECX,DWORD PTR [ESI+0x00000088]
	PUSH 0x00
	MOV DWORD PTR [ECX+0x18],0x00000003
	MOV EDX,DWORD PTR [ESI+0x00000080]
	MOV DWORD PTR [EDX+0x10],0x80000000
	AND DWORD PTR [offset LEGO1_data + 0x1198],-0x41
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E700_sub_1005F700])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH 0x00
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m37FE0_sub_10038FE0])
	MOV DWORD PTR [ESI+0x0000008C],0xFFFFFFFF
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100382B0()
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x7C]
	MOV ESI, ECX
	CMP DWORD PTR [EAX+0x0C],0x08
	JZ FAR loc_1003837C
	MOV EAX,DWORD PTR [ESI+0x0000008C]
	CMP EAX, -0x01
	JZ loc_100382DF
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_100382DF:
	MOV EAX,DWORD PTR [ESI+0x00000088]
	XOR EBX, EBX
	MOV DWORD PTR [EAX+0x18],EBX
	MOV ECX,DWORD PTR [ESI+0x7C]
	MOV DWORD PTR [ECX+0x0C],EBX
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH 0x01
	MOV DWORD PTR [EAX+0x000000DC],EBX
	OR DWORD PTR [offset LEGO1_data + 0x1198],0x40
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E700_sub_1005F700])
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	MOV EAX,DWORD PTR [ESI+0x00000080]
	MOV DWORD PTR [EAX+0x10],0x80000000
	MOV DWORD PTR [ESI+0x00000080],EBX
	MOV BYTE PTR [ESI+0x00000098],BL
	MOV DWORD PTR [ESI+0x0000008C],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	PUSH EBX
	MOV ECX,DWORD PTR [ESI+0x00000084]
	MOV DWORD PTR [ESI+0x00000090],0x80000000
	CALL_LONG(offset [LEGO1_text.mF270_sub_10010270])
	MOV ECX,DWORD PTR [ESI+0x00000084]
	MOV BYTE PTR [ECX+0x00000160],BL
loc_1003837C:
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10038380()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV EDI, ECX
	PUSH ESI
	PUSH 0x0000019D
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ESI
	PUSH 0x00000190
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EBX,DWORD PTR [EDI+0x00000080]
	TEST EBX, EBX
	JZ loc_100383EA
	XOR EDI, EDI
	CMP WORD PTR DS:[EBX],SI
	JLE loc_100383EA
loc_100383C4:
	PUSH 0x00
	MOV EAX,DWORD PTR [EBX+0x1C]
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x453C]
	ADD ESI, 0x04
	INC EDI
	MOV ECX,DWORD PTR [ESI+EAX-0x04]
	PUSH ECX
	PUSH EDX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	MOVSX EAX,WORD PTR [EBX]
	ADD ESP, 0x10
	CMP EAX, EDI
	JG loc_100383C4
loc_100383EA:
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10038D08()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m277E0_loc_100287E0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10038FE0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x7C]
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV DWORD PTR [EAX+0x000000B0],ESI
	MOV EAX,DWORD PTR [ECX+0x0000008C]
	CMP EAX, -0x01
	JZ loc_1003900C
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1003900C:
	MOV EAX,DWORD PTR [ESP+arg2+0x4]
	PUSH 0x01
	PUSH 0x01
	PUSH EAX
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10039030()
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3820C_proc_1003920C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	PUSH EDI
	LEA EBX,DWORD PTR [ECX+0x10]
	MOV ESI, ECX
	MOV EDI, 0x00000004
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
loc_10039074:
	MOV ECX, EBX
	ADD EBX, 0x20
	CALL_LONG(offset [LEGO1_text.m38220_RetThis_1])
	DEC EDI
	JNS loc_10039074
	XOR EDI, EDI
	MOV EBX, 0x00000001
	MOV WORD PTR DS:[ESI+0x16],BX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3408_ptr]
	MOV DWORD PTR [ESI+0x0C],EDI
	MOV BYTE PTR [ESI+0x12],BL
	MOV WORD PTR DS:[ESI+0x24],BX
	MOV BYTE PTR [ESI+0x18],BL
	MOV DWORD PTR [ESI+0x1C],offset LEGO1_data + 0x3AB8
	MOV DWORD PTR [ESI+0x20],0x80000000
	MOV DWORD PTR [ESI+0x2C],offset LEGO1_data + 0x3A80
	MOV BYTE PTR [ESI+0x32],0x02
	MOV WORD PTR DS:[ESI+0x14],0x0002
	MOV WORD PTR DS:[ESI+0x10],0x0004
	MOV WORD PTR DS:[ESI+0x26],DI
	MOV BYTE PTR [ESI+0x38],BL
	MOV DWORD PTR [ESI+0x3C],offset LEGO1_data + 0x3B90
	MOV DWORD PTR [ESI+0x40],0x80000000
	MOV WORD PTR DS:[ESI+0x34],0x0002
	MOV WORD PTR DS:[ESI+0x28],DI
	MOV DWORD PTR [ESI+0x4C],offset LEGO1_data + 0x3B58
	MOV WORD PTR DS:[ESI+0x30],0x0004
	MOV WORD PTR DS:[ESI+0x36],BX
	MOV WORD PTR DS:[ESI+0x44],BX
	MOV WORD PTR DS:[ESI+0x46],DI
	MOV WORD PTR DS:[ESI+0x48],DI
	MOV WORD PTR SS:[EBP+var_30+0x4],0x0004
	MOV BYTE PTR [EBP+var_2C+0x2],0x03
	MOV WORD PTR SS:[EBP+var_2C+0x4],0x0002
	MOV WORD PTR SS:[EBP+var_28+0x2],BX
	MOV BYTE PTR [EBP+var_28+0x4],BL
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],offset LEGO1_data + 0x3BD8
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x50]
	MOV DWORD PTR [EBP+var_20+0x4],0x80000000
	MOV WORD PTR SS:[EBP+var_1C+0x4],BX
	MOV WORD PTR SS:[EBP+var_18+0x2],DI
	MOV WORD PTR SS:[EBP+var_18+0x4],DI
	MOV DWORD PTR [EBP+var_14+0x4],offset LEGO1_data + 0x3BA0
	CALL_LONG(offset [LEGO1_text.m38230_sub_10039230])
	MOV WORD PTR SS:[EBP+var_30+0x4],0x0004
	MOV BYTE PTR [EBP+var_2C+0x2],0x04
	MOV WORD PTR SS:[EBP+var_2C+0x4],0x0002
	MOV WORD PTR SS:[EBP+var_28+0x2],BX
	MOV BYTE PTR [EBP+var_28+0x4],BL
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],offset LEGO1_data + 0x3B48
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x70]
	MOV DWORD PTR [EBP+var_20+0x4],0x80000000
	MOV WORD PTR SS:[EBP+var_1C+0x4],BX
	MOV WORD PTR SS:[EBP+var_18+0x2],DI
	MOV WORD PTR SS:[EBP+var_18+0x4],DI
	MOV DWORD PTR [EBP+var_14+0x4],offset LEGO1_data + 0x3B10
	CALL_LONG(offset [LEGO1_text.m38230_sub_10039230])
	MOV WORD PTR SS:[EBP+var_30+0x4],0x0004
	MOV BYTE PTR [EBP+var_2C+0x2],0x05
	MOV WORD PTR SS:[EBP+var_2C+0x4],0x0002
	MOV WORD PTR SS:[EBP+var_28+0x2],BX
	MOV BYTE PTR [EBP+var_28+0x4],BL
	MOV DWORD PTR [EBP+var_24+0x4],offset LEGO1_data + 0x3B00
	MOV DWORD PTR [EBP+var_20+0x4],0x80000000
	MOV WORD PTR SS:[EBP+var_1C+0x4],BX
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	MOV WORD PTR SS:[EBP+var_18+0x2],DI
	PUSH EAX
	MOV WORD PTR SS:[EBP+var_18+0x4],DI
	LEA ECX,DWORD PTR [ESI+0x00000090]
	MOV DWORD PTR [EBP+var_14+0x4],offset LEGO1_data + 0x3AC8
	CALL_LONG(offset [LEGO1_text.m38230_sub_10039230])
	PUSH offset [LEGO1_data.m370_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, 0xFFFFFFFF
	POP EDI
	MOV DWORD PTR [ESI+0x000000B0],EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_RetThis_1()
{
__asm{
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10039230(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV AL,BYTE PTR [EDX+0x02]
	MOV BYTE PTR [ECX+0x02],AL
	MOV AX,WORD PTR DS:[EDX+0x04]
	MOV WORD PTR DS:[ECX+0x04],AX
	MOV AX,WORD PTR DS:[EDX+0x06]
	MOV WORD PTR DS:[ECX+0x06],AX
	MOV AL,BYTE PTR [EDX+0x08]
	MOV BYTE PTR [ECX+0x08],AL
	MOV EAX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV EAX,DWORD PTR [EDX+0x10]
	MOV DWORD PTR [ECX+0x10],EAX
	MOV AX,WORD PTR DS:[EDX+0x14]
	MOV WORD PTR DS:[ECX+0x14],AX
	MOV AX,WORD PTR DS:[EDX+0x16]
	MOV WORD PTR DS:[ECX+0x16],AX
	MOV AX,WORD PTR DS:[EDX+0x18]
	MOV WORD PTR DS:[ECX+0x18],AX
	MOV EAX,DWORD PTR [EDX+0x1C]
	MOV DWORD PTR [ECX+0x1C],EAX
	MOV EAX, ECX
	MOV DX,WORD PTR DS:[EDX]
	MOV WORD PTR DS:[ECX],DX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100393A9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10039510(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR AX, AX
	PUSH EBX
	MOV BL,BYTE PTR [ESP+arg1+0x4]
loc_10039518:
	MOVSX EDX,AX
	SHL EDX, 0x05
	CMP BYTE PTR [ECX+EDX+0x12],BL
	JZ loc_10039532
	INC AX
	CMP AX, 0x0005
	JL loc_10039518
	XOR EAX, EAX
	POP EBX
	RETN 0x0004
loc_10039532:
	MOVSX EAX,AX
	SHL EAX, 0x05
	POP EBX
	LEA EAX,DWORD PTR [ECX+EAX+0x10]
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10039540()
{
__asm{
	MOV ECX,DWORD PTR [ECX+0x08]
	JMP_LONG(offset [LEGO1_text.m16D50_loc_10017D50])
}
}

__declspec(naked) DWORD LEGO1___0LegoGameState__QAE_XZ()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m386FB_proc_100396FB]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x28]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, 0x00000008
loc_10039578:
	MOV ECX, EBX
	ADD EBX, 0x0E
	CALL_LONG(offset [LEGO1_text.m3B670_sub_1003C670])
	DEC EDI
	JNS loc_10039578
	LEA ECX,DWORD PTR [ESI+0x000000A6]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m3B830_sub_1003C830])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3AA90_sub_1003BA90])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3AAC0_sub_1003BAC0])
	MOV WORD PTR DS:[ESI+0x04],BX
	MOV EAX, 0xFFFFFFFF
	MOV BYTE PTR [ESI+0x0C],BL
	MOV DWORD PTR [ESI],EBX
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0000041C],EAX
	MOV WORD PTR DS:[ESI+0x26],BX
	MOV DWORD PTR [ESI+0x00000424],EBX
	PUSH EBX
	MOV DWORD PTR [ESI+0x00000428],EBX
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x0000042C],EBX
	MOV BYTE PTR [ESI+0x00000420],BL
	MOV DWORD PTR [ESI+0x14],EAX
	CALL_LONG(offset [LEGO1_text.m3BEA0_sub_1003CEA0])
	PUSH 0x30
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_1003960A
	PUSH offset [LEGO1_data.m3FF4_str]
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m3FE4_str]
	CALL_LONG(offset [LEGO1_text.m3AFB0___0LegoBackgroundColor__QAE_PBD0_Z])
loc_1003960A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	MOV DWORD PTR [ESI+0x18],EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB6740__SetVariable_MxVariableTable__QAEXPAVMxVariable___Z])
	PUSH 0x30
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EBX, EAX
	MOV EAX, 0x00000000
	TEST EBX, EBX
	JZ loc_10039651
	PUSH offset [LEGO1_data.m3FF4_str]
	MOV ECX, EBX
	PUSH offset [LEGO1_data.m3FD0_str]
	CALL_LONG(offset [LEGO1_text.m3AFB0___0LegoBackgroundColor__QAE_PBD0_Z])
loc_10039651:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB6740__SetVariable_MxVariableTable__QAEXPAVMxVariable___Z])
	PUSH 0x24
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10039698
	PUSH offset [LEGO1_data.m3BF4_str]
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m3FC8_str]
	CALL_LONG(offset [LEGO1_text.m3B500_sub_1003C500])
loc_10039698:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH EAX
	MOV DWORD PTR [ESI+0x20],EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB6740__SetVariable_MxVariableTable__QAEXPAVMxVariable___Z])
	PUSH offset [LEGO1_data.m3FC4]
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BDD0__SerializeScoreHistory_LegoGameState__QAEXF_Z])
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100396E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_100396EE()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1___1LegoGameState__QAE_XZ()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.mA8D30_sub_100A9D30])
	MOV AX,WORD PTR DS:[ESI+0x04]
	ADD ESP, 0x04
	TEST AX, AX
	JZ loc_10039764
	MOV DI, 0x0000
	JLE loc_10039758
loc_1003973D:
	MOV ECX,DWORD PTR [ESI+0x08]
	MOVSX EAX,DI
	MOV ECX,DWORD PTR [EAX*4+ECX]
	TEST ECX, ECX
	JZ loc_10039750
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10039750:
	INC DI
	CMP WORD PTR DS:[ESI+0x04],DI
	JG loc_1003973D
loc_10039758:
	MOV EAX,DWORD PTR [ESI+0x08]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10039764:
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10039780(DWORD arg1)
{
	enum{
		var_B8 = -0xB8,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m388F5_proc_100398F5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000A8
	CMP BYTE PTR [EBP+arg1+0x4],0x00
	PUSH ESI
	MOV ESI, ECX
	JZ loc_100397AD
	MOV AL,BYTE PTR [EBP+arg1+0x4]
	MOV BYTE PTR [ESI+0x0C],AL
loc_100397AD:
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH 0x00
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m14880_sub_10015880])
	ADD ESP, 0x04
	PUSH 0x00000160
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	JZ loc_100397E6
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_100397ED
loc_100397E6:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_100397ED:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV AL,BYTE PTR [ESI+0x0C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2C660_sub_1002D660])
	ADD ESP, 0x04
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82500_sub_10083500])
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m388E2_sub_100398E2])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	MOV DWORD PTR [EBP+var_9C+0x4],0x000186A0
	MOV ESI,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [ESI+0x18])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x64])
	PUSH 0x00
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x24])
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_100398B6
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x54]
	MOV ECX,DWORD PTR [EDX+0x54]
	ADD EAX, 0x10
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	TEST EDX, EDX
	MOV ECX,DWORD PTR [EDX+0x00000088]
	MOV DWORD PTR [EAX+0x00000088],ECX
	JZ loc_100398B6
	PUSH 0x01
	MOV ESI,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [ESI])
loc_100398B6:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	AND BYTE PTR [EAX+0x11],0xFD
	CALL_LONG(offset [LEGO1_text.m14880_sub_10015880])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m388EA_sub_100398EA])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100398E2()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100398EA()
{
	enum{
		arg1217179 = 0x4A4A6C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10039910()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV EDI, EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14880_sub_10015880])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_10039931
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_10039931:
	MOV BYTE PTR [ESI+0x0C],0x00
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10039940()
{
__asm{
	CMP BYTE PTR [ECX+0x0C],0x00
	PUSH ESI
	JZ loc_10039979
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10039979
	MOV ESI,DWORD PTR [EAX+0x54]
	TEST ESI, ESI
	JZ loc_10039979
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA170_sub_100AB170])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA100_sub_100AB100])
loc_10039979:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1__Save_LegoGameState__QAEJK_Z(DWORD arg1)
{
	enum{
		var_38 = -0x38,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m38BC4_proc_10039BC4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x28
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH offset [LEGO1_data.m4DC_str]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m38BD6_loc_10039BD6])
	CMP DWORD PTR [EAX+0x78],EBX
	JZ_LONG(offset [LEGO1_text.m38BD6_loc_10039BD6])
	MOV DWORD PTR [EBP+var_28+0x4],0xFFFFFFFF
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m981C0_sub_100991C0])
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV WORD PTR SS:[EBP+var_10+0x2],BX
	MOV EDI, EAX
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	PUSH 0x02
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m983A0_sub_100993A0])
	CMP EAX, -0x01
	JZ FAR loc_10039BA2
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],0x0001000C
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV CX,WORD PTR DS:[ESI+0x24]
	PUSH 0x02
	MOV WORD PTR SS:[EBP+var_14+0x2],CX
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	LEA ECX,DWORD PTR [EBP+var_14+0x2]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH 0x02
	MOV WORD PTR SS:[EBP+var_14+0x2],CX
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	LEA ECX,DWORD PTR [EBP+var_14+0x2]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV CL,BYTE PTR [ESI+0x0C]
	PUSH 0x01
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	MOV BYTE PTR [EBP+var_14+0x3],CL
	LEA ECX,DWORD PTR [EBP+var_14+0x3]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x08])
	MOV EBX, offset [LEGO1_data.m3E58_ptr]
loc_10039A70:
	MOV EAX,DWORD PTR [EBX]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	PUSH EDI
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38F70_sub_10039F70])
	CMP EAX, -0x01
	JZ FAR loc_10039BA2
	ADD EBX, 0x08
	CMP EBX, offset [LEGO1_data.m3FB0_ptr]
	JB loc_10039A70
	PUSH offset [LEGO1_data.m3FE4_str]
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDI
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m38F70_sub_10039F70])
	CMP EAX, -0x01
	JZ FAR loc_10039BA2
	PUSH offset [LEGO1_data.m3824_str]
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDI
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m38F70_sub_10039F70])
	CMP EAX, -0x01
	JZ FAR loc_10039BA2
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m39020_sub_1003A020])
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82310_sub_10083310])
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m25720_sub_10026720])
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	XOR EDI, EDI
	PUSH EAX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2EB80_sub_1002FB80])
	CMP WORD PTR DS:[ESI+0x04],DI
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	JLE loc_10039B2E
loc_10039B0F:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10039B22
	INC WORD PTR SS:[EBP+var_10+0x2]
loc_10039B22:
	ADD EDI, 0x04
	INC EBX
	MOVSX EAX,WORD PTR [ESI+0x04]
	CMP EAX, EBX
	JG loc_10039B0F
loc_10039B2E:
	MOV AX,WORD PTR SS:[EBP+var_10+0x2]
	PUSH 0x02
	MOV WORD PTR SS:[EBP+var_14+0x2],AX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	LEA EAX,DWORD PTR [EBP+var_14+0x2]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	XOR EDI, EDI
	CALL_LONG(DWORD PTR [EBX+0x08])
	XOR EBX, EBX
	CMP WORD PTR DS:[ESI+0x04],DI
	JLE loc_10039B79
loc_10039B4F:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10039B6D
	MOV EAX,DWORD PTR [ESI+0x08]
	LEA EDX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
loc_10039B6D:
	ADD EDI, 0x04
	INC EBX
	MOVSX EAX,WORD PTR [ESI+0x04]
	CMP EAX, EBX
	JG loc_10039B4F
loc_10039B79:
	MOV EAX,DWORD PTR [ESI+0x0000042C]
	PUSH 0x02
	MOV WORD PTR SS:[EBP+var_14+0x2],AX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	LEA EAX,DWORD PTR [EBP+var_14+0x2]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x08])
	PUSH 0x02
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BDD0__SerializeScoreHistory_LegoGameState__QAEXF_Z])
	MOV BYTE PTR [ESI+0x00000420],0x00
loc_10039BA2:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m38BBC_sub_10039BBC])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m38BCE_sub_10039BCE])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	JMP_LONG(offset [LEGO1_text.m38BD8_loc_10039BD8])
}
}

__declspec(naked) DWORD LEGO1_sub_10039BBC()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10039BCE()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98250_loc_10099250])
}
}

__declspec(naked) DWORD LEGO1_sub_10039BF0()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV AX,WORD PTR DS:[ECX+0x04]
	MOV EBX,DWORD PTR [ECX+0x08]
	TEST AX, AX
	MOV EDI, ECX
	MOV WORD PTR DS:[EDI+0x04],0x0000
	MOV DWORD PTR [EDI+0x08],0x00000000
	JLE loc_10039C4E
	MOVSX EBP,AX
	MOV ESI, EBX
loc_10039C14:
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	TEST AL, AL
	JNZ loc_10039C38
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10039C38
	MOV ECX,DWORD PTR [ESI]
	TEST ECX, ECX
	JZ loc_10039C48
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	JMP loc_10039C48
loc_10039C38:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3AC30_sub_1003BC30])
	MOV DWORD PTR [ESI], 0x00000000
loc_10039C48:
	ADD ESI, 0x04
	DEC EBP
	JNZ loc_10039C14
loc_10039C4E:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__Load_LegoGameState__QAEJK_Z(DWORD arg1)
{
	enum{
		var_8C = -0x8C,
		var_3C = -0x3C,
		var_34 = -0x34,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m38EE6_proc_10039EE6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x7C
	MOV DWORD PTR [EBP+var_28+0x4],0xFFFFFFFF
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m981C0_sub_100991C0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV EDI, EAX
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	PUSH 0x01
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m983A0_sub_100993A0])
	CMP EAX, -0x01
	JZ FAR loc_10039E9E
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x04])
	CMP DWORD PTR [EBP+var_2C+0x4],0x0001000C
	JZ loc_10039CFB
	PUSH 0x00
	PUSH offset [LEGO1_data.m402C_str]
	CALL_LONG(offset [LEGO1_text.mB61E0_sub_100B71E0])
	ADD ESP, 0x08
	JMP FAR loc_10039E9E
loc_10039CFB:
	PUSH 0x02
	LEA EAX,DWORD PTR [ESI+0x24]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x04])
	PUSH 0x02
	LEA ECX,DWORD PTR [EBP+var_10+0x2]
	PUSH ECX
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x04])
	MOVSX ECX,WORD PTR [EBP+var_10+0x2]
	PUSH ECX
	LEA EBX,DWORD PTR [ESI+0x0C]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BEA0_sub_1003CEA0])
	PUSH 0x01
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EBX
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV AL,BYTE PTR [EBX]
	TEST AL, AL
	JZ loc_10039D42
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38780_sub_10039780])
loc_10039D42:
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39080_sub_1003A080])
	CMP EAX, 0x01
	JZ FAR loc_10039E9E
	CMP EAX, 0x02
	JNZ loc_10039D42
	MOV ECX,DWORD PTR [ESI+0x18]
	CALL_LONG(offset [LEGO1_text.m3B4B0_sub_1003C4B0])
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	TEST EAX, EAX
	JZ loc_10039D8B
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3E0D0_sub_1003F0D0])
	ADD ESP, 0x04
loc_10039D8B:
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m823F0_sub_100833F0])
	CMP EAX, -0x01
	JZ FAR loc_10039E9E
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m257B0_sub_100267B0])
	CMP EAX, -0x01
	JZ FAR loc_10039E9E
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2EC10_sub_1002FC10])
	CMP EAX, -0x01
	JZ FAR loc_10039E9E
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38BF0_sub_10039BF0])
	TEST EAX, EAX
	JNZ FAR loc_10039E9E
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x04])
	XOR EBX, EBX
	CMP WORD PTR SS:[EBP+var_14+0x4],BX
	JZ loc_10039E68
	MOV DI, 0x0000
	JLE loc_10039E68
loc_10039E02:
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_14+0x2]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOVSX ECX,WORD PTR [EBP+var_14+0x2]
	PUSH ECX
	LEA EDX,DWORD PTR [EBP+var_8C+0x4]
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOVSX ECX,WORD PTR [EBP+var_14+0x2]
	LEA EDX,DWORD PTR [EBP+var_8C+0x4]
	MOV BYTE PTR [ECX+EBP+var_8C+0x4],BL
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	TEST EAX, EAX
	JNZ loc_10039E55
	LEA EAX,DWORD PTR [EBP+var_8C+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	TEST EAX, EAX
	JZ loc_10039E9E
loc_10039E55:
	INC DI
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x1C])
	CMP WORD PTR SS:[EBP+var_14+0x4],DI
	JG loc_10039E02
loc_10039E68:
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_10+0x2]
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(DWORD PTR [EBX+0x04])
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_10039E89
	MOV DWORD PTR [ESI+0x0000042C],0x00000000
	JMP loc_10039E93
loc_10039E89:
	MOVSX EAX,WORD PTR [EBP+var_10+0x2]
	MOV DWORD PTR [ESI+0x0000042C],EAX
loc_10039E93:
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV BYTE PTR [ESI+0x00000420],AL
loc_10039E9E:
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JZ loc_10039EB3
	PUSH 0x00
	PUSH offset [LEGO1_data.m4004_str]
	CALL_LONG(offset [LEGO1_text.mB61E0_sub_100B71E0])
	ADD ESP, 0x08
loc_10039EB3:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m38EDE_sub_10039EDE])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m38EF0_sub_10039EF0])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10039EDE()
{
	enum{
		arg1217210 = 0x4A4AE8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10039EF0()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98250_loc_10099250])
}
}

__declspec(naked) DWORD __stdcall LEGO1__SetSavePath_LegoGameState__QAEXPAD_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	PUSH EDI
	MOV EBX, ECX
	TEST EAX, EAX
	JZ loc_10039F14
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10039F14:
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	TEST ESI, ESI
	JZ loc_10039F5B
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBX],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBX]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10039F5B:
	POP EDI
	MOV DWORD PTR [EBX], 0x00000000
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10039F70(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg3]
	SUB ESP, 0x08
	MOV ECX,DWORD PTR [ESP+arg2+0x8]
	PUSH EBX
	MOV DWORD PTR [ESP+var_4+0xC],0xFFFFFFFF
	PUSH ESI
	PUSH EDI
	PUSH EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1003A004
	MOV EDI,DWORD PTR [ESP+arg2+0x1C]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	MOV ESI,DWORD PTR [ESP+r+0x1C]
	PUSH 0x01
	NOT ECX
	DEC ECX
	MOV BYTE PTR [ESP+var_8+0x1F],CL
	LEA ECX,DWORD PTR [ESP+var_8+0x1F]
	MOV EAX,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	MOV EBP,DWORD PTR [EAX+0x08]
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1003A004
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1003A004
	MOV EDI, EBX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	PUSH 0x01
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV BYTE PTR [ESP+var_4+0x1B],CL
	LEA ECX,DWORD PTR [ESP+var_4+0x1B]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EBP)
	TEST EAX, EAX
	JNZ loc_1003A004
	XOR EAX, EAX
	MOV ECX, ESI
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	PUSH EAX
	PUSH EBX
	CALL_LONG(EBP)
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
loc_1003A004:
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A020(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [offset LEGO1_data.m3E50_ptr]
	REPNE SCAS
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	PUSH 0x01
	NOT ECX
	DEC ECX
	MOV BYTE PTR [ESP+r+0xF],CL
	LEA ECX,DWORD PTR [ESP+r+0xF]
	MOV EAX,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	MOV EDI,DWORD PTR [EAX+0x08]
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ loc_1003A06D
	XOR EAX, EAX
	MOV ECX,DWORD PTR [offset LEGO1_data.m3E50_ptr]
	MOV AL,BYTE PTR [ESP+var_8+0x13]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EDI)
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
loc_1003A06D:
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A080(DWORD arg1, DWORD arg2)
{
	enum{
		var_208 = -0x208,
		var_204 = -0x204,
		var_200 = -0x200,
		var_108 = -0x108,
		var_104 = -0x104,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000204
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, 0x00000001
	MOV ESI,DWORD PTR [ESP+arg1+0x210]
	PUSH EBX
	LEA ECX,DWORD PTR [ESP+var_200+0x213]
	MOV EAX,DWORD PTR [ESI]
	PUSH ECX
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV ECX, ESI
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ FAR loc_1003A157
	XOR EAX, EAX
	LEA ECX,DWORD PTR [ESP+var_208+0x218]
	MOV AL,BYTE PTR [ESP+var_208+0x217]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ FAR loc_1003A157
	XOR EAX, EAX
	LEA ECX,DWORD PTR [ESP+var_208+0x218]
	MOV AL,BYTE PTR [ESP+var_208+0x217]
	MOV EDX,DWORD PTR [offset LEGO1_data.m3E50_ptr]
	MOV BYTE PTR [EAX+ESP+var_208+0x218],0x00
loc_1003A0D9:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1003A0F9
	OR AL, AL
	JZ loc_1003A0F5
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1003A0F9
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1003A0D9
loc_1003A0F5:
	XOR EAX, EAX
	JMP loc_1003A0FE
loc_1003A0F9:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1003A0FE:
	TEST EAX, EAX
	JNZ loc_1003A109
	MOV EBX, 0x00000002
	JMP loc_1003A157
loc_1003A109:
	LEA EAX,DWORD PTR [ESP+var_208+0x217]
	PUSH 0x01
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ loc_1003A157
	XOR EAX, EAX
	LEA ECX,DWORD PTR [ESP+var_108+0x218]
	MOV AL,BYTE PTR [ESP+var_208+0x217]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(EDI)
	TEST EAX, EAX
	JNZ loc_1003A157
	XOR EAX, EAX
	XOR EBX, EBX
	MOV AL,BYTE PTR [ESP+var_208+0x217]
	LEA ECX,DWORD PTR [ESP+var_108+0x218]
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg1+0x218]
	MOV BYTE PTR [EAX+ESP+var_104+0x218],BL
	LEA EAX,DWORD PTR [ESP+var_204+0x218]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
loc_1003A157:
	MOV EAX, EBX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000204
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A170(DWORD arg1, DWORD arg2)
{
	enum{
		var_424 = -0x424,
		var_420 = -0x420,
		var_24 = -0x24,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m392C8_proc_1003A2C8]
	MOV EDX, ECX
	PUSH EAX
	MOV CL,BYTE PTR [offset LEGO1_data + 0x1D4]
	MOV AX, WORD PTR DS:[offset LEGO1_data + 0x404C]
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000414
	MOV WORD PTR SS:[EBP+var_10+0x2],AX
	MOV BYTE PTR [EBP+var_424+0x4],CL
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [EBP+var_420+0x1]
	XOR EAX, EAX
	MOV ECX, 0x000000FF
	REP STOSD
	STOSW
	STOSB
	MOV EDI,DWORD PTR [EDX]
	TEST EDI, EDI
	JZ loc_1003A1E3
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	LEA EDI,DWORD PTR [EBP+var_424+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1003A1E3:
	MOV EDI, offset [LEGO1_data.m4048]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_424+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV AL,BYTE PTR [EBP+arg2+0x4]
	LEA EDI,DWORD PTR [EBP+var_10+0x2]
	MOV ECX, 0xFFFFFFFF
	ADD BYTE PTR [EBP+var_10+0x2],AL
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_424+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	MOV EDI,DWORD PTR [offset LEGO1_data.m3E40_ptr]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_424+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+var_424+0x4]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD350_sub_100AE350])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.mAD4B0_sub_100AE4B0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m392C0_sub_1003A2C0])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1003A2C0()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1__SerializePlayersInfo_LegoGameState__QAEXF_Z(DWORD arg1)
{
	enum{
		var_30 = -0x30,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m393D7_proc_1003A3D7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m981C0_sub_100991C0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ESI]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD350_sub_100AE350])
	PUSH offset LEGO1_data + 0x4050
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.mAD690_sub_100AE690])
	MOV EAX, DWORD PTR [offset LEGO1_data.m3E44_ptr]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD690_sub_100AE690])
	MOVSX EAX,WORD PTR [EBP+arg1+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m983A0_sub_100993A0])
	TEST EAX, EAX
	JNZ loc_1003A3A9
	CMP BYTE PTR [EBP+var_1C+0x4],0x01
	JNZ loc_1003A364
	LEA EAX,DWORD PTR [ESI+0x26]
	PUSH 0x02
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(DWORD PTR [EDI+0x04])
	JMP loc_1003A381
loc_1003A364:
	CMP BYTE PTR [EBP+var_1C+0x4],0x02
	JNZ loc_1003A381
	MOV AX,WORD PTR DS:[ESI+0x26]
	PUSH 0x02
	MOV WORD PTR SS:[EBP+var_10+0x2],AX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	LEA EAX,DWORD PTR [EBP+var_10+0x2]
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x08])
loc_1003A381:
	XOR DI, DI
	CMP WORD PTR DS:[ESI+0x26],DI
	JLE loc_1003A3A9
loc_1003A38A:
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	MOVSX EAX,DI
	INC DI
	MOV ECX, EAX
	SHL EAX, 0x03
	SUB EAX, ECX
	LEA ECX,DWORD PTR [EAX*2+ESI+0x28]
	CALL_LONG(offset [LEGO1_text.m3B690_sub_1003C690])
	CMP WORD PTR DS:[ESI+0x26],DI
	JG loc_1003A38A
loc_1003A3A9:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m393CF_sub_1003A3CF])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m393E1_sub_1003A3E1])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003A3CF()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003A3E1()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98250_loc_10099250])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A3F0(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_2C = -0x2C,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m39528_proc_1003A528]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x24
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CMP WORD PTR DS:[ESI+0x26],0x09
	JNZ loc_1003A44D
	PUSH 0x08
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4AC_DeleteFileA])
	DEC WORD PTR DS:[ESI+0x26]
loc_1003A44D:
	MOV BX,WORD PTR DS:[ESI+0x26]
	TEST BX, BX
	JLE loc_1003A4A1
loc_1003A456:
	MOVSX ECX,BX
	MOV EAX, ECX
	LEA EDI,DWORD PTR [EBX-0x01]
	SHL ECX, 0x03
	SUB ECX, EAX
	LEA EAX,DWORD PTR [ECX*2+ESI+0x1A]
	LEA ECX,DWORD PTR [ECX*2+ESI]
	PUSH EAX
	ADD ECX, 0x28
	CALL_LONG(offset [LEGO1_text.m3B710_sub_1003C710])
	PUSH EDI
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	PUSH EBX
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	MOV BX, DI
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m4B0_MoveFileA])
	TEST DI, DI
	JNZ loc_1003A456
loc_1003A4A1:
	INC WORD PTR DS:[ESI+0x26]
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	LEA ECX,DWORD PTR [ESI+0x28]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDI
	MOV AX,WORD PTR DS:[EDX+0x0C]
	MOV WORD PTR DS:[ECX+0x0C],AX
	LEA ECX,DWORD PTR [ESI+0x000000A6]
	MOV AX,WORD PTR DS:[ESI+0x00000418]
	MOV WORD PTR DS:[ESI+0x24],AX
	INC AX
	MOV WORD PTR DS:[ESI+0x00000418],AX
	CALL_LONG(offset [LEGO1_text.m3B870_sub_1003C870])
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BEA0_sub_1003CEA0])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38BF0_sub_10039BF0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m39520_sub_1003A520])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m39532_sub_1003A532])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003A520()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003A532()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A540(DWORD arg1)
{
	enum{
		var_54 = -0x54,
		var_44 = -0x44,
		var_3C = -0x3C,
		var_34 = -0x34,
		var_2C = -0x2C,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m396BF_proc_1003A6BF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x44
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV DI,WORD PTR SS:[EBP+arg1+0x4]
	TEST DI, DI
	JLE FAR loc_1003A687
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	PUSH 0x24
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	MOVSX ECX,DI
	MOV EAX, ECX
	LEA EDX,DWORD PTR [EBP+var_54+0x4]
	SHL ECX, 0x03
	SUB ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [ECX*2+EAX+0x2C]
	MOV ESI,DWORD PTR [ECX*2+EAX+0x30]
	LEA ECX,DWORD PTR [ECX*2+EAX]
	MOV EAX,DWORD PTR [ECX+0x28]
	ADD ECX, 0x28
	MOV DWORD PTR [EDX],EAX
	MOV AX,WORD PTR DS:[ECX+0x0C]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EDX+0x08],ESI
	MOV WORD PTR DS:[EDX+0x0C],AX
	MOV ESI,DWORD PTR [offset LEGO1_idata.m4B0_MoveFileA]
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(ESI)
	TEST DI, DI
	JLE loc_1003A642
loc_1003A5F6:
	MOVSX ECX,DI
	MOV EAX, ECX
	LEA EBX,DWORD PTR [EDI-0x01]
	SHL ECX, 0x03
	SUB ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA EDX,DWORD PTR [ECX*2+EAX+0x1A]
	LEA ECX,DWORD PTR [ECX*2+EAX]
	PUSH EDX
	ADD ECX, 0x28
	CALL_LONG(offset [LEGO1_text.m3B710_sub_1003C710])
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	PUSH EDI
	LEA EAX,DWORD PTR [EBP+var_44+0x4]
	MOV DI, BX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(ESI)
	TEST BX, BX
	JNZ loc_1003A5F6
loc_1003A642:
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	ADD ECX, 0x28
	CALL_LONG(offset [LEGO1_text.m3B710_sub_1003C710])
	PUSH 0x00
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m39170_sub_1003A170])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(ESI)
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m396AF_sub_1003A6AF])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m396B7_sub_1003A6B7])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m396C9_sub_1003A6C9])
loc_1003A687:
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m38C60__Load_LegoGameState__QAEJK_Z])
	TEST EAX, EAX
	JZ loc_1003A69D
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m3AD00_sub_1003BD00])
loc_1003A69D:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003A6AF()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003A6B7()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003A6C9()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003A6E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR AX, AX
	PUSH EBX
	CMP WORD PTR DS:[ECX+0x26],AX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	JLE loc_1003A713
	MOV EDX,DWORD PTR [ESP+arg1+0xC]
loc_1003A6F2:
	MOVSX ESI,AX
	MOV ECX, ESI
	MOV EDI, EDX
	SHL ESI, 0x03
	SUB ESI, ECX
	MOV ECX, 0x0000000E
	LEA ESI,DWORD PTR [ESI*2+EBX+0x28]
	REPE CMPS
	JZ loc_1003A717
	INC AX
	CMP WORD PTR DS:[EBX+0x26],AX
	JG loc_1003A6F2
loc_1003A713:
	MOV AX, 0xFFFF
loc_1003A717:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003A720(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	TEST EAX, EAX
	JNZ loc_1003A72E
	MOV EAX,DWORD PTR [ECX+0x00000428]
loc_1003A72E:
	DEC EAX
	CMP EAX, 0x37
	JA_LONG(offset [LEGO1_text.m39FB5_loc_1003AFB5])
	XOR EDX, EDX
	MOV DL,BYTE PTR [offset LEGO1_text.m3A024_proc_1003B024+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m39FB8_proc_1003AFB8+EDX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B060(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3A957_proc_1003B957]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	PUSH ESI
	PUSH 0x03
	MOV EAX,DWORD PTR [ECX+0x00000424]
	MOV ESI, ECX
	PUSH 0x01
	MOV DWORD PTR [ESI+0x00000428],EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [ESI+0x00000424],ECX
	CALL_LONG(offset [LEGO1_text.m14820_sub_10015820])
	ADD ESP, 0x08
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5DF10_sub_1005EF10])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV BYTE PTR [EAX+0x00000554],0x00
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	DEC EAX
	CMP EAX, 0x41
	JA_LONG(offset [LEGO1_text.m3A994_loc_1003B994])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m3AA40_proc_1003BA40+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m3A9A4_proc_1003B9A4+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B192()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B228()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B378()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B42C()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B4DC()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B5E2()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B6EC()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B7CF()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003B961()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003BA90()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, offset [LEGO1_data.m3E5C_ptr]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV EDI, EAX
loc_1003BA9E:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [ESI-0x04]
	PUSH EAX
	ADD ESI, 0x08
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	CMP ESI, offset [LEGO1_data.m3FB4_ptr]
	JB loc_1003BA9E
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003BAC0()
{
__asm{
	PUSH offset [LEGO1_text.m3AAD0_proc_1003BAD0]
	CALL_LONG(offset [LEGO1_text.mA8D30_sub_100A9D30])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003BBB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH EBP
	MOV EDI, ECX
	XOR EBP, EBP
	CMP WORD PTR DS:[EDI+0x04],BP
	JLE loc_1003BBE0
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_1003BBC4:
	MOV EAX,DWORD PTR [EDI+0x08]
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+EAX]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JNZ loc_1003BBE9
	ADD EBP, 0x04
	INC EBX
	MOVSX EAX,WORD PTR [EDI+0x04]
	CMP EAX, EBX
	JG loc_1003BBC4
loc_1003BBE0:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1003BBE9:
	MOV EAX,DWORD PTR [EDI+0x08]
	POP EBP
	POP EDI
	POP ESI
	MOV EAX,DWORD PTR [EBX*4+EAX]
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003BC00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mABEA0_sub_100ACEA0])
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	PUSH EAX
	MOV ESI, EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m3AC30_sub_1003BC30])
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003BC30(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	XOR ESI, ESI
	CMP WORD PTR DS:[EBX+0x04],SI
	JLE loc_1003BC77
	XOR EDI, EDI
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESP+var_4+0x14],EDX
loc_1003BC50:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	MOV EBP,DWORD PTR [EDI+EAX]
	CALL_LONG(DWORD PTR [ESP+var_4+0x14])
	PUSH EAX
	MOV ECX, EBP
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JNZ loc_1003BC77
	ADD EDI, 0x04
	INC ESI
	MOVSX EAX,WORD PTR [EBX+0x04]
	CMP EAX, ESI
	JG loc_1003BC50
loc_1003BC77:
	MOVSX EAX,WORD PTR [EBX+0x04]
	CMP ESI, EAX
	JNZ loc_1003BCD7
	LEA EAX,DWORD PTR [EAX*4+0x00000004]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBP, EAX
	MOV AX,WORD PTR DS:[EBX+0x04]
	TEST AX, AX
	JZ loc_1003BCBA
	MOVSX EAX,AX
	MOV EDI, EBP
	MOV ESI,DWORD PTR [EBX+0x08]
	LEA ECX,DWORD PTR [EAX*4+0x00000000]
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX,DWORD PTR [EBX+0x08]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003BCBA:
	MOVSX EAX,WORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	MOV DWORD PTR [EAX*4+EBP+arg1217224-0x4A4B20],ECX
	INC WORD PTR DS:[EBX+0x04]
	MOV DWORD PTR [EBX+0x08],EBP
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1003BCD7:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESI*4+EAX]
	TEST ECX, ECX
	JZ loc_1003BCE7
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1003BCE7:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ESI*4+EAX],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003BD00()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH offset [LEGO1_data.m3FF4_str]
	MOV ECX,DWORD PTR [ESI+0x18]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV ECX,DWORD PTR [ESI+0x18]
	CALL_LONG(offset [LEGO1_text.m3B4B0_sub_1003C4B0])
	MOV ECX,DWORD PTR [ESI+0x1C]
	PUSH offset [LEGO1_data.m3FF4_str]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x04])
	PUSH offset [LEGO1_data.m3FC4]
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	PUSH 0x02
	CALL_LONG(offset [LEGO1_text.m3E0D0_sub_1003F0D0])
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m25330_sub_10026330])
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2E9D0_sub_1002F9D0])
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82270_sub_10083270])
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5DE80_sub_1005EE80])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3AA90_sub_1003BA90])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38910_sub_10039910])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m38BF0_sub_10039BF0])
	MOV BYTE PTR [ESI+0x00000420],0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BEB0_sub_1003CEB0])
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3BEA0_sub_1003CEA0])
	CMP DWORD PTR [ESI+0x14],0x00
	JNZ FAR loc_1003BE85
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	MOV ECX, EAX
	ADD ESP, 0x08
	MOV EDI, EAX
	PUSH 0x01
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x451C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1003BDF2
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	PUSH EBX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	TEST EBX, EBX
	JZ loc_1003BDF2
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_1003BDF2:
	PUSH 0x02
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4520]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1003BE23
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	PUSH EBX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	TEST EBX, EBX
	JZ loc_1003BE23
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_1003BE23:
	PUSH 0x03
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4524]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1003BE54
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	PUSH EBX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	TEST EBX, EBX
	JZ loc_1003BE54
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_1003BE54:
	PUSH 0x04
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4528]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1003BE85
	PUSH EBX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	PUSH EBX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	TEST EBX, EBX
	JZ loc_1003BE85
	PUSH 0x01
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX])
loc_1003BE85:
	MOV DWORD PTR [ESI+0x0000042C],0x00000000
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003BF14()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x14
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003BF29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003BF84()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x14
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003BF99()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1___0LegoBackgroundColor__QAE_PBD0_Z(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3B050_proc_1003C050]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x14]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3498_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m34A8_ptr]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAD490_sub_100AE490])
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3B070_sub_1003C070])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C070(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217233 = 0x4A4B44,
		arg1217234 = 0x4A4B48,
		arg1217235 = 0x4A4B4C,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x1C]
	PUSH EDI
	PUSH EBP
	PUSH ESI
	LEA EDI,DWORD PTR [ECX+0x14]
	MOV EBP, ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD4A0_sub_100AE4A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV DWORD PTR [ESP+var_4+0x24],EAX
	TEST EAX, EAX
	JZ FAR loc_1003C225
	TEST ESI, ESI
	JZ FAR loc_1003C225
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI, EBX
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV ECX,DWORD PTR [offset LEGO1_data.m3FB0_ptr]
	PUSH ECX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	MOV EDX, EAX
	MOV ESI,DWORD PTR [offset LEGO1_data.m3FB4_ptr]
loc_1003C0F9:
	MOV CL,BYTE PTR [EDX]
	CMP CL,BYTE PTR [ESI]
	JNZ loc_1003C119
	OR CL, CL
	JZ loc_1003C115
	MOV CL,BYTE PTR [EDX+0x01]
	CMP CL,BYTE PTR [ESI+0x01]
	JNZ loc_1003C119
	ADD EDX, 0x02
	ADD ESI, 0x02
	OR CL, CL
	JNZ loc_1003C0F9
loc_1003C115:
	XOR ECX, ECX
	JMP loc_1003C11E
loc_1003C119:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1003C11E:
	TEST ECX, ECX
	JNZ FAR loc_1003C1B2
	MOV EAX, DWORD PTR [offset LEGO1_data.m3FB0_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003C154
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	MOV DWORD PTR [ESP+var_14+0x28],EAX
	ADD ESP, 0x04
	FILD DWORD PTR [ESP+var_14+0x24]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3450]
	FSTP DWORD PTR [EBP+arg1217233-0x4A4B20]
loc_1003C154:
	MOV EAX, DWORD PTR [offset LEGO1_data.m3FB0_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003C182
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	MOV DWORD PTR [ESP+var_14+0x28],EAX
	ADD ESP, 0x04
	FILD DWORD PTR [ESP+var_14+0x24]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3450]
	FSTP DWORD PTR [EBP+arg1217234-0x4A4B20]
loc_1003C182:
	MOV EAX, DWORD PTR [offset LEGO1_data.m3FB0_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003C1E1
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	MOV DWORD PTR [ESP+var_14+0x28],EAX
	ADD ESP, 0x04
	FILD DWORD PTR [ESP+var_14+0x24]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3450]
	FSTP DWORD PTR [EBP+arg1217235-0x4A4B20]
	JMP loc_1003C1E1
loc_1003C1B2:
	MOV EDX,DWORD PTR [offset LEGO1_data.m3FB8_ptr]
loc_1003C1B8:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_1003C1D8
	OR CL, CL
	JZ loc_1003C1D4
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_1003C1D8
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_1003C1B8
loc_1003C1D4:
	XOR EAX, EAX
	JMP loc_1003C1DD
loc_1003C1D8:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1003C1DD:
	TEST EAX, EAX
	JNZ loc_1003C21C
loc_1003C1E1:
	LEA EAX,DWORD PTR [ESP+var_10+0x24]
	LEA ECX,DWORD PTR [ESP+var_C+0x24]
	LEA EDX,DWORD PTR [ESP+var_8+0x24]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+arg1217235-0x4A4B20]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+arg1217234-0x4A4B20]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg1217233-0x4A4B20]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3DAE0_sub_1003EAE0])
	MOV ECX,DWORD PTR [ESP+var_10+0x3C]
	MOV EDX,DWORD PTR [ESP+var_C+0x3C]
	MOV EAX,DWORD PTR [ESP+var_8+0x3C]
	ADD ESP, 0x18
	PUSH ECX
	PUSH EDX
	MOV ECX,DWORD PTR [ESP+var_4+0x2C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m7B440_sub_1007C440])
loc_1003C21C:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003C225:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C230(DWORD arg1)
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x2C
	CMP BYTE PTR [ESP+arg1+0x2C],0x00
	PUSH ESI
	MOV ESI, ECX
	FLD DWORD PTR [ESI+0x28]
	JZ loc_1003C262
	FADD QWORD PTR [offset LEGO1_rdata + 0x3458]
	FSTP DWORD PTR [ESI+0x28]
	FLD DWORD PTR [ESI+0x28]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3460]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1003C282
	MOV DWORD PTR [ESI+0x28],0x3F800000
	JMP loc_1003C282
loc_1003C262:
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3458]
	FSTP DWORD PTR [ESI+0x28]
	FLD DWORD PTR [ESI+0x28]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3458]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1003C282
	MOV DWORD PTR [ESI+0x28],0x3DCCCCCD
loc_1003C282:
	FLD DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	PUSH offset [LEGO1_data.m406C_str]
	LEA EAX,DWORD PTR [ESP+var_20+0x40]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA EAX,DWORD PTR [ESP+var_20+0x44]
	ADD ESP, 0x14
	LEA ECX,DWORD PTR [ESI+0x14]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	LEA EAX,DWORD PTR [ESP+var_2C+0x30]
	LEA ECX,DWORD PTR [ESP+var_28+0x30]
	LEA EDX,DWORD PTR [ESP+var_24+0x30]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH EDX
	MOV ECX,DWORD PTR [ESI+0x28]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x24]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3DAE0_sub_1003EAE0])
	MOV ECX,DWORD PTR [ESP+var_2C+0x48]
	MOV EDX,DWORD PTR [ESP+var_28+0x48]
	MOV EAX,DWORD PTR [ESP+var_24+0x48]
	ADD ESP, 0x18
	PUSH ECX
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B440_sub_1007C440])
	MOV ECX,DWORD PTR [ESP+var_2C+0x30]
	MOV EDX,DWORD PTR [ESP+var_28+0x30]
	MOV EAX,DWORD PTR [ESP+var_24+0x30]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3B400_sub_1003C400])
	POP ESI
	ADD ESP, 0x2C
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003C330()
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
	};

__asm{
	SUB ESP, 0x2C
	PUSH ESI
	MOV ESI, ECX
	FLD DWORD PTR [ESI+0x24]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3470]
	FSTP DWORD PTR [ESI+0x24]
	FLD DWORD PTR [ESI+0x24]
	CMP DWORD PTR [ESI+0x24],0x3F800000
	FSTP QWORD PTR [ESP+var_20+0x30]
	JLE loc_1003C35B
	FLD1
	FSUBR QWORD PTR [ESP+var_20+0x30]
	FSTP DWORD PTR [ESI+0x24]
loc_1003C35B:
	FLD DWORD PTR [ESI+0x2C]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x24]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x346C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	PUSH offset [LEGO1_data.m406C_str]
	LEA EAX,DWORD PTR [ESP+var_20+0x40]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA EAX,DWORD PTR [ESP+var_20+0x44]
	ADD ESP, 0x14
	LEA ECX,DWORD PTR [ESI+0x14]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	LEA EAX,DWORD PTR [ESP+var_2C+0x30]
	LEA ECX,DWORD PTR [ESP+var_28+0x30]
	LEA EDX,DWORD PTR [ESP+var_24+0x30]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH EDX
	MOV ECX,DWORD PTR [ESI+0x28]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x24]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3DAE0_sub_1003EAE0])
	MOV ECX,DWORD PTR [ESP+var_2C+0x48]
	MOV EDX,DWORD PTR [ESP+var_28+0x48]
	MOV EAX,DWORD PTR [ESP+var_24+0x48]
	ADD ESP, 0x18
	PUSH ECX
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7B440_sub_1007C440])
	MOV ECX,DWORD PTR [ESP+var_2C+0x30]
	MOV EDX,DWORD PTR [ESP+var_28+0x30]
	MOV EAX,DWORD PTR [ESP+var_24+0x30]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3B400_sub_1003C400])
	POP ESI
	ADD ESP, 0x2C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C400(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST BYTE PTR [EAX+0x45],0x01
	JNZ FAR loc_1003C4A8
	FLD DWORD PTR [ESP+arg1]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3480]
	FSTP DWORD PTR [ESP+arg1]
	FLD DWORD PTR [ESP+arg2]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3488]
	MOV EAX, 0x3F800000
	CMP DWORD PTR [ESP+arg1],EAX
	FSTP DWORD PTR [ESP+arg2]
	FLD DWORD PTR [ESP+arg3]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3490]
	FSTP DWORD PTR [ESP+arg3]
	JLE loc_1003C448
	MOV DWORD PTR [ESP+arg1],EAX
loc_1003C448:
	MOV EAX, 0x3F800000
	CMP DWORD PTR [ESP+arg2],EAX
	JLE loc_1003C457
	MOV DWORD PTR [ESP+arg2],EAX
loc_1003C457:
	MOV EAX, 0x3F800000
	CMP DWORD PTR [ESP+arg3],EAX
	JLE loc_1003C466
	MOV DWORD PTR [ESP+arg3],EAX
loc_1003C466:
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [ESP+arg3]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH EDX
	PUSH ECX
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAABA0_sub_100ABBA0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [ESP+arg3]
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH EDX
	PUSH ECX
	PUSH 0x01
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAABA0_sub_100ABBA0])
loc_1003C4A8:
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1003C4B0()
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x0C
	LEA EAX,DWORD PTR [ESP+var_C+0xC]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [ESP+var_8+0x14]
	LEA EDX,DWORD PTR [ESP+var_4+0x14]
	PUSH ECX
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH EDX
	MOV ECX,DWORD PTR [ESI+0x28]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x24]
	PUSH ECX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m3DAE0_sub_1003EAE0])
	MOV ECX,DWORD PTR [ESP+var_C+0x28]
	MOV EDX,DWORD PTR [ESP+var_8+0x28]
	MOV EAX,DWORD PTR [ESP+var_4+0x28]
	ADD ESP, 0x18
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3B400_sub_1003C400])
	POP ESI
	ADD ESP, 0x0C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C500(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3B5A0_proc_1003C5A0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x14]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	PUSH EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3498_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m34B8_ptr]
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAD490_sub_100AE490])
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3B5C0_sub_1003C5C0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C5C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x14]
	MOV ESI, ECX
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD4A0_sub_100AE4A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1003C65E
	MOV EAX,DWORD PTR [ESI+0x1C]
	MOV EDI,DWORD PTR [offset LEGO1_data.m3FBC_ptr]
loc_1003C5EF:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_1003C60F
	OR DL, DL
	JZ loc_1003C60B
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_1003C60F
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1003C5EF
loc_1003C60B:
	XOR EAX, EAX
	JMP loc_1003C614
loc_1003C60F:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1003C614:
	TEST EAX, EAX
	JNZ loc_1003C625
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m7B300_sub_1007C300])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1003C625:
	MOV EAX,DWORD PTR [ESI+0x1C]
	MOV EDX,DWORD PTR [offset LEGO1_data.m3FC0_ptr]
loc_1003C62E:
	MOV BL,BYTE PTR [EAX]
	CMP BL,BYTE PTR [EDX]
	JNZ loc_1003C64E
	OR BL, BL
	JZ loc_1003C64A
	MOV BL,BYTE PTR [EAX+0x01]
	CMP BL,BYTE PTR [EDX+0x01]
	JNZ loc_1003C64E
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR BL, BL
	JNZ loc_1003C62E
loc_1003C64A:
	XOR EAX, EAX
	JMP loc_1003C653
loc_1003C64E:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1003C653:
	TEST EAX, EAX
	JNZ loc_1003C65E
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m7B300_sub_1007C300])
loc_1003C65E:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003C670()
{
__asm{
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV WORD PTR DS:[ECX+0x0C],AX
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C690(DWORD arg1)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EDI
	PUSH EBP
	MOV EBP, ECX
	MOV EDI,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x18])
	TEST AL, AL
	JZ loc_1003C6C6
	XOR SI, SI
	MOV EDI,DWORD PTR [EDI+0x04]
loc_1003C6AE:
	MOVSX EAX,SI
	INC SI
	PUSH 0x02
	LEA ECX,DWORD PTR [EAX*2+EBP+arg1217224-0x4A4B20]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(EDI)
	CMP SI, 0x07
	JL loc_1003C6AE
	JMP loc_1003C6F5
loc_1003C6C6:
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x14])
	TEST AL, AL
	JZ loc_1003C6F5
	XOR SI, SI
	MOV EDI,DWORD PTR [EDI+0x08]
loc_1003C6D5:
	PUSH 0x02
	MOV ECX, EBX
	MOVSX EAX,SI
	INC SI
	MOV AX,WORD PTR DS:[EAX*2+EBP+arg1217224-0x4A4B20]
	MOV WORD PTR SS:[ESP+r+0x16],AX
	LEA EAX,DWORD PTR [ESP+r+0x16]
	PUSH EAX
	CALL_LONG(EDI)
	CMP SI, 0x07
	JL loc_1003C6D5
loc_1003C6F5:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C710(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	MOV DX,WORD PTR DS:[EDX+0x0C]
	MOV WORD PTR DS:[ECX+0x0C],DX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003C740(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX]
	PUSH EBP
	MOV EDI, ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [ESI+0x18])
	TEST AL, AL
	JZ loc_1003C7A9
	MOV EBX,DWORD PTR [ESI+0x04]
	PUSH 0x02
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	PUSH EDI
	MOV EBP, EDI
	CALL_LONG(EBX)
	MOV DWORD PTR [ESP+var_4+0x14],0x00000005
loc_1003C76E:
	XOR ESI, ESI
loc_1003C770:
	LEA EAX,DWORD PTR [EBP+ESI]
	PUSH 0x01
	ADD EAX, 0x02
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	PUSH EAX
	INC ESI
	CALL_LONG(EBX)
	CMP ESI, 0x05
	JL loc_1003C770
	ADD EBP, 0x05
	DEC DWORD PTR [ESP+var_4+0x14]
	JNZ loc_1003C76E
	LEA ECX,DWORD PTR [EDI+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	PUSH EAX
	ADD EDI, 0x2A
	CALL_LONG(offset [LEGO1_text.m3B690_sub_1003C690])
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	PUSH 0x02
	PUSH EDI
	CALL_LONG(EBX)
	JMP loc_1003C819
loc_1003C7A9:
	MOV ECX,DWORD PTR [ESP+arg1+0x14]
	CALL_LONG(DWORD PTR [ESI+0x14])
	TEST AL, AL
	JZ loc_1003C819
	MOV AX,WORD PTR DS:[EDI]
	PUSH 0x02
	MOV WORD PTR SS:[ESP+r+0x14],AX
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EBP,DWORD PTR [ESI+0x08]
	LEA EAX,DWORD PTR [ESP+r+0x14]
	PUSH EAX
	XOR ESI, ESI
	CALL_LONG(EBP)
loc_1003C7CE:
	XOR EBX, EBX
loc_1003C7D0:
	LEA EAX,DWORD PTR [EBX+EDI]
	PUSH 0x01
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	INC EBX
	MOV AL,BYTE PTR [ESI+EAX+0x02]
	MOV BYTE PTR [ESP+r+0x14],AL
	LEA EAX,DWORD PTR [ESP+r+0x14]
	PUSH EAX
	CALL_LONG(EBP)
	CMP EBX, 0x05
	JL loc_1003C7D0
	ADD ESI, 0x05
	CMP ESI, 0x19
	JL loc_1003C7CE
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	LEA ECX,DWORD PTR [EDI+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3B690_sub_1003C690])
	MOV AX,WORD PTR DS:[EDI+0x2A]
	PUSH 0x02
	MOV WORD PTR SS:[ESP+r+0x14],AX
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	LEA EAX,DWORD PTR [ESP+r+0x14]
	PUSH EAX
	CALL_LONG(EBP)
loc_1003C819:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003C830()
{
__asm{
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x02]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, 0x00000013
loc_1003C83D:
	MOV ECX, EBX
	ADD EBX, 0x2C
	CALL_LONG(offset [LEGO1_text.m3B860_sub_1003C860])
	DEC EDI
	JNS loc_1003C83D
	MOV WORD PTR DS:[ESI],0x0000
	MOV EAX, ESI
	MOV WORD PTR DS:[ESI+0x00000372],0x0000
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003C860()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [ECX+0x1C]
	CALL_LONG(offset [LEGO1_text.m3B670_sub_1003C670])
	MOV EAX, ESI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003C870()
{
	enum{
		var_60 = -0x60,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
	};

__asm{
	SUB ESP, 0x60
	MOV DWORD PTR [ESP+var_60+0x60],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	PUSH offset [LEGO1_data.m4DC_str]
	XOR BP, BP
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	CMP DWORD PTR [EAX+0x78],0x00
	JZ_LONG(offset [LEGO1_text.m3BC55_loc_1003CC55])
	PUSH offset [LEGO1_data.mAC_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESP+var_54+0x70],EAX
	PUSH offset [LEGO1_data.m9C_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESP+var_58+0x70],EAX
	PUSH offset [LEGO1_data.mBC_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV ESI, EAX
	PUSH offset [LEGO1_data.mD4_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	PUSH offset [LEGO1_data.mE8_str]
	MOV EBX, 0x00000001
	MOV DWORD PTR [ESP+var_50+0x74],EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV EDI, EAX
	JMP_LONG(offset [LEGO1_text.m3B903_loc_1003C903])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003CC90(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217228 = 0x4A4B30,
	};

__asm{
	PUSH EBX
	MOV EDX, ECX
	PUSH ESI
	XOR EBX, EBX
	CMP WORD PTR DS:[EDX],BX
	PUSH EDI
	PUSH EBP
	JLE loc_1003CCC5
	MOV AX,WORD PTR SS:[ESP+arg2+0x10]
	LEA EBP,DWORD PTR [EDX+0x1E]
loc_1003CCA5:
	MOV ECX, 0x0000000E
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	MOV EDI, EBP
	REPE CMPS
	JNZ loc_1003CCBA
	CMP WORD PTR SS:[EBP+arg1217228-0x4A4B22],AX
	JZ loc_1003CCC5
loc_1003CCBA:
	ADD EBP, 0x2C
	INC EBX
	MOVSX ECX,WORD PTR [EDX]
	CMP ECX, EBX
	JG loc_1003CCA5
loc_1003CCC5:
	MOV EAX,DWORD PTR [ESP+arg3+0x10]
	MOV DWORD PTR [EAX],EBX
	MOVSX ECX,WORD PTR [EDX]
	CMP ECX, EBX
	JG loc_1003CCDB
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_1003CCDB:
	LEA EAX,DWORD PTR [EBX*4+EBX]
	POP EBP
	POP EDI
	POP ESI
	LEA EAX,DWORD PTR [EAX*8+EAX]
	SUB EAX, EBX
	POP EBX
	LEA EAX,DWORD PTR [EDX+EAX+0x02]
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003CCF0(DWORD arg1)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0xC]
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	MOV EBX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x18])
	TEST AL, AL
	JZ loc_1003CD56
	MOV EBX,DWORD PTR [EBX+0x04]
	PUSH 0x02
	LEA EAX,DWORD PTR [EDI+0x00000372]
	MOV ECX, ESI
	XOR BP, BP
	PUSH EAX
	CALL_LONG(EBX)
	PUSH 0x02
	MOV ECX, ESI
	PUSH EDI
	CALL_LONG(EBX)
	CMP WORD PTR DS:[EDI],BP
	JLE FAR loc_1003CDC2
loc_1003CD2B:
	LEA EAX,DWORD PTR [ESP+r+0x12]
	PUSH 0x02
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(EBX)
	MOVSX EAX,BP
	MOV ECX, EAX
	LEA EDX,DWORD PTR [EAX*4+EAX]
	INC BP
	PUSH ESI
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ECX,DWORD PTR [EDI+EAX+0x02]
	CALL_LONG(offset [LEGO1_text.m3B740_sub_1003C740])
	CMP WORD PTR DS:[EDI],BP
	JG loc_1003CD2B
	JMP loc_1003CDC2
loc_1003CD56:
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x14])
	TEST AL, AL
	JZ loc_1003CDC2
	MOV AX,WORD PTR DS:[EDI+0x00000372]
	PUSH 0x02
	MOV WORD PTR SS:[ESP+r+0x16],AX
	MOV ECX, ESI
	MOV EBX,DWORD PTR [EBX+0x08]
	LEA EAX,DWORD PTR [ESP+r+0x16]
	PUSH EAX
	CALL_LONG(EBX)
	MOV AX,WORD PTR DS:[EDI]
	PUSH 0x02
	XOR BP, BP
	MOV ECX, ESI
	MOV WORD PTR SS:[ESP+r+0x16],AX
	LEA EAX,DWORD PTR [ESP+r+0x16]
	PUSH EAX
	CALL_LONG(EBX)
	CMP WORD PTR DS:[EDI],BP
	JLE loc_1003CDC2
loc_1003CD94:
	MOV WORD PTR SS:[ESP+r+0x12],BP
	PUSH 0x02
	LEA EAX,DWORD PTR [ESP+r+0x16]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(EBX)
	MOVSX EAX,BP
	MOV ECX, EAX
	LEA EDX,DWORD PTR [EAX*4+EAX]
	INC BP
	PUSH ESI
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ECX,DWORD PTR [EDI+EAX+0x02]
	CALL_LONG(offset [LEGO1_text.m3B740_sub_1003C740])
	CMP WORD PTR DS:[EDI],BP
	JG loc_1003CD94
loc_1003CDC2:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

