#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_proc_10060837()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10060844()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5F846_loc_10060846])
}
}

__declspec(naked) DWORD LEGO1_loc_10060846()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	TEST EBX, EBX
	JZ_LONG(offset [LEGO1_text.m5F934_loc_10060934])
	MOV DWORD PTR [EBX+0x08],EAX
	JMP_LONG(offset [LEGO1_text.m5F855_loc_10060855])
}
}

__declspec(naked) DWORD LEGO1_loc_10060855()
{
__asm{
	MOV DWORD PTR [EDI+0x14],EAX
	INC DWORD PTR [EDI+0x08]
	JMP_LONG(offset [LEGO1_text.m5F85B_loc_1006085B])
}
}

__declspec(naked) DWORD LEGO1_loc_1006085B()
{
	enum{
		arg1217115 = 0x4A496C,
		arg1217179 = 0x4A4A6C,
		arg1217186 = 0x4A4A88,
		arg1217187 = 0x4A4A8C,
		arg1217188 = 0x4A4A90,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV EDX,DWORD PTR [offset LEGO1_data.m120D4_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217115-0x4A4B20]
	PUSH ECX
	PUSH EDX
	PUSH offset [LEGO1_data.m7558_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x10
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV ECX,DWORD PTR [EDX+0x08]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A460_sub_1005B460])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x04
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217187-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	CALL_LONG(offset [LEGO1_text.m5F9C3_sub_100609C3])
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	LEA EDX,DWORD PTR [EBP+arg1217115-0x4A4B20]
	PUSH EDX
	MOV EDI, EDX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX, 0xFFFFFFFF
	MOV WORD PTR SS:[EBP+arg1217188-0x4A4B20],0xFFFF
	MOV DWORD PTR [EBP+arg1217186-0x4A4B20],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mACE60_sub_100ADE60])
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14890_sub_10015890])
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m5F9A1_loc_100609A1])
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	OR DWORD PTR [EAX+0x74],0x02
	INC WORD PTR DS:[ECX+0x22]
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JZ_LONG(offset [LEGO1_text.m5F949_loc_10060949])
	ADD EDX, 0x00000404
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [EDX],EAX
	JMP_LONG(offset [LEGO1_text.m5F95A_loc_1006095A])
}
}

__declspec(naked) DWORD LEGO1_loc_10060934()
{
__asm{
	MOV DWORD PTR [EDI+0x10],EAX
	JMP_LONG(offset [LEGO1_text.m5F855_loc_10060855])
}
}

__declspec(naked) DWORD LEGO1_proc_1006093C()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10060949()
{
__asm{
	ADD EDX, 0x00000404
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX],ECX
	JMP_LONG(offset [LEGO1_text.m5F95A_loc_1006095A])
}
}

__declspec(naked) DWORD LEGO1_loc_1006095A()
{
	enum{
		arg1217216 = 0x4A4B00,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217227 = 0x4A4B2C,
		arg1217234 = 0x4A4B48,
	};

__asm{
	CMP BYTE PTR [EBP+arg1217234-0x4A4B20],0x00
	JZ loc_10060971
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m638F0_sub_100648F0])
	JMP loc_10060993
loc_10060971:
	CMP BYTE PTR [EBP+arg1217227-0x4A4B20],0x00
	JZ loc_10060993
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_10060993
	MOV DWORD PTR [ECX+0x000000DC],0x00000004
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x30])
loc_10060993:
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],0x00000000
	MOV BYTE PTR [EDX+0x39],0x01
	JMP_LONG(offset [LEGO1_text.m5F9A1_loc_100609A1])
}
}

__declspec(naked) DWORD LEGO1_loc_100609A1()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5F9E2_sub_100609E2])
	JMP_LONG(offset [LEGO1_text.m5F9AD_loc_100609AD])
}
}

__declspec(naked) DWORD LEGO1_loc_100609AD()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m5F9B0_loc_100609B0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_100609B0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9)
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0024
}
}

__declspec(naked) DWORD LEGO1_sub_100609C3()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_100609CB()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100609E2()
{
	enum{
		arg1217179 = 0x4A4A6C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217179-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100609F0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_B4 = -0xB4,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5FCDC_proc_10060CDC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000001A4
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_B4+0x4]
	PUSH EDI
	XOR EBX, EBX
	MOV EDI, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.m617D0_sub_100627D0])
	PUSH 0x78
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EAX, 0x00000001
	MOV BYTE PTR [EBP+var_8+0x4],AL
	TEST ESI, ESI
	JZ loc_10060A97
	LEA ECX,DWORD PTR [ESI+0x2C]
	LEA EDX,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x30],EDX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x04],EBX
	MOV DWORD PTR [ESI+0x08],EBX
	MOV DWORD PTR [ESI+0x0C],EBX
	MOV BYTE PTR [ESI+0x10],BL
	MOV WORD PTR DS:[ESI+0x12],DI
	MOV BYTE PTR [ESI+0x14],BL
	MOV DWORD PTR [ESI+0x1C],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x24],EBX
	MOV BYTE PTR [ESI+0x15],AL
	MOV BYTE PTR [ESI+0x28],AL
	MOV BYTE PTR [ESI+0x29],AL
	MOV DWORD PTR [ESI+0x74],EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x24])
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	JMP loc_10060A9E
loc_10060A97:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_10060A9E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EAX], 0x00000000
	MOV ECX,DWORD PTR [EDX+0x1C]
	INC ECX
	MOV DWORD PTR [EDX+0x1C],ECX
	MOV DWORD PTR [EAX+0x04],ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV BYTE PTR [EAX+0x10],0x00
	MOV DWORD PTR [EAX+0x08],0x00000000
	CMP DWORD PTR [EBP+arg2+0x4],0x00
	MOV WORD PTR DS:[EAX+0x12],0xFFFF
	MOV BYTE PTR [EAX+0x14],0x00
	MOV DWORD PTR [EAX+0x18],ECX
	JZ loc_10060B23
	PUSH 0x48
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV ECX, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	TEST EBX, EBX
	JZ loc_10060B19
	LEA EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV DWORD PTR [EBX], offset [LEGO1_rdata.m300_ptr]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV ECX, EBX
loc_10060B19:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EAX+0x0C],ECX
loc_10060B23:
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m61770_sub_10062770])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x28
	MOV DL,BYTE PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EAX+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	ADD ECX, 0x30
	MOV DWORD PTR [EAX+0x20],ECX
	MOV CL,BYTE PTR [EBP+arg4+0x4]
	MOV BYTE PTR [EAX+0x28],DL
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EAX+0x29],CL
	MOV EBX,DWORD PTR [EDX+0x20]
	TEST EBX, EBX
	JZ_LONG(offset [LEGO1_text.m5FBA7_loc_10060BA7])
	MOV ESI,DWORD PTR [EBX+0x14]
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m5FB90_loc_10060B90])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
	JMP_LONG(offset [LEGO1_text.m5FB92_loc_10060B92])
}
}

__declspec(naked) DWORD LEGO1_proc_10060B83()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10060B90()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m5FB92_loc_10060B92])
}
}

__declspec(naked) DWORD LEGO1_loc_10060B92()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m5FC77_loc_10060C77])
	MOV DWORD PTR [ESI+0x08],EAX
	JMP_LONG(offset [LEGO1_text.m5FBA1_loc_10060BA1])
}
}

__declspec(naked) DWORD LEGO1_loc_10060BA1()
{
__asm{
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	JMP_LONG(offset [LEGO1_text.m5FBA7_loc_10060BA7])
}
}

__declspec(naked) DWORD LEGO1_loc_10060BA7()
{
	enum{
		arg1217116 = 0x4A4970,
		arg1217180 = 0x4A4A70,
		arg1217187 = 0x4A4A8C,
		arg1217188 = 0x4A4A90,
		arg1217189 = 0x4A4A94,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [offset LEGO1_data.m120D4_ptr]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217116-0x4A4B20]
	PUSH ECX
	PUSH EDX
	PUSH offset [LEGO1_data.m7558_str]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x10
	MOV EDX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EDX+0x08]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A460_sub_1005B460])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x04
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217188-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	CALL_LONG(offset [LEGO1_text.m5FCC7_sub_10060CC7])
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	LEA EAX,DWORD PTR [EBP+arg1217116-0x4A4B20]
	PUSH EAX
	MOV EDI, EAX
	SUB EAX, EAX
	MOV DWORD PTR [EBP+arg1217187-0x4A4B20],ECX
	MOV WORD PTR SS:[EBP+arg1217189-0x4A4B20],0xFFFF
	MOV ECX, 0xFFFFFFFF
	REPNE SCAS
	NOT ECX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217180-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mACE60_sub_100ADE60])
	LEA ECX,DWORD PTR [EBP+arg1217180-0x4A4B20]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14890_sub_10015890])
	ADD ESP, 0x04
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m5FCA5_loc_10060CA5])
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV EDX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	OR DWORD PTR [EAX+0x74],0x02
	MOV BYTE PTR [EDX+0x39],0x01
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ_LONG(offset [LEGO1_text.m5FC8C_loc_10060C8C])
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV EDX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV DWORD PTR [EDX+0x00000404],EAX
	JMP_LONG(offset [LEGO1_text.m5FC9E_loc_10060C9E])
}
}

__declspec(naked) DWORD LEGO1_loc_10060C77()
{
__asm{
	MOV DWORD PTR [EBX+0x10],EAX
	JMP_LONG(offset [LEGO1_text.m5FBA1_loc_10060BA1])
}
}

__declspec(naked) DWORD LEGO1_proc_10060C7F()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10060C8C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	MOV EDX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX+0x00000404],ECX
	JMP_LONG(offset [LEGO1_text.m5FC9E_loc_10060C9E])
}
}

__declspec(naked) DWORD LEGO1_loc_10060C9E()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],0x00000000
	JMP_LONG(offset [LEGO1_text.m5FCA5_loc_10060CA5])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_10060CA5(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1217217 = 0x4A4B04,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m5FCE6_sub_10060CE6])
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_10060CC7()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_10060CCF()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10060CE6()
{
	enum{
		arg1217180 = 0x4A4A70,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217180-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060D00(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217302 = 0x4A4C58,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	MOV ESI, 0xFFFFFFFF
	MOV EBX,DWORD PTR [EAX+0x54]
	CMP BYTE PTR [EAX+0x59],0x00
	JNZ loc_10060D97
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	MOV EBP, 0x00000000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	TEST EAX, EAX
	JZ loc_10060D3E
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EBP,DWORD PTR [EAX+EDX+0x04]
loc_10060D3E:
	TEST EBP, EBP
	JZ loc_10060D97
	MOV ECX,DWORD PTR [EBP+arg1217302-0x4A4B20]
	TEST ECX, ECX
	JZ loc_10060D97
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	XOR EAX, EAX
	LEA ECX,DWORD PTR [EDI+0x3C]
	MOV DWORD PTR [EBP+arg1217302-0x4A4B20],0x00000000
loc_10060D61:
	CMP DWORD PTR [ECX],EBX
	JZ loc_10060D70
	ADD ECX, 0x18
	INC EAX
	CMP EAX, 0x28
	JL loc_10060D61
	JMP loc_10060D97
loc_10060D70:
	LEA EAX,DWORD PTR [EAX*2+EAX]
	MOV ECX,DWORD PTR [EAX*8+EDI+0x40]
	LEA EAX,DWORD PTR [ECX*2+ECX]
	SHL EAX, 0x03
	MOV BYTE PTR [offset LEGO1_data + 0x704F+EAX],0x01
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+EAX]
	TEST EAX, EAX
	JL loc_10060D97
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX*8],0x00
loc_10060D97:
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	CMP BYTE PTR [EAX+0x0000013C],0x00
	MOV ECX, EAX
	JZ loc_10060DB5
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	TEST EAX, EAX
	JNZ loc_10060DB7
loc_10060DB5:
	XOR ESI, ESI
loc_10060DB7:
	MOV EAX, ESI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060DC0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9)
{
	enum{
		var_38 = -0x38,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
		arg9 = 0x24,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0xFFFFFFFF
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR BL, BL
	PUSH EBP
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	CMP BYTE PTR [EAX+0x0000013C],BL
	JNZ loc_10060DEC
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0024
loc_10060DEC:
	MOV DX,WORD PTR DS:[EDI+0x0C]
	XOR ECX, ECX
	CMP DX, CX
	JZ loc_10060E6C
	MOV EAX,DWORD PTR [EDI+0x14]
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	ADD EAX, 0x04
loc_10060E01:
	CMP DWORD PTR [EAX],ESI
	JZ loc_10060E12
	ADD EAX, 0x30
	INC ECX
	MOVZX EBP,DX
	CMP EBP, ECX
	JG loc_10060E01
	JMP loc_10060E70
loc_10060E12:
	MOV BL, 0x01
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+arg4+0x14]
	TEST EAX, EAX
	JZ loc_10060E27
	CMP EAX, 0x01
	JZ loc_10060E38
	XOR AL, AL
	JMP loc_10060E3A
loc_10060E27:
	MOV EDX, ECX
	MOV EAX,DWORD PTR [EDI+0x14]
	SHL EDX, 0x04
	LEA EBP,DWORD PTR [EDX*2+EDX]
	MOV AL,BYTE PTR [EAX+EBP+arg1217227-0x4A4B22]
	JMP loc_10060E3A
loc_10060E38:
	MOV AL, 0x01
loc_10060E3A:
	MOV EDX,DWORD PTR [ESP+arg9+0x14]
	MOV EBP,DWORD PTR [ESP+arg8+0x14]
	PUSH EDX
	PUSH EBP
	MOV EDX,DWORD PTR [ESP+arg7+0x1C]
	MOV EBP,DWORD PTR [ESP+arg5+0x1C]
	PUSH EDX
	MOV DL,BYTE PTR [ESP+arg6+0x20]
	PUSH EDX
	PUSH EBP
	MOV EDX,DWORD PTR [ESP+arg3+0x28]
	MOV EBP,DWORD PTR [ESP+arg2+0x28]
	PUSH EDX
	PUSH EBP
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m5F5E0_sub_100605E0])
	MOV DWORD PTR [ESP+var_28+0x38],EAX
	JMP loc_10060E74
loc_10060E6C:
	MOV ESI,DWORD PTR [ESP+var_20+0x38]
loc_10060E70:
	MOV EBP,DWORD PTR [ESP+var_1C+0x38]
loc_10060E74:
	TEST BL, BL
	JNZ loc_10060E96
	CMP BYTE PTR [ESP+var_18+0x38],0x00
	JZ loc_10060E96
	MOV EDX,DWORD PTR [ESP+var_4+0x38]
	MOV EAX,DWORD PTR [ESP+var_8+0x38]
	PUSH EDX
	MOV ECX, EDI
	PUSH EAX
	PUSH EBP
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m5F9F0_sub_100609F0])
	MOV DWORD PTR [ESP+var_38+0x48],EAX
loc_10060E96:
	MOV EAX,DWORD PTR [ESP+var_38+0x48]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0024
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10060EB0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_28 = -0x28,
		var_8 = -0x8,
		var_4 = -0x4,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217233 = 0x4A4B44,
		arg1217235 = 0x4A4B4C,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	CMP BYTE PTR [EAX+0x0000013C],0x00
	JZ FAR loc_10060FFB
	CMP BYTE PTR [ESI+0x3A],0x00
	JZ FAR loc_10060FFB
	CMP BYTE PTR [ESI+0x39],0x00
	JNZ FAR loc_10060FFB
	MOV EDI,DWORD PTR [ESP+arg3+0x1C]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m54720_sub_10055720])
	MOV DWORD PTR [ESP+var_4+0x20],EAX
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_10060F1E
	MOV BL,BYTE PTR [EAX+0x5D]
	TEST BL, BL
	JZ FAR loc_10060FFB
	CMP BYTE PTR [EAX+0x5C],0x00
	JZ loc_10060F1E
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000064
	IDIV ECX
	XOR EAX, EAX
	MOV AL, BL
	CMP EDX, EAX
	JG FAR loc_10060FFB
loc_10060F1E:
	LEA EAX,DWORD PTR [ESP+var_8+0x1A]
	LEA ECX,DWORD PTR [ESP+var_4+0x1A]
	PUSH EAX
	PUSH ECX
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m607C0_sub_100617C0])
	TEST EAX, EAX
	JNZ FAR loc_10060FFB
	MOV AX,WORD PTR SS:[ESP+var_4+0x1A]
	MOV EBX, 0xFFFFFFFF
	MOV BYTE PTR [ESP+var_8+0x19],0x00
	MOV DI, AX
	MOV WORD PTR SS:[ESP+var_8+0x1C],AX
	CMP WORD PTR SS:[ESP+var_8+0x1A],AX
	JB loc_10060FBD
loc_10060F56:
	MOVZX EBP,DI
	SHL EBP, 0x04
	LEA EBP,DWORD PTR [EBP*2+EBP+arg1217224-0x4A4B20]
	ADD EBP,DWORD PTR [ESI+0x14]
	CMP BYTE PTR [ESP+arg4+0x1C],0x00
	JNZ loc_10060F76
	PUSH EBP
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m613A0_sub_100623A0])
	TEST AL, AL
	JNZ loc_10060FB4
loc_10060F76:
	PUSH EBP
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m61710_sub_10062710])
	TEST AL, AL
	JNZ loc_10060FB4
	CMP BYTE PTR [EBP+arg1217235-0x4A4B23],0x00
	JZ loc_10060FB4
	MOV AX,WORD PTR SS:[EBP+arg1217233-0x4A4B22]
	MOVZX ECX,AX
	CMP ECX, EBX
	JNB loc_10060FB4
	TEST AX, AX
	JZ loc_10060FA0
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP BYTE PTR [EAX],0x69
	JZ loc_10060FB4
loc_10060FA0:
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP BYTE PTR [EAX],0x49
	JZ loc_10060FB4
	MOV WORD PTR SS:[ESP+var_8+0x1C],DI
	MOV EBX, ECX
	MOV BYTE PTR [ESP+var_8+0x19],0x01
loc_10060FB4:
	INC DI
	CMP WORD PTR SS:[ESP+var_8+0x1A],DI
	JNB loc_10060F56
loc_10060FBD:
	CMP BYTE PTR [ESP+var_8+0x19],0x00
	JZ loc_10060FFB
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	PUSH 0x01
	AND EAX, 0x0000FFFF
	PUSH 0x01
	PUSH 0x01
	MOV ECX,DWORD PTR [ESI+0x14]
	PUSH 0x00
	MOV EDX, EAX
	SHL EDX, 0x04
	PUSH 0x00
	LEA EBX,DWORD PTR [EDX*2+EDX]
	PUSH 0x01
	PUSH 0x00
	MOV CL,BYTE PTR [EBX+ECX+0x0A]
	PUSH ECX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5F5E0_sub_100605E0])
	MOV EAX,DWORD PTR [ESP+var_28+0x40]
	MOV BYTE PTR [EAX+0x5C],0x01
loc_10060FFB:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_10061010(DWORD arg1)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m602B5_proc_100612B5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x38
	MOV BYTE PTR [EBP+var_1C+0x3],0x00
	PUSH EBX
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	PUSH ESI
	PUSH EDI
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m63B50_sub_10064B50])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI,DWORD PTR [EAX+0x20]
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m60281_loc_10061281])
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [EBP+var_38+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_3C+0x4],ESI
loc_1006108D:
	CMP DWORD PTR [EBP+var_38+0x4],0x00
	JNZ loc_1006109B
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100610A1
loc_1006109B:
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100610A1:
	MOV DWORD PTR [EBP+var_38+0x4],ECX
	CMP DWORD PTR [EBP+var_38+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m60275_loc_10061275])
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	CMP DWORD PTR [EBP+var_38+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	JZ_LONG(offset [LEGO1_text.m60275_loc_10061275])
	MOV EDI,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDI+0x24]
	ADD EDI, 0x24
	TEST ECX, ECX
	JZ FAR loc_1006116B
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	ADD ESI, 0x74
	ADD EDX, 0x14
	MOV DWORD PTR [EBP+var_48+0x4],EDX
	MOV EBX,DWORD PTR [ESI]
	MOV EAX, EBX
	AND AL, 0x02
	CMP BYTE PTR [EDX],0x00
	JZ loc_1006114B
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	CMP WORD PTR DS:[EDX+0x12],-0x01
	JZ loc_1006114B
	CMP BYTE PTR [EBP+arg1+0x4],0x00
	JZ loc_1006114B
	CMP DWORD PTR [ECX+0x4C],0x00
	JZ loc_10061137
	MOV EDX,DWORD PTR [ECX+0x4C]
	MOV EDX,DWORD PTR [EDX+0x64]
	TEST EDX, EDX
	JZ loc_10061137
	CMP DWORD PTR [EDX+0x14],0x00
	JZ loc_10061137
	TEST BL,0x02
	JZ loc_10061125
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	AND DWORD PTR [ESI],-0x03
loc_10061125:
	MOV ECX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m4A840_sub_1004B840])
	MOV EDX,DWORD PTR [EBP+var_48+0x4]
	MOV BYTE PTR [EDX],0x00
	JMP FAR loc_1006108D
loc_10061137:
	CALL_LONG(offset [LEGO1_text.m4A8C0_sub_1004B8C0])
	MOV EDX,DWORD PTR [EBP+var_48+0x4]
	MOV BYTE PTR [EBP+var_1C+0x3],0x01
	MOV BYTE PTR [EDX],0x00
	JMP FAR loc_1006108D
loc_1006114B:
	TEST BL,0x02
	JZ loc_1006115F
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	AND DWORD PTR [ESI],-0x03
loc_1006115F:
	MOV ECX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m4A840_sub_1004B840])
	JMP FAR loc_1006108D
loc_1006116B:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI,DWORD PTR [EAX+0x24]
	TEST ESI, ESI
	JZ FAR loc_1006123F
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV DWORD PTR [EBP+var_28+0x4],ESI
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	TEST ECX, ECX
	JZ loc_100611E4
	XOR EBX, EBX
loc_100611BF:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [ECX]
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, EAX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [ESI+0x14])
	TEST AL, AL
	JZ loc_100611E4
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	CMP ECX, EBX
	JNZ loc_100611BF
loc_100611E4:
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JNZ loc_10061236
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EAX+0x24]
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10061220
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_10061220:
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	TEST ESI, ESI
	JZ loc_1006122D
	MOV DWORD PTR [ESI+0x08],EAX
	JMP loc_10061230
loc_1006122D:
	MOV DWORD PTR [EBX+0x10],EAX
loc_10061230:
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
loc_10061236:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m6026D_sub_1006126D])
loc_1006123F:
	MOV BYTE PTR [EBP+var_1C+0x3],0x01
	JMP FAR loc_1006108D
}
}

__declspec(naked) DWORD LEGO1_proc_10061248()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006126D()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD LEGO1_sub_100612BF()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10061349()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m60360_loc_10061360])
}
}

__declspec(naked) DWORD LEGO1_sub_100613A1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m60490_loc_10061490])
}
}

__declspec(naked) DWORD LEGO1_sub_10061409()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10061479()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m60490_loc_10061490])
}
}

__declspec(naked) DWORD LEGO1_sub_100614D1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10061521()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m60360_loc_10061360])
}
}

__declspec(naked) DWORD LEGO1_sub_10061530()
{
	enum{
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6073E_proc_1006173E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x28
	MOV DWORD PTR [EBP+var_38+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x24]
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m60716_loc_10061716])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_100615A4:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_100615B2
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100615B8
loc_100615B2:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100615B8:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m6070A_loc_1006170A])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	JZ_LONG(offset [LEGO1_text.m6070A_loc_1006170A])
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	MOV ECX,DWORD PTR [EAX+0x20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	CALL_LONG(offset [LEGO1_text.m60750_sub_10061750])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_30+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	TEST ECX, ECX
	JZ loc_10061634
	XOR EBX, EBX
loc_1006160F:
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [ECX]
	PUSH EDX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX, EAX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [ESI+0x14])
	TEST AL, AL
	JZ loc_10061634
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	CMP ECX, EBX
	JNZ loc_1006160F
loc_10061634:
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JZ loc_1006169B
	MOV EDI,DWORD PTR [EBP+var_34+0x4]
	ADD EDI, 0x24
	CMP DWORD PTR [EDI],0x00
	JZ FAR loc_100616E4
	MOV ESI,DWORD PTR [EBP+var_34+0x4]
	ADD ESI, 0x74
	TEST BYTE PTR [ESI],0x02
	JZ loc_10061663
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	AND DWORD PTR [ESI],-0x03
loc_10061663:
	MOV ECX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m4A840_sub_1004B840])
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100616E4
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_10061689
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1006168E
loc_10061689:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_1006168E:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100616CC
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_100616D1
loc_1006169B:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100616E4
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_100616BA
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_100616BF
loc_100616BA:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_100616BF:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100616CC
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_100616D1
loc_100616CC:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_100616D1:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_100616E4:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m60702_sub_10061702])
	JMP FAR loc_100615A4
}
}

__declspec(naked) DWORD LEGO1_sub_10061702()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10061748()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10061750(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m607A4_proc_100617A4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100617C0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x08
	MOV EAX, 0xFFFFFFFF
	XOR EDX, EDX
	PUSH EBX
	MOV WORD PTR SS:[ESP+var_4+0xC],DX
	PUSH ESI
	MOV WORD PTR SS:[ESP+r+0xE],DX
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH EBP
	MOV BYTE PTR [ESP+var_4+0x17],DL
	CMP ESI, EAX
	JNZ loc_1006184C
	MOV BP,WORD PTR DS:[ECX+0x0C]
	CMP BP, DX
	JZ loc_10061811
	MOV EDI,DWORD PTR [ECX+0x14]
	ADD EDI, 0x08
loc_100617F3:
	MOVSX EBX,WORD PTR [EDI]
	CMP EBX, ESI
	JZ loc_10061807
	ADD EDI, 0x30
	INC EDX
	MOVZX EBX,BP
	CMP EDX, EBX
	JL loc_100617F3
	JMP loc_10061811
loc_10061807:
	MOV BYTE PTR [ESP+var_4+0x17],0x01
	MOV WORD PTR SS:[ESP+var_4+0x18],DX
loc_10061811:
	CMP BYTE PTR [ESP+var_4+0x17],0x00
	JZ FAR loc_100618D7
	MOVZX EDI,BP
	CMP EDX, EDI
	JGE FAR loc_100618B6
	MOV ECX,DWORD PTR [ECX+0x14]
	MOV EBX, EDX
	SHL EBX, 0x04
	LEA EBP,DWORD PTR [EBX*2+EBX]
	LEA ECX,DWORD PTR [EBP+ECX+arg1217226-0x4A4B20]
loc_10061836:
	MOVSX EBX,WORD PTR [ECX]
	CMP EBX, ESI
	JNZ loc_100618B6
	MOV WORD PTR SS:[ESP+r+0x16],DX
	ADD ECX, 0x30
	INC EDX
	CMP EDX, EDI
	JL loc_10061836
	JMP loc_100618B6
loc_1006184C:
	MOV BX,WORD PTR DS:[ECX+0x0C]
	XOR EDI, EDI
	CMP BX, DI
	JZ loc_10061885
	MOV EBP,DWORD PTR [ECX+0x14]
	ADD EBP, 0x08
loc_1006185D:
	MOV DX,WORD PTR SS:[EBP+arg1217224-0x4A4B20]
	CMP DX, -0x01
	JZ loc_10061885
	MOVSX EDX,DX
	CMP EDX, ESI
	JZ loc_1006187B
	ADD EBP, 0x30
	INC EDI
	MOVZX EDX,BX
	CMP EDI, EDX
	JL loc_1006185D
	JMP loc_10061885
loc_1006187B:
	MOV BYTE PTR [ESP+var_4+0x17],0x01
	MOV WORD PTR SS:[ESP+var_4+0x18],DI
loc_10061885:
	CMP BYTE PTR [ESP+var_4+0x17],0x00
	JZ loc_100618D7
	MOVZX EDX,BX
	CMP EDI, EDX
	JGE loc_100618B6
	MOV ECX,DWORD PTR [ECX+0x14]
	MOV EBX, EDI
	SHL EBX, 0x04
	LEA EBP,DWORD PTR [EBX*2+EBX]
	LEA ECX,DWORD PTR [EBP+ECX+arg1217226-0x4A4B20]
loc_100618A2:
	MOVSX EBX,WORD PTR [ECX]
	CMP EBX, ESI
	JNZ loc_100618B6
	MOV WORD PTR SS:[ESP+r+0x16],DI
	ADD ECX, 0x30
	INC EDI
	CMP EDI, EDX
	JL loc_100618A2
loc_100618B6:
	CMP BYTE PTR [ESP+var_4+0x17],0x00
	JZ loc_100618D7
	MOV CX,WORD PTR SS:[ESP+var_4+0x18]
	MOV EAX,DWORD PTR [ESP+arg2+0x18]
	MOV WORD PTR DS:[EAX],CX
	MOV EDX,DWORD PTR [ESP+arg3+0x18]
	MOV AX,WORD PTR SS:[ESP+r+0x16]
	MOV WORD PTR DS:[EDX],AX
	XOR EAX, EAX
loc_100618D7:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100618F0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m609D6_proc_100619D6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x20]
	XOR ESI, ESI
	TEST EDI, EDI
	JZ FAR loc_100619AA
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
loc_1006195D:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1006196A
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_10061970
loc_1006196A:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_10061970:
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1006199E
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],EDX
	JZ loc_1006199E
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ loc_1006195D
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m609E0_sub_100619E0])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	JMP loc_100619AC
loc_1006199E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m609E0_sub_100619E0])
loc_100619AA:
	XOR EAX, EAX
loc_100619AC:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100619E0()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10061C4D()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4A0F0_loc_1004B0F0])
}
}

__declspec(naked) DWORD LEGO1_sub_10061C77()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062110(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg1217227 = 0x4A4B2C,
		arg1217233 = 0x4A4B44,
		arg1217235 = 0x4A4B4C,
	};

__asm{
	SUB ESP, 0x34
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x40]
	PUSH EBP
	MOV ECX,DWORD PTR [EDI+0x00000104]
	TEST ECX, ECX
	JZ FAR loc_100622E7
	MOV EAX,DWORD PTR [ESP+arg4+0x44]
	CMP DWORD PTR [ECX+0x00000088],EAX
	JNZ FAR loc_100622E7
	CMP DWORD PTR [ECX+0x000000DC],0x00
	JNZ FAR loc_100622E7
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x0C])
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA5150_sub_100A6150])
	TEST EAX, EAX
	JZ FAR loc_100622E7
	LEA EAX,DWORD PTR [ESP+var_C+0x44]
	MOV EBX, offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EDI+0x14]
	MOV ECX, EAX
	ADD EDX, 0x20
	MOV DWORD PTR [ESP+var_10+0x44],EAX
	MOV DWORD PTR [ESP+var_14+0x44],EBX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [ESP+arg2+0x44]
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EBP
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ESP+var_10+0x44]
	PUSH ECX
	MOV EAX,DWORD PTR [ESP+var_10+0x44]
	LEA ECX,DWORD PTR [ESP+var_10+0x44]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4B78]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_100622E7
	LEA EAX,DWORD PTR [ESP+var_24+0x44]
	MOV ECX,DWORD PTR [EDI+0x14]
	ADD ECX, 0x30
	MOV EDX, EAX
	MOV DWORD PTR [ESP+var_28+0x44],EAX
	MOV DWORD PTR [ESP+var_2C+0x44],EBX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [ESP+arg3+0x44]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_28+0x44]
	MOV EBX,DWORD PTR [ESP+var_28+0x44]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV EDX,DWORD PTR [ESP+var_28+0x44]
	MOV ECX,DWORD PTR [ESP+var_28+0x44]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_28+0x44]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	XOR EDX, EDX
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	MOV ECX, offset LEGO1_data + 0x74B0
	FADDP ST(1),ST
	FSTP DWORD PTR [ESP+var_30+0x44]
loc_10062217:
	FLD DWORD PTR [ECX]
	FCOMP DWORD PTR [ESP+arg5+0x44]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10062232
	ADD ECX, 0x0C
	INC EDX
	CMP ECX, offset LEGO1_data + 0x74F8
	JB loc_10062217
	JMP loc_1006224C
loc_10062232:
	LEA EAX,DWORD PTR [EDX*2+EDX]
	SHL EAX, 0x02
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x74B4+EAX]
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x74B8+EAX]
	MOV DWORD PTR [ESP+var_34+0x44],ECX
	MOV DWORD PTR [ESP+var_18+0x44],EDX
loc_1006224C:
	FLD DWORD PTR [ESP+var_34+0x44]
	FCOMP DWORD PTR [ESP+var_30+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_100622E7
	FLD DWORD PTR [ESP+var_18+0x44]
	FCOMP DWORD PTR [ESP+var_30+0x44]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100622E7
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m61360_sub_10062360])
	MOV DX,WORD PTR DS:[ESI+0x0E]
	CMP DX,WORD PTR DS:[ESI+0x10]
	JA loc_100622E7
loc_10062286:
	MOVZX EDI,DX
	SHL EDI, 0x04
	LEA EDI,DWORD PTR [EDI*2+EDI]
	ADD EDI,DWORD PTR [ESI+0x14]
	CMP BYTE PTR [EDI+0x28],AL
	JNZ loc_100622DF
	MOV CL,BYTE PTR [ESP+arg6+0x44]
	TEST BYTE PTR [EDI+0x0C],CL
	JZ loc_100622DF
	CMP BYTE PTR [EDI+0x29],0x00
	JZ loc_100622DF
	MOVSX ECX,AL
	LEA EBX,DWORD PTR [ECX*2+ECX]
	MOVSX ECX,BYTE PTR [offset LEGO1_data + 0x704D+EBX*8]
	TEST ECX, ECX
	JL loc_100622F4
	MOV BYTE PTR [ESP+var_34+0x44],0x00
	XOR EBX, EBX
loc_100622BF:
	MOVSX EBP,BYTE PTR [EBX+EDI+0x2A]
	CMP EBP, ECX
	JZ loc_100622D0
	INC EBX
	CMP EBX, 0x03
	JL loc_100622BF
	JMP loc_100622D5
loc_100622D0:
	MOV BYTE PTR [ESP+var_34+0x44],0x01
loc_100622D5:
	MOV CL,BYTE PTR [ESP+var_34+0x44]
	CMP CL,BYTE PTR [ESP+arg7+0x44]
	JZ loc_100622F4
loc_100622DF:
	INC DX
	CMP DX,WORD PTR DS:[ESI+0x10]
	JBE loc_10062286
loc_100622E7:
	XOR AX, AX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x001C
loc_100622F4:
	MOV WORD PTR SS:[ESP+0x10],DX
	MOV ECX,DWORD PTR [ESI+0x14]
	MOVZX EDI,DX
	INC DX
	SHL EDI, 0x04
	CMP DX,WORD PTR DS:[ESI+0x10]
	LEA EBX,DWORD PTR [EDI*2+EDI]
	MOV DI,WORD PTR DS:[ECX+EBX+0x22]
	JA loc_10062351
	MOV SI,WORD PTR DS:[ESI+0x10]
	MOV EBX, ECX
loc_10062318:
	MOVZX ECX,DX
	SHL ECX, 0x04
	LEA ECX,DWORD PTR [ECX*2+ECX]
	CMP BYTE PTR [EBX+ECX+0x28],AL
	LEA EBP,DWORD PTR [EBX+ECX]
	JNZ loc_1006234A
	MOV CL,BYTE PTR [ESP+arg6+0x44]
	TEST BYTE PTR [EBP+arg1217227-0x4A4B20],CL
	JZ loc_1006234A
	CMP BYTE PTR [EBP+arg1217235-0x4A4B23],0x00
	JZ loc_1006234A
	MOV CX,WORD PTR SS:[EBP+arg1217233-0x4A4B22]
	CMP DI, CX
	JBE loc_1006234A
	MOV DI, CX
	MOV WORD PTR SS:[ESP+var_34+0x44],DX
loc_1006234A:
	INC DX
	CMP DX, SI
	JBE loc_10062318
loc_10062351:
	MOV AX,WORD PTR SS:[ESP+var_34+0x44]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x34
	RETN 0x001C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062360(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	XOR BL, BL
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
loc_10062368:
	MOVSX EAX,BL
	PUSH 0x02
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EDX,DWORD PTR [offset LEGO1_data.m7048_ptr+ECX*8]
	PUSH EDX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JZ loc_10062396
	INC BL
	MOVSX EAX,BL
	CMP EAX, 0x2F
	JB loc_10062368
	MOV AL, 0xFF
	POP ESI
	POP EBX
	RETN 0x0004
loc_10062396:
	MOV AL, BL
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100623A0(DWORD arg1)
{
	enum{
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6150E_proc_1006250E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x34
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ FAR loc_100624E1
	MOV EDI,DWORD PTR [EAX+0x0000009C]
	TEST EDI, EDI
	JZ FAR loc_100624E1
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EDX,DWORD PTR [ESI+0x18]
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV ECX,DWORD PTR [ESI+0x1C]
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV DWORD PTR [EBP+var_34+0x4],EDX
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m24E8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m24B8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m24D0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV DWORD PTR [EBP+var_30+0x4],EAX
loc_1006244E:
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	JNZ loc_1006245B
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10062461
loc_1006245B:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10062461:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	JZ loc_100624D5
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_100624D5
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	CMP EAX,DWORD PTR [EBP+var_14+0x4]
	JZ loc_1006244E
	PUSH offset [LEGO1_data.m114_str]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, EAX
	MOV EDI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EDI+0x10])
	TEST AL, AL
	JZ loc_1006244E
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EAX+0x54]
	CMP BYTE PTR [EDI+0x0C],BL
	JZ loc_1006244E
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m61650_sub_10062650])
	TEST AL, AL
	JZ loc_1006244E
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m61520_sub_10062520])
	TEST AL, AL
	JNZ loc_1006244E
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m61518_sub_10062518])
	MOV AL, 0x01
	JMP loc_100624E3
loc_100624D5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m61518_sub_10062518])
loc_100624E1:
	XOR AL, AL
loc_100624E3:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10062518()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062520(DWORD arg1, DWORD arg2)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX+0x24]
	MOV AL,BYTE PTR [EAX+0x20]
	TEST ESI, ESI
	MOV BYTE PTR [ESP+r+0xF],AL
	JZ loc_10062567
	TEST AL, AL
	JZ loc_10062567
	MOV BL, 0x00
	JBE loc_10062567
	MOV EDI,DWORD PTR [ESP+arg2+0x10]
loc_10062544:
	PUSH EDI
	XOR EAX, EAX
	MOV AL, BL
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EDX,DWORD PTR [ESI+ECX]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10062572
	INC BL
	CMP BL,BYTE PTR [ESP+r+0xF]
	JB loc_10062544
loc_10062567:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
loc_10062572:
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062580(DWORD arg1)
{
	enum{
		r = 0x0,
		arg1 = 0x4,
		arg1217245 = 0x4A4B74,
		arg1217302 = 0x4A4C58,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX+0x24]
	PUSH EBP
	MOV EDI, ECX
	MOV AL,BYTE PTR [EAX+0x20]
	TEST ESI, ESI
	MOV BYTE PTR [ESP+r+0x13],AL
	JZ FAR loc_10062644
	TEST AL, AL
	JZ FAR loc_10062644
	MOV BL, 0x00
	JBE FAR loc_10062644
loc_100625AF:
	XOR EAX, EAX
	MOV AL, BL
	SHL EAX, 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EBP, 0x00000000
	MOV EDX,DWORD PTR [ESI+ECX]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	TEST EAX, EAX
	JZ loc_100625DC
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EBP,DWORD PTR [EAX+EDX+0x04]
loc_100625DC:
	TEST EBP, EBP
	JZ loc_10062638
	MOV ECX,DWORD PTR [EBP+arg1217302-0x4A4B20]
	TEST ECX, ECX
	JZ loc_10062638
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	XOR ECX, ECX
	LEA EDX,DWORD PTR [EDI+0x3C]
	MOV DWORD PTR [EBP+arg1217302-0x4A4B20],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1217245-0x4A4B20]
loc_10062602:
	CMP DWORD PTR [EDX],EAX
	JZ loc_10062611
	ADD EDX, 0x18
	INC ECX
	CMP ECX, 0x28
	JL loc_10062602
	JMP loc_10062638
loc_10062611:
	LEA EAX,DWORD PTR [ECX*2+ECX]
	MOV ECX,DWORD PTR [EAX*8+EDI+0x40]
	LEA EAX,DWORD PTR [ECX*2+ECX]
	SHL EAX, 0x03
	MOV BYTE PTR [offset LEGO1_data + 0x704F+EAX],0x01
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+EAX]
	TEST EAX, EAX
	JL loc_10062638
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX*8],0x00
loc_10062638:
	INC BL
	CMP BL,BYTE PTR [ESP+r+0x13]
	JB FAR loc_100625AF
loc_10062644:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062650(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_1C = -0x1C,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x18
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg3+0x1C]
	TEST ESI, ESI
	JZ FAR loc_10062703
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	MOV EDX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ESP+var_14+0x1C],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESP+var_10+0x1C],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x1C]
	MOV EAX,DWORD PTR [ESI+0x14]
	ADD EAX, 0x30
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_14+0x20]
	CALL_LONG(DWORD PTR [EAX+0x58])
	MOV EDX,DWORD PTR [ESP+var_14+0x20]
	MOV ECX,DWORD PTR [ESP+var_14+0x20]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_14+0x20]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4B30]
	FSTP DWORD PTR [ESP+var_1C+0x20]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_100626D7
	MOV AL, 0x01
	POP ESI
	ADD ESP, 0x18
	RETN 0x000C
loc_100626D7:
	FLD DWORD PTR [ESP+0x04]
	FSQRT
	FSTP DWORD PTR [ESP+var_1C+0x20]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x10])
	FLD DWORD PTR [EAX+0x14]
	FADD DWORD PTR [ESP+arg1+0x20]
	FCOMP DWORD PTR [ESP+var_1C+0x20]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10062703
	MOV AL, 0x01
	POP ESI
	ADD ESP, 0x18
	RETN 0x000C
loc_10062703:
	XOR AL, AL
	POP ESI
	ADD ESP, 0x18
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062710(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR BL, BL
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV CL,BYTE PTR [EAX+0x0C]
	CMP CL, 0x05
	JA loc_1006272E
	XOR EAX, EAX
	MOV AL, CL
	MOV BL,BYTE PTR [offset LEGO1_rdata + 0x4B28+EAX]
loc_1006272E:
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	TEST BYTE PTR [EDI+0x0C],BL
	JNZ loc_1006273F
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1006273F:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	XOR ECX, ECX
	MOV CL,BYTE PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [offset LEGO1_data.m32D0_ptr+ECX*4]
	MOV ECX, ESI
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m61520_sub_10062520])
	POP EDI
	CMP AL, 0x01
	SBB AL, AL
	POP ESI
	INC AL
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10062770()
{
__asm{
	PUSH ESI
	PUSH EDI
	CMP BYTE PTR [ECX+0x38],0x00
	MOV ESI, ECX
	JNZ loc_100627BF
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_100627BF
	PUSH offset [LEGO1_data.m7574_str]
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m7A0_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m7560_str]
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x2C],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x34],0x000000C8
	MOV DWORD PTR [ESI+0x30],0x000002EE
	MOV BYTE PTR [ESI+0x38],0x01
	MOV DWORD PTR [ESI+0x28],EAX
loc_100627BF:
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100627D0(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217302 = 0x4A4C58,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	CMP BYTE PTR [ESP+arg1+0x1C],0x00
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	JNZ loc_100627F1
	TEST EAX, EAX
	JZ FAR loc_10062999
loc_100627F1:
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_10062807
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	JMP loc_10062814
loc_10062807:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
loc_10062814:
	MOV DWORD PTR [ESP+var_4+0x1C],0x00000028
	LEA EDI,DWORD PTR [ESI+0x40]
loc_1006281F:
	MOV EBX,DWORD PTR [EDI-0x04]
	TEST EBX, EBX
	JZ FAR loc_1006298C
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	MOV BP,WORD PTR DS:[EAX]
	MOV EAX,DWORD PTR [ESI+0x00000418]
	MOV ECX, EAX
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*2+EDX]
	SUB EDX, EDX
	LEA EAX,DWORD PTR [EAX*2+ECX]
	MOV ECX, 0x00000012
	SHL EAX, 0x06
	SUB EAX, 0x00088B80
	DIV ECX
	ADD EAX, 0x00004E20
	CMP BP, 0x616D
	JZ loc_10062870
	CMP BP, 0x6170
	MOV CL, 0x00
	JNZ loc_10062872
loc_10062870:
	MOV CL, 0x01
loc_10062872:
	CMP BYTE PTR [ESP+arg1+0x1C],0x00
	JZ loc_1006287D
	TEST CL, CL
	JZ loc_100628CE
loc_1006287D:
	MOV ECX,DWORD PTR [EDI]
	LEA EDX,DWORD PTR [ECX*2+ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x7058+EDX*8],0x00
	JL FAR loc_1006298C
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	SUB ECX,DWORD PTR [EDI+0x04]
	CMP ECX, EAX
	JLE FAR loc_1006298C
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82BC0_sub_10083BC0])
	CMP EAX, 0x01
	JNZ FAR loc_1006298C
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EAX+0x0C])
	MOV ECX,DWORD PTR [ESP+var_C+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA5150_sub_100A6150])
	TEST EAX, EAX
	JNZ FAR loc_1006298C
loc_100628CE:
	MOV EBP, 0x00000000
	DEC DWORD PTR [ESI+0x00000414]
	MOV EAX,DWORD PTR [EBX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	TEST EAX, EAX
	JZ loc_100628FA
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EBP,DWORD PTR [EAX+EDX+0x04]
loc_100628FA:
	TEST EBP, EBP
	JZ loc_10062918
	MOV ECX,DWORD PTR [EBP+arg1217302-0x4A4B20]
	TEST ECX, ECX
	JZ loc_10062918
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV DWORD PTR [EBP+arg1217302-0x4A4B20],0x00000000
loc_10062918:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	CMP BYTE PTR [EDI+0x10],0x00
	JZ loc_10062965
	MOV BYTE PTR [EDI+0x10],0x00
	MOV EAX,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+ECX*8]
	TEST EAX, EAX
	JL loc_10062965
	SHL EAX, 0x03
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX],0x00
	MOV ECX,DWORD PTR [offset LEGO1_data.m6D20_ptr+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A270_sub_1005B270])
	TEST EAX, EAX
	JZ loc_10062965
	MOV BYTE PTR [EAX+0x0C],0x00
loc_10062965:
	MOV DWORD PTR [EDI-0x04],0x00000000
	MOV EAX,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV BYTE PTR [offset LEGO1_data.m704C+ECX*8],0x00
	MOV EAX,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV BYTE PTR [offset LEGO1_data + 0x704F+ECX*8],0x00
	MOV DWORD PTR [EDI], 0xFFFFFFFF
loc_1006298C:
	ADD EDI, 0x18
	DEC DWORD PTR [ESP+var_8+0x20]
	JNZ FAR loc_1006281F
loc_10062999:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100629B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	PUSH EBP
	MOV EDI, ECX
	CMP BYTE PTR [ESP+arg2+0x20],0x00
	JNZ loc_100629D9
	CMP BYTE PTR [EDI+0x39],0x00
	JNZ FAR loc_10062E16
	CMP BYTE PTR [EDI+0x00000400],0x00
	JZ FAR loc_10062E16
loc_100629D9:
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [ESP+var_4+0x20],EAX
	TEST EAX, EAX
	JZ FAR loc_10062E16
	PUSH 0x00
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m617D0_sub_100627D0])
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10062A09
	CMP DWORD PTR [EAX+0x50],0x41A00000
	JG FAR loc_10062E16
loc_10062A09:
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EDI+0x00000418]
	CMP ECX, EAX
	JZ FAR loc_10062E16
	LEA EDX,DWORD PTR [EDI+0x3C]
loc_10062A1C:
	CMP DWORD PTR [EDX],0x00
	JZ loc_10062A29
	ADD EDX, 0x18
	INC ECX
	CMP ECX, EAX
	JB loc_10062A1C
loc_10062A29:
	CMP ECX, EAX
	JZ FAR loc_10062E16
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP EAX, 0x01
	MOV AL, 0x02
	ADC AL, 0xFF
	MOV BYTE PTR [ESP+var_C+0x1F],AL
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7504]
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x03
	XOR EAX, EDX
	SUB EAX, EDX
	JZ loc_10062A6E
	CMP EAX, 0x01
	JZ loc_10062A76
	MOV BYTE PTR [ESP+var_C+0x1E],0x01
	XOR BL, BL
	JMP loc_10062A7D
loc_10062A6E:
	XOR EBX, EBX
	MOV BYTE PTR [ESP+var_C+0x1E],BL
	JMP loc_10062A7D
loc_10062A76:
	MOV BYTE PTR [ESP+var_C+0x1E],0x00
	MOV BL, 0x01
loc_10062A7D:
	MOV EAX,DWORD PTR [ESP+arg1+0x20]
	TEST EAX, EAX
	JGE loc_10062AB8
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV AL,BYTE PTR [ESP+var_C+0x1F]
	PUSH EBX
	SUB AL, 0x02
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m63120_sub_10064120])
	TEST AL, AL
	JNZ loc_10062B08
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	XOR ESI, ESI
	JMP loc_10062B08
loc_10062AB8:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m54720_sub_10055720])
	ADD ESP, 0x04
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_10062B03
	CMP BYTE PTR [EBX+0x40],0x00
	JNZ loc_10062B00
	MOV EAX,DWORD PTR [ESP+var_4+0x20]
	LEA ECX,DWORD PTR [EBX+0x2C]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m62FB0_sub_10063FB0])
	TEST AL, AL
	JNZ loc_10062B00
	CMP BYTE PTR [EBX+0x58],0x00
	JNZ loc_10062AFB
	MOV EAX,DWORD PTR [ESP+var_4+0x20]
	LEA ECX,DWORD PTR [EBX+0x44]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m62FB0_sub_10063FB0])
	TEST AL, AL
	JZ loc_10062B03
loc_10062AFB:
	LEA ESI,DWORD PTR [EBX+0x44]
	JMP loc_10062B03
loc_10062B00:
	LEA ESI,DWORD PTR [EBX+0x2C]
loc_10062B03:
	MOV BYTE PTR [ESP+var_C+0x1E],0x00
loc_10062B08:
	TEST ESI, ESI
	JZ FAR loc_10062E16
	MOV DWORD PTR [ESP+var_C+0x20],0x00000000
	CMP DWORD PTR [EDI+0x00000418],0x00
	JBE FAR loc_10062E16
	LEA ECX,DWORD PTR [EDI+0x3C]
	MOV DWORD PTR [ESP+var_8+0x20],ECX
loc_10062B2C:
	MOV ECX,DWORD PTR [ESP+var_8+0x20]
	CMP DWORD PTR [ECX],0x00
	JNZ FAR loc_10062CC6
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	INC EAX
	MOV DWORD PTR [EDI+0x000003FC],EAX
	CMP EAX, 0x2F
	JB loc_10062B55
	MOV DWORD PTR [EDI+0x000003FC],0x00000000
loc_10062B55:
	CMP BYTE PTR [ESP+var_C+0x1E],0x00
	MOV EBP,DWORD PTR [EDI+0x000003FC]
	JZ loc_10062B66
	MOV BL, 0x01
	JMP loc_10062B79
loc_10062B66:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000064
	IDIV ECX
	CMP EDX, 0x32
	SETL BL
loc_10062B79:
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x03
	CMP BYTE PTR [offset LEGO1_data + 0x7051+EAX],0x00
	JZ loc_10062BBF
	CMP BYTE PTR [offset LEGO1_data + 0x7050+EAX],0x00
	JZ loc_10062BBF
	CMP BYTE PTR [offset LEGO1_data.m704C+EAX],0x00
	JNZ loc_10062BBF
	CMP BYTE PTR [offset LEGO1_data + 0x705C+EAX],BL
	JNZ loc_10062BBF
	MOV EAX,DWORD PTR [offset LEGO1_data.m7048_ptr+EAX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82B20_sub_10083B20])
	TEST AL, AL
	JZ loc_10062BED
loc_10062BBF:
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	INC EAX
	MOV DWORD PTR [EDI+0x000003FC],EAX
	CMP EAX, 0x2F
	JB loc_10062BDB
	MOV DWORD PTR [EDI+0x000003FC],0x00000000
loc_10062BDB:
	CMP DWORD PTR [EDI+0x000003FC],EBP
	JNZ loc_10062B79
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10062BED:
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EDX,DWORD PTR [offset LEGO1_data.m7048_ptr+ECX*8]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82500_sub_10083500])
	MOV ECX,DWORD PTR [ESP+var_10+0x28]
	MOV DWORD PTR [ECX],EAX
	MOV EDX,DWORD PTR [EDI+0x000003FC]
	LEA EAX,DWORD PTR [EDX*2+EDX]
	MOV ECX,DWORD PTR [offset LEGO1_data.m7048_ptr+EAX*8]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV EBX, EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x7504]
	CDQ
	XOR EAX, EDX
	INC DWORD PTR [offset LEGO1_data + 0x7504]
	SUB EAX, EDX
	AND EAX, 0x03
	XOR EAX, EDX
	SUB EAX, EDX
	JZ loc_10062C58
	CMP EAX, 0x01
	MOV AL,BYTE PTR [ESP+var_14+0x27]
	MOV BYTE PTR [EBX+0x0C],AL
	JZ loc_10062C69
	JMP loc_10062C75
loc_10062C58:
	MOV AL,BYTE PTR [ESP+var_14+0x27]
	DEC AL
	CMP AL, 0x01
	MOV AL, 0x02
	ADC AL, 0xFF
	MOV BYTE PTR [EBX+0x0C],AL
	JMP loc_10062C75
loc_10062C69:
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESI+0x04],ECX
	MOV DWORD PTR [ESI+0x0C],EDX
loc_10062C75:
	MOV ECX, 0x00000000
	TEST EBX, EBX
	JZ loc_10062C88
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EBX+EDX+0x04]
loc_10062C88:
	MOV EAX,DWORD PTR [ESI+0x10]
	MOV EDX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	MOV EBP,DWORD PTR [ESI+0x08]
	PUSH EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH EBP
	MOV EDX,DWORD PTR [ESI]
	PUSH EAX
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_C+0x40]
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
	TEST EAX, EAX
	JZ loc_10062CE9
	MOV ECX,DWORD PTR [ESP+var_10+0x28]
	MOV EAX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	MOV ECX,DWORD PTR [ESP+var_10+0x28]
	MOV DWORD PTR [ECX], 0x00000000
loc_10062CC6:
	ADD DWORD PTR [ESP+var_10+0x28],0x18
	INC DWORD PTR [ESP+var_14+0x28]
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	CMP DWORD PTR [EDI+0x00000418],EAX
	JA FAR loc_10062B2C
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
loc_10062CE9:
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EBP,BYTE PTR [offset LEGO1_data + 0x704D+ECX*8]
	LEA ESI,DWORD PTR [ECX*8+0x00000000]
	TEST EBP, EBP
	JL loc_10062D26
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000064
	IDIV ECX
	XOR EAX, EAX
	MOV AL,BYTE PTR [offset LEGO1_data + 0x705D+ESI]
	CMP EDX, EAX
	SETL CL
	MOV BYTE PTR [offset LEGO1_data.m6D24+EBP*8],CL
loc_10062D26:
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EDI+0x000003FC]
	PUSH EAX
	LEA ESI,DWORD PTR [ECX*8+EDI]
	MOV ECX,DWORD PTR [ECX*8+EDI+0x3C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84180_sub_10085180])
	MOV ECX,DWORD PTR [ESP+var_C+0x2C]
	PUSH EAX
	PUSH EBX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m62B90_sub_10063B90])
	TEST AL, AL
	LEA EAX,DWORD PTR [ESI+0x50]
	JZ loc_10062D6A
	MOV BYTE PTR [EAX],0x01
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EBP*8],0x01
	JMP loc_10062D6D
loc_10062D6A:
	MOV BYTE PTR [EAX],0x00
loc_10062D6D:
	CMP BYTE PTR [EAX],0x00
	JZ loc_10062D93
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV DWORD PTR [ESP+var_14+0x28],EAX
	FILD DWORD PTR [ESP+var_14+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4B88]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4B90]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4B98]
	JMP loc_10062DB2
loc_10062D93:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV DWORD PTR [ESP+var_14+0x28],EAX
	FILD DWORD PTR [ESP+var_14+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4BA0]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4B90]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4BA8]
loc_10062DB2:
	FSTP DWORD PTR [ESP+var_14+0x28]
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_14+0x28]
	PUSH EAX
	LEA ECX,DWORD PTR [EBX+EDX+0x04]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x30])
	MOV ECX,DWORD PTR [EDI+0x000003FC]
	MOV DWORD PTR [ESI+0x40],ECX
	MOV ECX,DWORD PTR [EDI+0x000003FC]
	LEA EAX,DWORD PTR [ECX*2+ECX]
	MOV BYTE PTR [offset LEGO1_data.m704C+EAX*8],0x01
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_10062DF9
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [ESI+0x44],EAX
	JMP loc_10062E05
loc_10062DF9:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+0x44],ECX
loc_10062E05:
	MOV DWORD PTR [ESI+0x4C],0xBF800000
	MOV BYTE PTR [ESI+0x49],0x00
	INC DWORD PTR [EDI+0x00000414]
loc_10062E16:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10062E20(DWORD arg1, DWORD arg2)
{
	enum{
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		r = 0x0,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
		arg1217227 = 0x4A4B2C,
		arg1217259 = 0x4A4BAC,
	};

__asm{
	SUB ESP, 0x40
	MOV DWORD PTR [ESP+var_3C+0x40],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV DWORD PTR [ESP+var_34+0x50],EAX
	CMP EAX, EBX
	JZ FAR loc_1006325E
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	CMP BYTE PTR [ECX+0x0000042B],BL
	JNZ FAR loc_1006325E
	CMP BYTE PTR [ECX+0x00000400],BL
	JZ FAR loc_1006325E
	MOV EAX,DWORD PTR [ESP+arg1+0x50]
	MOV BYTE PTR [ESP+var_3C+0x4F],BL
	MOV EDI,DWORD PTR [EAX+0x000000E4]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV EBP, EAX
	TEST EBP, EBP
	JZ FAR loc_100631F1
	MOV DWORD PTR [ESP+var_38+0x50],0xFFFFFFFF
	MOV ESI, offset [LEGO1_data.m7048_ptr]
loc_10062E8C:
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10062EAA
	ADD ESI, 0x18
	INC EBX
	CMP ESI, offset LEGO1_data + 0x74B0
	JB loc_10062E8C
	JMP loc_10062EAE
loc_10062EAA:
	MOV DWORD PTR [ESP+var_38+0x50],EBX
loc_10062EAE:
	CMP DWORD PTR [ESP+var_38+0x50],-0x01
	JNZ loc_10062EC1
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10062EC1:
	MOV EAX,DWORD PTR [ESP+var_38+0x50]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	LEA ESI,DWORD PTR [ECX*8+0x00000000]
	CMP BYTE PTR [offset LEGO1_data.m704C+ESI],0x00
	JNZ loc_10062F11
	XOR EBX, EBX
	MOV EAX,DWORD PTR [ESP+var_3C+0x50]
	ADD EAX, 0x3C
loc_10062EE1:
	CMP DWORD PTR [EAX],0x00
	JZ loc_10062EF1
	ADD EAX, 0x18
	INC EBX
	CMP EBX, 0x28
	JL loc_10062EE1
	JMP loc_10062F00
loc_10062EF1:
	LEA EDX,DWORD PTR [EBX*2+EBX]
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	MOV EAX,DWORD PTR [ESP+arg1+0x50]
	MOV DWORD PTR [EDX*8+ECX+0x3C],EAX
loc_10062F00:
	CMP EBX, 0x28
	JNZ loc_10062F41
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10062F11:
	XOR EBX, EBX
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	MOV BYTE PTR [ESP+var_3C+0x4F],0x01
	ADD ECX, 0x3C
loc_10062F1F:
	MOV EAX,DWORD PTR [ESP+arg1+0x50]
	CMP DWORD PTR [ECX],EAX
	JZ loc_10062F30
	ADD ECX, 0x18
	INC EBX
	CMP EBX, 0x28
	JL loc_10062F1F
loc_10062F30:
	CMP EBX, 0x28
	JNZ loc_10062F41
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10062F41:
	CMP BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	JZ FAR loc_10062FFF
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	DEC DWORD PTR [ECX+0x00000414]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EBP+EDX+arg1217259-0x4A4B20],0x00
	JNZ loc_10062FBE
	MOV BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	CMP DWORD PTR [offset LEGO1_data + 0x7054+ESI],0x00
	JGE loc_10062F82
	MOV DWORD PTR [offset LEGO1_data + 0x7054+ESI],0x00000000
loc_10062F82:
	CMP DWORD PTR [offset LEGO1_data + 0x7058+ESI],0x00
	JGE loc_10062F95
	MOV DWORD PTR [offset LEGO1_data + 0x7058+ESI],0x00000000
loc_10062F95:
	LEA EAX,DWORD PTR [EBX*2+EBX]
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX*8+ECX+0x3C],0x00000000
	MOV BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	MOV BYTE PTR [offset LEGO1_data.m704C+ESI],0x00
	XOR AL, AL
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10062FBE:
	MOV EAX,DWORD PTR [ESP+arg1+0x50]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
loc_10062FCF:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x10],0x00
	JZ loc_10063027
	MOV ECX, offset [LEGO1_data.m1070_str]
loc_10062FDF:
	MOV AL,BYTE PTR [EDI]
	CMP AL,BYTE PTR [ECX]
	JNZ loc_10063012
	OR AL, AL
	JZ loc_10062FFB
	MOV AL,BYTE PTR [EDI+0x01]
	CMP AL,BYTE PTR [ECX+0x01]
	JNZ loc_10063012
	ADD EDI, 0x02
	ADD ECX, 0x02
	OR AL, AL
	JNZ loc_10062FDF
loc_10062FFB:
	XOR EAX, EAX
	JMP loc_10063017
loc_10062FFF:
	CMP BYTE PTR [ESP+var_3C+0x4F],0x00
	JZ loc_10062FCF
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10063012:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10063017:
	TEST EAX, EAX
	JNZ loc_10063027
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_10063027:
	CMP BYTE PTR [ESP+var_3C+0x4F],0x00
	JZ loc_1006304D
	CMP BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	JZ loc_1006304D
	CMP DWORD PTR [offset LEGO1_data + 0x7054+ESI],0x00
	JL loc_10063049
	CMP DWORD PTR [offset LEGO1_data + 0x7058+ESI],0x00
	JGE loc_1006304D
loc_10063049:
	MOV CL, 0x01
	JMP loc_1006304F
loc_1006304D:
	XOR CL, CL
loc_1006304F:
	MOV EAX, 0x00000001
	TEST CL, CL
	JNZ FAR loc_100631A6
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	TEST EDX, EDX
	JZ FAR loc_10063161
	CMP EDX, 0x01
	JZ FAR loc_10063168
	CMP EDX, 0x02
	JZ FAR loc_1006316F
	MOV AL,BYTE PTR [ESP+var_14+0x50]
loc_10063087:
	LEA ECX,DWORD PTR [ESP+var_20+0x50]
	MOV BYTE PTR [EBP+arg1217227-0x4A4B20],AL
	LEA EAX,DWORD PTR [ESP+var_C+0x50]
	MOV EDX,DWORD PTR [ESP+arg1+0x50]
	MOV DWORD PTR [ESP+var_10+0x50],EAX
	MOV EAX, offset [LEGO1_rdata.m488_ptr]
	MOV EDI, offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [ESP+var_14+0x50],EAX
	MOV DWORD PTR [ESP+var_24+0x50],ECX
	LEA ECX,DWORD PTR [ESP+var_30+0x50]
	MOV DWORD PTR [ESP+var_28+0x50],EAX
	PUSH ECX
	MOV EAX,DWORD PTR [EDX+0x14]
	LEA ECX,DWORD PTR [ESP+var_14+0x54]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_2C+0x54],EAX
	MOV DWORD PTR [ESP+var_30+0x54],EDI
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	MOV EAX,DWORD PTR [ESP+r+0x54]
	LEA ECX,DWORD PTR [ESP+var_2C+0x54]
	MOV EAX,DWORD PTR [EAX+0x14]
	ADD EAX, 0x20
	MOV DWORD PTR [ESP+var_30+0x54],EAX
	MOV DWORD PTR [ESP+var_34+0x54],EDI
	LEA EDI,DWORD PTR [ESP+var_34+0x54]
	MOV EAX,DWORD PTR [ESP+var_2C+0x54]
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	LEA EAX,DWORD PTR [ESP+var_34+0x54]
	LEA ECX,DWORD PTR [ESP+var_2C+0x54]
	MOV DWORD PTR [ESP+var_34+0x54],0xBF800000
	MOV EDI,DWORD PTR [ESP+var_2C+0x54]
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x5C])
	LEA EDX,DWORD PTR [EBX*2+EBX]
	MOV ECX,DWORD PTR [ESP+var_40+0x54]
	LEA EDI,DWORD PTR [EDX*8+ECX]
	CMP BYTE PTR [ESP+var_40+0x53],0x00
	MOV DWORD PTR [EDI+0x4C],0xBF800000
	JZ loc_10063131
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA ECX,DWORD PTR [EBP+EDX+arg1217225-0x4A4B20]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
loc_10063131:
	MOV EAX,DWORD PTR [ESP+var_3C+0x54]
	MOV ECX,DWORD PTR [ESP+r+0x54]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84180_sub_10085180])
	MOV ECX,DWORD PTR [ESP+var_34+0x54]
	PUSH EAX
	PUSH EBP
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_30+0x54]
	CALL_LONG(offset [LEGO1_text.m62B90_sub_10063B90])
	TEST AL, AL
	JZ loc_10063176
	MOV BYTE PTR [EDI+0x50],0x01
	JMP loc_1006317A
loc_10063161:
	MOV AL, 0x01
	JMP FAR loc_10063087
loc_10063168:
	MOV AL, 0x02
	JMP FAR loc_10063087
loc_1006316F:
	XOR AL, AL
	JMP FAR loc_10063087
loc_10063176:
	MOV BYTE PTR [EDI+0x50],0x00
loc_1006317A:
	MOV ECX, 0x00000000
	TEST EBP, EBP
	JZ loc_1006318D
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EBP+EDX+arg1217225-0x4A4B20]
loc_1006318D:
	LEA EAX,DWORD PTR [ESP+var_2C+0x54]
	LEA EDX,DWORD PTR [ESP+var_18+0x54]
	MOV EDI,DWORD PTR [ESP+arg1+0x54]
	PUSH EAX
	PUSH EDX
	PUSH EDI
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_28+0x54]
	CALL_LONG(offset [LEGO1_text.m1EB70_sub_1001FB70])
loc_100631A6:
	TEST EAX, EAX
	JZ loc_100631D0
	CMP BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	JZ loc_100631D0
	MOV EAX, 0x00000000
	TEST EBP, EBP
	JZ loc_100631C6
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+ECX+arg1217225-0x4A4B20]
loc_100631C6:
	MOV ECX,DWORD PTR [ESP+var_38+0x54]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1EA70_sub_1001FA70])
loc_100631D0:
	MOV ECX,DWORD PTR [ESP+var_40+0x54]
	TEST EAX, EAX
	MOV BYTE PTR [offset LEGO1_data + 0x704F+ESI],0x00
	LEA EAX,DWORD PTR [EBX*2+EBX]
	JZ loc_100631FD
	MOV DWORD PTR [EAX*8+ECX+0x3C],0x00000000
	MOV BYTE PTR [offset LEGO1_data.m704C+ESI],0x00
loc_100631F1:
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_100631FD:
	LEA EDI,DWORD PTR [EAX*8+ECX]
	MOV EAX,DWORD PTR [ESP+var_3C+0x54]
	MOV DWORD PTR [EDI+0x40],EAX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1006321C
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [EDI+0x44],EAX
	JMP loc_10063228
loc_1006321C:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x44],ECX
loc_10063228:
	MOV BYTE PTR [EDI+0x48],0x01
	MOV BYTE PTR [EDI+0x49],0x00
	MOV BYTE PTR [offset LEGO1_data.m704C+ESI],0x01
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH 0x00
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EBP+EDX+arg1217225-0x4A4B20]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV ECX,DWORD PTR [ESP+var_40+0x54]
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	INC DWORD PTR [ECX+0x00000414]
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
loc_1006325E:
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063270(DWORD arg1, DWORD arg2)
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m62524_proc_10063524]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x20
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	TEST ESI, ESI
	JZ FAR loc_100634FA
	MOV EDI, offset [LEGO1_data.m6D24]
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	XOR EBX, EBX
loc_100632A8:
	MOV EAX,DWORD PTR [EDI-0x04]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A270_sub_1005B270])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, EBX
	JZ loc_100632D0
	CMP BYTE PTR [EDI+0x01],BL
	JNZ loc_100632CE
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_100632CE
	MOV BYTE PTR [EDI],0x01
	JMP loc_100632D0
loc_100632CE:
	MOV BYTE PTR [EDI],BL
loc_100632D0:
	ADD EDI, 0x08
	CMP EDI, offset [LEGO1_data.m6D5C_ptr]
	JB loc_100632A8
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1006331D:
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JNZ loc_1006332A
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10063330
loc_1006332A:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10063330:
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JZ FAR loc_100634B2
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ FAR loc_100634B2
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_100633C9
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m61E20_sub_10062E20])
	TEST AL, AL
	JZ loc_100633C9
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JZ loc_100633B8
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	LEA ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX],EBX
	JZ loc_1006338A
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ECX]
	MOV EDI,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x08],EDI
	JMP loc_10063396
loc_1006338A:
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDI,DWORD PTR [EDX+0x08]
	ADD EDX, 0x08
	MOV DWORD PTR [ESI+0x10],EDI
loc_10063396:
	MOV EDX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ECX]
	TEST EDX, EDX
	JZ loc_100633A3
	MOV DWORD PTR [EDX+0x04],EAX
	JMP loc_100633A6
loc_100633A3:
	MOV DWORD PTR [ESI+0x14],EAX
loc_100633A6:
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
loc_100633B8:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m62950_sub_10063950])
	JMP FAR loc_1006331D
loc_100633C9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ FAR loc_1006331D
	XOR EDI, EDI
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	ADD EAX, 0x3C
loc_100633F1:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10063406
	ADD EAX, 0x18
	INC EDI
	CMP EDI, 0x28
	JL loc_100633F1
	JMP FAR loc_1006331D
loc_10063406:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, ESI
	MOV ECX,DWORD PTR [EAX+0x0000013C]
	TEST ECX, ECX
	JZ loc_10063436
	TEST ESI, ESI
	JNZ loc_10063420
	XOR EAX, EAX
	JMP loc_10063423
loc_10063420:
	ADD EAX, 0x04
loc_10063423:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX+0x0000013C],EBX
loc_10063436:
	LEA EAX,DWORD PTR [EDI*2+EDI]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CMP BYTE PTR [EAX*8+ECX+0x50],BL
	LEA ESI,DWORD PTR [EAX*8+ECX]
	JZ loc_1006347D
	MOV BYTE PTR [ESI+0x50],BL
	MOV EAX,DWORD PTR [ESI+0x40]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+ECX*8]
	TEST EAX, EAX
	JL loc_1006347D
	SHL EAX, 0x03
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX],BL
	MOV ECX,DWORD PTR [offset LEGO1_data.m6D20_ptr+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A270_sub_1005B270])
	TEST EAX, EAX
	JZ loc_1006347D
	MOV BYTE PTR [EAX+0x0C],BL
loc_1006347D:
	MOV DWORD PTR [ESI+0x3C],EBX
	MOV EAX,DWORD PTR [ESI+0x40]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [offset LEGO1_data.m704C+ECX*8],BL
	MOV EAX,DWORD PTR [ESI+0x40]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV BYTE PTR [offset LEGO1_data + 0x704F+ECX*8],BL
	MOV DWORD PTR [ESI+0x40],0xFFFFFFFF
	MOV BYTE PTR [ESI+0x49],BL
	DEC DWORD PTR [EDX+0x00000414]
	JMP FAR loc_1006331D
loc_100634B2:
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV ESI, offset LEGO1_data + 0x6D25
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m62E40_sub_10063E40])
loc_100634C5:
	CMP BYTE PTR [ESI],BL
	JNZ loc_100634E3
	MOV EAX,DWORD PTR [ESI-0x05]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A270_sub_1005B270])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, EBX
	JZ loc_100634E3
	MOV BYTE PTR [EAX+0x0C],BL
loc_100634E3:
	ADD ESI, 0x08
	CMP ESI, offset LEGO1_data + 0x6D5D
	JB loc_100634C5
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6252E_sub_1006352E])
loc_100634FA:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1006352E()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD LEGO1_sub_10063599()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m625B0_loc_100635B0])
}
}

__declspec(naked) DWORD LEGO1_sub_100635F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m626E0_loc_100636E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10063659()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100636C9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m626E0_loc_100636E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10063721()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10063771()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m625B0_loc_100635B0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063780(DWORD arg1)
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m62933_proc_10063933]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	TEST ESI, ESI
	JZ FAR loc_100638FC
	CMP DWORD PTR [ECX+0x00000424],0x00
	JZ FAR loc_100638FC
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_10063801:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_1006380F
loc_10063807:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10063815
loc_1006380F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10063815:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ FAR loc_100638F0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ FAR loc_100638F0
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ESI,DWORD PTR [EAX+0x000000E4]
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m83C00_sub_10084C00])
	ADD ESP, 0x04
	TEST AL, AL
	JZ loc_10063801
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EAX+0x00000424]
	MOV ESI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10063888
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],0x00000000
loc_10063888:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	TEST ESI, ESI
	JZ loc_10063895
	MOV DWORD PTR [ESI+0x08],EAX
	JMP loc_10063898
loc_10063895:
	MOV DWORD PTR [EBX+0x10],EAX
loc_10063898:
	MOV DWORD PTR [EBX+0x14],EAX
	INC DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ FAR loc_10063807
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_100638C1
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_100638C6
loc_100638C1:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_100638C6:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100638D3
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_100638D8
loc_100638D3:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_100638D8:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	JMP FAR loc_10063801
loc_100638F0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m6293D_sub_1006393D])
loc_100638FC:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1006390E()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1006393D()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063950(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m62A82_proc_10063A82]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x00000424]
	XOR EBX, EBX
	TEST ESI, ESI
	JZ FAR loc_10063A58
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_100639F0
loc_100639CE:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_100639F0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_100639CE
loc_100639F0:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10063A4C
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10063A4C
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_10063A22
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_10063A27
loc_10063A22:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_10063A27:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10063A34
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_10063A39
loc_10063A34:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_10063A39:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_10063A4C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m62A8C_sub_10063A8C])
loc_10063A58:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10063A8C()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD LEGO1_sub_10063AA0()
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m62B72_proc_10063B72]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x00000424]
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_10063B05:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_10063B12
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10063B18
loc_10063B12:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10063B18:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_10063B3F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_10063B3F
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	JMP loc_10063B05
loc_10063B3F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m62B7C_sub_10063B7C])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10063B7C()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063B90(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_C = -0xC,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x705E+ECX*8]
	LEA EBX,DWORD PTR [ECX*8+0x00000000]
	MOV ECX, EAX
	SHL EAX, 0x04
	ADD EAX, ECX
	LEA EDI,DWORD PTR [offset LEGO1_data.m6D58_ptr+EAX*4]
	MOV AL,BYTE PTR [offset LEGO1_data + 0x704D+EBX]
	TEST AL, AL
	JL loc_10063C2C
	MOVSX EAX,AL
	CMP BYTE PTR [offset LEGO1_data.m6D24+EAX*8],0x00
	JZ loc_10063C2C
	MOV EAX,DWORD PTR [EDI+0x28]
	TEST EAX, EAX
	JZ loc_10063C2C
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	PUSH EAX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	TEST EAX, EAX
	JZ loc_10063C0C
	MOV ESI,DWORD PTR [ESP+r+0x14]
	MOV ECX, 0x00000000
	TEST ESI, ESI
	JZ loc_10063BFF
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [ESI+EDX+0x04]
loc_10063BFF:
	PUSH 0x3FD9999A
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_10063C0C:
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x704D+EBX]
	SHL EAX, 0x03
	POP EDI
	POP ESI
	POP EBX
	MOV BYTE PTR [offset LEGO1_data.m6D24+EAX],0x00
	MOV BYTE PTR [offset LEGO1_data + 0x6D25+EAX],0x01
	MOV AL, 0x01
	RETN 0x0010
loc_10063C2C:
	XOR EAX, EAX
	MOV BL,BYTE PTR [ESP+arg3+0xC]
	MOV AL, BL
	MOV EAX,DWORD PTR [EAX*4+EDI]
	TEST EAX, EAX
	JZ loc_10063C74
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	PUSH EAX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ESI,DWORD PTR [ESP+r+0x14]
	TEST EAX, EAX
	JZ loc_10063C78
	MOV ECX, 0x00000000
	TEST ESI, ESI
	JZ loc_10063C65
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [ESI+EDX+0x04]
loc_10063C65:
	PUSH 0x3F333333
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
	JMP loc_10063C78
loc_10063C74:
	MOV ESI,DWORD PTR [ESP+r+0x14]
loc_10063C78:
	CMP BL, 0x02
	JB loc_10063C7F
	DEC BL
loc_10063C7F:
	XOR EAX, EAX
	MOV AL, BL
	MOV EAX,DWORD PTR [EAX*4+EDI+0x10]
	TEST EAX, EAX
	JZ loc_10063CBE
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	PUSH EAX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_10063CBE
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10063CB3
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [ESI+EDX+0x04]
loc_10063CB3:
	PUSH 0x40800000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_10063CBE:
	CMP BL, 0x01
	JB loc_10063CC5
	DEC BL
loc_10063CC5:
	XOR EAX, EAX
	MOV AL, BL
	MOV EAX,DWORD PTR [EAX*4+EDI+0x1C]
	TEST EAX, EAX
	JZ loc_10063D01
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EAX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_10063D01
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10063CF9
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [ESI+EDX+0x04]
loc_10063CF9:
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_10063D01:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_10063D10()
{
	enum{
		var_4 = -0x4,
		arg1217225 = 0x4A4B24,
		arg1217236 = 0x4A4B50,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ FAR loc_10063E36
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_10063D39
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_10063D42
loc_10063D39:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ESI,DWORD PTR [EAX+0x08]
loc_10063D42:
	ADD EBX, 0x48
	MOV EDI, 0x00000028
loc_10063D4A:
	MOV EDX,DWORD PTR [EBX-0x0C]
	TEST EDX, EDX
	JZ FAR loc_10063E2C
	CMP BYTE PTR [EBX],0x00
	JZ FAR loc_10063E0E
	MOV EAX,DWORD PTR [EBX-0x08]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [offset LEGO1_data + 0x7054+ECX*8]
	TEST EAX, EAX
	JL FAR loc_10063E0E
	MOV ECX, ESI
	SUB ECX,DWORD PTR [EBX-0x04]
	CMP ECX, EAX
	JLE FAR loc_10063E0E
	MOV BYTE PTR [EBX],0x00
	MOV EAX,DWORD PTR [EDX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV EBP, EAX
	TEST EBP, EBP
	JZ FAR loc_10063E2C
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [ESP+var_4+0x14],EAX
	CMP EAX, 0x80000000
	JBE loc_10063DF8
	CMP BYTE PTR [EBX+0x08],0x00
	JZ loc_10063DD5
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV DWORD PTR [ESP+var_4+0x14],EAX
	FILD DWORD PTR [ESP+var_4+0x14]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4B88]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4B90]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4B98]
	JMP loc_10063DF4
loc_10063DD5:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV DWORD PTR [ESP+var_4+0x14],EAX
	FILD DWORD PTR [ESP+var_4+0x14]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4BA0]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4B90]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4BA8]
loc_10063DF4:
	FSTP DWORD PTR [ESP+var_4+0x14]
loc_10063DF8:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+EDX+arg1217225-0x4A4B20]
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217236-0x4A4B20])
	JMP loc_10063E2C
loc_10063E0E:
	MOV EAX,DWORD PTR [EDX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_10063E2C
	CALL_LONG(offset [LEGO1_text.m2A370_sub_1002B370])
loc_10063E2C:
	ADD EBX, 0x18
	DEC EDI
	JNZ FAR loc_10063D4A
loc_10063E36:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063E40(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m62F8F_proc_10063F8F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x00000424]
	TEST ESI, ESI
	JZ FAR loc_10063F65
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D68_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m4D50_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_10063EB7:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_10063EC5
loc_10063EBD:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10063ECB
loc_10063EC5:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10063ECB:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ FAR loc_10063F59
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_10063F59
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m61E20_sub_10062E20])
	TEST AL, AL
	JNZ loc_10063F0A
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
loc_10063F0A:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10063EBD
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA EDX,DWORD PTR [ECX+0x04]
	LEA EDI,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EDX],0x00
	JZ loc_10063F2A
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_10063F2F
loc_10063F2A:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_10063F2F:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10063F3C
	MOV EDX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x04],EDX
	JMP loc_10063F41
loc_10063F3C:
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x14],EAX
loc_10063F41:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	JMP FAR loc_10063EB7
loc_10063F59:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m62F99_sub_10063F99])
loc_10063F65:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10063F99()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m62730_loc_10063730])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10063FB0(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x20]
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10063FFB
	LEA ECX,DWORD PTR [ESP+var_C+0x20]
	PUSH EAX
	MOV DWORD PTR [ESP+var_14+0x24],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_10+0x24],ECX
	MOV ECX,DWORD PTR [ESP+arg2+0x24]
	CALL_LONG(offset [LEGO1_text.m1F020_sub_10020020])
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EDI+0x08]
	MOV EDX,DWORD PTR [EDX*4+EBX]
	PUSH ECX
	PUSH EDX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m63010_sub_10064010])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0008
loc_10063FFB:
	XOR AL, AL
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064010(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217232 = 0x4A4B40,
	};

__asm{
	SUB ESP, 0x50
	LEA EAX,DWORD PTR [ESP+var_48+0x50]
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg1+0x54]
	PUSH ESI
	PUSH EDI
	MOV ESI, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_4C+0x5C],EAX
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg2+0x60]
	PUSH EBX
	MOV ECX, EBP
	MOV DWORD PTR [ESP+var_50+0x64],ESI
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	MOV EDI, EAX
	PUSH EBX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	LEA ECX,DWORD PTR [ESP+var_50+0x60]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_50+0x64]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EAX,DWORD PTR [ESP+var_54+0x64]
	LEA ECX,DWORD PTR [ESP+var_54+0x64]
	PUSH EDI
	CALL_LONG(DWORD PTR [EAX+0x54])
	LEA EAX,DWORD PTR [ESP+arg2+0x64]
	LEA ECX,DWORD PTR [ESP+var_54+0x64]
	MOV EBX,DWORD PTR [ESP+var_54+0x64]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV EBX,DWORD PTR [ESP+var_54+0x64]
	LEA ECX,DWORD PTR [ESP+var_54+0x64]
	PUSH EDI
	CALL_LONG(DWORD PTR [EBX+0x48])
	LEA EAX,DWORD PTR [ESP+var_24+0x64]
	LEA ECX,DWORD PTR [ESP+var_10+0x64]
	LEA EDX,DWORD PTR [ESP+var_38+0x64]
	MOV DWORD PTR [ESP+var_28+0x64],EAX
	MOV DWORD PTR [ESP+var_2C+0x64],ESI
	MOV DWORD PTR [ESP+var_14+0x64],ECX
	MOV EAX, 0x3F800000
	MOV DWORD PTR [ESP+var_18+0x64],ESI
	MOV DWORD PTR [ESP+var_3C+0x64],EDX
	MOV DWORD PTR [ESP+var_40+0x64],ESI
	MOV ECX,DWORD PTR [ESP+var_50+0x64]
	MOV DWORD PTR [ESP+var_38+0x64],EAX
	MOV DWORD PTR [ESP+var_34+0x64],EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_28+0x64]
	MOV DWORD PTR [ESP+var_2C+0x64],EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4A8_ptr])
	LEA ESI,DWORD PTR [ESP+var_40+0x64]
	LEA ECX,DWORD PTR [ESP+var_2C+0x64]
	MOV EBX,DWORD PTR [ESP+var_2C+0x64]
	PUSH ESI
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV EAX,DWORD PTR [ESP+var_50+0x64]
	LEA ECX,DWORD PTR [ESP+var_18+0x64]
	PUSH EAX
	MOV EBP,DWORD PTR [ESP+var_14+0x64]
	CALL_LONG(DWORD PTR [EBP+arg1217232-0x4A4B20])
	LEA ESI,DWORD PTR [ESP+var_40+0x64]
	LEA ECX,DWORD PTR [ESP+var_18+0x64]
	MOV EAX,DWORD PTR [ESP+var_18+0x64]
	PUSH ESI
	CALL_LONG(DWORD PTR [EAX+0x48])
	LEA EAX,DWORD PTR [ESP+var_2C+0x64]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mA5150_sub_100A6150])
	POP EBP
	CMP EAX, 0x01
	SBB CL, CL
	POP EDI
	NEG CL
	MOV AL, CL
	POP ESI
	POP EBX
	ADD ESP, 0x50
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064120(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_14 = -0x14,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217225 = 0x4A4B24,
		arg1217235 = 0x4A4B4C,
	};

__asm{
	SUB ESP, 0x44
	MOV DWORD PTR [ESP+var_30+0x44],ECX
	PUSH EBX
	MOV DWORD PTR [ESP+var_34+0x48],0x0000000C
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	MOV DWORD PTR [ESP+var_44+0x54],EAX
	FILD DWORD PTR [ESP+var_44+0x54]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4BC0]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4BC8]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4BD0]
	FSTP DWORD PTR [ESP+var_3C+0x54]
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JNZ loc_1006416B
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
loc_1006416B:
	MOV ESI,DWORD PTR [EAX+0x00000088]
	TEST ESI, ESI
	JNZ loc_10064181
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
loc_10064181:
	LEA ECX,DWORD PTR [ESP+var_14+0x54]
	XOR EDI, EDI
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mFC60_sub_10010C60])
	XOR EAX, EAX
	LEA ECX,DWORD PTR [ESP+var_24+0x54]
	MOV AL,BYTE PTR [ESI+0x04]
	XOR EBX, EBX
	MOV DWORD PTR [ESP+var_38+0x54],EDI
	MOV DWORD PTR [ESP+var_40+0x54],EDI
	MOV DWORD PTR [ESP+var_44+0x54],EAX
	MOV DWORD PTR [ESP+var_28+0x54],ECX
	MOV DWORD PTR [ESP+var_2C+0x54],offset [LEGO1_rdata.m488_ptr]
loc_100641B2:
	CMP EBX,DWORD PTR [ESP+var_44+0x54]
	JGE loc_10064235
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV EBP,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [EBP+arg1217235-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217225-0x4A4B20],ESI
	JNZ loc_100641F0
	FLD DWORD PTR [EAX]
	FCHS
	MOV ECX,DWORD PTR [ESP+var_28+0x54]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBP+arg1217235-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_28+0x54]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+arg1217235-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_28+0x54]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	JMP loc_100641FC
loc_100641F0:
	LEA ECX,DWORD PTR [ESP+var_2C+0x54]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_2C+0x58]
	CALL_LONG(DWORD PTR [EAX+0x20])
loc_100641FC:
	MOV EAX,DWORD PTR [ESP+var_2C+0x58]
	MOV ECX,DWORD PTR [ESP+var_14+0x58]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_28+0x58]
	MOV EAX,DWORD PTR [ESP+var_28+0x58]
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOM DWORD PTR [ESP+var_3C+0x58]
	FSTP DWORD PTR [ESP+var_1C+0x58]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1006422C
	MOV EAX,DWORD PTR [ESP+var_1C+0x58]
	MOV DWORD PTR [ESP+var_44+0x58],EBP
	MOV DWORD PTR [ESP+var_3C+0x58],EAX
loc_1006422C:
	ADD EDI, 0x04
	INC EBX
	JMP FAR loc_100641B2
loc_10064235:
	MOV ECX,DWORD PTR [ESP+var_44+0x58]
	MOV EDI, 0x00000003
loc_1006423E:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	TEST WORD PTR DS:[EAX+0x24],DI
	MOV ECX, EAX
	JNZ loc_10064252
	CMP ECX,DWORD PTR [ESP+var_44+0x58]
	JNZ loc_1006423E
loc_10064252:
	CMP ECX,DWORD PTR [ESP+var_44+0x58]
	JNZ loc_10064264
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
loc_10064264:
	MOV EDI, ECX
	MOV EAX,DWORD PTR [ESP+var_44+0x58]
	MOV BL,BYTE PTR [ESP+arg1+0x58]
	MOV DWORD PTR [ESP+var_48+0x58],EAX
loc_10064272:
	MOV EAX,DWORD PTR [ESP+var_38+0x58]
	DEC DWORD PTR [ESP+var_38+0x58]
	TEST EAX, EAX
	JZ FAR loc_10064366
	TEST EDI, EDI
	JZ loc_10064272
	CMP DWORD PTR [EDI+0x08],ESI
	JNZ loc_10064297
	TEST BYTE PTR [EDI+0x24],0x01
	JZ loc_10064297
	TEST BYTE PTR [ESI+0x0C],0x01
	JNZ loc_100642A8
loc_10064297:
	CMP DWORD PTR [EDI+0x04],ESI
	JNZ loc_100642DB
	TEST BYTE PTR [EDI+0x24],0x02
	JZ loc_100642DB
	TEST BYTE PTR [ESI+0x0C],0x01
	JZ loc_100642DB
loc_100642A8:
	MOV EAX,DWORD PTR [ESP+var_40+0x58]
	MOV ECX,DWORD PTR [ESP+var_34+0x58]
	PUSH EAX
	PUSH EDI
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m63010_sub_10064010])
	TEST AL, AL
	JZ loc_100642DB
	CMP BYTE PTR [ESP+arg2+0x58],0x00
	JZ loc_10064320
	MOV EAX,DWORD PTR [ESP+var_40+0x58]
	MOV ECX,DWORD PTR [ESP+var_48+0x58]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+var_2C+0x58]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m63010_sub_10064010])
	TEST AL, AL
	JNZ loc_10064320
loc_100642DB:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_48+0x58],EDI
	CMP ESI, EAX
	MOV ESI, EAX
	JNZ loc_100642EB
	MOV ESI,DWORD PTR [EDI+0x08]
loc_100642EB:
	MOV EBP, EDI
loc_100642ED:
	PUSH ESI
	MOV ECX, EDI
	TEST BL, BL
	JZ loc_100642FB
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	JMP loc_10064300
loc_100642FB:
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
loc_10064300:
	TEST BYTE PTR [EAX+0x24],0x03
	MOV EDI, EAX
	JNZ loc_1006430C
	CMP EBP, EDI
	JNZ loc_100642ED
loc_1006430C:
	CMP EBP, EDI
	JNZ FAR loc_10064272
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
loc_10064320:
	MOV ECX,DWORD PTR [ESP+0x58]
	MOV EAX,DWORD PTR [ESP+var_40+0x58]
	XOR EBX, EBX
	MOV DWORD PTR [ECX+0x10],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	XOR EAX, EAX
	MOV EDX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [ECX],EDX
	MOV AL,BYTE PTR [ESI+0x04]
loc_1006433A:
	CMP EBX, EAX
	JGE loc_1006435A
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV EDX,DWORD PTR [EBX*4+EDX]
	CMP EDX, EDI
	JNZ loc_1006434E
	MOV DWORD PTR [ECX+0x04],EBX
	INC EBX
	JMP loc_1006433A
loc_1006434E:
	CMP EDX,DWORD PTR [ESP+var_48+0x58]
	JNZ loc_10064357
	MOV DWORD PTR [ECX+0x0C],EBX
loc_10064357:
	INC EBX
	JMP loc_1006433A
loc_1006435A:
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
loc_10064366:
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x44
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064380(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9, DWORD arg10, DWORD arg11)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
		arg9 = 0x24,
		arg10 = 0x28,
		arg1217224 = 0x4A4B20,
		arg1217239 = 0x4A4B5C,
		arg1217240 = 0x4A4B60,
		arg1217243 = 0x4A4B6C,
	};

__asm{
	SUB ESP, 0x0C
	MOV DWORD PTR [ESP+var_C+0xC],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	XOR EDI, EDI
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EBP,DWORD PTR [ESP+var_C+0x1C]
	MOV EBX,DWORD PTR [ESP+arg1+0x1C]
	ADD EBP, 0x3C
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	MOV DWORD PTR [ESP+var_8+0x1C],0xFFFFFFFF
loc_100643AB:
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	TEST EAX, EAX
	JNZ loc_100643C1
	CMP DWORD PTR [ESP+var_8+0x1C],-0x01
	JNZ loc_100643BD
	MOV DWORD PTR [ESP+var_8+0x1C],ESI
loc_100643BD:
	TEST EAX, EAX
	JZ loc_100643D5
loc_100643C1:
	PUSH EBX
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100643E0
loc_100643D5:
	ADD EBP, 0x18
	INC ESI
	CMP ESI, 0x28
	JL loc_100643AB
	JMP loc_10064436
loc_100643E0:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1006443E
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, EDI
	MOV ECX,DWORD PTR [EAX+0x0000013C]
	TEST ECX, ECX
	JZ loc_10064436
	TEST EDI, EDI
	JNZ loc_1006440D
	XOR EAX, EAX
	JMP loc_10064410
loc_1006440D:
	ADD EAX, 0x04
loc_10064410:
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI+ECX+0x0000013C],0x00000000
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA ECX,DWORD PTR [EDI+EDX+0x04]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0C])
loc_10064436:
	TEST EDI, EDI
	JNZ FAR loc_100644CC
loc_1006443E:
	CMP DWORD PTR [ESP+var_C+0x20],-0x01
	JZ loc_100644C4
	MOV ESI,DWORD PTR [ESP+var_C+0x20]
	XOR EDI, EDI
	MOV EBP, offset [LEGO1_data.m7048_ptr]
loc_10064450:
	PUSH EBX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1006446D
	ADD EBP, 0x18
	INC EDI
	CMP EBP, offset LEGO1_data + 0x74B0
	JB loc_10064450
loc_1006446D:
	CMP EDI, 0x2F
	JBE loc_10064481
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x002C
loc_10064481:
	MOV EAX,DWORD PTR [ESP+0x14]
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	LEA EDX,DWORD PTR [EAX*2+EAX]
	PUSH 0x01
	PUSH EBX
	LEA EBP,DWORD PTR [EDX*8+ECX]
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82500_sub_10083500])
	MOV ECX,DWORD PTR [ESP+arg10+0x20]
	PUSH EBX
	MOV DWORD PTR [EBP+arg1217239-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217240-0x4A4B20],EDI
	MOV DWORD PTR [EBP+arg1217243-0x4A4B20],ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m83C40_sub_10084C40])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	INC DWORD PTR [ECX+0x00000414]
loc_100644C4:
	TEST EDI, EDI
	JZ FAR loc_1006465B
loc_100644CC:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP EAX, 0x01
	MOV AL, 0x02
	ADC AL, 0xFF
	PUSH 0x00
	MOV BYTE PTR [EDI+0x0C],AL
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [EDI+EDX+0x04]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV ECX, 0x00000000
	TEST EDI, EDI
	JZ loc_1006450B
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EDI+EDX+0x04]
loc_1006450B:
	MOV EAX,DWORD PTR [ESP+arg5+0x20]
	MOV EDX,DWORD PTR [ESP+arg4+0x20]
	MOV EBX,DWORD PTR [ESP+arg3+0x20]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg3+0x20]
	PUSH EDX
	MOV EDX,DWORD PTR [ESP+arg3+0x20]
	PUSH EBX
	PUSH EAX
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [ESP+arg4+0x20]
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESI*2+ESI]
	JZ loc_1006456B
	LEA ESI,DWORD PTR [EAX*8+ECX+0x3C]
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82DB0_sub_10083DB0])
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	MOV EAX, 0xFFFFFFFF
	POP EBP
	MOV DWORD PTR [ESI], 0x00000000
	POP EDI
	DEC DWORD PTR [ECX+0x00000414]
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x002C
loc_1006456B:
	LEA EBX,DWORD PTR [EAX*8+ECX]
	MOV EAX,DWORD PTR [EAX*8+ECX+0x40]
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOVSX EAX,BYTE PTR [offset LEGO1_data + 0x705E+ECX*8]
	LEA ESI,DWORD PTR [ECX*8+0x00000000]
	MOV ECX, EAX
	SHL EAX, 0x04
	ADD EAX, ECX
	MOV ECX,DWORD PTR [ESP+arg6+0x20]
	LEA EBP,DWORD PTR [offset LEGO1_data.m6D58_ptr+EAX*4]
	MOV EAX,DWORD PTR [ECX*4+EBP+arg1217224-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_8+0x20]
	PUSH EAX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_100645CA
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100645C2
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [EDI+EDX+0x04]
loc_100645C2:
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_100645CA:
	MOV EAX,DWORD PTR [ESP+arg8+0x20]
	MOV ECX,DWORD PTR [EAX*4+EBP+arg1217224-0x4A4B20]
	PUSH ECX
	PUSH offset [LEGO1_data.m71C_str]
	MOV ECX,DWORD PTR [ESP+r+0x20]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_10064605
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100645FA
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [EDI+EDX+0x04]
loc_100645FA:
	PUSH 0x40800000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_10064605:
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1006461A
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [EBX+0x44],EAX
	JMP loc_10064626
loc_1006461A:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x44],ECX
loc_10064626:
	MOV ECX, 0x00000001
	MOV EAX,DWORD PTR [ESP+arg10+0x20]
	MOV EDX,DWORD PTR [ESP+arg7+0x20]
	MOV BYTE PTR [EBX+0x48],CL
	MOV DWORD PTR [EBX+0x4C],EAX
	MOV EBX,DWORD PTR [ESP+arg9+0x20]
	XOR EAX, EAX
	POP EBP
	POP EDI
	MOV DWORD PTR [offset LEGO1_data + 0x7054+ESI],EDX
	MOV DWORD PTR [offset LEGO1_data + 0x7058+ESI],EBX
	MOV BYTE PTR [offset LEGO1_data.m704C+ESI],CL
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x002C
loc_1006465B:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x002C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064670(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	MOV ESI, ECX
	XOR EBX, EBX
	CMP EAX, EBX
	JZ loc_100646DF
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_8+0x1C],EBX
	MOV DWORD PTR [ESP+var_10+0x1C],ECX
	PUSH EAX
	MOV DWORD PTR [ESP+var_14+0x20],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_C+0x20],0x42C5C000
	MOV DWORD PTR [ESP+var_4+0x20],0xC238A027
	LEA ECX,DWORD PTR [ESP+var_14+0x20]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4DC_ptr])
	MOV EDX,DWORD PTR [ESP+var_14+0x20]
	MOV ECX,DWORD PTR [ESP+var_14+0x20]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_14+0x20]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x4BE0]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100646E1
loc_100646DF:
	MOV BL, 0x01
loc_100646E1:
	TEST BL, BL
	JZ loc_10064733
	PUSH 0x3F000000
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	PUSH EDX
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	ADD EDX, 0x0E
	PUSH EDX
	PUSH 0x3F000000
	PUSH ECX
	PUSH 0x3F000000
	PUSH 0x01
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7588_str]
	PUSH offset [LEGO1_data.m1070_str]
	CALL_LONG(offset [LEGO1_text.m63380_sub_10064380])
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
loc_10064733:
	MOV EAX, 0xFFFFFFFF
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064740(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	MOV ESI, ECX
	XOR EBX, EBX
	CMP EAX, EBX
	JZ loc_100647AF
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_8+0x1C],EBX
	MOV DWORD PTR [ESP+var_10+0x1C],ECX
	PUSH EAX
	MOV DWORD PTR [ESP+var_14+0x20],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_C+0x20],0xC1AB0000
	MOV DWORD PTR [ESP+var_4+0x20],0xC2270000
	LEA ECX,DWORD PTR [ESP+var_14+0x20]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4DC_ptr])
	MOV EDX,DWORD PTR [ESP+var_14+0x20]
	MOV ECX,DWORD PTR [ESP+var_14+0x20]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_14+0x20]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x4BEC]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100647B1
loc_100647AF:
	MOV BL, 0x01
loc_100647B1:
	TEST BL, BL
	JZ FAR loc_10064865
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP BYTE PTR [EAX+0x0C],0x02
	JZ loc_1006480A
	PUSH 0x3F333333
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	PUSH EDX
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	ADD EDX, 0x0D
	PUSH EDX
	PUSH 0x3F570A3D
	PUSH ECX
	PUSH 0x3EDC28F6
	PUSH 0x01
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m75A0_str]
	PUSH offset LEGO1_data + 0x32BC
	CALL_LONG(offset [LEGO1_text.m63380_sub_10064380])
loc_1006480A:
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP BYTE PTR [EAX+0x0C],0x03
	JZ loc_1006485B
	PUSH 0x3F666666
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	PUSH EDX
	PUSH -0x01
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000003
	IDIV ECX
	ADD EDX, 0x0D
	PUSH EDX
	PUSH 0x3ECCCCCD
	PUSH 0x01
	PUSH 0x3F0CCCCD
	PUSH ECX
	PUSH offset [LEGO1_data.m7594_str]
	PUSH offset LEGO1_data + 0x32B4
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m63380_sub_10064380])
loc_1006485B:
	XOR EAX, EAX
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
loc_10064865:
	MOV EAX, 0xFFFFFFFF
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064880(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	XOR ESI, ESI
	LEA EDI,DWORD PTR [EBX+0x3C]
	MOV EBP,DWORD PTR [ESP+arg1+0x10]
loc_1006488F:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100648A9
	PUSH EBP
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_100648BE
loc_100648A9:
	ADD EDI, 0x18
	INC ESI
	CMP ESI, 0x28
	JL loc_1006488F
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_100648BE:
	LEA EAX,DWORD PTR [ESI*2+ESI]
	MOV ECX,DWORD PTR [ESP+arg2+0x10]
	LEA EAX,DWORD PTR [EAX*8+EBX+0x40]
	MOV EDX,DWORD PTR [EAX]
	LEA EBX,DWORD PTR [EDX*2+EDX]
	MOV DWORD PTR [offset LEGO1_data + 0x7054+EBX*8],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg3+0x10]
	POP EBP
	POP EDI
	LEA EBX,DWORD PTR [EDX*2+EDX]
	POP ESI
	MOV DWORD PTR [offset LEGO1_data + 0x7058+EBX*8],EAX
	XOR EAX, EAX
	POP EBX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100648F0(DWORD arg1, DWORD arg2)
{
	enum{
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_18 = -0x18,
		var_10 = -0x10,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217240 = 0x4A4B60,
	};

__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	CMP BYTE PTR [EBX+0x00000402],0x00
	JZ FAR loc_10064B0F
	MOV EDI,DWORD PTR [ESP+arg1+0x5C]
	CMP BYTE PTR [EDI+0x14],0x00
	JZ FAR loc_10064B0F
	OR DWORD PTR [EDI+0x74],0x01
	MOV EAX,DWORD PTR [ESP+arg2+0x5C]
	MOV DWORD PTR [EBX+0x0000042C],EDI
	LEA EBP,DWORD PTR [EBX+0x0000043C]
	MOV DWORD PTR [EBX+0x00000434],EAX
	MOV BYTE PTR [EBX+0x00000430],0x01
	ADD EAX, 0x000003E8
	MOV DWORD PTR [EBX+0x00000438],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ESI,DWORD PTR [EAX+0x6C]
	MOV ECX, EBP
	LEA EAX,DWORD PTR [ESI+0x10]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x28])
	LEA ECX,DWORD PTR [EDI+0x2C]
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x48])
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_10064979
	MOV DWORD PTR [EAX+0x000000DC],0x00000004
	MOV EDX,DWORD PTR [EAX]
	PUSH 0x00
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x30])
loc_10064979:
	CALL_LONG(offset [LEGO1_text.m14780_sub_10015780])
	MOVSX EAX,WORD PTR [EDI+0x12]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m54720_sub_10055720])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ FAR loc_10064ADC
	LEA ECX,DWORD PTR [EAX+0x20]
	LEA EDX,DWORD PTR [EAX+0x14]
	ADD EAX, 0x08
	MOV DWORD PTR [ESP+var_2C+0x60],ECX
	MOV ECX, offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [ESP+var_30+0x60],ECX
	MOV DWORD PTR [ESP+var_44+0x60],EDX
	LEA EDX,DWORD PTR [ESP+var_30+0x60]
	MOV DWORD PTR [ESP+var_48+0x60],ECX
	MOV DWORD PTR [ESP+var_4C+0x60],EAX
	LEA EAX,DWORD PTR [ESP+var_48+0x60]
	MOV DWORD PTR [ESP+var_50+0x60],ECX
	LEA ECX,DWORD PTR [EBX+0x00000484]
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [ESP+var_48+0x60]
	PUSH EAX
	PUSH ECX
	LEA EDI,DWORD PTR [EBX+0x000004CC]
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	ADD ESP, 0x10
	MOV ECX, EBP
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EDI
	CALL_LONG(DWORD PTR [EBP+arg1217240-0x4A4B20])
	LEA EBP,DWORD PTR [EBX+0x000004E4]
	LEA ECX,DWORD PTR [EBX+0x00000484]
	OR DWORD PTR [EBX+0x000004FC],0x01
	PUSH EBP
	MOV EDX,DWORD PTR [EBX+0x00000484]
	CALL_LONG(DWORD PTR [EDX+0x40])
	MOV EAX,DWORD PTR [EBX+0x000004FC]
	OR EAX, 0x02
	MOV DWORD PTR [EBX+0x000004FC],EAX
	JZ FAR loc_10064AE7
	LEA EAX,DWORD PTR [ESP+var_40+0x60]
	LEA ECX,DWORD PTR [ESP+var_48+0x60]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESP+var_28+0x60]
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	MOV DWORD PTR [ESP+var_48+0x60],offset [LEGO1_rdata.m1E8_ptr]
	PUSH EAX
	ADD EBX, 0x000004D4
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA ECX,DWORD PTR [ESP+var_48+0x60]
	PUSH EDI
	MOV DWORD PTR [ESP+var_2C+0x60],offset [LEGO1_rdata.m1E8_ptr]
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA ECX,DWORD PTR [ESP+var_40+0x60]
	MOV EAX,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EBX+0x04]
	PUSH EBP
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EBX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x0C],EBX
	LEA ECX,DWORD PTR [ESP+var_44+0x60]
	MOV EAX,DWORD PTR [ESP+var_44+0x60]
	CALL_LONG(DWORD PTR [EAX+0x48])
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m63B20_sub_10064B20])
	MOV EAX,DWORD PTR [ESP+var_30+0x60]
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	PUSH EBP
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EAX,DWORD PTR [ESP+var_2C+0x60]
	LEA ECX,DWORD PTR [ESP+var_30+0x60]
	MOV EBX,DWORD PTR [ESP+var_30+0x60]
	PUSH EAX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x18])
	FSTP DWORD PTR [ESP+var_50+0x60]
	MOV ECX,DWORD PTR [ESP+var_44+0x60]
	MOV EAX,DWORD PTR [ESP+var_48+0x60]
	PUSH ECX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_40+0x60]
	CALL_LONG(DWORD PTR [EAX+0x18])
	FLD DWORD PTR [ESP+var_50+0x60]
	FXCH ST(1)
	FCOMPP
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10064AE7
	LEA EAX,DWORD PTR [ESP+var_50+0x60]
	MOV ECX, EBP
	MOV DWORD PTR [ESP+var_50+0x60],0xBF800000
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	JMP loc_10064AE7
loc_10064ADC:
	AND DWORD PTR [EDI+0x74],-0x02
	MOV BYTE PTR [EBX+0x00000430],0x00
loc_10064AE7:
	MOV DWORD PTR [ESP+var_18+0x60],offset [LEGO1_rdata.m488_ptr]
	LEA EAX,DWORD PTR [ESP+var_10+0x60]
	LEA EDX,DWORD PTR [ESP+var_18+0x60]
	MOV ECX, EAX
	PUSH EDX
	MOV DWORD PTR [ESP+var_10+0x60],EAX
	XOR EAX, EAX
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA4A30_sub_100A5A30])
loc_10064B0F:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064B20(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD ESI, 0x08
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [EDI+0x08]
	MOV EAX, 0x00000004
loc_10064B3C:
	MOV EDX,DWORD PTR [ESI]
	ADD ESI, 0x04
	MOV DWORD PTR [ECX],EDX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_10064B3C
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064B50(DWORD arg1)
{
	enum{
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x7C
	PUSH ESI
	PUSH EDI
	CMP BYTE PTR [ECX+0x00000430],0x00
	MOV ESI, ECX
	JZ FAR loc_10064ED8
	MOV EDI,DWORD PTR [ESI+0x0000042C]
	TEST EDI, EDI
	JZ FAR loc_10064ED8
	LEA EAX,DWORD PTR [ESP+var_40+0x84]
	MOV ECX,DWORD PTR [ESP+arg1+0x84]
	MOV DWORD PTR [ESP+var_44+0x84],EAX
	TEST ECX, ECX
	MOV DWORD PTR [ESP+var_48+0x84],offset [LEGO1_rdata.m300_ptr]
	JL FAR loc_10064E6F
	MOV EDX,DWORD PTR [ESI+0x00000438]
	CMP ECX, EDX
	JGE FAR loc_10064E6F
	MOV EAX,DWORD PTR [ESI+0x00000434]
	SUB ECX, EAX
	SUB EDX, EAX
	MOV EAX,DWORD PTR [ESI+0x00000440]
	MOV DWORD PTR [ESP+var_58+0x84],ECX
	FILD DWORD PTR [ESP+var_58+0x84]
	MOV ECX,DWORD PTR [ESI+0x00000488]
	MOV DWORD PTR [ESP+var_58+0x84],EDX
	FLD ST(0)
	FIDIV DWORD PTR [ESP+var_58+0x84]
	FLD DWORD PTR [ECX+0x30]
	FSUB DWORD PTR [EAX+0x30]
	FMUL ST,ST(1)
	FSTP DWORD PTR [ESP+var_64+0x84]
	FLD DWORD PTR [ECX+0x34]
	FSUB DWORD PTR [EAX+0x34]
	FMUL ST,ST(1)
	FSTP DWORD PTR [ESP+var_60+0x84]
	FLD DWORD PTR [ECX+0x38]
	FSUB DWORD PTR [EAX+0x38]
	MOV DWORD PTR [ESP+var_7C+0x84],offset [LEGO1_rdata.m5A0_ptr]
	LEA EDX,DWORD PTR [ESP+var_58+0x84]
	MOV EAX,DWORD PTR [ESI+0x000004FC]
	FMULP ST(1),ST
	MOV DWORD PTR [ESP+var_78+0x84],EDX
	CMP EAX, 0x01
	FSTP DWORD PTR [ESP+var_5C+0x84]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4C04]
	JNZ loc_10064C58
	FSTP DWORD PTR [ESP+var_74+0x84]
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	LEA ECX,DWORD PTR [ESP+var_7C+0x84]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m5C0_ptr])
	FLD DWORD PTR [ESP+var_78+0x88]
	MOV EDI,DWORD PTR [ESP+var_7C+0x88]
	ADD EDI, 0x0C
	FLD DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FLD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FSUBRP ST(2),ST
	FMULP ST(1),ST
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4B58]
	FSTP DWORD PTR [EDI]
	MOV EAX,DWORD PTR [ESP+var_80+0x88]
	LEA ECX,DWORD PTR [ESP+var_80+0x88]
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	JMP FAR loc_10064E12
loc_10064C58:
	FSTP DWORD PTR [ESP+var_78+0x88]
	CMP EAX, 0x02
	JNZ loc_10064CA0
	LEA EAX,DWORD PTR [ESI+0x000004E4]
	LEA ECX,DWORD PTR [ESP+var_80+0x88]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	FLD DWORD PTR [ESP+var_78+0x88]
	MOV EDI,DWORD PTR [ESP+var_7C+0x88]
	ADD EDI, 0x0C
	FLD DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FMULP ST(1),ST
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4B58]
	FSTP DWORD PTR [EDI]
	MOV EAX,DWORD PTR [ESP+var_80+0x88]
	LEA ECX,DWORD PTR [ESP+var_80+0x88]
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	JMP FAR loc_10064E12
loc_10064CA0:
	CMP EAX, 0x03
	JNZ FAR loc_10064E0D
	LEA EAX,DWORD PTR [ESI+0x000004E4]
	LEA ECX,DWORD PTR [ESI+0x000004CC]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_78+0x88]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m5D8_ptr])
	FST QWORD PTR [ESP+var_70+0x88]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4C08]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_10064D77
	FLD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FSUB QWORD PTR [ESP+var_70+0x88]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4C08]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10064D26
	FLD QWORD PTR [ESP+var_70+0x88]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FLD ST(0)
	FSIN
	FLD DWORD PTR [ESP+var_78+0x88]
	FLD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FSUB ST,ST(1)
	FMUL ST,ST(3)
	FSIN
	FDIV ST,ST(2)
	FSTP QWORD PTR [ESP+var_70+0x88]
	FMUL ST(2),ST
	FXCH ST(2)
	FSIN
	FDIVRP ST(1),ST
	FSTP QWORD PTR [ESP+var_78+0x88]
	FSTP ST(0)
	JMP loc_10064D3A
loc_10064D26:
	FLD DWORD PTR [ESP+var_78+0x88]
	FLD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FSUB ST,ST(1)
	FSTP QWORD PTR [ESP+var_70+0x88]
	FSTP QWORD PTR [ESP+var_78+0x88]
loc_10064D3A:
	XOR ECX, ECX
	JMP loc_10064D42
loc_10064D3E:
	FSTP DWORD PTR [ECX+EDI-0x04]
loc_10064D42:
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	MOV EDX,DWORD PTR [ESI+0x000004E8]
	MOV EDI,DWORD PTR [ESP+var_7C+0x88]
	ADD ECX, 0x04
	CMP ECX, 0x10
	FLD DWORD PTR [ECX+EAX-0x04]
	FMUL QWORD PTR [ESP+var_70+0x88]
	FLD DWORD PTR [ECX+EDX-0x04]
	FMUL QWORD PTR [ESP+var_78+0x88]
	FADDP ST(1),ST
	JL loc_10064D3E
	FSTP DWORD PTR [ECX+EDI-0x04]
	XOR EAX, EAX
	JMP FAR loc_10064E12
loc_10064D77:
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	MOV ECX,DWORD PTR [ESP+var_7C+0x88]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	MOV ECX,DWORD PTR [ESP+var_7C+0x88]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV ECX,DWORD PTR [ESP+var_7C+0x88]
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	FLD DWORD PTR [EAX+0x0C]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	FLD DWORD PTR [ESP+var_78+0x88]
	FLD QWORD PTR [offset LEGO1_rdata + 0x4B38]
	FSUB ST,ST(1)
	MOV EAX,DWORD PTR [ESI+0x000004D0]
	MOV ECX,DWORD PTR [ESP+var_7C+0x88]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4C10]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x0C],EDX
	XOR EDX, EDX
	FSIN
	FSTP QWORD PTR [ESP+var_70+0x88]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4C10]
	FSIN
	FSTP QWORD PTR [ESP+var_78+0x88]
	JMP loc_10064DE3
loc_10064DE1:
	FSTP DWORD PTR [EAX]
loc_10064DE3:
	MOV EAX,DWORD PTR [ESP+var_7C+0x88]
	MOV ECX,DWORD PTR [ESI+0x000004D0]
	ADD EAX, EDX
	ADD EDX, 0x04
	CMP EDX, 0x0C
	FLD DWORD PTR [EDX+ECX-0x04]
	FMUL QWORD PTR [ESP+var_70+0x88]
	FLD DWORD PTR [EAX]
	FMUL QWORD PTR [ESP+var_78+0x88]
	FADDP ST(1),ST
	JL loc_10064DE1
	FSTP DWORD PTR [EAX]
	XOR EAX, EAX
	JMP loc_10064E12
loc_10064E0D:
	MOV EAX, 0xFFFFFFFF
loc_10064E12:
	TEST EAX, EAX
	JNZ loc_10064E26
	LEA EAX,DWORD PTR [ESP+var_80+0x88]
	LEA ECX,DWORD PTR [ESP+var_4C+0x88]
	MOV EDI,DWORD PTR [ESP+var_4C+0x88]
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x44])
loc_10064E26:
	MOV EAX,DWORD PTR [ESI+0x00000440]
	MOV ECX,DWORD PTR [ESP+var_48+0x88]
	FLD DWORD PTR [EAX+0x30]
	FADD DWORD PTR [ESP+var_68+0x88]
	FSTP DWORD PTR [ECX+0x30]
	MOV EAX,DWORD PTR [ESI+0x00000440]
	MOV ECX,DWORD PTR [ESP+var_48+0x88]
	FLD DWORD PTR [EAX+0x34]
	FADD DWORD PTR [ESP+var_64+0x88]
	FSTP DWORD PTR [ECX+0x34]
	MOV EAX,DWORD PTR [ESI+0x00000440]
	MOV ECX,DWORD PTR [ESP+var_48+0x88]
	FLD DWORD PTR [EAX+0x38]
	FADD DWORD PTR [ESP+var_60+0x88]
	FSTP DWORD PTR [ECX+0x38]
	MOV ECX,DWORD PTR [ESP+var_48+0x88]
	MOV DWORD PTR [ECX+0x3C],0x3F800000
	JMP loc_10064E90
loc_10064E6F:
	ADD ESI, 0x00000484
	LEA ECX,DWORD PTR [ESP+var_4C+0x88]
	PUSH ESI
	MOV BYTE PTR [ESI-0x54],0x00
	AND DWORD PTR [EDI+0x74],-0x02
	MOV EAX,DWORD PTR [ESP+var_48+0x88]
	MOV DWORD PTR [ESI-0x58],0x00000000
	CALL_LONG(DWORD PTR [EAX+0x48])
loc_10064E90:
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EDI,DWORD PTR [EAX+0x6C]
	LEA EAX,DWORD PTR [ESP+var_4C+0x88]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EDI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	MOV ESI,DWORD PTR [EDI+0x14]
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	ADD ESI, 0x30
	CALL_LONG(DWORD PTR [EAX+0x08])
	PUSH EAX
	LEA ECX,DWORD PTR [ESI-0x10]
	LEA EAX,DWORD PTR [ESI-0x20]
	PUSH EAX
	PUSH ECX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m29410_sub_1002A410])
loc_10064ED8:
	POP EDI
	POP ESI
	ADD ESP, 0x7C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10064EE0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m63FD7_proc_10064FD7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x20]
	XOR ESI, ESI
	TEST EDI, EDI
	JZ FAR loc_10064FAB
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m4CF0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m4D08_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m4D20_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
loc_10064F4D:
	CMP DWORD PTR [EBP+var_18+0x4],ESI
	JNZ loc_10064F5A
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_10064F60
loc_10064F5A:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_10064F60:
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	CMP DWORD PTR [EBP+var_18+0x4],ESI
	JZ loc_10064F9F
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],ESI
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	JZ loc_10064F9F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [EDX+0x04],ECX
	JNZ loc_10064F4D
	MOV ECX,DWORD PTR [EAX+0x24]
	TEST ECX, ECX
	JZ loc_10064F9F
	CALL_LONG(offset [LEGO1_text.m4A830_sub_1004B830])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV BYTE PTR [EBP+var_10+0x3],AL
	CALL_LONG(offset [LEGO1_text.m63FE1_sub_10064FE1])
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	JMP loc_10064FAD
loc_10064F9F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m63FE1_sub_10064FE1])
loc_10064FAB:
	XOR AL, AL
loc_10064FAD:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10064FE1()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m604E0_loc_100614E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10064FF0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6405B_proc_1006505B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV DWORD PTR [ESI+0x0C],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4D80_ptr]
	MOV DWORD PTR [ESI+0x10],EAX
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065150()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m641AF_proc_100651AF]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4D80_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x18]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m641B9_sub_100651B9])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100651B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100651D0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CMP DWORD PTR [ESI+0x10],EDI
	JZ loc_1006522D
	XOR ECX, ECX
	CMP DWORD PTR [ESI+0x0C],EDI
	JBE loc_10065201
	MOV EDX,DWORD PTR [ESP+arg2+0x8]
	ADD EDX, 0x22
loc_100651E9:
	MOV EAX,DWORD PTR [ESI+0x10]
	ADD EDI, 0x02
	MOV AX,WORD PTR DS:[EDI+EAX-0x02]
	ADD EDX, 0x30
	MOV WORD PTR DS:[EDX-0x30],AX
	INC ECX
	CMP DWORD PTR [ESI+0x0C],ECX
	JA loc_100651E9
loc_10065201:
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [ESP+arg3+0x8]
	XOR EDI, EDI
	MOV DWORD PTR [EAX],ECX
	CMP DWORD PTR [ESI+0x14],EDI
	JBE loc_1006522D
loc_10065211:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m54720_sub_10055720])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_10065227
	MOV ECX,DWORD PTR [ESI+0x18]
	MOV CL,BYTE PTR [EDI+ECX]
	MOV BYTE PTR [EAX+0x5C],CL
loc_10065227:
	INC EDI
	CMP DWORD PTR [ESI+0x14],EDI
	JA loc_10065211
loc_1006522D:
	POP EDI
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10065240(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x10],0x00
	JNZ loc_10065274
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	MOV DWORD PTR [ESI+0x0C],EAX
	ADD EAX, EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x10],EAX
	CALL_LONG(offset [LEGO1_text.m54740_sub_10055740])
	PUSH EAX
	MOV DWORD PTR [ESI+0x14],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x18],EAX
loc_10065274:
	MOV EAX,DWORD PTR [ESP+arg3+0xC]
	XOR EDX, EDX
	MOV DWORD PTR [ESI+0x08],EAX
	XOR EAX, EAX
	CMP DWORD PTR [ESI+0x0C],EAX
	JBE loc_100652A1
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	ADD ECX, 0x22
loc_1006528B:
	MOV DI,WORD PTR DS:[ECX]
	MOV EBX,DWORD PTR [ESI+0x10]
	MOV WORD PTR DS:[EAX+EBX],DI
	ADD ECX, 0x30
	ADD EAX, 0x02
	INC EDX
	CMP DWORD PTR [ESI+0x0C],EDX
	JA loc_1006528B
loc_100652A1:
	XOR EDI, EDI
	CMP DWORD PTR [ESI+0x14],EDI
	JBE loc_100652C4
loc_100652A8:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m54720_sub_10055720])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_100652BE
	MOV CL,BYTE PTR [EAX+0x5C]
	MOV EAX,DWORD PTR [ESI+0x18]
	MOV BYTE PTR [EDI+EAX],CL
loc_100652BE:
	INC EDI
	CMP DWORD PTR [ESI+0x14],EDI
	JA loc_100652A8
loc_100652C4:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_10065550()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6459C_proc_1006559C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4DD8_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100655D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6460D_proc_1006560D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4DD8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m64617_sub_10065617])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065617()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10065620(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x08],0x00000001
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10065640(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x08],0x00000000
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10065660(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10065680(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x08],0x00000001
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100656A0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x08],0x00000000
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100656C0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FILD DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	FSTP QWORD PTR [ECX+0x10]
	FILD DWORD PTR [ESP+arg2+0x4]
	FSTP QWORD PTR [ECX+0x18]
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100656E0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m64738_proc_10065738]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m64550_sub_10065550])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4E08_ptr]
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x24],EAX
	MOV DWORD PTR [ESI+0x30],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x28],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10065770()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m647DE_proc_100657DE]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4E08_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x30]
	TEST ECX, ECX
	JZ loc_100657C5
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x30],0x00000000
loc_100657C5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m647E8_sub_100657E8])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100657E8()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m645D0_sub_100655D0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100657F0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6487E_proc_1006587E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [ECX+0x20],EAX
	PUSH EDI
	MOV ESI, ECX
	PUSH 0x70
	MOV EBX, 0x00000000
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1006583E
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m53AC0_sub_10054AC0])
	MOV EBX, EAX
loc_1006583E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x30],EBX
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	MOV DWORD PTR [EAX+0x00000084],EBX
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV BYTE PTR [EAX+0x5C],0x01
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x0A
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100658A0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EAX
	MOV ECX,DWORD PTR [ECX+0x30]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m53CA0_sub_10054CA0])
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10065900()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	FLD QWORD PTR [ECX+0x18]
	MOV ESI, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD QWORD PTR [ESI+0x10]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x30]
	CALL_LONG(offset [LEGO1_text.m53E40_sub_10054E40])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065BF0()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x0C],EAX
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065C00()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_10065C18
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI], 0x00000000
loc_10065C18:
	MOV EAX,DWORD PTR [ESI+0x08]
	TEST EAX, EAX
	JZ loc_10065C2C
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x08],0x00000000
loc_10065C2C:
	MOV EAX,DWORD PTR [ESI+0x04]
	TEST EAX, EAX
	JZ loc_10065C40
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x04],0x00000000
loc_10065C40:
	MOV EAX,DWORD PTR [ESI+0x0C]
	TEST EAX, EAX
	JZ loc_10065C54
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV DWORD PTR [ESI+0x0C],0x00000000
loc_10065C54:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065C60(DWORD arg1, DWORD arg2)
{
	enum{
		var_48C = -0x48C,
		var_488 = -0x488,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_68 = -0x68,
		var_44 = -0x44,
		var_40 = -0x40,
		var_38 = -0x38,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m64F40_proc_10065F40]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000047C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH 0x10
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_10065CA7
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m64BF0_sub_10065BF0])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_10065CAE
loc_10065CA7:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_10065CAE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	TEST ESI, ESI
	JZ FAR loc_10065F1C
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	TEST EBX, EBX
	JZ FAR loc_10065F1C
	TEST ESI, ESI
	JZ loc_10065D0B
	MOV EDI, ESI
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EDX],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EDX]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_10065D0B:
	LEA EDI,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x74]
	MOV EBX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EAX+0x0C]
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ECX, 0x0000001B
	REP STOSD
	MOV DWORD PTR [EBP+var_8C+0x4],0x0000006C
	MOV DWORD PTR [EBP+var_88+0x4],0x00001007
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EBP+var_80+0x4],EAX
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EBP+var_24+0x4],0x00001800
	MOV DWORD PTR [EBP+var_44+0x4],0x00000020
	MOV DWORD PTR [EBP+var_40+0x4],0x00000060
	MOV DWORD PTR [EBP+var_38+0x4],0x00000008
	PUSH 0x00
	MOV DWORD PTR [EBP+var_84+0x4],ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD ECX, 0x04
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	PUSH ECX
	LEA EAX,DWORD PTR [EBP+var_8C+0x4]
	PUSH EAX
	MOV ESI,DWORD PTR [EBP+var_20+0x4]
	PUSH EDX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CALL_LONG(DWORD PTR [ESI+0x18])
	TEST EAX, EAX
	JNZ FAR loc_10065EB5
	MOV ESI,DWORD PTR [EBX+0x0000030C]
	LEA EDI,DWORD PTR [EBP+var_8C+0x4]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	REP STOSD
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x00
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	MOV DWORD PTR [EBP+var_8C+0x4],0x0000006C
	MOV EAX,DWORD PTR [EAX]
	PUSH ECX
	MOV EDI,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x64])
	TEST EAX, EAX
	JNZ FAR loc_10065EB5
	MOV EDX,DWORD PTR [EBP+var_68+0x4]
	MOV EAX,DWORD PTR [EBP+var_7C+0x4]
	CMP DWORD PTR [EBP+var_80+0x4],EAX
	JNZ loc_10065DF2
	MOV EAX,DWORD PTR [EBP+var_84+0x4]
	MOV EDI, EDX
	IMUL EAX,DWORD PTR [EBP+var_80+0x4]
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	JMP loc_10065E09
loc_10065DF2:
	XOR EAX, EAX
	CMP DWORD PTR [EBP+var_84+0x4],EAX
	JBE loc_10065E09
loc_10065DF9:
	MOV ECX,DWORD PTR [ESI]
	INC EAX
	MOV DWORD PTR [EDX],ECX
	ADD EDX,DWORD PTR [EBP+var_7C+0x4]
	ADD ESI,DWORD PTR [EBP+var_80+0x4]
	CMP EAX,DWORD PTR [EBP+var_84+0x4]
	JB loc_10065DF9
loc_10065E09:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EBP+var_68+0x4]
	PUSH ECX
	LEA EDI,DWORD PTR [EBP+var_48C+0x4]
	MOV EAX,DWORD PTR [EAX]
	PUSH EAX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [ESI+0x00000080])
	XOR EAX, EAX
	MOV ECX, 0x00000100
	REP STOSD
	XOR ECX, ECX
	LEA ESI,DWORD PTR [EBP+var_488+0x3]
loc_10065E32:
	CMP ECX, 0x00000300
	JGE loc_10065E65
	CMP DWORD PTR [EBX+0x08],EAX
	JBE loc_10065E59
	LEA EDI,DWORD PTR [EBX+ECX]
	MOV BYTE PTR [ESI],0x00
	MOV DL,BYTE PTR [EDI+0x0C]
	MOV BYTE PTR [ESI-0x03],DL
	MOV DL,BYTE PTR [EDI+0x0D]
	MOV BYTE PTR [ESI-0x02],DL
	MOV DL,BYTE PTR [EDI+0x0E]
	MOV BYTE PTR [ESI-0x01],DL
	JMP loc_10065E5C
loc_10065E59:
	MOV BYTE PTR [ESI],0x80
loc_10065E5C:
	ADD ESI, 0x04
	ADD ECX, 0x03
	INC EAX
	JMP loc_10065E32
loc_10065E65:
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00
	ADD ESI, 0x08
	LEA EAX,DWORD PTR [EBP+var_48C+0x4]
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_20+0x4]
	PUSH 0x44
	PUSH ECX
	CALL_LONG(DWORD PTR [EBX+0x14])
	TEST EAX, EAX
	JNZ loc_10065EB5
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [ESI]
	PUSH EDX
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x7C])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EDX,DWORD PTR [EAX+0x64]
	MOV ESI,DWORD PTR [EBP+var_14+0x4]
	ADD ESI, 0x0C
	MOV ECX,DWORD PTR [EDX+0x04]
	PUSH ESI
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EDX]
	PUSH EAX
	PUSH ECX
	CALL_LONG(DWORD PTR [EBX+0x48])
	TEST EAX, EAX
	JZ loc_10065F2F
loc_10065EB5:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_10065ED0
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX], 0x00000000
loc_10065ED0:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_10065EEA
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x08],0x00000000
loc_10065EEA:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX]
	TEST EAX, EAX
	JZ loc_10065F02
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX], 0x00000000
loc_10065F02:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10065F1C
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m64C00_sub_10065C00])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10065F1C:
	XOR EAX, EAX
loc_10065F1E:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_10065F2F:
	MOV EAX,DWORD PTR [ESI]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EAX]
	PUSH EDX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x18])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP loc_10065F1E
}
}

__declspec(naked) DWORD LEGO1_sub_10065F60(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg2+0x4]
	MOV DWORD PTR [ESP+var_4+0x4],EDX
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ESP+var_4+0x4]
	PUSH EDX
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EAX, 0x00000001
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10065F90(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x0C
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EAX+0x04]
	XOR EAX, EAX
	MOV DWORD PTR [ESP+var_4+0xC],EDX
	LEA EDX,DWORD PTR [ESP+var_8+0xC]
	MOV DWORD PTR [ESP+var_8+0xC],EAX
	MOV DWORD PTR [ESP+var_C+0xC],EAX
	PUSH EDX
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x74])
	TEST EAX, EAX
	JNZ loc_10066005
	LEA EAX,DWORD PTR [ESP+var_18+0x18]
	MOV ECX,DWORD PTR [ESP+var_14+0x18]
	PUSH EAX
	PUSH offset LEGO1_rdata + 0x76F0
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	TEST EAX, EAX
	JNZ loc_10065FFC
	MOV EAX,DWORD PTR [ESP+var_18+0x18]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
	MOV ECX,DWORD PTR [ESP+var_4+0x18]
	MOV EDX,DWORD PTR [ESP+var_18+0x18]
	PUSH EDX
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [ESP+var_14+0x18]
	PUSH ECX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
loc_10065FFC:
	MOV EAX, 0x00000001
	ADD ESP, 0x0C
	RET
loc_10066005:
	XOR EAX, EAX
	ADD ESP, 0x0C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10066010(DWORD arg1)
{
	enum{
		var_84 = -0x84,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_5C = -0x5C,
		var_10 = -0x10,
	};

__asm{
	SUB ESP, 0x70
	MOV EDX,DWORD PTR [ECX+0x04]
	TEST EDX, EDX
	PUSH EBX
	MOV DWORD PTR [ESP+var_70+0x74],ECX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	JZ FAR loc_100660ED
	CMP DWORD PTR [ECX+0x0C],0x00
	JZ FAR loc_100660ED
	LEA EDI,DWORD PTR [ESP+var_6C+0x80]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH EAX
	REP STOSD
	MOV DWORD PTR [ESP+var_6C+0x84],0x0000006C
	PUSH EAX
	MOV EBX,DWORD PTR [EDX]
	LEA EAX,DWORD PTR [ESP+var_6C+0x88]
	PUSH EAX
	PUSH 0x00
	PUSH EDX
	CALL_LONG(DWORD PTR [EBX+0x64])
	TEST EAX, EAX
	JNZ FAR loc_100660ED
	MOV EBX,DWORD PTR [ESP+var_5C+0x94]
	MOV EDX,DWORD PTR [ESP+var_10+0x94]
	MOV EAX,DWORD PTR [ESP+var_70+0x94]
	CMP DWORD PTR [ESP+var_74+0x94],EAX
	JNZ loc_1006608E
	MOV EAX,DWORD PTR [ESP+var_78+0x94]
	MOV EDI, EBX
	IMUL EAX,DWORD PTR [ESP+var_74+0x94]
	MOV ESI, EDX
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	JMP loc_100660BB
loc_1006608E:
	XOR EAX, EAX
	CMP DWORD PTR [ESP+var_78+0x94],EAX
	JBE loc_100660BB
loc_10066096:
	MOV EBP,DWORD PTR [ESP+var_74+0x94]
	MOV EDI, EBX
	MOV ESI, EDX
	MOV ECX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	ADD EBX,DWORD PTR [ESP+var_70+0x94]
	ADD EDX,DWORD PTR [ESP+var_74+0x94]
	INC EAX
	CMP DWORD PTR [ESP+var_78+0x94],EAX
	JA loc_10066096
loc_100660BB:
	MOV EAX,DWORD PTR [ESP+var_84+0x94]
	MOV ECX,DWORD PTR [ESP+var_5C+0x94]
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x04]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	MOV ECX,DWORD PTR [ESP+var_84+0x94]
	PUSH 0x00
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX+0x0C]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x38])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x70
	RETN 0x0004
loc_100660ED:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x70
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1__configureLegoWorldPresenter_LegoWorldPresenter__SAXH_Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [offset LEGO1_data + 0x75D4], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100665C0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m65612_proc_10066612]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m52440_sub_10053440])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4EE0_ptr]
	MOV DWORD PTR [ESI+0x50],0x0000C350
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10066770()
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6585D_proc_1006685D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	XOR EAX, EAX
	SUB ESP, 0x10
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4EE0_ptr]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	PUSH EBX
	MOV ECX,DWORD PTR [ECX+0x4C]
	PUSH ESI
	TEST ECX, ECX
	JZ loc_100667D9
	MOV ESI,DWORD PTR [ECX+0x000000EC]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m25360_sub_10026360])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E720_sub_1005F720])
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2EA00_sub_1002FA00])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x4C]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x5C])
loc_100667D9:
	TEST AL, AL
	JNZ loc_100667E9
	PUSH 0x07
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14820_sub_10015820])
	ADD ESP, 0x08
loc_100667E9:
	XOR EBX, EBX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x4C],EBX
	JZ loc_10066832
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	PUSH EAX
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000015
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV EDX,DWORD PTR [ECX+0x4C]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mAB6C0_sub_100AC6C0])
	MOV BYTE PTR [EBP+var_8+0x4],BL
	CALL_LONG(offset [LEGO1_text.m65855_sub_10066855])
loc_10066832:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m65867_sub_10066867])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10066855()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10066867()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m525D0_loc_100535D0])
}
}

__declspec(naked) DWORD LEGO1_sub_10066A33()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_10066A45()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10066B40()
{
	enum{
		var_2FC = -0x2FC,
		var_24 = -0x24,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m662E2_proc_100672E2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000002EC
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mAF900__GetHD_MxOmni__SAPBDXZ])
	PUSH EAX
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	PUSH offset LEGO1_data + 0x31A0
	LEA EAX,DWORD PTR [EBP+var_2FC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EBP+ECX+var_2FC+0x2],0x5C
	JZ loc_10066BCD
	MOV EDI, offset LEGO1_data + 0x4050
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_10066BCD:
	MOV EDI, offset [LEGO1_data.m7610_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+var_2FC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B570_sub_1008C570])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m65CE4_loc_10066CE4])
	CALL_LONG(offset [LEGO1_text.mAF940__GetCD_MxOmni__SAPBDXZ])
	PUSH EAX
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	PUSH offset LEGO1_data + 0x31A0
	LEA EAX,DWORD PTR [EBP+var_2FC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	ADD ESP, 0x0C
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	CMP BYTE PTR [EBP+ECX+var_2FC+0x2],0x5C
	JZ loc_10066C83
	MOV EDI, offset LEGO1_data + 0x4050
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_10066C83:
	MOV EDI, offset [LEGO1_data.m7610_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EDX, ECX
	MOV ESI, EDI
	MOV ECX, 0xFFFFFFFF
	LEA EDI,DWORD PTR [EBP+var_2FC+0x4]
	SUB EAX, EAX
	REPNE SCAS
	DEC EDI
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	PUSH 0x04
	AND ECX, 0x03
	REP MOVSB
	LEA EAX,DWORD PTR [EBP+var_2FC+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B570_sub_1008C570])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m65CE4_loc_10066CE4])
	JMP_LONG(offset [LEGO1_text.m65CCC_loc_10066CCC])
}
}

__declspec(naked) DWORD LEGO1_sub_10067012()
{
	enum{
		arg1217162 = 0x4A4A28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217162-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m66300_loc_10067300])
}
}

__declspec(naked) DWORD LEGO1_sub_10067049()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DB40_sub_1004EB40])
}
}

__declspec(naked) DWORD LEGO1_sub_10067054()
{
	enum{
		arg1217204 = 0x4A4AD0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217204-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mBD170_loc_100BE170])
}
}

__declspec(naked) DWORD LEGO1_sub_100672EC()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m27030_loc_10028030])
}
}

__declspec(naked) DWORD LEGO1_sub_10067355()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB550_loc_1000C550])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10067360(DWORD arg1, DWORD arg2)
{
	enum{
		var_84 = -0x84,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_48 = -0x48,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m66499_proc_10067499]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x74
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x10]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	PUSH 0x00
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m8B5C0_sub_1008C5C0])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [ESI+0x10]
	PUSH EBX
	PUSH 0x01
	PUSH ECX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ loc_100673CE
	MOV EAX, 0xFFFFFFFF
loc_100673BB:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_100673CE:
	LEA ECX,DWORD PTR [EBP+var_84+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mBD050_sub_100BE050])
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV EAX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+var_6C+0x4],EDI
	MOV DWORD PTR [EBP+var_70+0x4],EAX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA ECX,DWORD PTR [EBP+var_48+0x4]
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_68+0x4],offset [LEGO1_rdata.mD38_ptr]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_68+0x4],offset [LEGO1_rdata.mCD8_ptr]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	CALL_LONG(offset [LEGO1_text.mB44E0_sub_100B54E0])
	LEA EAX,DWORD PTR [EBP+var_84+0x4]
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	PUSH EAX
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_68+0x4],offset [LEGO1_rdata.mDF0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	CALL_LONG(offset [LEGO1_text.m7BA30_sub_1007CA30])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, EBX
	JNZ loc_1006744B
	LEA ECX,DWORD PTR [EBP+var_68+0x4]
	CALL_LONG(offset [LEGO1_text.m7CF20_sub_1007DF20])
loc_1006744B:
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m66491_sub_10067491])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m664A3_sub_100674A3])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP FAR loc_100673BB
}
}

__declspec(naked) DWORD LEGO1_sub_10067491()
{
	enum{
		arg1217199 = 0x4A4ABC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217199-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m66300_loc_10067300])
}
}

__declspec(naked) DWORD LEGO1_sub_100674A3()
{
	enum{
		arg1217192 = 0x4A4AA0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217192-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mBD170_loc_100BE170])
}
}

__declspec(naked) DWORD LEGO1_sub_100674B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_40 = -0x40,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6699F_proc_1006799F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x000001A0
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	PUSH 0x00
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EDX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8B5C0_sub_1008C5C0])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EBP+var_40+0x4]
	PUSH EDI
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8A950_sub_1008B950])
	ADD ESP, 0x10
	CMP EAX, 0x01
	JZ_LONG(offset [LEGO1_text.m6652D_loc_1006752D])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m6651A_loc_1006751A])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1006751A(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_loc_1006752D()
{
	enum{
		arg1217117 = 0x4A4974,
		arg1217124 = 0x4A4990,
		arg1217125 = 0x4A4994,
		arg1217133 = 0x4A49B4,
		arg1217138 = 0x4A49C8,
		arg1217143 = 0x4A49DC,
		arg1217154 = 0x4A4A08,
		arg1217161 = 0x4A4A24,
		arg1217173 = 0x4A4A54,
		arg1217201 = 0x4A4AC4,
		arg1217206 = 0x4A4AD8,
		arg1217207 = 0x4A4ADC,
		arg1217208 = 0x4A4AE0,
		arg1217209 = 0x4A4AE4,
		arg1217210 = 0x4A4AE8,
		arg1217211 = 0x4A4AEC,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217201-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.mBD050_sub_100BE050])
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000000
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217206-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217117-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	MOV EBX, 0x00000002
	MOV DWORD PTR [EBP+arg1217207-0x4A4B20],EAX
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x01
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDI, offset [LEGO1_rdata.m518_ptr]
	ADD EAX, 0x10
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH ECX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV DWORD PTR [EBP+arg1217208-0x4A4B20],0x00000000
	LEA ECX,DWORD PTR [EBP+arg1217133-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBP+arg1217133-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EDX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	LEA EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD EDX, 0x1C
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217138-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],EDX
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EDX
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBP+arg1217138-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217143-0x4A4B20]
	ADD EAX, 0x28
	MOV DWORD PTR [EBP+arg1217211-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EDI
	LEA EDI,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+arg1217143-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EAX,DWORD PTR [ESI+0x50]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x03
	LEA ECX,DWORD PTR [EAX+0x01]
	MOV DWORD PTR [ESI+0x50],ECX
	LEA ECX,DWORD PTR [EBP+arg1217125-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217124-0x4A4B20],EAX
	MOV EDX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EDX
	LEA EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	CALL_LONG(offset [LEGO1_text.m66984_sub_10067984])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],0x00000000
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV ECX, offset [LEGO1_data.m6A4_str]
loc_1006761F:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_1006763F
	OR DL, DL
	JZ loc_1006763B
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_1006763F
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_1006761F
loc_1006763B:
	XOR EAX, EAX
	JMP loc_10067644
loc_1006763F:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_10067644:
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m66875_loc_10067875])
	LEA ECX,DWORD PTR [EBP+arg1217154-0x4A4B20]
	MOV EBX, 0x00000002
	CALL_LONG(offset [LEGO1_text.m52440_sub_10053440])
	LEA EAX,DWORD PTR [EBP+arg1217117-0x4A4B20]
	PUSH offset [LEGO1_data.m124_str]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x04
	MOV DWORD PTR [EBP+arg1217154-0x4A4B20],offset [LEGO1_rdata.m1320_ptr]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x05
	LEA ECX,DWORD PTR [EBP+arg1217154-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217161-0x4A4B20],EAX
	CALL_LONG(offset [LEGO1_text.mB4410_sub_100B5410])
	MOV DWORD PTR [EBP+arg1217173-0x4A4B20],EAX
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217211-0x4A4B20],EAX
	MOV EAX, offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [EBP+arg1217210-0x4A4B20],EAX
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],ECX
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217212-0x4A4B20],EAX
	MOV EDX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217218-0x4A4B20],EDX
	LEA EDX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	LEA EAX,DWORD PTR [EBP+arg1217210-0x4A4B20]
	PUSH EAX
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+arg1217154-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m52730_sub_10053730])
	LEA ECX,DWORD PTR [EBP+arg1217117-0x4A4B20]
	MOV EDI,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI+0x18])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	CALL_LONG(offset [LEGO1_text.m6686A_sub_1006786A])
	JMP_LONG(offset [LEGO1_text.m666DF_loc_100676DF])
}
}

__declspec(naked) DWORD LEGO1_sub_1006786A()
{
	enum{
		arg1217154 = 0x4A4A08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217154-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m669C0_loc_100679C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10067937()
{
	enum{
		arg1217154 = 0x4A4A08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217154-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m525D0_loc_100535D0])
}
}

__declspec(naked) DWORD LEGO1_sub_10067979()
{
	enum{
		arg1217174 = 0x4A4A58,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217174-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m66A10_loc_10067A10])
}
}

__declspec(naked) DWORD LEGO1_sub_10067984()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1006798C()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10067994()
{
	enum{
		arg1217117 = 0x4A4974,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217117-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100679A9()
{
	enum{
		arg1217201 = 0x4A4AC4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217201-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mBD170_loc_100BE170])
}
}

__declspec(naked) DWORD LEGO1_sub_10067A07()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m525D0_loc_100535D0])
}
}

__declspec(naked) DWORD LEGO1_sub_10067A65()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB740_loc_1000C740])
}
}

__declspec(naked) DWORD LEGO1_sub_10067BB0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m66C0F_proc_10067C0F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4F98_ptr]
	MOV DWORD PTR [ESI+0x0000013C],0x41C80000
	MOV DWORD PTR [ESI+0x00000164],0x3F800000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10067E19()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_10068290(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	PUSH EAX
	MOV EDI, 0x00000001
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	MOV ESI, EAX
	PUSH offset [LEGO1_data.m1358_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ FAR loc_10068347
	PUSH offset [LEGO1_data.m1370_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100682DC
	MOV EDI, 0x00000002
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_100682DC:
	PUSH offset [LEGO1_data.m137C_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100682F8
	MOV EDI, 0x00000003
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_100682F8:
	PUSH offset [LEGO1_data.m1340_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_10068314
	MOV EDI, 0x00000004
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_10068314:
	PUSH offset [LEGO1_data.m1364_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_10068330
	MOV EDI, 0x00000005
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_10068330:
	PUSH offset [LEGO1_data.m134C_str]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_10068347
	MOV EDI, 0x00000006
loc_10068347:
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10068350()
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
	};

__asm{
	SUB ESP, 0x54
	PUSH ESI
	PUSH EDI
	PUSH 0x0F
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	CMP BYTE PTR [EAX+0x22],0x00
	JNZ FAR loc_10068416
	MOV BYTE PTR [EAX+0x22],0x01
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX,DWORD PTR [EAX+0x54]
	LEA EAX,DWORD PTR [ESP+var_40+0x5C]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x5C],EAX
	MOV DWORD PTR [ESP+var_48+0x5C],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	FLD DWORD PTR [EAX+0x28]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4F78]
	FSTP DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [EAX+0x24]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4F80]
	ADD EAX, 0x30
	FSTP DWORD PTR [ESP+var_54+0x5C]
	FLD DWORD PTR [EAX-0x10]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4F78]
	FST DWORD PTR [ESP+var_4C+0x5C]
	FADD DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x5C]
	ADD EAX, 0x34
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_54+0x5C]
	PUSH 0x01
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_44+0x74]
	PUSH 0x01
	ADD EAX, 0x38
	LEA ECX,DWORD PTR [ESP+var_48+0x78]
	PUSH ECX
	PUSH 0x00000359
	FLD DWORD PTR [EAX]
	FADD DWORD PTR [ESP+var_50+0x80]
	FSTP DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
loc_10068416:
	POP EDI
	POP ESI
	ADD ESP, 0x54
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10068420()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m6751C_proc_1006851C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x20]
	MOV EDI, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mD38_ptr]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mCD8_ptr]
	CALL_LONG(offset [LEGO1_text.mB44E0_sub_100B54E0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mBE8_ptr]
	CALL_LONG(offset [LEGO1_text.mB1760_sub_100B2760])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV DWORD PTR [ESI+0x00000084],0x00000000
	LEA EAX,DWORD PTR [ESI+0x000000B0]
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [ESI+0x000000AC],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m50C8_ptr]
	MOV DWORD PTR [ESI+0x000000A8],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000000A8],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.m676F0_sub_100686F0])
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10068670()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m676D2_proc_100686D2]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m50C8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m67770_sub_10068770])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m676C4_sub_100686C4])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m676DC_sub_100686DC])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

