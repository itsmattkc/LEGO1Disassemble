#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_1001BF60()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001BF72()
{
	enum{
		arg1217145 = 0x4A49E4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217145-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001BF80(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1AFF9_proc_1001BFF9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV BYTE PTR [ECX+0x10],AL
	MOV ESI, ECX
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x18],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [ESI+0x04],EDX
	MOV EDX,DWORD PTR [EBP+arg4+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI+0x0C],EDX
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1001C091()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1B010_loc_1001C010])
}
}

__declspec(naked) DWORD LEGO1_sub_1001C0A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1B10D_proc_1001C10D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
loc_1001C0C4:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x14]
	TEST EDX, EDX
	JNZ loc_1001C0E8
loc_1001C0CE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1B117_sub_1001C117])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
loc_1001C0E8:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOVZX ECX,SI
	MOV EAX,DWORD PTR [EAX+0x18]
	SUB EAX, EDX
	SAR EAX, 0x02
	CMP EAX, ECX
	JBE loc_1001C0CE
	MOVZX EAX,SI
	INC SI
	MOV ECX,DWORD PTR [EAX*4+EDX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_1001C0C4
}
}

__declspec(naked) DWORD LEGO1_sub_1001C117()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x10
	JMP_LONG(offset [LEGO1_text.m1B050_loc_1001C050])
}
}

__declspec(naked) DWORD LEGO1_sub_1001C130()
{
__asm{
	SUB ESP, 0x04
	MOV EAX,DWORD PTR [ECX+0x04]
	FILD DWORD PTR [EAX+0x08]
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001C140()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1B1D8_proc_1001C1D8]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX-0x1C]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [ECX-0x20],offset [LEGO1_rdata.m1510_ptr]
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+ESI-0x1C],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ECX-0x1C]
	XOR ESI, ESI
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [EAX+EDX-0x20],ECX
loc_1001C18A:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX-0x14]
	TEST EAX, EAX
	JNZ loc_1001C1AF
loc_1001C194:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1B1E2_sub_1001C1E2])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
loc_1001C1AF:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EDX-0x10]
	SUB ECX, EAX
	SAR ECX, 0x02
	CMP ECX, ESI
	JBE loc_1001C194
	MOV EDI,DWORD PTR [ESI*4+EAX]
	TEST EDI, EDI
	JZ loc_1001C1D5
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1B0A0_sub_1001C0A0])
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1001C1D5:
	INC ESI
	JMP loc_1001C18A
}
}

__declspec(naked) DWORD LEGO1_sub_1001C1E2()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x18
	JMP_LONG(offset [LEGO1_text.mCA60_loc_1000DA60])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1001C240(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX-0x1C]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESI+EDX-0x1C]
	CALL_LONG(offset [LEGO1_text.m2D740_sub_1002E740])
	CMP WORD PTR DS:[ESI-0x08],0x00
	JL loc_1001C27D
	MOV EBX,DWORD PTR [ESI-0x20]
	SUB ESI, 0x20
	LEA EAX,DWORD PTR [ESP+var_4+0x10]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX])
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	PUSH EDI
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x04])
loc_1001C27D:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1001C290(DWORD arg1)
{
	enum{
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x4C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX-0x1C]
	PUSH EDI
	MOV EBX, ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBX+ECX+0x68]
	TEST DWORD PTR [EAX],0x7FFFFFFF
	JNZ loc_1001C2B6
	FLD DWORD PTR [ESP+arg1+0x58]
	FSUB DWORD PTR [offset LEGO1_rdata + 0x2254]
	FSTP DWORD PTR [EAX]
loc_1001C2B6:
	MOV EAX,DWORD PTR [EBX-0x1C]
	MOV ECX,DWORD PTR [EAX+0x04]
	ADD ECX, EBX
	CMP DWORD PTR [ECX+0x000000C0],0x00
	JNZ loc_1001C33E
	CMP BYTE PTR [ECX+0x000000CE],0x00
	JNZ loc_1001C33E
	CMP DWORD PTR [ECX+0x34],0x00
	JG loc_1001C33E
	CMP WORD PTR DS:[EBX-0x08],0x00
	JL loc_1001C319
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
	LEA EAX,DWORD PTR [ESP+var_40+0x58]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_44+0x58],EAX
	MOV ESI,DWORD PTR [ECX+0x000000D4]
	MOV ECX, 0x00000010
	REP MOVSD
	LEA ESI,DWORD PTR [EBX-0x20]
	LEA EAX,DWORD PTR [ESP+var_4C+0x58]
	MOV EDI,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI])
	LEA EAX,DWORD PTR [ESP+var_4C+0x5C]
	MOV ECX,DWORD PTR [ESP+var_50+0x5C]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EDI+0x04])
loc_1001C319:
	MOV EAX,DWORD PTR [EBX-0x1C]
	MOV EDX,DWORD PTR [ESP+r+0x5C]
	MOV ECX,DWORD PTR [EAX+0x04]
	POP EDI
	POP ESI
	MOV DWORD PTR [EBX+ECX+0x64],EDX
	MOV EAX,DWORD PTR [EBX-0x1C]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, EBX
	POP EBX
	MOV EDX,DWORD PTR [EAX+0x64]
	MOV DWORD PTR [EAX+0x68],EDX
	ADD ESP, 0x4C
	RETN 0x0004
loc_1001C33E:
	MOV EAX,DWORD PTR [ESP+arg1+0x58]
	SUB ECX, 0x1C
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2D790_sub_1002E790])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x4C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001C360(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217223 = 0x4A4B1C,
		arg1217225 = 0x4A4B24,
		arg1217246 = 0x4A4B78,
		arg1217259 = 0x4A4BAC,
	};

__asm{
	CMP DWORD PTR [ESP+arg1],0x80000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	JA FAR loc_1001C444
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOVSX EAX,WORD PTR [ESI+0x18]
	MOV EDX,DWORD PTR [EAX*4+ECX]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EBP,DWORD PTR [EAX+0x04]
	ADD EBP, ESI
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV ECX,DWORD PTR [EDX+0x0C]
	MOV EAX,DWORD PTR [EBP+arg1217259-0x4A4B20]
	TEST BYTE PTR [EAX+0x0C],0x10
	JZ loc_1001C3CC
	MOV EDX,DWORD PTR [EBP+arg1217246-0x4A4B20]
	XOR EAX, EAX
	TEST ECX, ECX
	MOV BYTE PTR [EDX+0x0C],AL
	JZ FAR loc_1001C43B
loc_1001C3A8:
	MOV EBX,DWORD PTR [EDI]
	TEST EBX, EBX
	JZ loc_1001C3BD
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV EBP,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [ESI+EBP+arg1217246-0x4A4B20],EBX
	JZ loc_1001C3BD
	MOV BYTE PTR [EBX+0x0C],AL
loc_1001C3BD:
	ADD EDI, 0x04
	DEC ECX
	JNZ loc_1001C3A8
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_1001C3CC:
	MOV EAX,DWORD PTR [EDX+0x04]
	TEST ECX, ECX
	MOV EDX,DWORD PTR [EBP+arg1217246-0x4A4B20]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV BYTE PTR [EDX+0x0C],0x01
	JZ loc_1001C3FB
	MOV EDX, EDI
loc_1001C3DF:
	MOV EAX,DWORD PTR [EDX]
	TEST EAX, EAX
	JZ loc_1001C3F5
	MOV EBP,DWORD PTR [ESI+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [ESI+EBP+arg1217246-0x4A4B20],EAX
	JZ loc_1001C3F5
	MOV BYTE PTR [EAX+0x0C],0x01
loc_1001C3F5:
	ADD EDX, 0x04
	DEC ECX
	JNZ loc_1001C3DF
loc_1001C3FB:
	XOR EBP, EBP
loc_1001C3FD:
	CMP DWORD PTR [EBX+0x08],EBP
	JBE loc_1001C425
	FLD DWORD PTR [ESP+arg1+0x10]
	PUSH EDI
	INC EBP
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX,DWORD PTR [EBX+0x0C]
	MOV EAX,DWORD PTR [ESP+arg2+0x18]
	MOV EDX,DWORD PTR [EBP*4+ECX+arg1217223-0x4A4B20]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mA7E80_sub_100A8E80])
	ADD ESP, 0x10
	JMP loc_1001C3FD
loc_1001C425:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	ADD ECX, ESI
	CMP BYTE PTR [ECX+0x5C],0x00
	JZ loc_1001C43B
	ADD ECX, 0x04
	CALL_LONG(offset [LEGO1_text.mFC30_sub_10010C30])
loc_1001C43B:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_1001C444:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1001C7C0()
{
__asm{
	MOV EDX,DWORD PTR [ECX+0x04]
	TEST EDX, EDX
	JNZ loc_1001C7CA
	XOR EAX, EAX
	RET
loc_1001C7CA:
	MOV EAX,DWORD PTR [ECX+0x08]
	SUB EAX, EDX
	SAR EAX, 0x02
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001C7E0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP EDX, EAX
	JZ loc_1001C7F3
loc_1001C7EC:
	ADD EAX, 0x04
	CMP EDX, EAX
	JNZ loc_1001C7EC
loc_1001C7F3:
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1001C870(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV EAX,DWORD PTR [ECX-0x1C]
	CMP DWORD PTR [ESP+arg1+0x4],0x80000000
	PUSH ESI
	MOV EDX,DWORD PTR [EAX+0x04]
	PUSH EDI
	JBE loc_1001C88D
	MOV DWORD PTR [ECX+EDX+0x34],0x00000000
	JMP loc_1001C895
loc_1001C88D:
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV DWORD PTR [ECX+EDX+0x34],EBX
loc_1001C895:
	MOV ESI,DWORD PTR [ECX-0x14]
	TEST ESI, ESI
	JZ loc_1001C915
	MOV EDX,DWORD PTR [ECX-0x10]
	SUB EDX, ESI
	SAR EDX, 0x02
	TEST EDX, EDX
	JZ loc_1001C915
	MOV EBX, 0x00000000
	MOV EAX,DWORD PTR [ECX-0x1C]
	MOV WORD PTR DS:[ECX-0x08],0x0000
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP ESI, 0x01
	ADC EBX, -0x01
	LEA EDI,DWORD PTR [ECX+EAX+0x34]
	AND EBX, EDX
	MOV EBX,DWORD PTR [EBX*4+ESI-0x04]
	FLD DWORD PTR [EBX]
	FCOMP DWORD PTR [EDI]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1001C8F0
	TEST ESI, ESI
	JNZ loc_1001C8E4
	MOV WORD PTR DS:[ECX-0x08],0xFFFF
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1001C8E4:
	DEC DX
	POP EDI
	MOV WORD PTR DS:[ECX-0x08],DX
	POP ESI
	POP EBX
	RETN 0x0004
loc_1001C8F0:
	XOR EBX, EBX
loc_1001C8F2:
	TEST ESI, ESI
	JNZ loc_1001C8FC
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1001C8FC:
	CMP EBX, EDX
	JNB loc_1001C915
	MOV EAX,DWORD PTR [EBX*4+ESI]
	FLD DWORD PTR [EAX]
	FCOMP DWORD PTR [EDI]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1001C911
	INC EBX
	JMP loc_1001C8F2
loc_1001C911:
	MOV WORD PTR DS:[ECX-0x08],BX
loc_1001C915:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1001C920(DWORD arg1)
{
	enum{
		var_100 = -0x100,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000100
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX-0x1C]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10C]
	PUSH EDI
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [ESI+EDX-0x1C]
	CALL_LONG(offset [LEGO1_text.m2E020_sub_1002F020])
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV EBX, EAX
	TEST EBX, EBX
	JZ loc_1001C9CB
	PUSH EDI
	MOV EAX, DWORD PTR [offset LEGO1_data.m1204C_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x110]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mB6050_sub_100B7050])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ loc_1001C9CB
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	LEA ECX,DWORD PTR [ESP+var_100+0x10C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1001C9CB
loc_1001C97C:
	PUSH EAX
	MOV ECX, EBX
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1001C9B7
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1001C9B7
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP]
	LEA EAX,DWORD PTR [ESI-0x20]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
loc_1001C9B7:
	MOV EAX, DWORD PTR [offset LEGO1_data.m120E4_ptr]
	PUSH EAX
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m8A4C0_sub_1008B4C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1001C97C
loc_1001C9CB:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000100
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001C9E0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg2]
	PUSH ESI
	TEST ECX, ECX
	JZ loc_1001CA01
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg3+0x4]
loc_1001C9F1:
	TEST EAX, EAX
	JZ loc_1001C9F9
	MOV ESI,DWORD PTR [EDX]
	MOV DWORD PTR [EAX],ESI
loc_1001C9F9:
	DEC ECX
	ADD EAX, 0x04
	TEST ECX, ECX
	JNZ loc_1001C9F1
loc_1001CA01:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001CA10(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg2]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EAX,DWORD PTR [ESP+arg3+0x4]
	CMP EDX, ECX
	JZ loc_1001CA35
loc_1001CA21:
	TEST EAX, EAX
	JZ loc_1001CA29
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EAX],ESI
loc_1001CA29:
	ADD EAX, 0x04
	ADD ECX, 0x04
	CMP EDX, ECX
	JNZ loc_1001CA21
	POP ESI
	RET
loc_1001CA35:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1___0LegoWorld__QAE_XZ()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1BCEE_proc_1001CCEE]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x14]
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m1C190_sub_1001D190])
	LEA EAX,DWORD PTR [ESI+0x1C]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA ECX,DWORD PTR [ESI+0x28]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	LEA ECX,DWORD PTR [ESI+0x3C]
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m858_ptr]
	CALL_LONG(offset [LEGO1_text.mF5F0_sub_100105F0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	LEA ECX,DWORD PTR [ESI+0x68]
	CALL_LONG(offset [LEGO1_text.m1C240_sub_1001D240])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [ESI+0x68],offset [LEGO1_rdata.m2320_ptr]
	MOV DWORD PTR [ESI+0x74],offset [LEGO1_text.m1C3C0_proc_1001D3C0]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	LEA ECX,DWORD PTR [ESI+0x00000080]
	MOV EDI, offset [LEGO1_text.m1BD30_proc_1001CD30]
	MOV DWORD PTR [ESI+0x68],offset [LEGO1_rdata.m2338_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m1BD40_sub_1001CD40])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV DWORD PTR [ESI+0x0000008C],EDI
	MOV DWORD PTR [ESI+0x00000080],offset [LEGO1_rdata.m22F0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [ESI+0x00000080],offset [LEGO1_rdata.m2308_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV BYTE PTR [ESI+0x000000A8],AL
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [ESI+0x000000A9],CL
	MOV DWORD PTR [ESI+0x000000B0],EBX
	LEA ECX,DWORD PTR [ESI+0x000000A8]
	CALL_LONG(offset [LEGO1_text.m1CD30_sub_1001DD30])
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	LEA ECX,DWORD PTR [ESI+0x000000B8]
	CALL_LONG(offset [LEGO1_text.m1BD40_sub_1001CD40])
	MOV BYTE PTR [EBP+var_8+0x4],0x0B
	MOV DWORD PTR [ESI+0x000000B8],offset [LEGO1_rdata.m22F0_ptr]
	MOV DWORD PTR [ESI+0x000000C4],EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	MOV DWORD PTR [ESI+0x000000B8],offset [LEGO1_rdata.m2308_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x0D
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [ESI+0x000000D0],AL
	LEA EDI,DWORD PTR [ESI+0x000000E0]
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [ESI+0x000000D1],CL
	MOV DWORD PTR [ESI+0x000000D8],EBX
	LEA ECX,DWORD PTR [ESI+0x000000D0]
	CALL_LONG(offset [LEGO1_text.m1CD30_sub_1001DD30])
	PUSH EBX
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x10
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	PUSH EBX
	MOV BYTE PTR [EDI],AL
	CALL_LONG(offset [LEGO1_text.m1CE60_sub_1001DE60])
	MOV DWORD PTR [ESI+0x000000E4],EAX
	MOV DWORD PTR [ESI+0x000000E8],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x12
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2280_ptr]
	MOV DWORD PTR [ESI+0x00000098],EBX
	MOV DWORD PTR [ESI+0x0000009C],EBX
	MOV DWORD PTR [ESI+0x000000A0],EBX
	PUSH ESI
	MOV BYTE PTR [ESI+0x000000A4],BL
	MOV DWORD PTR [ESI+0x000000F0],EBX
	MOV BYTE PTR [ESI+0x000000F6],BL
	MOV WORD PTR DS:[ESI+0x000000F4],0x0004
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001CD40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1BDAF_proc_1001CDAF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2350_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m1BD30_proc_1001CD30]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2368_ptr]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001CE17()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001CEA3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BDD0_loc_1001CDD0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001CF09()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BF20_loc_1001CF20])
}
}

__declspec(naked) DWORD LEGO1_sub_1001CF61()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BE20_loc_1001CE20])
}
}

__declspec(naked) DWORD LEGO1_sub_1001CFCF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D07B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BDD0_loc_1001CDD0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D0E9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BE20_loc_1001CE20])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D141()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1BF20_loc_1001CF20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001D150(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m518_ptr]
	MOV EAX, ECX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001D170()
{
__asm{
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m488_ptr]
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001D190()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1C1F5_proc_1001D1F5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1390_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001D240()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1C2AF_proc_1001D2AF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2380_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_text.m1C320_proc_1001D320]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2398_ptr]
	MOV DWORD PTR [ESI+0x14],EAX
	MOV DWORD PTR [ESI+0x10],EAX
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001D317()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D3B3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C2D0_loc_1001D2D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D429()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C440_loc_1001D440])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D481()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C330_loc_1001D330])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D4EF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D59B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C2D0_loc_1001D2D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D609()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C330_loc_1001D330])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D661()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C440_loc_1001D440])
}
}

__declspec(naked) DWORD LEGO1_sub_1001D850()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D86E
loc_1001D85D:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D86B
	MOV EDX, EAX
	JMP loc_1001D85D
loc_1001D86B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_1001D86E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_1001D882
loc_1001D876:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_1001D876
loc_1001D882:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_1001D88B
	MOV DWORD PTR [ECX],EDX
loc_1001D88B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001D890(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D8BA
loc_1001D8AC:
	MOV ECX,DWORD PTR [EAX]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D8DF
	MOV EAX, ECX
	JMP loc_1001D8AC
loc_1001D8BA:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_1001D8D6
loc_1001D8C6:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1001D8C6
loc_1001D8D6:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_1001D8E3
loc_1001D8DF:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_1001D8E3:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D917
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D913
loc_1001D8FE:
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D90C
	MOV EDX, EAX
	JMP loc_1001D8FE
loc_1001D90C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_1001D921
loc_1001D913:
	MOV EDX, EBX
	JMP loc_1001D921
loc_1001D917:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_1001D921:
	CMP DWORD PTR [ESP+var_4+0x14],ECX
	JNZ FAR loc_1001D9BA
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1001D94B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1001D94B
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1001D94D
loc_1001D94B:
	MOV DWORD PTR [EAX],EDX
loc_1001D94D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_1001D97E
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A0]
	CMP DWORD PTR [EDI],EAX
	JZ loc_1001D975
	MOV EAX, EDX
loc_1001D963:
	MOV EDI,DWORD PTR [EAX]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D971
	MOV EAX, EDI
	JMP loc_1001D963
loc_1001D971:
	MOV DWORD PTR [EBX],EAX
	JMP loc_1001D97E
loc_1001D975:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_1001D97E:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_1001DA1A
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1001D9AF
	MOV EAX, EDX
loc_1001D99C:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001D9AB
	MOV EAX, EBX
	JMP loc_1001D99C
loc_1001D9AB:
	MOV DWORD PTR [EDI],EAX
	JMP loc_1001DA1A
loc_1001D9AF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_1001DA1A
loc_1001D9BA:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_1001D9CE
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_1001D9E3
loc_1001D9CE:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_1001D9E3:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001D9FD
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001D9FD
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1001D9FF
loc_1001D9FD:
	MOV DWORD PTR [EAX],ECX
loc_1001D9FF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x10
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x10]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_1001DA1A:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_1001DCC2
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_1001DCBB
loc_1001DA30:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_1001DCBB
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDI, EDX
	JNZ loc_1001DABB
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_1001DAA0
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX+0x08]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EAX+0x08],EDI
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DA77
	MOV DWORD PTR [EDI+0x04],EAX
loc_1001DA77:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_1001DA93
	MOV EDI,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDI],EAX
	JZ loc_1001DA93
	MOV DWORD PTR [EDI+0x08],EBP
	JMP loc_1001DA95
loc_1001DA93:
	MOV DWORD PTR [EDI],EBP
loc_1001DA95:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1001DAA0:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1001DB44
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1001DB44
	JMP loc_1001DB2A
loc_1001DABB:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_1001DB11
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX]
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EAX],EDI
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DAE8
	MOV DWORD PTR [EDI+0x04],EAX
loc_1001DAE8:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_1001DB05
	MOV EDI,DWORD PTR [EAX+0x04]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JZ loc_1001DB05
	MOV EDI,DWORD PTR [EAX+0x04]
loc_1001DB05:
	MOV DWORD PTR [EDI],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1001DB11:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1001DC0D
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_1001DC0D
loc_1001DB2A:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_1001DA30
	JMP FAR loc_1001DCBB
loc_1001DB44:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_1001DB9F
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DB72
	MOV DWORD PTR [EAX+0x04],EDI
loc_1001DB72:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DB91
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DB91
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_1001DB93
loc_1001DB91:
	MOV DWORD PTR [EAX],EBX
loc_1001DB93:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_1001DB9F:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DBD1
	MOV DWORD PTR [EAX+0x04],EDI
loc_1001DBD1:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DC01
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DBF5
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_1001DCBB
loc_1001DBF5:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_1001DCBB
loc_1001DC01:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_1001DCBB
loc_1001DC0D:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_1001DC63
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DC3B
	MOV DWORD PTR [EAX+0x04],EDI
loc_1001DC3B:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DC57
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1001DC57
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1001DC59
loc_1001DC57:
	MOV DWORD PTR [EAX],EBX
loc_1001DC59:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_1001DC63:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DC94
	MOV DWORD PTR [EAX+0x04],EBX
loc_1001DC94:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1001DCB3
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1001DCB3
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_1001DCB5
loc_1001DCB3:
	MOV DWORD PTR [EAX],EDI
loc_1001DCB5:
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EBX+0x04],EDI
loc_1001DCBB:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_1001DCC2:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001DCF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP ESI,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_1001DD23
loc_1001DD03:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1CCF0_sub_1001DCF0])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_1001DD03
loc_1001DD23:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001DD30()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1CDC2_proc_1001DDC2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x11A0],ESI
	JNZ loc_1001DD7F
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x11A0], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A0]
	MOV DWORD PTR [EAX+0x08],ESI
loc_1001DD7F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1CDCC_sub_1001DDCC])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11A0]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR EDX, EDX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],EDX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x0C],EDX
	POP ESI
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001DDCC()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001DE60(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_1001DE7E
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_1001DE7E:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1001DED1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1C780_loc_1001D780])
}
}

__declspec(naked) DWORD LEGO1_sub_1001DF41()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CE90_loc_1001DE90])
}
}

__declspec(naked) DWORD LEGO1_sub_1001DF91()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CDF0_loc_1001DDF0])
}
}

__declspec(naked) DWORD LEGO1___1LegoWorld__UAE_XZ()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1D092_proc_1001E092]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2280_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000006
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m1D9D0_sub_1001E9D0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	CALL_LONG(offset [LEGO1_text.m1D041_sub_1001E041])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m1D04F_sub_1001E04F])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m1D05D_sub_1001E05D])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m1D06B_sub_1001E06B])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m1D079_sub_1001E079])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m1D087_sub_1001E087])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1D09C_sub_1001E09C])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001E041()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000E0
	JMP_LONG(offset [LEGO1_text.m1CF50_loc_1001DF50])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E04F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000D0
	JMP_LONG(offset [LEGO1_text.m1CF00_loc_1001DF00])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E05D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000B8
	JMP_LONG(offset [LEGO1_text.m1C100_loc_1001D100])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E06B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x000000A8
	JMP_LONG(offset [LEGO1_text.m1CF00_loc_1001DF00])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E079()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x00000080
	JMP_LONG(offset [LEGO1_text.m1C100_loc_1001D100])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E087()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x68
	JMP_LONG(offset [LEGO1_text.m1C620_loc_1001D620])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E09C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB290___1LegoEntity__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E0B0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1D2B3_proc_1001E2B3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x04
	ADD EAX, 0x20
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX-0x04]
	PUSH EAX
	MOV DWORD PTR [ESI+0x08],ECX
	LEA ECX,DWORD PTR [ESI+0x0C]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m1D16A_loc_1001E16A])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2410_ptr]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m1D350_proc_1001E350]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2428_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x14],EBX
	MOV DWORD PTR [EDI+0x10],EBX
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2440_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m1D3F0_proc_1001E3F0]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m2458_ptr]
	JMP_LONG(offset [LEGO1_text.m1D16C_loc_1001E16C])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E14A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E152()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D300_loc_1001E300])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E15A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D360_loc_1001E360])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E162()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D470_loc_1001E470])
}
}

__declspec(naked) DWORD LEGO1_loc_1001E16A()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m1D16C_loc_1001E16C])
}
}

__declspec(naked) DWORD LEGO1_loc_1001E16C()
{
	enum{
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x0000009C],EAX
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m1D195_loc_1001E195])
	JMP_LONG(offset [LEGO1_text.m1D17D_loc_1001E17D])
}
}

__declspec(naked) DWORD LEGO1_loc_1001E17D()
{
__asm{
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m1D182_loc_1001E182])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1001E182(DWORD arg1)
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_loc_1001E195()
{
	enum{
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	PUSH 0x18
	MOV EBX, 0x00000005
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],EBX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m1D229_loc_1001E229])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x06
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x08
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m23B0_ptr]
	MOV DWORD PTR [EDI+0x08],0x00000000
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m1D6D0_proc_1001E6D0]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x09
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m23C8_ptr]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],BL
	MOV DWORD PTR [EDI+0x14],0x00000000
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m23E0_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m1D770_proc_1001E770]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m23F8_ptr]
	JMP_LONG(offset [LEGO1_text.m1D22B_loc_1001E22B])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E209()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E211()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D680_loc_1001E680])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E219()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D6E0_loc_1001E6E0])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E221()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D7F0_loc_1001E7F0])
}
}

__declspec(naked) DWORD LEGO1_loc_1001E229()
{
__asm{
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m1D22B_loc_1001E22B])
}
}

__declspec(naked) DWORD LEGO1_loc_1001E22B()
{
	enum{
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x000000A0],EAX
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m1D17D_loc_1001E17D])
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x54])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m1D17D_loc_1001E17D])
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	TEST BYTE PTR [EAX+0x30],0x20
	JZ loc_1001E28B
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ loc_1001E26F
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	PUSH 0x00
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x68])
loc_1001E26F:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m148F0_sub_100158F0])
	ADD ESP, 0x04
	LEA EAX,DWORD PTR [ESI+0x000000B8]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27DF0_sub_10028DF0])
loc_1001E28B:
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m149C0_sub_100159C0])
	ADD ESP, 0x04
	XOR EAX, EAX
	MOV DWORD PTR [ESI+0x000000EC],0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m1D182_loc_1001E182])
}
}

__declspec(naked) DWORD LEGO1_proc_1001E2A6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1001E347()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E3E3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D300_loc_1001E300])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E459()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D470_loc_1001E470])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E4B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D360_loc_1001E360])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E51F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E5CB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D300_loc_1001E300])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E639()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D360_loc_1001E360])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E6C7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E763()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D680_loc_1001E680])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E7D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D7F0_loc_1001E7F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E831()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D6E0_loc_1001E6E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E89F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E94B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D680_loc_1001E680])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E9B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1D6E0_loc_1001E6E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001E9D0()
{
	enum{
		var_4C = -0x4C,
		var_48 = -0x48,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1DEBE_proc_1001EEBE]
	PUSH EAX
	MOV BYTE PTR [ECX+0x000000A4],0x01
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x3C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	CMP EAX,DWORD PTR [EBP+var_14+0x4]
	JNZ loc_1001EA1A
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27DF0_sub_10028DF0])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m148F0_sub_100158F0])
	ADD ESP, 0x04
loc_1001EA1A:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [ECX+0x78]
loc_1001EA20:
	TEST ESI, ESI
	JZ loc_1001EA40
	MOV EDI,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(DWORD PTR [ECX+0x74])
	ADD ESP, 0x04
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ESI, EDI
	JMP loc_1001EA20
loc_1001EA40:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x70],EAX
	MOV DWORD PTR [ECX+0x7C],EAX
	MOV DWORD PTR [ECX+0x78],EAX
	MOV ECX,DWORD PTR [ECX+0x00000098]
	TEST ECX, ECX
	JZ loc_1001EA6B
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x00000098],0x00000000
loc_1001EA6B:
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	ADD EAX, 0x00000080
	MOV DWORD PTR [EBP+var_2C+0x4],EBX
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EAX, 0xFFFFFFFF
loc_1001EAB5:
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	CMP ECX, EBX
	JZ loc_1001EAC7
	MOV ECX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1001EAC7:
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	JZ loc_1001EB45
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m215E0_sub_100225E0])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EBX
	MOV ESI,DWORD PTR [EAX+0x1C]
	TEST ESI, ESI
	JZ loc_1001EAB5
	MOV EDI,DWORD PTR [EAX]
	PUSH offset [LEGO1_data.m6E4_str]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDI+0x10])
	TEST AL, AL
	JZ loc_1001EB2B
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV AX,WORD PTR DS:[ECX+0x000000D4]
	ADD ECX, 0x000000D4
	TEST AX, AX
	JZ loc_1001EB0F
	DEC AX
	MOV WORD PTR DS:[ECX],AX
loc_1001EB0F:
	CMP WORD PTR DS:[ECX],BX
	JNZ loc_1001EAB5
	PUSH EBX
	PUSH 0x00000080
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(DWORD PTR [EDI+0x40])
	JMP loc_1001EAB5
loc_1001EB2B:
	PUSH EBX
	PUSH 0x00000080
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(DWORD PTR [EDI+0x40])
	JMP FAR loc_1001EAB5
loc_1001EB45:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x000000B4],0x00
	JZ loc_1001EBB8
	LEA ESI,DWORD PTR [ECX+0x000000A8]
loc_1001EB57:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000AC]
	MOV ECX, ESI
	MOV EDX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [EBP+var_4C+0x4]
	PUSH EDX
	PUSH EAX
	MOV EDI,DWORD PTR [EDX+0x0C]
	CALL_LONG(offset [LEGO1_text.m1C890_sub_1001D890])
	MOV EBX,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JZ loc_1001EBA2
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV EAX,DWORD PTR [EDI+0x1C]
	TEST EAX, EAX
	JZ loc_1001EBAC
	PUSH 0x00
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x40])
	JMP loc_1001EBAC
loc_1001EBA2:
	TEST EDI, EDI
	JZ loc_1001EBAC
	PUSH 0x01
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX])
loc_1001EBAC:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x000000B4],0x00
	JNZ loc_1001EB57
loc_1001EBB8:
	LEA ECX,DWORD PTR [EBP+var_48+0x4]
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_3C+0x4],ESI
	MOV DWORD PTR [EBP+var_48+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_48+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_48+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	ADD EAX, 0x000000B8
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	MOV EAX, 0x00000003
loc_1001EBFA:
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	CMP ECX, ESI
	JZ loc_1001EC0C
	MOV ECX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1001EC0C:
	CMP DWORD PTR [EBP+var_3C+0x4],ESI
	JZ loc_1001EC45
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV ECX,DWORD PTR [EBP+var_40+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m215E0_sub_100225E0])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_3C+0x4],ESI
	MOV EAX,DWORD PTR [EAX+0x1C]
	TEST EAX, EAX
	JZ loc_1001EBFA
	PUSH ESI
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x40])
	JMP loc_1001EBFA
loc_1001EC45:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x000000EC]
	CMP EAX, -0x01
	JZ loc_1001EC75
	CMP DWORD PTR [ECX+0x000000DC],0x00
	JNZ loc_1001EC75
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m253A0_sub_100263A0])
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2EB30_sub_1002FB30])
loc_1001EC75:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	XOR ESI, ESI
	MOV EDI,DWORD PTR [ECX+0x0000009C]
	TEST EDI, EDI
	JZ FAR loc_1001ED2A
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24E8_ptr]
	MOV EAX, 0x00000007
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	MOV EBX, 0x00000002
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24B8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x0A
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24D0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x0B
loc_1001ECC5:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP ECX, ESI
	JZ loc_1001ECD7
	MOV ECX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1001ECD7:
	CMP DWORD PTR [EBP+var_1C+0x4],ESI
	JZ loc_1001ED01
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m21630_sub_10022630])
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	TEST BYTE PTR [EAX+0x11],BL
	JNZ loc_1001ECC5
	CMP EAX, ESI
	JZ loc_1001ECC5
	PUSH 0x01
	MOV EDI,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDI])
	JMP loc_1001ECC5
loc_1001ED01:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [ECX+0x0000009C]
	TEST ECX, ECX
	JZ loc_1001ED14
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1001ED14:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [ECX+0x0000009C],0x00000000
	CALL_LONG(offset [LEGO1_text.m1DDC6_sub_1001EDC6])
loc_1001ED2A:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	XOR ESI, ESI
	MOV EDI,DWORD PTR [ECX+0x000000A0]
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m1DDF7_loc_1001EDF7])
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x0C
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24A0_ptr]
	MOV EAX, 0x00000007
	MOV DWORD PTR [EBP+var_20+0x4],EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x0D
	MOV BYTE PTR [EBP+var_8+0x4],0x0E
	MOV BYTE PTR [EBP+var_8+0x4],0x0F
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2500_ptr]
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2518_ptr]
loc_1001ED75:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP ECX, ESI
	JZ loc_1001ED87
	MOV ECX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1001ED87:
	CMP DWORD PTR [EBP+var_1C+0x4],ESI
	JZ_LONG(offset [LEGO1_text.m1DDCE_loc_1001EDCE])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m21680_sub_10022680])
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x40]
	CALL_LONG(offset [LEGO1_text.m3CC40_sub_1003DC40])
	JMP loc_1001ED75
}
}

__declspec(naked) DWORD LEGO1_sub_1001EDC6()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_1001EE47()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E540_loc_1001F540])
}
}

__declspec(naked) DWORD LEGO1_sub_1001EE9E()
{
	enum{
		arg1217207 = 0x4A4ADC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001EEC8()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_proc_1001EED0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1DF1F_proc_1001EF1F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m1DF29_sub_1001EF29])
	TEST BYTE PTR [EBP+arg1+0x4],0x01
	JZ loc_1001EF0C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1001EF0C:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001EF29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1DF40_loc_1001EF40])
}
}

__declspec(naked) DWORD LEGO1_sub_1001EF81()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E070_loc_1001F070])
}
}

__declspec(naked) DWORD LEGO1_sub_1001EFE9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F059()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E070_loc_1001F070])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F0B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F101()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1DF40_loc_1001EF40])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F169()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E180_loc_1001F180])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F1C1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E2B0_loc_1001F2B0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F229()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F299()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E2B0_loc_1001F2B0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F2F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F341()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E180_loc_1001F180])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F3A9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E3C0_loc_1001F3C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F401()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E4F0_loc_1001F4F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F469()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F4D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E4F0_loc_1001F4F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F531()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F581()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E3C0_loc_1001F3C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001F590(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH ESI
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX, ECX
	MOV DWORD PTR [ESP+arg2+0x8],ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX],ECX
	POP ESI
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001F5E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP EAX, 0x02
	JZ loc_1001F5FE
	CMP EAX, 0x15
	JZ loc_1001F615
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_1001F5FE:
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV EDI, 0x00000001
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
loc_1001F615:
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x64
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001F720(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1E81D_proc_1001F81D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EDI, EDI
	ADD ESI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1001F78B:
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JNZ loc_1001F798
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001F79E
loc_1001F798:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001F79E:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_1001F7F2
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001F7F2
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg4+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	PUSH EBX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m44C20_sub_10045C20])
	TEST EAX, EAX
	JNZ loc_1001F78B
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1E827_sub_1001F827])
	XOR EAX, EAX
loc_1001F7DF:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0018
loc_1001F7F2:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1E827_sub_1001F827])
	MOV EAX, 0xFFFFFFFF
	JMP loc_1001F7DF
}
}

__declspec(naked) DWORD LEGO1_sub_1001F827()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F889()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E8A0_loc_1001F8A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F8E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E9D0_loc_1001F9D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F949()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001F9B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E9D0_loc_1001F9D0])
}
}

__declspec(naked) DWORD LEGO1_sub_1001FA11()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1001FA61()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E8A0_loc_1001F8A0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FA70(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1EB57_proc_1001FB57]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_1001FAD7:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1001FAE4
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001FAEA
loc_1001FAE4:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001FAEA:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1001FB2C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001FB2C
	PUSH EDI
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m456A0_sub_100466A0])
	TEST EAX, EAX
	JNZ loc_1001FAD7
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EB61_sub_1001FB61])
	XOR EAX, EAX
loc_1001FB1A:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1001FB2C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EB61_sub_1001FB61])
	MOV EAX, 0xFFFFFFFF
	JMP loc_1001FB1A
}
}

__declspec(naked) DWORD LEGO1_sub_1001FB61()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FB70(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1EC65_proc_1001FC65]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	XOR EDI, EDI
	ADD ESI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	MOV DWORD PTR [EBP+var_14+0x4],EDI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
loc_1001FBDB:
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JNZ loc_1001FBE8
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001FBEE
loc_1001FBE8:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001FBEE:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	JZ loc_1001FC3A
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EDI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001FC3A
	MOV EAX,DWORD PTR [EBP+arg4+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	PUSH ECX
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m45050_sub_10046050])
	TEST EAX, EAX
	JNZ loc_1001FBDB
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EC6F_sub_1001FC6F])
	XOR EAX, EAX
loc_1001FC27:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0010
loc_1001FC3A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EC6F_sub_1001FC6F])
	MOV EAX, 0xFFFFFFFF
	JMP loc_1001FC27
}
}

__declspec(naked) DWORD LEGO1_sub_1001FC6F()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FC80(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1ED51_proc_1001FD51]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_1001FCE7:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1001FCF4
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001FCFA
loc_1001FCF4:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001FCFA:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1001FD1C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001FD1C
	PUSH EDI
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	TEST EAX, EAX
	JNZ loc_1001FCE7
loc_1001FD1C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1ED5B_sub_1001FD5B])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001FD5B()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FD70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_1001FD9A
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ECX]
loc_1001FD84:
	CMP DWORD PTR [EDX+0x0C],ECX
	JL loc_1001FD8F
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_1001FD92
loc_1001FD8F:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_1001FD92:
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JNZ loc_1001FD84
loc_1001FD9A:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FDA0(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1EE6F_proc_1001FE6F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_1001FE07:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1001FE14
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001FE1A
loc_1001FE14:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001FE1A:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1001FE3A
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001FE3A
	PUSH EDI
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m458F0_sub_100468F0])
	JMP loc_1001FE07
loc_1001FE3A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EE79_sub_1001FE79])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001FE79()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FE90(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1EF5F_proc_1001FF5F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_1001FEF7:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_1001FF04
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1001FF0A
loc_1001FF04:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1001FF0A:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_1001FF2A
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1001FF2A
	PUSH EDI
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.m45930_sub_10046930])
	JMP loc_1001FEF7
loc_1001FF2A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1EF69_sub_1001FF69])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1001FF69()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1001FF80(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F001_proc_10020001]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m45BB0_sub_10046BB0])
	MOV ESI,DWORD PTR [EBX+0x7C]
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	XOR ECX, ECX
	MOV EAX, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	TEST EDI, EDI
	JZ loc_1001FFD6
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI+0x04],ESI
	MOV DWORD PTR [EDI+0x08],ECX
loc_1001FFD6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST ESI, ESI
	JZ loc_1001FFFC
	MOV DWORD PTR [ESI+0x08],EAX
loc_1001FFE4:
	POP EDI
	MOV DWORD PTR [EBX+0x7C],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	INC DWORD PTR [EBX+0x70]
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1001FFFC:
	MOV DWORD PTR [EBX+0x78],EAX
	JMP loc_1001FFE4
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020020(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F108_proc_10020108]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
loc_10020087:
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JNZ loc_10020094
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1002009A
loc_10020094:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1002009A:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	JZ loc_100200E0
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ESI
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	JZ loc_100200E0
	PUSH EDI
	MOV ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.m45B50_sub_10046B50])
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	CMP EAX, ESI
	JZ loc_10020087
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1F112_sub_10020112])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
loc_100200CE:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100200E0:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1F112_sub_10020112])
	XOR EAX, EAX
	JMP loc_100200CE
}
}

__declspec(naked) DWORD LEGO1_sub_10020112()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020120(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F20B_proc_1002020B]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	PUSH ESI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	ADD ESI, 0x68
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2578_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2548_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m2560_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	CMP DWORD PTR [EBP+var_18+0x4],EAX
	JNZ loc_10020190
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10020196
loc_10020190:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10020196:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_100201A7
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_100201A7:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_100201CF
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1F215_sub_10020215])
	MOV EAX, 0xFFFFFFFF
loc_100201BE:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_100201CF:
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m45B30_sub_10046B30])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m1F215_sub_10020215])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP loc_100201BE
}
}

__declspec(naked) DWORD LEGO1_sub_10020215()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD LEGO1_sub_10020220(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F740_proc_10020740]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	PUSH EBX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH ESI
	PUSH EDI
	JZ_LONG(offset [LEGO1_text.m1F358_loc_10020358])
	PUSH offset [LEGO1_data.m58_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JNZ_LONG(offset [LEGO1_text.m1F358_loc_10020358])
	PUSH offset [LEGO1_data.m608_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JNZ_LONG(offset [LEGO1_text.m1F358_loc_10020358])
	PUSH offset [LEGO1_data.m71C_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JZ loc_100202C5
	PUSH offset [LEGO1_data.m11A8_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV EDX,DWORD PTR [ECX+0x18]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_100202C5
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3D050_sub_1003E050])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV EDX,DWORD PTR [EAX+0x64]
	MOV EBX,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [ECX]
	PUSH EBX
	CALL_LONG(DWORD PTR [EAX+0x28])
loc_100202C5:
	PUSH offset [LEGO1_data.m514_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m1F3AA_loc_100203AA])
	MOV ESI,DWORD PTR [EBP+var_24+0x4]
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD ESI, 0x000000B8
	XOR EBX, EBX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m1F760_sub_10020760])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_10020346
loc_10020324:
	PUSH EDI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10020346
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_10020324
loc_10020346:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m1F36A_loc_1002036A])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m1F3A2_sub_100203A2])
	JMP_LONG(offset [LEGO1_text.m1F358_loc_10020358])
}
}

__declspec(naked) DWORD LEGO1_sub_100203A2()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002047F()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_100205A1()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E540_loc_1001F540])
}
}

__declspec(naked) DWORD LEGO1_sub_1002074A()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020760(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F7B4_proc_100207B4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100207D0(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F824_proc_10020824]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m24E8_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020840(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m1F894_proc_10020894]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m24A0_ptr]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100208B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EBP, EDX
	MOV ECX, 0x00000001
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_100208F5
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX,DWORD PTR [EAX]
loc_100208D4:
	MOV EBP, EBX
	MOV ECX, 0x00000001
	CMP DWORD PTR [EBX+0x0C],EAX
	JG loc_100208E2
	XOR ECX, ECX
loc_100208E2:
	TEST ECX, ECX
	JNZ loc_100208EB
	MOV EBX,DWORD PTR [EBX+0x08]
	JMP loc_100208ED
loc_100208EB:
	MOV EBX,DWORD PTR [EBX]
loc_100208ED:
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_100208D4
loc_100208F5:
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_1002092F
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FBD0_sub_10020BD0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1002092F:
	MOV DWORD PTR [ESP+var_4+0x1C],EBP
	TEST ECX, ECX
	JZ loc_10020978
	CMP DWORD PTR [EDX],EBP
	JNZ loc_1002096F
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FBD0_sub_10020BD0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1002096F:
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m1FB20_sub_10020B20])
loc_10020978:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [ECX+0x0C],EDX
	JGE FAR loc_10020AFA
	PUSH 0x00
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x20],0x00000001
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m1FBB0_sub_10020BB0])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A0]
	PUSH ECX
	LEA EDX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A0]
	PUSH EDX
	MOV DWORD PTR [EDI+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m21360_sub_10022360])
	ADD ESP, 0x08
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EBP
	JZ loc_100209EB
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_100209EB
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],ECX
	JG loc_100209EB
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10020A06
	MOV DWORD PTR [EAX],EDI
	JMP loc_10020A06
loc_100209EB:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EBP, EAX
	JZ loc_100209FD
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10020A06
	MOV DWORD PTR [EAX],EDI
	JMP loc_10020A06
loc_100209FD:
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDI
loc_10020A06:
	MOV EBX, EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDI
	JZ FAR loc_10020AD6
loc_10020A14:
	LEA ECX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [ECX]
	LEA EAX,DWORD PTR [EDX+0x10]
	CMP DWORD PTR [EAX],0x00
	JNZ FAR loc_10020AD6
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EDX
	JNZ loc_10020A71
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_10020AAC
	CMP DWORD PTR [EDX+0x08],EBX
	JNZ loc_10020A4A
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FE50_sub_10020E50])
loc_10020A4A:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FEB0_sub_10020EB0])
	JMP loc_10020ACA
loc_10020A71:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_10020AAC
	CMP DWORD PTR [EDX],EBX
	JNZ loc_10020A85
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FEB0_sub_10020EB0])
loc_10020A85:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FE50_sub_10020E50])
	JMP loc_10020ACA
loc_10020AAC:
	MOV DWORD PTR [EAX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EAX+0x04]
loc_10020ACA:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ FAR loc_10020A14
loc_10020AD6:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX+0x10],0x00000001
	MOV DWORD PTR [EAX],EDI
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_10020AFA:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],0x00000000
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10020B20()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_10020B38
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_10020B38
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10020B38:
	MOV EDX,DWORD PTR [ESI]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020B55
loc_10020B42:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020B51
	MOV EDX, EAX
	JMP loc_10020B42
loc_10020B51:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
loc_10020B55:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10020B67
loc_10020B5C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_10020B5C
loc_10020B67:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020B70(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EDX+0x04]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020B9A
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EAX,DWORD PTR [EAX]
loc_10020B84:
	CMP DWORD PTR [ECX+0x0C],EAX
	JL loc_10020B8F
	MOV EDX, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_10020B92
loc_10020B8F:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_10020B92:
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_10020B84
loc_10020B9A:
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020BB0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020BD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A0]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_10020C14
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_10020C14:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_10020C44
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_10020C44
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x0C],EAX
	JG loc_10020C44
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10020C66
	MOV DWORD PTR [EAX],EDX
	JMP loc_10020C66
loc_10020C44:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_10020C59
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10020C66
	MOV DWORD PTR [EAX],EDX
	JMP loc_10020C66
loc_10020C59:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10020C66:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_10020E2C
loc_10020C76:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_10020E2C
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_10020D55
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_10020E02
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_10020CE2
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020CC2
	MOV DWORD PTR [EAX+0x04],ECX
loc_10020CC2:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10020CDC
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10020CDC
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10020CDE
loc_10020CDC:
	MOV DWORD PTR [EAX],EDX
loc_10020CDE:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_10020CE2:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020D14
	MOV DWORD PTR [EAX+0x04],EDI
loc_10020D14:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10020D48
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10020D3B
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_10020E20
loc_10020D3B:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_10020E20
loc_10020D48:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_10020E20
loc_10020D55:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_10020E02
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_10020D9D
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020D7A
	MOV DWORD PTR [EAX+0x04],ECX
loc_10020D7A:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10020D96
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10020D96
	MOV DWORD PTR [EBX],EDX
	JMP loc_10020D98
loc_10020D96:
	MOV DWORD PTR [EAX],EDX
loc_10020D98:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_10020D9D:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020DCF
	MOV DWORD PTR [EAX+0x04],EDX
loc_10020DCF:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10020DF9
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10020DF0
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_10020E20
loc_10020DF0:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_10020E20
loc_10020DF9:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_10020E20
loc_10020E02:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_10020E20:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10020C76
loc_10020E2C:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020E50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020E6A
	MOV DWORD PTR [EAX+0x04],ESI
loc_10020E6A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_10020E98
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX],ESI
	JZ loc_10020E8D
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10020E8D:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10020E98:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10020EB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10020ECA
	MOV DWORD PTR [EAX+0x04],ESI
loc_10020ECA:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_10020EFC
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],ESI
	JZ loc_10020EF0
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10020EF0:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10020EFC:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10020F10(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2032E_proc_1002132E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	PUSH EBX
	PUSH ESI
	XOR EBX, EBX
	CMP DWORD PTR [EBP+arg1+0x4],EBX
	JZ_LONG(offset [LEGO1_text.m2030D_loc_1002130D])
	PUSH offset [LEGO1_data.m514_str]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, EAX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [ESI+0x10])
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m20017_loc_10021017])
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	ADD ECX, 0x000000B8
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	CALL_LONG(offset [LEGO1_text.m1F760_sub_10020760])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JZ loc_10020FBA
loc_10020F98:
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_10020FBA
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EBX
	JNZ loc_10020F98
loc_10020FBA:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_10020FEE
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m215E0_sub_100225E0])
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x01
	MOV EDX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [EDX+0x0000008C],EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x68])
loc_10020FEE:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2000F_sub_1002100F])
	JMP_LONG(offset [LEGO1_text.m202DB_loc_100212DB])
}
}

__declspec(naked) DWORD LEGO1_sub_1002100F()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10021142()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_100211E5()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E540_loc_1001F540])
}
}

__declspec(naked) DWORD LEGO1_sub_10021338()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10021340(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x10]
	MOV ESI, EDI
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JZ loc_10021371
	MOV EDX,DWORD PTR [ECX]
loc_1002135B:
	CMP DWORD PTR [EAX+0x0C],EDX
	JL loc_10021366
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_10021369
loc_10021366:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_10021369:
	CMP EAX,DWORD PTR [offset LEGO1_data + 0x11A0]
	JNZ loc_1002135B
loc_10021371:
	MOV DWORD PTR [ESP+var_8+0x10],ESI
	CMP EDI, ESI
	JZ loc_10021384
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x0C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x10]
	JLE loc_1002138C
loc_10021384:
	LEA EAX,DWORD PTR [ESP+var_4+0x10]
	MOV DWORD PTR [ESP+var_4+0x10],EDI
loc_1002138C:
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100213A0(DWORD arg1, DWORD arg2)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m206D4_proc_100216D4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV EDX, offset [LEGO1_data.m514_str]
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [EBP+arg1+0x4]
	PUSH EDI
	MOV EAX, EBX
	MOV EDI, ECX
loc_100213CA:
	MOV CL,BYTE PTR [EAX]
	CMP CL,BYTE PTR [EDX]
	JNZ loc_100213EA
	OR CL, CL
	JZ loc_100213E6
	MOV CL,BYTE PTR [EAX+0x01]
	CMP CL,BYTE PTR [EDX+0x01]
	JNZ loc_100213EA
	ADD EAX, 0x02
	ADD EDX, 0x02
	OR CL, CL
	JNZ loc_100213CA
loc_100213E6:
	XOR EAX, EAX
	JMP loc_100213EF
loc_100213EA:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_100213EF:
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m204E6_loc_100214E6])
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	ADD EDI, 0x000000B8
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ESI,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EDI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2470_ptr]
loc_10021442:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ loc_10021450
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10021456
loc_10021450:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10021456:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_100214B5
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_100214B5
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV EAX,DWORD PTR [ECX+0x18]
	MOV ECX, ESI
loc_10021478:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [ECX]
	JNZ loc_10021498
	OR DL, DL
	JZ loc_10021494
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [ECX+0x01]
	JNZ loc_10021498
	ADD EAX, 0x02
	ADD ECX, 0x02
	OR DL, DL
	JNZ loc_10021478
loc_10021494:
	XOR EAX, EAX
	JMP loc_1002149D
loc_10021498:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1002149D:
	TEST EAX, EAX
	JNZ loc_10021442
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m204DE_sub_100214DE])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	JMP_LONG(offset [LEGO1_text.m20768_loc_10021768])
loc_100214B5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m204DE_sub_100214DE])
	JMP_LONG(offset [LEGO1_text.m20766_loc_10021766])
}
}

__declspec(naked) DWORD LEGO1_sub_100214DE()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100215E9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_100216DE()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10021790(DWORD arg1, DWORD arg2)
{
	enum{
		var_48 = -0x48,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m20A56_proc_10021A56]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x38
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x0000009C]
	PUSH EDI
	MOV ESI, ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(offset [LEGO1_text.m1F7D0_sub_100207D0])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [EBP+arg2+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m24B8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m24D0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
loc_100217EB:
	CMP DWORD PTR [EBP+var_2C+0x4],ECX
	JNZ loc_100217F8
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_100217FE
loc_100217F8:
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_100217FE:
	MOV DWORD PTR [EBP+var_2C+0x4],EDX
	CMP DWORD PTR [EBP+var_2C+0x4],ECX
	JZ loc_10021844
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	CMP DWORD PTR [EBP+var_2C+0x4],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	JZ loc_10021844
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x0C],EDX
	JNZ loc_100217EB
	CMP DWORD PTR [EAX+0x08],EBX
	JNZ loc_100217EB
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20A60_sub_10021A60])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
loc_10021831:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0008
loc_10021844:
	LEA EAX,DWORD PTR [ESI+0x000000B8]
	LEA ECX,DWORD PTR [EBP+var_48+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1F760_sub_10020760])
	MOV EAX, 0x00000002
	XOR ECX, ECX
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_48+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EBP+var_48+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
loc_10021874:
	CMP DWORD PTR [EBP+var_3C+0x4],ECX
	JNZ loc_10021881
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_10021887
loc_10021881:
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_10021887:
	MOV DWORD PTR [EBP+var_3C+0x4],EDX
	CMP DWORD PTR [EBP+var_3C+0x4],ECX
	JZ loc_100218CB
	MOV EAX,DWORD PTR [EBP+var_3C+0x4]
	CMP DWORD PTR [EBP+var_3C+0x4],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	JZ loc_100218CB
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x20],EDX
	JNZ loc_10021874
	CMP DWORD PTR [EAX+0x1C],EBX
	JNZ loc_10021874
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m20A3E_sub_10021A3E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20A60_sub_10021A60])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP FAR loc_10021831
loc_100218CB:
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x00000080]
	XOR ECX, ECX
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x09
	MOV EAX, 0x00000005
loc_1002190B:
	CMP DWORD PTR [EBP+var_1C+0x4],ECX
	JNZ loc_10021918
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV EDX,DWORD PTR [EAX+0x10]
	JMP loc_1002191E
loc_10021918:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
loc_1002191E:
	MOV DWORD PTR [EBP+var_1C+0x4],EDX
	CMP DWORD PTR [EBP+var_1C+0x4],ECX
	JZ loc_1002196F
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_1C+0x4],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	JZ loc_1002196F
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x1C]
	TEST EAX, EAX
	JZ loc_1002190B
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x20],EDX
	JNZ loc_1002190B
	CMP DWORD PTR [EAX+0x1C],EBX
	JNZ loc_1002190B
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	CALL_LONG(offset [LEGO1_text.m20A26_sub_10021A26])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m20A3E_sub_10021A3E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20A60_sub_10021A60])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP FAR loc_10021831
loc_1002196F:
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP ECX, EAX
	JZ loc_100219BA
loc_1002197E:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JZ loc_100219A7
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ECX+0x1C]
	CMP DWORD PTR [EAX+0x20],EDX
	JNZ loc_100219A7
	CMP DWORD PTR [EAX+0x1C],EBX
	JZ loc_100219DF
loc_100219A7:
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m1C850_sub_1001D850])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [ESI+0x000000AC],EAX
	JNZ loc_1002197E
loc_100219BA:
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	CALL_LONG(offset [LEGO1_text.m20A26_sub_10021A26])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m20A3E_sub_10021A3E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20A60_sub_10021A60])
	XOR EAX, EAX
	JMP FAR loc_10021831
loc_100219DF:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m20A26_sub_10021A26])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	CALL_LONG(offset [LEGO1_text.m20A3E_sub_10021A3E])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20A60_sub_10021A60])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	JMP FAR loc_10021831
}
}

__declspec(naked) DWORD LEGO1_sub_10021A26()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10021A3E()
{
	enum{
		arg1217207 = 0x4A4ADC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10021A60()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_10021A70(DWORD arg1)
{
	enum{
		var_4C = -0x4C,
		var_34 = -0x34,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m21014_proc_10022014]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV AL,BYTE PTR [EBP+arg1+0x4]
	SUB ESP, 0x40
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	TEST AL, AL
	JZ_LONG(offset [LEGO1_text.m20D10_loc_10021D10])
	CMP DWORD PTR [ECX+0x000000DC],EBX
	JZ_LONG(offset [LEGO1_text.m20D0C_loc_10021D0C])
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	CMP EAX,DWORD PTR [EBP+var_14+0x4]
	JZ_LONG(offset [LEGO1_text.m20CFA_loc_10021CFA])
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ FAR loc_10021B92
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m60010_sub_10061010])
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x68])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [ECX+0x0000009C]
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24E8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24B8_ptr]
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m24D0_ptr]
loc_10021B28:
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JNZ loc_10021B35
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_10021B3B
loc_10021B35:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_10021B3B:
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JZ loc_10021B86
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JZ loc_10021B86
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EAX+0x54]
	ADD EAX, 0x54
	TEST ECX, ECX
	JZ loc_10021B28
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [ECX+0x00000104],EDX
	MOV ESI,DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m147C0_sub_100157C0])
	LEA EDX,DWORD PTR [EBP+var_34+0x4]
	MOV DWORD PTR [EBP+var_4C+0x4],ESI
	MOV ECX,DWORD PTR [EAX+0x0C]
	LEA ESI,DWORD PTR [EBP+var_4C+0x4]
	PUSH ESI
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.m21030_sub_10022030])
	JMP loc_10021B28
loc_10021B86:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m20BEE_sub_10021BEE])
loc_10021B92:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x000000DC],0x00
	JZ_LONG(offset [LEGO1_text.m20C30_loc_10021C30])
	LEA ESI,DWORD PTR [ECX+0x000000D0]
	JMP_LONG(offset [LEGO1_text.m20BA8_loc_10021BA8])
}
}

__declspec(naked) DWORD LEGO1_sub_10021BEE()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E300_loc_1001F300])
}
}

__declspec(naked) DWORD LEGO1_sub_10021FF4()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1EA20_loc_1001FA20])
}
}

__declspec(naked) DWORD LEGO1_sub_1002201E()
{
	enum{
		arg1217209 = 0x4A4AE4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217209-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022030(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x0C
	MOV EDI,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_10022051
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_10022056
loc_10022051:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10022056:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_1002206D
	MOV ECX,DWORD PTR [ESP+arg3+0xC]
	MOV EBX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EBX
loc_1002206D:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_10022080()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x000000F6],0x00
	JNZ loc_100220CF
	MOVSX EAX,WORD PTR [ESI+0x000000F4]
	TEST EAX, EAX
	JZ loc_1002209E
	CMP EAX, 0x02
	JZ loc_100220BD
	JMP loc_100220C8
loc_1002209E:
	MOV BYTE PTR [ESI+0x000000F6],0x01
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x50])
	MOV EAX, 0x00000001
	POP ESI
	RET
loc_100220BD:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m210E0_sub_100220E0])
	CMP AL, 0x01
	JZ loc_100220CF
loc_100220C8:
	DEC WORD PTR DS:[ESI+0x000000F4]
loc_100220CF:
	MOV EAX, 0x00000001
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100220E0()
{
	enum{
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m21320_proc_10022320]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x28
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x000000B8]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],EBX
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_28+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX, 0xFFFFFFFF
loc_10022148:
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JNZ loc_10022155
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1002215B
loc_10022155:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1002215B:
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	JZ loc_100221AB
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_1C+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_100221AB
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	TEST AL, AL
	JZ loc_10022148
	PUSH 0x02
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, EAX
	MOV EDI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EDI+0x48])
	TEST AL, AL
	JNZ loc_10022148
loc_1002218C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2132A_sub_1002232A])
	MOV AL, 0x01
loc_1002219A:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_100221AB:
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	LEA EAX,DWORD PTR [ESI+0x00000080]
	MOV DWORD PTR [EBP+var_2C+0x4],EBX
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2488_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2530_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV DWORD PTR [EBP+var_38+0x4],offset [LEGO1_rdata.m2470_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EAX, 0x00000003
loc_100221EB:
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	JNZ loc_100221F8
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_100221FE
loc_100221F8:
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_100221FE:
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	JZ loc_10022266
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_10022266
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	TEST AL, AL
	JZ loc_100221EB
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH offset [LEGO1_data.m6E4_str]
	MOV ECX, EAX
	MOV EDI,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EDI+0x10])
	TEST AL, AL
	JZ loc_1002224C
	PUSH 0x01
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(DWORD PTR [EDI+0x48])
	TEST AL, AL
	JNZ loc_100221EB
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m21300_sub_10022300])
	JMP FAR loc_1002218C
loc_1002224C:
	PUSH 0x02
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(DWORD PTR [EDI+0x48])
	TEST AL, AL
	JNZ loc_100221EB
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m21300_sub_10022300])
	JMP FAR loc_1002218C
loc_10022266:
	MOV EAX,DWORD PTR [ESI+0x000000AC]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP ECX, EAX
	JZ loc_100222BE
loc_10022275:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST AL, AL
	JZ loc_100222AB
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	TEST AL, AL
	JZ loc_100222AB
	PUSH 0x02
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x48])
	TEST AL, AL
	JZ loc_100222DA
loc_100222AB:
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m1C850_sub_1001D850])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [ESI+0x000000AC],EAX
	JNZ loc_10022275
loc_100222BE:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m21300_sub_10022300])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m2132A_sub_1002232A])
	XOR AL, AL
	JMP FAR loc_1002219A
loc_100222DA:
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.m21300_sub_10022300])
	JMP FAR loc_1002218C
}
}

__declspec(naked) DWORD LEGO1_sub_10022300()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_1002232A()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E0C0_loc_1001F0C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10022340()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10022360(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_10022370
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_10022370:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022380(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2140A_proc_1002240A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_100223CE
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],ECX
	MOV DWORD PTR [ESI+0x08],EDX
	JMP loc_100223D6
loc_100223CE:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
loc_100223D6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST ECX, ECX
	JZ loc_100223E6
	MOV DWORD PTR [ECX+0x08],EAX
	JMP loc_100223E9
loc_100223E6:
	MOV DWORD PTR [EDI+0x10],EAX
loc_100223E9:
	TEST EDX, EDX
	JZ loc_10022405
	MOV DWORD PTR [EDX+0x04],EAX
loc_100223F0:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [EDI+0x08]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_10022405:
	MOV DWORD PTR [EDI+0x14],EAX
	JMP loc_100223F0
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022430(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m214BA_proc_100224BA]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1002247E
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],ECX
	MOV DWORD PTR [ESI+0x08],EDX
	JMP loc_10022486
loc_1002247E:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
loc_10022486:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST ECX, ECX
	JZ loc_10022496
	MOV DWORD PTR [ECX+0x08],EAX
	JMP loc_10022499
loc_10022496:
	MOV DWORD PTR [EDI+0x10],EAX
loc_10022499:
	TEST EDX, EDX
	JZ loc_100224B5
	MOV DWORD PTR [EDX+0x04],EAX
loc_100224A0:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [EDI+0x08]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_100224B5:
	MOV DWORD PTR [EDI+0x14],EAX
	JMP loc_100224A0
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100224E0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m2156A_proc_1002256A]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1002252E
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x04],ECX
	MOV DWORD PTR [ESI+0x08],EDX
	JMP loc_10022536
loc_1002252E:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EDX,DWORD PTR [EBP+arg3+0x4]
loc_10022536:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	TEST ECX, ECX
	JZ loc_10022546
	MOV DWORD PTR [ECX+0x08],EAX
	JMP loc_10022549
loc_10022546:
	MOV DWORD PTR [EDI+0x10],EAX
loc_10022549:
	TEST EDX, EDX
	JZ loc_10022565
	MOV DWORD PTR [EDX+0x04],EAX
loc_10022550:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	INC DWORD PTR [EDI+0x08]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x000C
loc_10022565:
	MOV DWORD PTR [EDI+0x14],EAX
	JMP loc_10022550
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022590(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ESI+0x0C],EAX
	TEST EAX, EAX
	JZ loc_100225C5
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
loc_100225A5:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [ESI+0x08]
	PUSH EDI
	MOV EDX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ECX]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x14])
	TEST AL, AL
	JZ loc_100225C5
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+0x0C],EAX
	TEST EAX, EAX
	JNZ loc_100225A5
loc_100225C5:
	CMP DWORD PTR [ESI+0x0C],0x01
	SBB AL, AL
	POP EDI
	INC AL
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100225E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDI,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_100225F9
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_100225FE
loc_100225F9:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_100225FE:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1002260C
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_10022612
loc_1002260C:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x14],EAX
loc_10022612:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022630(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDI,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_10022649
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1002264E
loc_10022649:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_1002264E:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_1002265C
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_10022662
loc_1002265C:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x14],EAX
loc_10022662:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022680(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDI,DWORD PTR [EDX+0x08]
	TEST EAX, EAX
	JZ loc_10022699
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1002269E
loc_10022699:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [ESI+0x10],EAX
loc_1002269E:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_100226AC
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	JMP loc_100226B2
loc_100226AC:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x14],EAX
loc_100226B2:
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100226D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m21911_proc_10022911]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x00000114]
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x0000011C]
	MOV ECX, EDI
	PUSH EAX
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	LEA EAX,DWORD PTR [ESI+0x00000134]
	LEA ECX,DWORD PTR [ESI+0x00000180]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x00000130],EAX
	LEA EDX,DWORD PTR [ESI+0x000001C8]
	MOV DWORD PTR [ESI+0x0000017C],ECX
	MOV DWORD PTR [ESI+0x0000012C],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x0000012C],offset [LEGO1_rdata.m300_ptr]
	LEA EAX,DWORD PTR [ESI+0x00000210]
	MOV DWORD PTR [ESI+0x000001C4],EDX
	MOV DWORD PTR [ESI+0x00000178],offset [LEGO1_rdata.m350_ptr]
	LEA EDI,DWORD PTR [ESI+0x0000025C]
	MOV DWORD PTR [ESI+0x0000020C],EAX
	MOV DWORD PTR [ESI+0x00000178],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x000001C0],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x000001C0],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x00000208],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x00000208],offset [LEGO1_rdata.m300_ptr]
	LEA ECX,DWORD PTR [ESI+0x00000264]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x0000027C]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m1E8_ptr]
	LEA EDI,DWORD PTR [ESI+0x00000274]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x000002AC]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m1E8_ptr]
	LEA ECX,DWORD PTR [ESI+0x000002C4]
	MOV DWORD PTR [ESI+0x0000028C],EBX
	MOV DWORD PTR [ESI+0x000002A8],EAX
	MOV DWORD PTR [ESI+0x000002C0],ECX
	MOV DWORD PTR [ESI+0x000002A4],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000002A4],offset [LEGO1_rdata.m1E8_ptr]
	MOV DWORD PTR [ESI+0x000002BC],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x000002BC],offset [LEGO1_rdata.m1E8_ptr]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m2658_ptr]
	MOV DWORD PTR [ESI+0x00000110],EBX
	MOV EDI, 0xFFFFFFFF
	MOV DWORD PTR [ESI+0x00000100],EBX
	MOV DWORD PTR [ESI+0x000000F8],EDI
	MOV BYTE PTR [ESI+0x000002D4],BL
	MOV DWORD PTR [ESI+0x00000258],EBX
	MOV DWORD PTR [ESI+0x000002D8],EBX
	MOV DWORD PTR [ESI+0x000002DC],EBX
	MOV DWORD PTR [ESI+0x000002E0],EBX
	MOV DWORD PTR [ESI+0x000002E4],EBX
	MOV DWORD PTR [ESI+0x000002E8],EBX
	MOV DWORD PTR [ESI+0x000002EC],EBX
	MOV DWORD PTR [ESI+0x000002F0],EBX
	MOV DWORD PTR [ESI+0x000002F4],EBX
	MOV DWORD PTR [ESI+0x000002F8],EBX
	MOV DWORD PTR [ESI+0x000002FC],EBX
	MOV DWORD PTR [ESI+0x00000300],EBX
	MOV DWORD PTR [ESI+0x00000304],EBX
	MOV DWORD PTR [ESI+0x00000308],EBX
	MOV DWORD PTR [ESI+0x0000030C],EBX
	MOV DWORD PTR [ESI+0x00000310],EBX
	MOV DWORD PTR [ESI+0x00000314],EBX
	MOV DWORD PTR [ESI+0x00000318],EBX
	MOV DWORD PTR [ESI+0x0000031C],EBX
	MOV DWORD PTR [ESI+0x00000320],EBX
	MOV DWORD PTR [ESI+0x00000324],EBX
	MOV DWORD PTR [ESI+0x00000328],EBX
	MOV DWORD PTR [ESI+0x0000033C],EBX
	MOV DWORD PTR [ESI+0x0000032C],EBX
	MOV DWORD PTR [ESI+0x00000104],EBX
	MOV BYTE PTR [ESI+0x00000109],BL
	MOV BYTE PTR [ESI+0x00000108],BL
	MOV DWORD PTR [ESI+0x00000338],EBX
	PUSH ESI
	MOV DWORD PTR [ESI+0x00000334],EBX
	MOV DWORD PTR [ESI+0x00000344],EDI
	MOV BYTE PTR [ESI+0x00000174],BL
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10022A80()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m21B4F_proc_10022B4F]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2658_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV EAX,DWORD PTR [ECX+0x00000258]
	MOV DWORD PTR [ECX+0x00000100],ESI
	MOV DWORD PTR [ECX+0x00000110],ESI
	TEST EAX, EAX
	JZ loc_10022ADC
	MOV WORD PTR DS:[EAX+0x000000BC],SI
	PUSH ESI
	MOV ECX,DWORD PTR [ECX+0x00000258]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x44])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+0x00000258],ESI
loc_10022ADC:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x64],EDX
	JNZ loc_10022B15
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B730_sub_1005C730])
loc_10022B15:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m21B59_sub_10022B59])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10022B59()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10022CD0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x0000032C]
	TEST EAX, EAX
	JZ loc_10022CE0
	MOVZX EAX,BYTE PTR DS:[EAX+0x4F]
	RET
loc_10022CE0:
	XOR AX, AX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10022CF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x0000032C]
	TEST EAX, EAX
	JZ loc_10022D01
	MOV CL,BYTE PTR [ESP+arg1]
	MOV BYTE PTR [EAX+0x4F],CL
loc_10022D01:
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10022D10()
{
__asm{
	PUSH ESI
	PUSH offset [LEGO1_data.m12CC_str]
	MOV ESI, ECX
	PUSH offset [LEGO1_data.m184_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m12C0_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002D8],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m12B8_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002DC],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m12AC_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002E0],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m12A0_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002E4],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1294_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002E8],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1288_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x000002EC],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m127C_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x000002F0],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1268_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x000002F4],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1258_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x000002F8],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m124C_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x000002FC],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1240_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m7A0_str]
	MOV DWORD PTR [ESI+0x00000300],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000304],EAX
	PUSH offset [LEGO1_data.m1234_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m1228_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x0000030C],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m121C_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x00000310],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m120C_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m184_str]
	MOV DWORD PTR [ESI+0x00000314],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000308],EAX
	TEST EAX, EAX
	JZ loc_10022EF8
	PUSH offset [LEGO1_data.m1200_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m11F4_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x00000318],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m11E8_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x0000031C],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m11DC_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x00000320],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH offset [LEGO1_data.m11D0_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m514_str]
	MOV DWORD PTR [ESI+0x00000324],EAX
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	MOV DWORD PTR [ESI+0x00000328],EAX
loc_10022EF8:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10022F00()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x00000110],0x00
	JZ loc_10022F2A
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV EAX,DWORD PTR [ESI+0x00000258]
	MOV WORD PTR DS:[EAX+0x000000BC],0x0000
	MOV DWORD PTR [ESI+0x00000100],0x00000005
loc_10022F2A:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10022F30()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x00000110],0x00
	JZ loc_10022FB0
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m23F70_sub_10024F70])
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m240E0_sub_100250E0])
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	JZ loc_10022F82
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_10022F82:
	MOV EAX,DWORD PTR [ESI+0x00000258]
	MOV WORD PTR DS:[EAX+0x000000BC],0x0001
	MOV ECX,DWORD PTR [ESI+0x00000258]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV DWORD PTR [ESI+0x00000110],0x00000000
	MOV DWORD PTR [ESI+0x00000100],0x00000000
loc_10022FB0:
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10023130(DWORD arg1, DWORD arg2)
{
	enum{
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_9C = -0x9C,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_18 = -0x18,
		var_C = -0xC,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217253 = 0x4A4B94,
		arg1217254 = 0x4A4B98,
		arg1217255 = 0x4A4B9C,
	};

__asm{
	SUB ESP, 0x000000A4
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR EBP, EBP
	CMP DWORD PTR [ESI+0x00000110],EBP
	JZ FAR loc_100234EA
	MOV EAX,DWORD PTR [ESI+0x00000290]
	MOV EDI,DWORD PTR [ESP+arg1+0xB4]
	SUB EAX,DWORD PTR [ESI+0x00000250]
	MOV EBX,DWORD PTR [ESP+arg2+0xB4]
	ADD EDI, EAX
	MOV EAX,DWORD PTR [ESI+0x00000294]
	SUB EAX,DWORD PTR [ESI+0x00000254]
	ADD EBX, EAX
	MOV DWORD PTR [ESP+var_60+0xB4],EDI
	FILD DWORD PTR [ESP+var_60+0xB4]
	FSTP DWORD PTR [ESP+var_78+0xB4]
	MOV EAX,DWORD PTR [ESP+var_78+0xB4]
	LEA EDX,DWORD PTR [ESP+var_C+0xB4]
	MOV DWORD PTR [ESP+var_68+0xB4],EAX
	PUSH EDX
	LEA EAX,DWORD PTR [ESP+var_18+0xB8]
	MOV DWORD PTR [ESP+var_60+0xB8],EBX
	FILD DWORD PTR [ESP+var_60+0xB8]
	PUSH EAX
	FSTP DWORD PTR [ESP+var_9C+0xBC]
	MOV ECX,DWORD PTR [ESP+var_9C+0xBC]
	MOV DWORD PTR [ESP+var_64+0xBC],ECX
	LEA ECX,DWORD PTR [ESP+var_68+0xBC]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CED0_sub_1003DED0])
	ADD ESP, 0x0C
	TEST AL, AL
	JZ FAR loc_100234EA
	MOV EAX,DWORD PTR [ESP+var_78+0xB4]
	MOV ECX,DWORD PTR [ESP+var_9C+0xB4]
	MOV DWORD PTR [ESP+var_80+0xB4],EAX
	MOV DWORD PTR [ESP+var_7C+0xB4],ECX
	LEA EDX,DWORD PTR [ESP+var_58+0xB4]
	MOV EAX,DWORD PTR [ESI+0x00000294]
	MOV DWORD PTR [ESP+var_8C+0xB4],EBP
	MOV DWORD PTR [ESP+var_88+0xB4],EBP
	MOV DWORD PTR [ESP+var_84+0xB4],EBP
	CMP EBX, EAX
	MOV DWORD PTR [ESP+var_5C+0xB4],EDX
	MOV DWORD PTR [ESP+var_60+0xB4],offset [LEGO1_rdata.m300_ptr]
	JGE loc_1002320A
	LEA EAX,DWORD PTR [ESP+var_8C+0xB4]
	LEA ECX,DWORD PTR [ESP+var_80+0xB4]
	PUSH EAX
	MOV EBP,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBP+arg1217253-0x4A4B20])
	JMP loc_1002323A
loc_1002320A:
	CMP DWORD PTR [ESI+0x0000029C],EBX
	JGE loc_10023225
	LEA EAX,DWORD PTR [ESP+var_94+0xBC]
	LEA ECX,DWORD PTR [ESP+var_88+0xBC]
	PUSH EAX
	MOV EBP,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBP+arg1217255-0x4A4B20])
	JMP loc_1002323A
loc_10023225:
	CMP EBX, EAX
	JL loc_1002323A
	LEA EAX,DWORD PTR [ESP+var_94+0xBC]
	LEA ECX,DWORD PTR [ESP+var_88+0xBC]
	PUSH EAX
	MOV EBP,DWORD PTR [ESI]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBP+arg1217254-0x4A4B20])
loc_1002323A:
	SUB EDI,DWORD PTR [ESI+0x00000290]
	SUB EBX,DWORD PTR [ESI+0x00000294]
	IMUL EBX,EBX
	IMUL EDI,EDI
	ADD EBX, EDI
	LEA EAX,DWORD PTR [ESP+var_80+0xBC]
	MOV DWORD PTR [ESP+var_80+0xBC],EBX
	MOV DWORD PTR [ESP+var_A8+0xBC],EAX
	FILD DWORD PTR [ESP+var_80+0xBC]
	MOV DWORD PTR [ESP+var_AC+0xBC],offset [LEGO1_rdata.m5A0_ptr]
	MOV EAX,DWORD PTR [ESI+0x0000028C]
	FSQRT
	CMP EAX, 0x01
	FDIV DWORD PTR [ESI+0x000002A0]
	JNZ loc_100232C5
	FSTP DWORD PTR [ESP+var_9C+0xBC]
	MOV EAX,DWORD PTR [ESI+0x00000260]
	LEA ECX,DWORD PTR [ESP+var_AC+0xBC]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m5C0_ptr])
	FLD DWORD PTR [ESP+var_9C+0xBC]
	MOV EDI,DWORD PTR [ESP+var_A8+0xBC]
	ADD EDI, 0x0C
	FLD DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FLD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FSUBRP ST(2),ST
	FMULP ST(1),ST
	FMUL QWORD PTR [offset LEGO1_rdata + 0x2638]
	FSTP DWORD PTR [EDI]
	MOV EAX,DWORD PTR [ESP+var_AC+0xBC]
	LEA ECX,DWORD PTR [ESP+var_AC+0xBC]
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	JMP FAR loc_1002347F
loc_100232C5:
	FSTP DWORD PTR [ESP+var_9C+0xBC]
	CMP EAX, 0x02
	JNZ loc_1002330D
	LEA EAX,DWORD PTR [ESI+0x00000274]
	LEA ECX,DWORD PTR [ESP+var_AC+0xBC]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	FLD DWORD PTR [ESP+var_9C+0xBC]
	MOV EDI,DWORD PTR [ESP+var_A8+0xBC]
	ADD EDI, 0x0C
	FLD DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FMULP ST(1),ST
	FMUL QWORD PTR [offset LEGO1_rdata + 0x2638]
	FSTP DWORD PTR [EDI]
	MOV EAX,DWORD PTR [ESP+var_AC+0xBC]
	LEA ECX,DWORD PTR [ESP+var_AC+0xBC]
	CALL_LONG(DWORD PTR [EAX+0x00000090])
	JMP FAR loc_1002347F
loc_1002330D:
	CMP EAX, 0x03
	JNZ FAR loc_1002347A
	LEA EAX,DWORD PTR [ESI+0x00000274]
	LEA ECX,DWORD PTR [ESI+0x0000025C]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_A4+0xBC]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m5D8_ptr])
	FST QWORD PTR [ESP+var_A4+0xBC]
	FADD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2640]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_100233E4
	FLD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FSUB QWORD PTR [ESP+var_A4+0xBC]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x2640]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10023393
	FLD QWORD PTR [ESP+var_A4+0xBC]
	CALL_LONG(offset [LEGO1_text.m8A3DC_sub_1008B3DC])
	FLD ST(0)
	FSIN
	FLD DWORD PTR [ESP+var_9C+0xBC]
	FLD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FSUB ST,ST(1)
	FMUL ST,ST(3)
	FSIN
	FDIV ST,ST(2)
	FSTP QWORD PTR [ESP+var_A4+0xBC]
	FMUL ST(2),ST
	FXCH ST(2)
	FSIN
	FDIVRP ST(1),ST
	FSTP QWORD PTR [ESP+var_9C+0xBC]
	FSTP ST(0)
	JMP loc_100233A7
loc_10023393:
	FLD DWORD PTR [ESP+var_9C+0xBC]
	FLD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FSUB ST,ST(1)
	FSTP QWORD PTR [ESP+var_A4+0xBC]
	FSTP QWORD PTR [ESP+var_9C+0xBC]
loc_100233A7:
	XOR ECX, ECX
	JMP loc_100233AF
loc_100233AB:
	FSTP DWORD PTR [ECX+EBX-0x04]
loc_100233AF:
	MOV EAX,DWORD PTR [ESI+0x00000278]
	MOV EDX,DWORD PTR [ESI+0x00000260]
	MOV EBX,DWORD PTR [ESP+var_A8+0xBC]
	ADD ECX, 0x04
	CMP ECX, 0x10
	FLD DWORD PTR [ECX+EAX-0x04]
	FMUL QWORD PTR [ESP+var_9C+0xBC]
	FLD DWORD PTR [ECX+EDX-0x04]
	FMUL QWORD PTR [ESP+var_A4+0xBC]
	FADDP ST(1),ST
	JL loc_100233AB
	FSTP DWORD PTR [ECX+EBX-0x04]
	XOR EAX, EAX
	JMP FAR loc_1002347F
loc_100233E4:
	MOV EAX,DWORD PTR [ESI+0x00000260]
	MOV ECX,DWORD PTR [ESP+var_A8+0xBC]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI+0x00000260]
	MOV ECX,DWORD PTR [ESP+var_A8+0xBC]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV ECX,DWORD PTR [ESP+var_A8+0xBC]
	MOV EAX,DWORD PTR [ESI+0x00000260]
	FLD DWORD PTR [EAX+0x0C]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	FLD DWORD PTR [ESP+var_9C+0xBC]
	FLD QWORD PTR [offset LEGO1_rdata + 0x2628]
	FSUB ST,ST(1)
	MOV EAX,DWORD PTR [ESI+0x00000260]
	MOV ECX,DWORD PTR [ESP+var_A8+0xBC]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x2648]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x0C],EDX
	XOR EDX, EDX
	FSIN
	FSTP QWORD PTR [ESP+var_A4+0xBC]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x2648]
	FSIN
	FSTP QWORD PTR [ESP+var_9C+0xBC]
	JMP loc_10023450
loc_1002344E:
	FSTP DWORD PTR [EAX]
loc_10023450:
	MOV EAX,DWORD PTR [ESP+var_A8+0xBC]
	MOV ECX,DWORD PTR [ESI+0x00000260]
	ADD EAX, EDX
	ADD EDX, 0x04
	CMP EDX, 0x0C
	FLD DWORD PTR [EDX+ECX-0x04]
	FMUL QWORD PTR [ESP+var_A4+0xBC]
	FLD DWORD PTR [EAX]
	FMUL QWORD PTR [ESP+var_9C+0xBC]
	FADDP ST(1),ST
	JL loc_1002344E
	FSTP DWORD PTR [EAX]
	XOR EAX, EAX
	JMP loc_1002347F
loc_1002347A:
	MOV EAX, 0xFFFFFFFF
loc_1002347F:
	TEST EAX, EAX
	JNZ loc_10023493
	LEA EAX,DWORD PTR [ESP+var_AC+0xBC]
	LEA ECX,DWORD PTR [ESP+var_68+0xBC]
	MOV EBX,DWORD PTR [ESP+var_68+0xBC]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x44])
loc_10023493:
	MOV EAX,DWORD PTR [ESI+0x0000017C]
	MOV ECX,DWORD PTR [ESP+var_64+0xBC]
	FLD DWORD PTR [EAX+0x30]
	FADD DWORD PTR [ESP+var_94+0xBC]
	FSTP DWORD PTR [ECX+0x30]
	MOV EAX,DWORD PTR [ESI+0x0000017C]
	MOV ECX,DWORD PTR [ESP+var_64+0xBC]
	FLD DWORD PTR [EAX+0x34]
	FADD DWORD PTR [ESP+var_90+0xBC]
	FSTP DWORD PTR [ECX+0x34]
	MOV EAX,DWORD PTR [ESI+0x0000017C]
	MOV ECX,DWORD PTR [ESP+var_64+0xBC]
	FLD DWORD PTR [EAX+0x38]
	FADD DWORD PTR [ESP+var_8C+0xBC]
	LEA EAX,DWORD PTR [ESP+var_68+0xBC]
	FSTP DWORD PTR [ECX+0x38]
	MOV ECX,DWORD PTR [ESP+var_64+0xBC]
	PUSH EAX
	MOV DWORD PTR [ECX+0x3C],0x3F800000
	MOV ECX,DWORD PTR [ESI+0x00000110]
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
loc_100234EA:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000A4
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100236D0()
{
	enum{
		var_14 = -0x14,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m22888_proc_10023888]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m23F70_sub_10024F70])
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m240E0_sub_100250E0])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x00000110]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	MOV ECX,DWORD PTR [EAX+0x00000258]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m78790_sub_10079790])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [ECX+0x00000258]
	MOV WORD PTR DS:[EDX+0x000000BC],0x0001
	MOV DWORD PTR [ECX+0x00000110],0x00000000
	MOV DWORD PTR [ECX+0x00000100],0x00000000
	MOV EAX,DWORD PTR [ECX+0x00000258]
	MOV DX,WORD PTR DS:[EAX+0x000000C0]
	CMP WORD PTR DS:[EAX+0x000000BE],DX
	JNZ_LONG(offset [LEGO1_text.m227E1_loc_100237E1])
	MOV EAX,DWORD PTR [ECX+0x00000330]
	DEC EAX
	CMP EAX, 0x03
	JA_LONG(offset [LEGO1_text.m2278A_loc_1002378A])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m2289C_proc_1002389C+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10023892()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
	MOV EDI, EDI
	JMP_LONG(offset [LEGO1_text.m2289C_proc_1002389C])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10024250(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI, ECX
	CMP BYTE PTR [EAX+0x18],0x20
	JNZ loc_100242AB
	MOV EAX,DWORD PTR [ESI+0x0000032C]
	MOV EAX,DWORD PTR [EAX+0x48]
	CMP EAX, 0x04
	JZ loc_100242AB
	CMP EAX, 0x02
	JZ loc_100242AB
	CMP BYTE PTR [ESI+0x00000108],0x00
	JLE loc_100242A2
	PUSH 0x000001FE
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH 0x000001F4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m149E0_sub_100159E0])
	ADD ESP, 0x0C
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	MOV BYTE PTR [ESI+0x00000109],0x00
loc_100242A2:
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0004
loc_100242AB:
	XOR EAX, EAX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1002437D()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100243A0()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000330]
	MOV ESI, ECX
	DEC EAX
	CMP EAX, 0x03
	JA_LONG(offset [LEGO1_text.m23463_loc_10024463])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m23468_proc_10024468+EAX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10024480(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	XOR EAX, EAX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x0000032C]
	MOV ECX,DWORD PTR [ECX+0x48]
	CMP ECX, 0x03
	JZ loc_1002449C
	CMP ECX, 0x06
	JZ loc_100244BE
	POP ESI
	RETN 0x0004
loc_1002449C:
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E5B0_sub_1007F5B0])
	MOV EAX,DWORD PTR [ESI+0x0000032C]
	POP ESI
	MOV DWORD PTR [EAX+0x48],0x00000000
	MOV EAX, 0x00000001
	RETN 0x0004
loc_100244BE:
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI+0x00000344]
	MOV ECX,DWORD PTR [ECX+0x0C]
	CMP DWORD PTR [ECX+0x1C],EDX
	JNZ loc_100244DC
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m233A0_sub_100243A0])
	MOV EAX, 0x00000001
loc_100244DC:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100244E0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [ECX+0x00000250],EAX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	PUSH ECX
	MOV DWORD PTR [ESI+0x00000254],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3CD70__PickROI__YAPAVLegoROI__JJ_Z])
	ADD ESP, 0x08
	MOV EDI, EAX
	TEST EDI, EDI
	JZ FAR loc_100246D4
	MOV EAX,DWORD PTR [EDI+0x000000E4]
	MOV ECX,DWORD PTR [ESI+0x00000258]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m78B80_sub_10079B80])
	TEST AL, AL
	JZ FAR loc_100246D4
	CMP DWORD PTR [ESI+0x00000110],EDI
	JZ loc_1002454E
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m21F30_sub_10022F30])
	PUSH 0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI+0x00000110],EDI
	CALL_LONG(offset [LEGO1_text.m23F70_sub_10024F70])
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m240E0_sub_100250E0])
loc_1002454E:
	CMP DWORD PTR [ESI+0x00000100],0x05
	JNZ loc_1002457C
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	JZ loc_1002457C
	MOV BYTE PTR [ESI+0x000002D4],0x01
	JMP loc_10024583
loc_1002457C:
	MOV BYTE PTR [ESI+0x000002D4],0x00
loc_10024583:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m24450_sub_10025450])
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x70])
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	JZ loc_1002461D
	MOV ECX,DWORD PTR [ESI+0x00000100]
	CMP ECX, 0x05
	JZ loc_100245DC
	MOV EAX,DWORD PTR [ESI+0x00000290]
	SUB EAX,DWORD PTR [ESI+0x00000298]
	ADD DWORD PTR [ESI+0x00000250],EAX
	MOV EAX,DWORD PTR [ESI+0x00000294]
	SUB EAX,DWORD PTR [ESI+0x0000029C]
	ADD DWORD PTR [ESI+0x00000254],EAX
loc_100245DC:
	TEST ECX, ECX
	JNZ FAR loc_10024679
	MOV ECX,DWORD PTR [ESI+0x00000110]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	MOV EDI, EAX
	LEA ECX,DWORD PTR [ESI+0x00000114]
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA ECX,DWORD PTR [EDI+0x08]
	LEA EAX,DWORD PTR [ESI+0x0000011C]
	MOV EDX, 0x00000003
loc_1002460E:
	MOV EBX,DWORD PTR [ECX]
	ADD ECX, 0x04
	MOV DWORD PTR [EAX],EBX
	ADD EAX, 0x04
	DEC EDX
	JNZ loc_1002460E
	JMP loc_10024670
loc_1002461D:
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78C30_sub_10079C30])
	TEST AL, AL
	JZ loc_10024679
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78E20_sub_10079E20])
	MOV EDI, EAX
	LEA ECX,DWORD PTR [ESI+0x00000114]
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA EDX,DWORD PTR [EDI+0x08]
	LEA ECX,DWORD PTR [ESI+0x0000011C]
	MOV EAX, 0x00000003
loc_10024663:
	MOV EBX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EBX
	ADD ECX, 0x04
	DEC EAX
	JNZ loc_10024663
loc_10024670:
	MOV EAX,DWORD PTR [EDI+0x14]
	MOV DWORD PTR [ESI+0x00000128],EAX
loc_10024679:
	MOV EAX,DWORD PTR [ESI+0x00000100]
	TEST EAX, EAX
	JZ loc_1002468A
	CMP EAX, 0x05
	JZ loc_10024696
	JMP loc_100246A0
loc_1002468A:
	MOV DWORD PTR [ESI+0x00000100],0x00000004
	JMP loc_100246A0
loc_10024696:
	MOV DWORD PTR [ESI+0x00000100],0x00000003
loc_100246A0:
	MOV ECX,DWORD PTR [ESI+0x000002FC]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002FC]
	PUSH 0x01
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000258]
	MOV EAX, 0x00000001
	MOV WORD PTR DS:[ECX+0x000000BC],0x0000
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
loc_100246D4:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100246E0(DWORD arg1, DWORD arg2)
{
__asm{
	PUSH ESI
	XOR EAX, EAX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x00000100]
	CMP ECX, 0x03
	JZ loc_100246FE
	CMP ECX, 0x04
	JZ loc_1002470E
	CMP ECX, 0x06
	JZ loc_1002471E
	POP ESI
	RETN 0x0008
loc_100246FE:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m21F30_sub_10022F30])
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0008
loc_1002470E:
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m21F00_sub_10022F00])
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0008
loc_1002471E:
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	JZ loc_100247B1
	MOV ECX,DWORD PTR [ESI+0x00000110]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x00000114]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CE80_sub_1003DE80])
	ADD ESP, 0x08
	TEST AL, AL
	JZ loc_100247B1
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m23F70_sub_10024F70])
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m240E0_sub_100250E0])
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x00
	MOV DWORD PTR [ESI+0x00000100],0x00000000
	MOV DWORD PTR [ESI+0x00000110],0x00000000
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000258]
	MOV EAX, 0x00000001
	MOV WORD PTR DS:[ECX+0x000000BC],0x0001
	POP ESI
	RETN 0x0008
loc_100247B1:
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78C30_sub_10079C30])
	TEST AL, AL
	JZ loc_10024830
	MOV ECX,DWORD PTR [ESI+0x00000110]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	PUSH EAX
	LEA ECX,DWORD PTR [ESI+0x00000114]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CE80_sub_1003DE80])
	ADD ESP, 0x08
	TEST AL, AL
	JZ loc_10024816
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002F8]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m226D0_sub_100236D0])
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0008
loc_10024816:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV DWORD PTR [ESI+0x00000100],0x00000005
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0008
loc_10024830:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV DWORD PTR [ESI+0x00000100],0x00000005
	MOV EAX, 0x00000001
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10024850(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	XOR EAX, EAX
	MOV EDX,DWORD PTR [ECX+0x00000100]
	CMP EDX, 0x03
	JL loc_10024888
	CMP EDX, 0x04
	JLE loc_1002486A
	CMP EDX, 0x06
	JZ loc_10024874
	RETN 0x0008
loc_1002486A:
	MOV DWORD PTR [ECX+0x00000100],0x00000006
loc_10024874:
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m22130_sub_10023130])
	MOV EAX, 0x00000001
loc_10024888:
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10024890(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m23B82_proc_10024B82]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x10
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH ESI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	CMP WORD PTR DS:[ESI+0x28],0x00
	JZ_LONG(offset [LEGO1_text.m23BD9_loc_10024BD9])
	MOV ECX,DWORD PTR [ESI+0x20]
	LEA EAX,DWORD PTR [ECX-0x05]
	CMP EAX, 0x03
	JA loc_100248CF
	JMP_LONG(DWORD PTR [offset LEGO1_text.m23C04_proc_10024C04+EAX*4])
loc_100248CF:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x0000030C]
	TEST EAX, EAX
	JZ loc_100248E8
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ FAR loc_1002497B
loc_100248E8:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000310]
	TEST EAX, EAX
	JZ loc_100248FD
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_100248FD:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000314]
	TEST EAX, EAX
	JZ loc_10024912
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_10024912:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000318]
	TEST EAX, EAX
	JZ loc_10024927
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_10024927:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x0000031C]
	TEST EAX, EAX
	JZ loc_1002493C
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_1002493C:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000320]
	TEST EAX, EAX
	JZ loc_10024951
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_10024951:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000324]
	TEST EAX, EAX
	JZ loc_10024966
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JZ loc_1002497B
loc_10024966:
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000328]
	TEST EAX, EAX
	JZ loc_100249BC
	MOV EAX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EAX+0x1C],ECX
	JNZ loc_100249BC
loc_1002497B:
	PUSH ECX
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EDX+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [EDX+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78DC0_sub_10079DC0])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x00
	MOV ECX,DWORD PTR [EDX+0x00000304]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x01
	MOV ECX,DWORD PTR [EDX+0x00000304]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	JMP_LONG(offset [LEGO1_text.m23BEE_loc_10024BEE])
loc_100249BC:
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m24350_sub_10025350])
	JMP_LONG(offset [LEGO1_text.m23BEE_loc_10024BEE])
}
}

__declspec(naked) DWORD LEGO1_sub_10024B8C()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10024C20()
{
__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m23EB6_proc_10024EB6]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x0000032C]
	PUSH EDI
	MOV ESI, ECX
	MOV EAX,DWORD PTR [EAX+0x48]
	CMP EAX, 0x02
	JZ_LONG(offset [LEGO1_text.m23C6F_loc_10024C6F])
	CMP EAX, 0x04
	JZ_LONG(offset [LEGO1_text.m23D31_loc_10024D31])
	JMP_LONG(offset [LEGO1_text.m23C57_loc_10024C57])
}
}

__declspec(naked) DWORD LEGO1_sub_10024D29()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10024EC0()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10024EF0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m3DDA0_sub_1003EDA0])
	MOV EAX,DWORD PTR [ESI+0x0000032C]
	MOV ECX, ESI
	MOV DWORD PTR [EAX+0x48],0x00000003
	CALL_LONG(offset [LEGO1_text.m24D70_sub_10025D70])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m24720_sub_10025720])
	MOV EAX,DWORD PTR [ESI+0x0000032C]
	PUSH 0x07
	PUSH 0x00
	INC BYTE PTR [EAX+0x4C]
	CALL_LONG(offset [LEGO1_text.m14820_sub_10015820])
	ADD ESP, 0x08
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10024F30()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m21F30_sub_10022F30])
	MOV EAX,DWORD PTR [ESI+0x00000258]
	POP ESI
	MOV WORD PTR DS:[EAX+0x000000BC],0x0002
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10024F50()
{
__asm{
	MOV BYTE PTR [ECX+0x000002D4],0x00
	MOV EAX, DWORD PTR [offset LEGO1_rdata + 0x25A8]
	MOV ECX,DWORD PTR [ECX+0x00000258]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m78920_sub_10079920])
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10024F70(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000110]
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78CF0_sub_10079CF0])
	TEST AL, AL
	JZ loc_10024F9B
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m23FA0_sub_10024FA0])
loc_10024F9B:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10024FA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI, ECX
	MOV BL,BYTE PTR [ESP+arg1+0x8]
	PUSH EBX
	MOV ECX,DWORD PTR [ESI+0x000002D8]
	MOV BYTE PTR [ESI+0x00000348],BL
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002DC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002E0]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002E4]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002E8]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002EC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x000002F0]
	PUSH EBX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x54])
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10025010()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x000002D8]
	MOV ESI, ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDI,DWORD PTR [ESI+0x000002DC]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDI,DWORD PTR [ESI+0x000002E0]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDI,DWORD PTR [ESI+0x000002E4]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDI,DWORD PTR [ESI+0x000002E8]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV ECX, EDI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDI,DWORD PTR [ESI+0x000002EC]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ESI,DWORD PTR [ESI+0x000002F0]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	MOV EDI,DWORD PTR [ESI]
	MOV ECX, ESI
	CMP AL, 0x01
	SBB AL, AL
	NEG AL
	PUSH EAX
	CALL_LONG(DWORD PTR [EDI+0x54])
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100250E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000110]
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78D30_sub_10079D30])
	TEST AL, AL
	JZ FAR loc_1002533C
	CMP DWORD PTR [ESI+0x0000030C],0x00
	JZ FAR loc_1002533C
	MOV EDI, offset [LEGO1_data.m1330_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1330_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_10025188
	MOV ECX,DWORD PTR [ESI+0x00000308]
	MOV BL,BYTE PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x0000030C]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000310]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000314]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000318]
	PUSH EBX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10025188:
	MOV EDI, offset [LEGO1_data.m1328_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1328_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_100251FE
	MOV ECX,DWORD PTR [ESI+0x00000308]
	MOV BL,BYTE PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x0000031C]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000320]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000324]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000328]
	PUSH EBX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100251FE:
	MOV EDI, offset [LEGO1_data.m1320_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1320_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_10025244
	MOV ECX,DWORD PTR [ESI+0x00000310]
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10025244:
	MOV EDI, offset [LEGO1_data.m1318_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1318_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_1002528A
	MOV ECX,DWORD PTR [ESI+0x00000314]
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1002528A:
	CMP DWORD PTR [ESI+0x00000310],0x00
	JZ loc_100252D9
	MOV EDI, offset [LEGO1_data.m1310_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1310_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_100252D9
	MOV ECX,DWORD PTR [ESI+0x00000310]
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_100252D9:
	CMP DWORD PTR [ESI+0x00000314],0x00
	JZ loc_10025328
	MOV EDI, offset [LEGO1_data.m1308_str]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [ESI+0x00000110]
	PUSH ECX
	PUSH offset [LEGO1_data.m1308_str]
	MOV EDX,DWORD PTR [EAX+0x000000E4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_10025328
	MOV ECX,DWORD PTR [ESI+0x00000314]
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10025328:
	MOV ECX,DWORD PTR [ESI+0x0000030C]
	TEST ECX, ECX
	JZ loc_1002533C
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EAX,DWORD PTR [ECX]
	PUSH EBX
	CALL_LONG(DWORD PTR [EAX+0x54])
loc_1002533C:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10025350(DWORD arg1)
{
	enum{
		var_104 = -0x104,
		var_F8 = -0xF8,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000100
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX+0x00000110],0x00
	MOV ESI, ECX
	JZ FAR loc_10025441
	MOV EAX,DWORD PTR [ESI+0x000002DC]
	MOV ECX,DWORD PTR [ESP+arg1+0x108]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_10025383
	MOV EDI, offset [LEGO1_data.m137C_str]
	JMP loc_100253EA
loc_10025383:
	MOV EAX,DWORD PTR [ESI+0x000002E0]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_10025398
	MOV EDI, offset [LEGO1_data.m1370_str]
	JMP loc_100253EA
loc_10025398:
	MOV EAX,DWORD PTR [ESI+0x000002E4]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_100253AD
	MOV EDI, offset [LEGO1_data.m1364_str]
	JMP loc_100253EA
loc_100253AD:
	MOV EAX,DWORD PTR [ESI+0x000002E8]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_100253C2
	MOV EDI, offset [LEGO1_data.m1358_str]
	JMP loc_100253EA
loc_100253C2:
	MOV EAX,DWORD PTR [ESI+0x000002EC]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_100253D7
	MOV EDI, offset [LEGO1_data.m134C_str]
	JMP loc_100253EA
loc_100253D7:
	MOV EAX,DWORD PTR [ESI+0x000002F0]
	MOV EDX,DWORD PTR [EAX+0x1C]
	CMP DWORD PTR [EDX+0x1C],ECX
	JNZ loc_10025441
	MOV EDI, offset [LEGO1_data.m1340_str]
loc_100253EA:
	MOV ECX,DWORD PTR [ESI+0x00000300]
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESI+0x00000300]
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	PUSH EDI
	MOV ECX,DWORD PTR [ESI+0x00000110]
	CALL_LONG(offset [LEGO1_text.mA83B0_sub_100A93B0])
	MOV ECX,DWORD PTR [ESI+0x00000110]
	LEA EAX,DWORD PTR [ESP+var_104+0x10C]
	MOV EDX,DWORD PTR [ECX+0x000000E4]
	PUSH EDX
	PUSH offset LEGO1_data + 0x1338
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA ECX,DWORD PTR [ESP+var_F8+0x10C]
	ADD ESP, 0x0C
	PUSH EDI
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
loc_10025441:
	POP EDI
	POP ESI
	ADD ESP, 0x00000100
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10025450()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		arg1217224 = 0x4A4B20,
		arg1217234 = 0x4A4B48,
		arg1217242 = 0x4A4B68,
		arg1217262 = 0x4A4BB8,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000110]
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x0000012C]
	PUSH EBP
	MOV ESI, ECX
	ADD EAX, 0x10
	PUSH EAX
	MOV EBX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x28])
	PUSH EDI
	MOV EBP,DWORD PTR [ESI+0x000001C0]
	LEA ECX,DWORD PTR [ESI+0x000001C0]
	CALL_LONG(DWORD PTR [EBP+arg1217242-0x4A4B20])
	MOV EAX,DWORD PTR [ESI+0x000001C4]
	MOV ECX,DWORD PTR [ESI+0x00000258]
	MOV DWORD PTR [ESP+var_C+0x24],offset [LEGO1_rdata.m518_ptr]
	ADD EAX, 0x30
	LEA EBP,DWORD PTR [ESI+0x00000178]
	MOV DWORD PTR [ESP+var_8+0x24],EAX
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	ADD EAX, 0x30
	LEA ECX,DWORD PTR [ESP+var_C+0x24]
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m538_ptr])
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EDI
	MOV EBX,DWORD PTR [ECX+0x48]
	MOV ECX, EBP
	CALL_LONG(EBX)
	MOV ECX,DWORD PTR [ESI+0x00000110]
	MOV EAX,DWORD PTR [ECX+0x000000E4]
	MOV ECX,DWORD PTR [ESI+0x00000258]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m78CA0_sub_10079CA0])
	TEST AL, AL
	MOV EAX,DWORD PTR [ESI+0x00000110]
	JZ FAR loc_100255BA
	MOV EAX,DWORD PTR [EAX+0x14]
	LEA ECX,DWORD PTR [ESI+0x000002A4]
	ADD EAX, 0x30
	LEA EDX,DWORD PTR [ESP+var_14+0x24]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	PUSH EDX
	MOV DWORD PTR [ESP+var_10+0x24],offset [LEGO1_rdata.m5A0_ptr]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000098])
	CMP BYTE PTR [ESI+0x000002D4],0x00
	JNZ FAR loc_100255A7
	LEA ECX,DWORD PTR [ESI+0x000002BC]
	MOV EAX,DWORD PTR [ESI+0x000002A8]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [ESI+0x000002C4]
	MOV EAX, 0x00000004
loc_10025535:
	MOV EDX,DWORD PTR [ECX-0x18]
	ADD ECX, 0x04
	DEC EAX
	MOV DWORD PTR [ECX-0x04],EDX
	JNZ loc_10025535
	LEA ECX,DWORD PTR [ESI+0x00000208]
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x48])
	MOV ECX,DWORD PTR [ESI+0x000002A8]
	MOV EDX,DWORD PTR [ESI+0x000001C4]
	MOV EAX,DWORD PTR [ESI+0x0000020C]
	FLD DWORD PTR [EDX+0x30]
	FSUB DWORD PTR [EAX+0x30]
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ESI+0x000002A8]
	MOV EDX,DWORD PTR [ESI+0x000001C4]
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [ESI+0x0000020C]
	FLD DWORD PTR [EDX+0x34]
	FSUB DWORD PTR [EAX+0x34]
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ESI+0x000002A8]
	MOV EDX,DWORD PTR [ESI+0x000001C4]
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESI+0x0000020C]
	FLD DWORD PTR [EDX+0x38]
	FSUB DWORD PTR [EAX+0x38]
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [ECX]
loc_100255A7:
	ADD ESI, 0x000001C0
	MOV ECX, EBP
	PUSH ESI
	CALL_LONG(EBX)
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
loc_100255BA:
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78C30_sub_10079C30])
	TEST AL, AL
	JZ loc_100255EC
	MOV EAX,DWORD PTR [ESI+0x00000258]
	MOVSX ECX,WORD PTR [EAX+0x000000C0]
	MOV EAX,DWORD PTR [EAX+0x00000128]
	LEA EDX,DWORD PTR [ECX*2+ECX]
	MOV EDI,DWORD PTR [EDX*4+EAX+0x04]
	JMP loc_10025606
loc_100255EC:
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	MOV ECX,DWORD PTR [ESI+0x00000258]
	CALL_LONG(offset [LEGO1_text.m78D60_sub_10079D60])
	MOV EDI, EAX
loc_10025606:
	MOV EAX,DWORD PTR [ESI+0x00000110]
	MOV EBX,DWORD PTR [EAX+0x000000D4]
	PUSH EBX
	MOV ECX, EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	LEA ECX,DWORD PTR [ESI+0x00000208]
	ADD EAX, 0x10
	PUSH EAX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217234-0x4A4B20])
	PUSH EBX
	MOV ECX, EBX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mA7CE0_sub_100A8CE0])
	MOV EAX,DWORD PTR [EAX+0x14]
	MOV EDI, offset [LEGO1_rdata.m5A0_ptr]
	ADD EAX, 0x30
	LEA ECX,DWORD PTR [ESI+0x000002BC]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	LEA EAX,DWORD PTR [ESP+var_14+0x24]
	MOV DWORD PTR [ESP+var_14+0x24],EDI
	PUSH EAX
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217262-0x4A4B20])
	MOV ECX,DWORD PTR [ESI+0x00000110]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [ESI+0x000002A4]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	MOV DWORD PTR [ESP+var_14+0x24],EDI
	LEA EDI,DWORD PTR [ESP+var_14+0x24]
	PUSH EDI
	MOV EBP,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBP+arg1217262-0x4A4B20])
	MOV ECX,DWORD PTR [ESI+0x000002A8]
	MOV EAX,DWORD PTR [ESI+0x000001C4]
	ADD ECX, 0x08
	MOV EDX,DWORD PTR [ESI+0x00000130]
	FLD DWORD PTR [EAX+0x38]
	FSUB DWORD PTR [EDX+0x38]
	POP EBP
	POP EDI
	FADD DWORD PTR [ECX]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [ESI+0x000001C4]
	MOV ECX,DWORD PTR [ESI+0x0000017C]
	POP ESI
	POP EBX
	MOV EDX,DWORD PTR [EAX+0x38]
	MOV DWORD PTR [ECX+0x38],EDX
	ADD ESP, 0x10
	RET
}
}

