#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD __stdcall LEGO1__SerializeScoreHistory_LegoGameState__QAEXF_Z(DWORD arg1)
{
	enum{
		var_2C = -0x2C,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3BE8E_proc_1003CE8E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m981C0_sub_100991C0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ESI]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD350_sub_100AE350])
	PUSH offset LEGO1_data + 0x4050
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.mAD690_sub_100AE690])
	MOV EAX, DWORD PTR [offset LEGO1_data.m3E48_ptr]
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD690_sub_100AE690])
	MOV DI,WORD PTR SS:[EBP+arg1+0x4]
	CMP DI, 0x02
	JNZ loc_1003CE3D
	LEA ECX,DWORD PTR [ESI+0x000000A6]
	CALL_LONG(offset [LEGO1_text.m3B870_sub_1003C870])
loc_1003CE3D:
	MOVSX EAX,DI
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(offset [LEGO1_text.m983A0_sub_100993A0])
	TEST EAX, EAX
	JNZ loc_1003CE60
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [ESI+0x000000A6]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3BCF0_sub_1003CCF0])
loc_1003CE60:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m3BE86_sub_1003CE86])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3BE98_sub_1003CE98])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003CE86()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003CE98()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98250_loc_10099250])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003CEA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x10],EAX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1003CEB0()
{
__asm{
	PUSH ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	MOV ESI, ECX
	PUSH 0x00
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003CED0
	MOV DWORD PTR [ESI+0x14],0x00000000
	POP ESI
	RET
loc_1003CED0:
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4564]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003CEED
	MOV DWORD PTR [ESI+0x14],0x00000001
	POP ESI
	RET
loc_1003CEED:
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4568]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_1003CF0A
	MOV DWORD PTR [ESI+0x14],0x00000002
	POP ESI
	RET
loc_1003CF0A:
	MOV DWORD PTR [ESI+0x14],0xFFFFFFFF
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003CF20()
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3C00D_proc_1003D00D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m2B4C_ptr]
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	CMP DWORD PTR [ECX+0x10],0x00
	PUSH ESI
	PUSH EDI
	JZ loc_1003CF89
	LEA ESI,DWORD PTR [ECX+0x04]
loc_1003CF56:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [ECX]
	MOV ECX, ESI
	PUSH EDX
	PUSH EAX
	MOV EDI,DWORD PTR [EDX+0x0C]
	CALL_LONG(offset [LEGO1_text.m28D50_sub_10029D50])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
	TEST EDI, EDI
	JZ loc_1003CF80
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_1003CF80:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x10],0x00
	JNZ loc_1003CF56
loc_1003CF89:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x1C],0x00
	JZ loc_1003CFDE
	MOV ECX,DWORD PTR [EAX+0x18]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	LEA ECX,DWORD PTR [EAX+0x08]
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV ESI,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EDI+0x04],EDX
	CALL_LONG(offset [LEGO1_text.m3C030_sub_1003D030])
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX, ESI
	DEC DWORD PTR [EAX+0x1C]
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
	TEST ESI, ESI
	JZ loc_1003CF89
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX])
	JMP loc_1003CF89
loc_1003CFDE:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m3C002_sub_1003D002])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3C017_sub_1003D017])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003D002()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x14
	JMP_LONG(offset [LEGO1_text.m29340_loc_1002A340])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D017()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.m292F0_loc_1002A2F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D030()
{
__asm{
	CMP DWORD PTR [ECX],0x00
	JNZ loc_1003D045
	MOV EAX,DWORD PTR [ECX+0x04]
	TEST EAX, EAX
	JZ loc_1003D045
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003D045:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003D170(DWORD arg1)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3C277_proc_1003D277]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	MOV ECX, 0xFFFFFFFF
	PUSH EDI
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV EDI, ESI
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	MOV EDI, ESI
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_1C+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	XOR EAX, EAX
	LEA ESI,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV EBX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JZ loc_1003D210
loc_1003D1EB:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EBX+0x10]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JG loc_1003D205
	MOV EDI, EBX
	MOV EBX,DWORD PTR [EBX]
	JMP loc_1003D208
loc_1003D205:
	MOV EBX,DWORD PTR [EBX+0x08]
loc_1003D208:
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JNZ loc_1003D1EB
loc_1003D210:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	CMP DWORD PTR [EAX+0x08],EDI
	JZ loc_1003D232
	MOV EAX,DWORD PTR [EDI+0x10]
	MOV ECX,DWORD PTR [ESI+0x04]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	JLE loc_1003D23E
loc_1003D232:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
loc_1003D23E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m3C281_sub_1003D281])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP EAX,DWORD PTR [EBP+var_18+0x4]
	JZ loc_1003D273
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EAX+0x0C]
loc_1003D260:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_1003D273:
	XOR EAX, EAX
	JMP loc_1003D260
}
}

__declspec(naked) DWORD LEGO1_sub_1003D281()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3C030_sub_1003D030])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D290(DWORD arg1)
{
	enum{
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3C432_proc_1003D432]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x20
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x50]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	PUSH EBX
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ESI
	PUSH EDI
	LEA ESI,DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV EBX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JZ loc_1003D2FD
loc_1003D2D8:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EBX+0x10]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JG loc_1003D2F2
	MOV EDI, EBX
	MOV EBX,DWORD PTR [EBX]
	JMP loc_1003D2F5
loc_1003D2F2:
	MOV EBX,DWORD PTR [EBX+0x08]
loc_1003D2F5:
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JNZ loc_1003D2D8
loc_1003D2FD:
	MOV DWORD PTR [EBP+var_24+0x4],EDI
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EAX+0x08],EDI
	JZ loc_1003D31F
	MOV EAX,DWORD PTR [EDI+0x10]
	MOV ECX,DWORD PTR [ESI+0x04]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	JLE loc_1003D32B
loc_1003D31F:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1003D32B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m3C43C_sub_1003D43C])
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JZ_LONG(offset [LEGO1_text.m3C3E2_loc_1003D3E2])
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ESI,DWORD PTR [EAX+0x0C]
	CMP BYTE PTR [ESI+0x58],0x00
	JZ_LONG(offset [LEGO1_text.m3C3CD_loc_1003D3CD])
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	LEA ESI,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV ECX,DWORD PTR [EAX+0x50]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV ECX,DWORD PTR [EAX+0x18]
	LEA EDI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD ECX, 0x14
	CALL_LONG(offset [LEGO1_text.m3CAB0_sub_1003DAB0])
	MOV EDX, EAX
	MOV DWORD PTR [EDI],EAX
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX],EDX
	ADD EDX, 0x08
	JZ loc_1003D39D
	MOV ECX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDX+0x04],EAX
loc_1003D39D:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	INC DWORD PTR [EAX+0x1C]
	CALL_LONG(offset [LEGO1_text.m3C3C5_sub_1003D3C5])
	JMP_LONG(offset [LEGO1_text.m3C3AF_loc_1003D3AF])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D3C5()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3C030_sub_1003D030])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D42A()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3C030_sub_1003D030])
}
}

__declspec(naked) DWORD LEGO1_sub_1003D43C()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3C030_sub_1003D030])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003D450(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EBP,DWORD PTR [EBX+0x04]
	MOV EAX, 0x00000001
	MOV EDI,DWORD PTR [ESP+arg2+0x1C]
	CMP EBP,DWORD PTR [offset LEGO1_data + 0x31CC]
	JZ loc_1003D4A1
loc_1003D470:
	MOV EBX, EBP
	MOV EAX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	PUSH EAX
	MOV ECX,DWORD PTR [EDI+0x04]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	MOV EAX, 0x00000001
	JG loc_1003D48D
	XOR EAX, EAX
loc_1003D48D:
	TEST EAX, EAX
	JNZ loc_1003D496
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP loc_1003D499
loc_1003D496:
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
loc_1003D499:
	CMP EBP,DWORD PTR [offset LEGO1_data + 0x31CC]
	JNZ loc_1003D470
loc_1003D4A1:
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_1003D4D7
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EDI
	PUSH EBX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x24],0x00000001
	PUSH EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3C760_sub_1003D760])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_8+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1003D4D7:
	MOV DWORD PTR [ESP+var_4+0x1C],EBX
	TEST EAX, EAX
	JZ loc_1003D51F
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX],EBX
	JNZ loc_1003D516
	LEA EAX,DWORD PTR [ESP+var_C+0x1C]
	PUSH EDI
	PUSH EBX
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x24],0x00000001
	PUSH EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3C760_sub_1003D760])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_8+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1003D516:
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m3C6F0_sub_1003D6F0])
loc_1003D51F:
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	MOV ECX,DWORD PTR [EDI+0x04]
	PUSH ECX
	MOV EDX,DWORD PTR [EAX+0x10]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JLE FAR loc_1003D6C9
	PUSH 0x00
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_8+0x20],0x00000001
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m3C740_sub_1003D740])
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x31CC]
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x31CC]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	ADD EAX, 0x0C
	JZ loc_1003D577
	MOV ECX,DWORD PTR [EDI]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
loc_1003D577:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EBX
	JZ loc_1003D5B0
	CMP EBP,DWORD PTR [offset LEGO1_data + 0x31CC]
	JNZ loc_1003D5B0
	MOV EAX,DWORD PTR [EBX+0x10]
	MOV ECX,DWORD PTR [EDI+0x04]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JG loc_1003D5B0
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EBX+0x08],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBX
	JNZ loc_1003D5D2
	MOV DWORD PTR [EAX],ECX
	JMP loc_1003D5D2
loc_1003D5B0:
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EBX],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, EBX
	JZ loc_1003D5C5
	CMP DWORD PTR [EAX],EBX
	JNZ loc_1003D5D2
	MOV DWORD PTR [EAX],ECX
	JMP loc_1003D5D2
loc_1003D5C5:
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],ECX
loc_1003D5D2:
	MOV EDI,DWORD PTR [ESP+var_C+0x1C]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDI
	JZ FAR loc_1003D6A1
loc_1003D5E2:
	LEA ECX,DWORD PTR [EDI+0x04]
	MOV EBX,DWORD PTR [ECX]
	LEA EDX,DWORD PTR [EBX+0x14]
	CMP DWORD PTR [EDX],0x00
	JNZ FAR loc_1003D6A1
	MOV EBP,DWORD PTR [EBX+0x04]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EAX, EBX
	JNZ loc_1003D63C
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX+0x14],0x00
	JZ loc_1003D677
	CMP DWORD PTR [EBX+0x08],EDI
	JNZ loc_1003D615
	PUSH EBX
	MOV EDI, EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3C9F0_sub_1003D9F0])
loc_1003D615:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3CA50_sub_1003DA50])
	JMP loc_1003D695
loc_1003D63C:
	CMP DWORD PTR [EAX+0x14],0x00
	JZ loc_1003D677
	CMP DWORD PTR [EBX],EDI
	JNZ loc_1003D650
	PUSH EBX
	MOV EDI, EBX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3CA50_sub_1003DA50])
loc_1003D650:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3C9F0_sub_1003D9F0])
	JMP loc_1003D695
loc_1003D677:
	MOV DWORD PTR [EDX], 0x00000001
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX]
	MOV EDI,DWORD PTR [EAX+0x04]
loc_1003D695:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDI
	JNZ FAR loc_1003D5E2
loc_1003D6A1:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX+0x14],0x00000001
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EAX],EDX
	MOV ECX,DWORD PTR [ESP+var_8+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1003D6C9:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],0x00000000
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1003D6F0()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x14],0x00
	JNZ loc_1003D708
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_1003D708
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_1003D708:
	MOV EDX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EDX
	JZ loc_1003D725
loc_1003D712:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003D721
	MOV EDX, EAX
	JMP loc_1003D712
loc_1003D721:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
loc_1003D725:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_1003D737
loc_1003D72C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1003D72C
loc_1003D737:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003D740(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x14],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003D760(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217229 = 0x4A4B34,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDI,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x31CC]
	ADD EAX, 0x0C
	MOV EDX,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],ECX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x31CC]
	MOV DWORD PTR [EAX-0x04],ECX
	JZ loc_1003D7AA
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EBX
loc_1003D7AA:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EDI
	JZ loc_1003D7E7
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JNZ loc_1003D7E7
	MOV EAX,DWORD PTR [EDI+0x10]
	MOV ECX,DWORD PTR [EDX+0x04]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JG loc_1003D7E7
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDI+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1003D809
	MOV DWORD PTR [EAX],EDX
	JMP loc_1003D809
loc_1003D7E7:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDI],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EDI, EAX
	JZ loc_1003D7FC
	CMP DWORD PTR [EAX],EDI
	JNZ loc_1003D809
	MOV DWORD PTR [EAX],EDX
	JMP loc_1003D809
loc_1003D7FC:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_1003D809:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1003D9CC
loc_1003D819:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x14]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_1003D9CC
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_1003D8F5
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217229-0x4A4B20],0x00
	JZ FAR loc_1003D9A2
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_1003D885
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003D865
	MOV DWORD PTR [EAX+0x04],ECX
loc_1003D865:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1003D87F
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1003D87F
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1003D881
loc_1003D87F:
	MOV DWORD PTR [EAX],EDX
loc_1003D881:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_1003D885:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003D8B7
	MOV DWORD PTR [EAX+0x04],EDX
loc_1003D8B7:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003D8EB
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003D8DE
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1003D9C0
loc_1003D8DE:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1003D9C0
loc_1003D8EB:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	JMP FAR loc_1003D99D
loc_1003D8F5:
	CMP DWORD PTR [EBP+arg1217229-0x4A4B20],0x00
	JZ FAR loc_1003D9A2
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1003D93D
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003D91A
	MOV DWORD PTR [EAX+0x04],ECX
loc_1003D91A:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1003D936
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1003D936
	MOV DWORD PTR [EBX],EDX
	JMP loc_1003D938
loc_1003D936:
	MOV DWORD PTR [EAX],EDX
loc_1003D938:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1003D93D:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003D96F
	MOV DWORD PTR [EAX+0x04],EDX
loc_1003D96F:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003D999
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003D990
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1003D9C0
loc_1003D990:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1003D9C0
loc_1003D999:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
loc_1003D99D:
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1003D9C0
loc_1003D9A2:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1003D9C0:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_1003D819
loc_1003D9CC:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x14],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003D9F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003DA0A
	MOV DWORD PTR [EAX+0x04],EDX
loc_1003DA0A:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003DA38
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1003DA2D
	MOV DWORD PTR [EAX+0x08],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_1003DA2D:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_1003DA38:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DA50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003DA6A
	MOV DWORD PTR [EAX+0x04],ESI
loc_1003DA6A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_1003DA9C
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],ESI
	JZ loc_1003DA90
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1003DA90:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1003DA9C:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DAB0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x10
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_1003DACE
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_1003DACE:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DAE0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg3]
	PUSH ESI
	MOV ESI, ECX
	PUSH EAX
	MOV EDX,DWORD PTR [ESP+arg2+0x8]
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m3C170_sub_1003D170])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3CB10_sub_1003DB10])
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DB10(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x8]
	TEST EDI, EDI
	JNZ loc_1003DB23
	XOR EAX, EAX
	POP EDI
	POP ESI
	RETN 0x000C
loc_1003DB23:
	CMP BYTE PTR [EDI+0x58],0x00
	JZ loc_1003DB5D
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m5960_sub_10006960])
	TEST EAX, EAX
	JZ loc_1003DB56
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3C290_sub_1003D290])
	MOV ESI, EAX
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	MOV AL,BYTE PTR [ESP+arg2+0xC]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5A30_sub_10006A30])
	MOV EAX, ESI
	POP EDI
	POP ESI
	RETN 0x000C
loc_1003DB56:
	XOR EAX, EAX
	POP EDI
	POP ESI
	RETN 0x000C
loc_1003DB5D:
	MOV EAX,DWORD PTR [ESP+arg3+0x8]
	MOV ECX,DWORD PTR [ESP+arg2+0x8]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m5A30_sub_10006A30])
	MOV EAX, EDI
	POP EDI
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DB80(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EAX, ESI
	JZ loc_1003DBFC
	MOV EDI,DWORD PTR [EDX]
loc_1003DB99:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x0C],EDI
	JZ loc_1003DBEC
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JZ loc_1003DBBB
loc_1003DBAD:
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003DBE0
	MOV EBX, EAX
	JMP loc_1003DBAD
loc_1003DBBB:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EBX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EBX+0x08],EAX
	JNZ loc_1003DBD7
loc_1003DBC7:
	MOV DWORD PTR [ESP+var_4+0x10],EBX
	MOV EBX,DWORD PTR [EBX+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EBX+0x08],EAX
	JZ loc_1003DBC7
loc_1003DBD7:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x08],EBX
	JZ loc_1003DBE4
loc_1003DBE0:
	MOV DWORD PTR [ESP+var_4+0x10],EBX
loc_1003DBE4:
	CMP DWORD PTR [ESP+var_4+0x10],ESI
	JNZ loc_1003DB99
	JMP loc_1003DBFC
loc_1003DBEC:
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1003DBFC:
	MOV ESI,DWORD PTR [ECX+0x18]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EAX, ESI
	JZ loc_1003DC2C
	MOV ECX,DWORD PTR [EDX]
loc_1003DC0B:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_1003DC27
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],EDX
	CMP EDX, ESI
	JNZ loc_1003DC0B
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1003DC27:
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
loc_1003DC2C:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003DC40(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV EDX,DWORD PTR [ECX+0x08]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x10]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EAX, EDX
	JZ FAR loc_1003DCDE
	MOV ECX,DWORD PTR [EDI]
loc_1003DC5F:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_1003DCB2
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EBX
	JZ loc_1003DC81
loc_1003DC73:
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x31CC],EAX
	JZ loc_1003DCA6
	MOV EBX, EAX
	JMP loc_1003DC73
loc_1003DC81:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EBX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EBX+0x08],EAX
	JNZ loc_1003DC9D
loc_1003DC8D:
	MOV DWORD PTR [ESP+var_4+0x10],EBX
	MOV EBX,DWORD PTR [EBX+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EBX+0x08],EAX
	JZ loc_1003DC8D
loc_1003DC9D:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	CMP DWORD PTR [EAX+0x08],EBX
	JZ loc_1003DCAA
loc_1003DCA6:
	MOV DWORD PTR [ESP+var_4+0x10],EBX
loc_1003DCAA:
	CMP DWORD PTR [ESP+var_4+0x10],EDX
	JNZ loc_1003DC5F
	JMP loc_1003DCDE
loc_1003DCB2:
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
	MOV ECX,DWORD PTR [EDI]
	TEST ECX, ECX
	JZ loc_1003DCC3
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1003DCC3:
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	LEA ECX,DWORD PTR [ESP+var_8+0x14]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x04]
	CALL_LONG(offset [LEGO1_text.m28D50_sub_10029D50])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1003DCDE:
	MOV EDX,DWORD PTR [ESI+0x18]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESP+var_4+0x10],EAX
	CMP EDX, EAX
	JZ loc_1003DD5B
	MOV ECX,DWORD PTR [EDI]
loc_1003DCED:
	MOV EAX,DWORD PTR [ESP+var_4+0x10]
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP EDI, ECX
	JZ loc_1003DD0B
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0x10],EBX
	CMP EDX, EBX
	JNZ loc_1003DCED
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_1003DD0B:
	CALL_LONG(offset [LEGO1_text.m5B80_sub_10006B80])
	TEST EDI, EDI
	JZ loc_1003DD1C
	PUSH 0x01
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX])
loc_1003DD1C:
	MOV EDX,DWORD PTR [ESP+var_8+0x14]
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	MOV ECX,DWORD PTR [EDX+0x04]
	ADD EDX, 0x04
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	MOV ECX,DWORD PTR [EDX]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EBX+0x04],ECX
	CMP DWORD PTR [EAX+0x08],0x00
	JNZ loc_1003DD4B
	MOV EAX,DWORD PTR [EAX+0x0C]
	TEST EAX, EAX
	JZ loc_1003DD4B
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003DD4B:
	MOV EAX,DWORD PTR [ESP+var_8+0x14]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x1C]
loc_1003DD5B:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1__PickROI__YAPAVLegoROI__JJ_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EAX+0x68]
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ECX+0x08]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAA2B0_sub_100AB2B0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DD90(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EAX+0x68]
	MOV EDX,DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ECX+0x08]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mAA2B0_sub_100AB2B0])
	TEST EAX, EAX
	JZ loc_1003DDBE
loc_1003DDAE:
	MOV ECX,DWORD PTR [EAX+0x000000D4]
	TEST ECX, ECX
	JZ loc_1003DDBE
	MOV EAX, ECX
	TEST EAX, EAX
	JNZ loc_1003DDAE
loc_1003DDBE:
	RET
}
}

__declspec(naked) DWORD LEGO1__PickEntity__YAPAVLegoEntity__JJ_Z(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV ECX,DWORD PTR [ESP+arg1]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CD90_sub_1003DD90])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003DDD9
	XOR EAX, EAX
	RET
loc_1003DDD9:
	MOV EAX,DWORD PTR [EAX+0x00000104]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DDE0(DWORD arg1)
{
	enum{
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x50
	LEA EAX,DWORD PTR [ESP+var_40+0x50]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x54]
	PUSH EDI
	LEA ECX,DWORD PTR [ESP+var_48+0x58]
	MOV DWORD PTR [ESP+var_44+0x58],EAX
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
	LEA EDI,DWORD PTR [ESI+0x10]
	PUSH EDI
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m328_ptr])
	FLD DWORD PTR [ESP+arg1+0x5C]
	FSIN
	XOR ECX, ECX
	FSTP DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [ESP+arg1+0x5C]
	FCOS
	FSTP DWORD PTR [ESP+var_54+0x5C]
	JMP loc_1003DE23
loc_1003DE1F:
	FSTP DWORD PTR [ECX+EDX-0x08]
loc_1003DE23:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [ESP+var_48+0x5C]
	ADD EAX, ECX
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESP+var_50+0x5C]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ESP+var_54+0x5C]
	FADDP ST(1),ST
	FSTP DWORD PTR [ECX+EDX]
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV EDX,DWORD PTR [ESP+var_48+0x5C]
	ADD EAX, ECX
	ADD ECX, 0x10
	CMP ECX, 0x30
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESP+var_54+0x5C]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ESP+var_50+0x5C]
	FCOMPP
	JL loc_1003DE1F
	FSTP DWORD PTR [ECX+EDX-0x08]
	LEA EAX,DWORD PTR [ESP+var_4C+0x5C]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	POP EDI
	POP ESI
	ADD ESP, 0x50
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DE80(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+arg2+0x4]
	MOV ESI,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [ESI+0x08]
	MOV EDX,DWORD PTR [ECX+0x04]
	FSUB DWORD PTR [EDX+0x08]
	FLD DWORD PTR [ESI+0x04]
	FSUB DWORD PTR [EDX+0x04]
	FLD DWORD PTR [ESI]
	FSUB DWORD PTR [EDX]
	FXCH ST(2)
	FMUL ST(0),ST
	FXCH ST(1)
	FMUL ST(0),ST
	FADDP ST(1),ST
	FXCH ST(1)
	FMUL ST(0),ST
	FADDP ST(1),ST
	FSQRT
	POP ESI
	FLD DWORD PTR [ECX+0x14]
	FADD DWORD PTR [EAX+0x14]
	FCOMPP
	FNSTSW AX
	TEST AH,0x41
	SETE AL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DED0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		r = 0x0,
		arg1 = 0x4,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ESP+arg1+0x28]
	MOV ESI,DWORD PTR [ECX+0x10]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_18+0x28],EDX
	MOV EAX, 0x3F800000
	MOV EDI,DWORD PTR [ESP+arg3+0x28]
	MOV DWORD PTR [ESP+var_1C+0x28],ECX
	PUSH EDI
	MOV DWORD PTR [ESP+var_14+0x2C],EAX
	MOV DWORD PTR [ESP+var_10+0x2C],EAX
	MOV ECX,DWORD PTR [ESI]
	LEA EAX,DWORD PTR [ESP+var_1C+0x2C]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX+0x34]
	MOV ECX, ESI
	CALL_LONG(EBX)
	FLD DWORD PTR [ESP+var_24+0x30]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3510]
	MOV DWORD PTR [ESP+var_18+0x30],0x40000000
	LEA EAX,DWORD PTR [ESP+var_14+0x30]
	LEA ECX,DWORD PTR [ESP+var_24+0x30]
	PUSH EAX
	PUSH ECX
	FSTP DWORD PTR [ESP+var_1C+0x30]
	FLD DWORD PTR [ESP+var_18+0x30]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3510]
	MOV ECX, ESI
	FSTP DWORD PTR [ESP+var_18+0x30]
	CALL_LONG(EBX)
	FLD DWORD PTR [ESP+var_14+0x30]
	FSUB DWORD PTR [EDI]
	MOV ECX,DWORD PTR [ESP+r+0x30]
	FSTP DWORD PTR [ECX]
	FLD DWORD PTR [ESP+var_10+0x30]
	FSUB DWORD PTR [EDI+0x04]
	MOV AL, 0x01
	FSTP DWORD PTR [ECX+0x04]
	FLD DWORD PTR [ESP+var_C+0x30]
	FSUB DWORD PTR [EDI+0x08]
	POP EDI
	POP ESI
	POP EBX
	FSTP DWORD PTR [ECX+0x08]
	ADD ESP, 0x1C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DF70(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ESP+arg2]
	PUSH EAX
	MOV ECX,DWORD PTR [EDX+0x10]
	MOV EDX,DWORD PTR [ESP+arg1+0x4]
	MOV EAX,DWORD PTR [ECX]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV AL, 0x01
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DF90(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	MOV DI, 0x0001
	PUSH EBP
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	CMP DWORD PTR [ESI+0x08],EBX
	JBE loc_1003DFC1
	XOR EBP, EBP
loc_1003DFA5:
	MOV EAX,DWORD PTR [ESI+0x0C]
	ADD EBP, 0x04
	INC EBX
	MOV ECX,DWORD PTR [EBP+EAX+arg1217223-0x4A4B20]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CF90_sub_1003DF90])
	ADD DI, AX
	ADD ESP, 0x04
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_1003DFA5
loc_1003DFC1:
	MOV AX, DI
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003DFD0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],0x00000000
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	TEST EDI, EDI
	JNZ loc_1003DFF1
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	MOV DWORD PTR [ESP+var_4+0x14],ESI
	JMP loc_1003E036
loc_1003DFF1:
	XOR EBX, EBX
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	CMP DWORD PTR [ESI+0x08],EBX
	JBE loc_1003E036
	XOR EBP, EBP
loc_1003DFFE:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EBP+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CF90_sub_1003DF90])
	MOVSX EAX,AX
	ADD ESP, 0x04
	CMP EAX, EDI
	JNB loc_1003E021
	SUB EDI, EAX
	ADD EBP, 0x04
	INC EBX
	CMP DWORD PTR [ESI+0x08],EBX
	JA loc_1003DFFE
	JMP loc_1003E036
loc_1003E021:
	DEC EDI
	MOV EAX,DWORD PTR [ESI+0x0C]
	PUSH EDI
	MOV ECX,DWORD PTR [EBX*4+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3CFD0_sub_1003DFD0])
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
	ADD ESP, 0x08
loc_1003E036:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003E050(DWORD arg1)
{
	enum{
		var_100 = -0x100,
		var_FC = -0xFC,
		var_F8 = -0xF8,
		var_F4 = -0xF4,
		var_F0 = -0xF0,
		var_EC = -0xEC,
		var_E8 = -0xE8,
		var_DC = -0xDC,
		var_D8 = -0xD8,
		var_D4 = -0xD4,
		var_D0 = -0xD0,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
	};

__asm{
	SUB ESP, 0x00000104
	LEA EAX,DWORD PTR [ESP+var_40+0x104]
	PUSH EBX
	MOV ECX,DWORD PTR [ESP+arg1+0x108]
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH EBP
	MOV EDX,DWORD PTR [ECX+0x64]
	MOV DWORD PTR [ESP+var_48+0x114],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESP+var_44+0x114],EAX
	MOV ESI,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESP+var_100+0x114],EBX
	PUSH ESI
	MOV DWORD PTR [ESP+var_F8+0x118],EBX
	CALL_LONG(offset [LEGO1_text.m3CF90_sub_1003DF90])
	MOV WORD PTR SS:[ESP+var_100+0x116],AX
	ADD ESP, 0x04
	CMP AX, BX
	JLE FAR loc_1003E13A
loc_1003E0A1:
	CMP DWORD PTR [ESP+var_100+0x114],0x00
	JZ loc_1003E0B3
	CMP DWORD PTR [ESP+var_F8+0x114],0x00
	JNZ FAR loc_1003E13A
loc_1003E0B3:
	MOVSX EAX,BX
	PUSH EAX
	MOV EDI, offset LEGO1_data + 0x4088
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m3CFD0_sub_1003DFD0])
	ADD ESP, 0x08
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	DEC ECX
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH ECX
	PUSH offset LEGO1_data + 0x4088
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mD0ED0_sub_100D1ED0])
	ADD ESP, 0x0C
	TEST EAX, EAX
	JNZ loc_1003E114
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	MOV DWORD PTR [ESP+var_100+0x114],EBP
	MOV EDX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDI, EDX
	REPNE SCAS
	NOT ECX
	LEA EAX,DWORD PTR [EDX+ECX-0x01]
	SUB EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP+var_DC+0x118]
	ADD ESP, 0x04
	JMP loc_1003E12D
loc_1003E114:
	PUSH offset [LEGO1_data.m4080_str]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E12D
	MOV DWORD PTR [ESP+var_F8+0x114],EBP
loc_1003E12D:
	INC BX
	CMP BX,WORD PTR SS:[ESP+var_100+0x112]
	JL FAR loc_1003E0A1
loc_1003E13A:
	LEA EAX,DWORD PTR [ESP+var_D0+0x114]
	LEA ECX,DWORD PTR [ESP+var_88+0x114]
	MOV DWORD PTR [ESP+var_D4+0x114],EAX
	MOV DWORD PTR [ESP+var_8C+0x114],ECX
	MOV EAX, offset [LEGO1_rdata.m300_ptr]
	LEA ECX,DWORD PTR [ESP+var_D8+0x114]
	MOV ESI, 0x3F800000
	MOV DWORD PTR [ESP+var_D8+0x114],EAX
	MOV DWORD PTR [ESP+var_90+0x114],EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m320_ptr])
	MOV ECX,DWORD PTR [ESP+var_D4+0x114]
	MOV DWORD PTR [ECX],ESI
	MOV ECX,DWORD PTR [ESP+var_D4+0x114]
	MOV DWORD PTR [ECX+0x14],ESI
	MOV ECX,DWORD PTR [ESP+var_D4+0x114]
	MOV DWORD PTR [ECX+0x28],ESI
	MOV ECX,DWORD PTR [ESP+var_D4+0x114]
	MOV DWORD PTR [ECX+0x3C],ESI
	LEA ECX,DWORD PTR [ESP+var_90+0x114]
	MOV EAX,DWORD PTR [ESP+var_90+0x114]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV ECX,DWORD PTR [ESP+var_8C+0x114]
	MOV DWORD PTR [ECX],ESI
	MOV ECX,DWORD PTR [ESP+var_8C+0x114]
	LEA EAX,DWORD PTR [ESP+var_D8+0x114]
	MOV DWORD PTR [ECX+0x14],ESI
	MOV ECX,DWORD PTR [ESP+var_8C+0x114]
	PUSH EAX
	PUSH 0x00
	MOV DWORD PTR [ECX+0x28],ESI
	MOV ECX,DWORD PTR [ESP+var_84+0x114]
	MOV DWORD PTR [ECX+0x3C],ESI
	MOV ECX,DWORD PTR [ESP+var_F8+0x114]
	CALL_LONG(offset [LEGO1_text.m9F3C0_sub_100A03C0])
	LEA ECX,DWORD PTR [ESP+var_90+0x114]
	PUSH ECX
	PUSH 0x00
	MOV ECX,DWORD PTR [ESP+var_F0+0x114]
	CALL_LONG(offset [LEGO1_text.m9F3C0_sub_100A03C0])
	LEA ECX,DWORD PTR [ESP+var_E8+0x114]
	MOV EDX,DWORD PTR [ESP+var_8C+0x114]
	MOV EAX,DWORD PTR [ESP+var_D4+0x114]
	MOV DWORD PTR [ESP+var_EC+0x114],ECX
	MOV DWORD PTR [ESP+var_F0+0x114],offset [LEGO1_rdata.m488_ptr]
	FLD DWORD PTR [EDX+0x30]
	FSUB DWORD PTR [EAX+0x30]
	FSTP DWORD PTR [ESP+var_E8+0x114]
	FLD DWORD PTR [EDX+0x34]
	FSUB DWORD PTR [EAX+0x34]
	FSTP DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [ESP+var_8C+0x114]
	MOV EAX,DWORD PTR [ESP+var_D4+0x114]
	MOV ECX,DWORD PTR [ESP+var_EC+0x114]
	FLD DWORD PTR [EDX+0x38]
	FSUB DWORD PTR [EAX+0x38]
	FSTP DWORD PTR [ECX+0x08]
	LEA ECX,DWORD PTR [ESP+var_F0+0x114]
	MOV EBX,DWORD PTR [ESP+var_F0+0x114]
	CALL_LONG(DWORD PTR [EBX+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x34F8]
	FSTP DWORD PTR [ESP+var_100+0x114]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1003E26E
	FLD DWORD PTR [ESP+var_100+0x114]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x34F8]
	FSTP DWORD PTR [ESP+var_100+0x114]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1003E26E
	LEA EAX,DWORD PTR [ESP+var_100+0x114]
	LEA ECX,DWORD PTR [ESP+var_F0+0x114]
	MOV EBX,DWORD PTR [ESP+var_F0+0x114]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x14])
loc_1003E26E:
	MOV EAX,DWORD PTR [ESP+var_D4+0x114]
	MOV ECX,DWORD PTR [ESP+var_D4+0x114]
	ADD EAX, 0x10
	ADD ECX, 0x30
	MOV DWORD PTR [ESP+var_FC+0x114],EAX
	MOV EAX, offset [LEGO1_rdata.m518_ptr]
	LEA EDX,DWORD PTR [ESP+var_100+0x114]
	MOV DWORD PTR [ESP+var_100+0x114],EAX
	MOV DWORD PTR [ESP+var_F4+0x114],ECX
	LEA ECX,DWORD PTR [ESP+var_F0+0x114]
	MOV DWORD PTR [ESP+var_F8+0x114],EAX
	LEA EAX,DWORD PTR [ESP+var_48+0x114]
	PUSH EAX
	PUSH EDX
	LEA EAX,DWORD PTR [ESP+var_F0+0x114]
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	ADD ESP, 0x10
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EDI,DWORD PTR [EAX+0x6C]
	MOV ESI, EAX
	LEA ECX,DWORD PTR [ESP+var_48+0x114]
	MOV EAX,DWORD PTR [ESI+0x68]
	PUSH ECX
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	PUSH EDI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	CALL_LONG(offset [LEGO1_text.m3DDA0_sub_1003EDA0])
	MOV EAX,DWORD PTR [ESP+var_DC+0x114]
	PUSH 0x437A0000
	PUSH 0x3DCCCCCD
	MOV ECX,DWORD PTR [ESI+0x68]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAA4D0_sub_100AB4D0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000104
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003E300(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, 0x0000000B
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH ESI
	PUSH offset [LEGO1_data.m40C4_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E327
	MOV EDI, 0x00000002
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E327:
	PUSH ESI
	PUSH offset [LEGO1_data.m40B8_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E343
	MOV EDI, 0x00000001
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E343:
	PUSH ESI
	PUSH offset [LEGO1_data.m40B0_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E35F
	MOV EDI, 0x00000003
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E35F:
	PUSH ESI
	PUSH offset [LEGO1_data.m40A8_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E37B
	MOV EDI, 0x00000004
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E37B:
	PUSH ESI
	PUSH offset LEGO1_data + 0x40A0
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E397
	MOV EDI, 0x00000005
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E397:
	PUSH ESI
	PUSH offset LEGO1_data + 0x409C
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E3B3
	MOV EDI, 0x00000006
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E3B3:
	PUSH ESI
	PUSH offset LEGO1_data + 0x4094
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E3CF
	MOV EDI, 0x00000007
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E3CF:
	PUSH ESI
	PUSH offset [LEGO1_data.m3BE8_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E3EB
	MOV EDI, 0x00000008
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E3EB:
	PUSH ESI
	PUSH offset [LEGO1_data.m3BF4_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E407
	MOV EDI, 0x00000009
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
loc_1003E407:
	PUSH ESI
	PUSH offset [LEGO1_data.m408C_str]
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ loc_1003E41E
	MOV EDI, 0x0000000A
loc_1003E41E:
	MOV EAX, EDI
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003E430(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_A8 = -0xA8,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3D627_proc_1003E627]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000098
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m3D61F_sub_1003E61F])
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	DEC EAX
	MOV DWORD PTR [EBP+var_8C+0x4],ECX
	CMP EAX, 0x09
	JA_LONG(offset [LEGO1_text.m3D606_loc_1003E606])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m3D63C_proc_1003E63C+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E61F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E631()
{
	enum{
		arg1217183 = 0x4A4A7C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217183-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E670(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3D6E2_proc_1003E6E2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	SUB ESP, 0x08
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	PUSH EAX
	PUSH 0x03
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3D6EC_sub_1003E6EC])
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JZ loc_1003E6DE
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x68])
	MOV AL, 0x01
loc_1003E6D0:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBP
	RET
loc_1003E6DE:
	XOR AL, AL
	JMP loc_1003E6D0
}
}

__declspec(naked) DWORD LEGO1_sub_1003E6EC()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E700(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3D85D_proc_1003E85D]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x24
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
	MOV ESI,DWORD PTR [EBP+arg2+0x4]
	LEA EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH ESI
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, EBX
	JNZ FAR loc_1003E7CC
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV EDI,DWORD PTR [EAX+0x78]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	MOV DWORD PTR [EBP+var_18+0x4],EBX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m35B8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m3588_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m35A0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
loc_1003E787:
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	JNZ loc_1003E794
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1003E79A
loc_1003E794:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1003E79A:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	JZ loc_1003E7C3
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],EBX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	JZ loc_1003E7C3
	PUSH ESI
	LEA EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CMP EAX, EBX
	JZ loc_1003E787
loc_1003E7C3:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m3D845_sub_1003E845])
loc_1003E7CC:
	XOR EBX, EBX
	CMP DWORD PTR [EBP+var_14+0x4],EBX
	JZ loc_1003E811
	MOV DWORD PTR [EBP+var_34+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV EAX,DWORD PTR [EBP+arg3+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EBX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV DWORD PTR [EBP+var_34+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mAB6C0_sub_100AC6C0])
	MOV BYTE PTR [EBP+var_8+0x4],BL
	CALL_LONG(offset [LEGO1_text.m3D855_sub_1003E855])
loc_1003E811:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3D867_sub_1003E867])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003E845()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA60_loc_1003EA60])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E855()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E867()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E8C9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3D8E0_loc_1003E8E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E921()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA10_loc_1003EA10])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E989()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003E9F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3DA10_loc_1003EA10])
}
}

__declspec(naked) DWORD LEGO1_sub_1003EA51()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003EAA1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m3D8E0_loc_1003E8E0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003EAB0()
{
__asm{
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	MOV EAX,DWORD PTR [EAX+0x00000098]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B700_sub_1005C700])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EAE0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_20 = -0x20,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	FLD DWORD PTR [ESP+arg2]
	SUB ESP, 0x20
	FSTP QWORD PTR [ESP+var_10+0x20]
	CMP DWORD PTR [ESP+arg2+0x20],0x3F000000
	JLE loc_1003EB09
	FLD DWORD PTR [offset LEGO1_rdata + 0x34F4]
	FSUB DWORD PTR [ESP+arg3+0x20]
	FMUL DWORD PTR [ESP+arg2+0x20]
	FADD DWORD PTR [ESP+arg3+0x20]
	JMP loc_1003EB13
loc_1003EB09:
	FLD1
	FADD DWORD PTR [ESP+arg3+0x20]
	FMUL QWORD PTR [ESP+var_10+0x20]
loc_1003EB13:
	FSTP QWORD PTR [ESP+var_20+0x20]
	FLDZ
	FCOMP QWORD PTR [ESP+var_20+0x20]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_1003EB46
	MOV EAX,DWORD PTR [ESP+arg6+0x20]
	MOV ECX,DWORD PTR [ESP+arg5+0x20]
	MOV EDX,DWORD PTR [ESP+arg4+0x20]
	MOV DWORD PTR [EAX], 0x00000000
	MOV DWORD PTR [ECX], 0x00000000
	MOV DWORD PTR [EDX], 0x00000000
	ADD ESP, 0x20
	RET
loc_1003EB46:
	FLD DWORD PTR [ESP+arg2+0x20]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x350C]
	FSUB QWORD PTR [ESP+var_20+0x20]
	FSTP QWORD PTR [ESP+var_18+0x20]
	FLD DWORD PTR [ESP+arg1+0x20]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x3530]
	FLD ST(0)
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD QWORD PTR [ESP+var_20+0x20]
	FSUB QWORD PTR [ESP+var_18+0x20]
	MOV DWORD PTR [ESP+var_10+0x20],EAX
	FDIV QWORD PTR [ESP+var_20+0x20]
	FXCH ST(1)
	FISUB DWORD PTR [ESP+var_10+0x20]
	FMULP ST(1),ST
	CMP EAX, 0x06
	FMUL QWORD PTR [ESP+var_20+0x20]
	FLD QWORD PTR [ESP+var_18+0x20]
	FADD ST,ST(1)
	FSTP QWORD PTR [ESP+var_10+0x20]
	FSUBR QWORD PTR [ESP+var_20+0x20]
	FSTP QWORD PTR [ESP+var_8+0x20]
	JA_LONG(offset [LEGO1_text.m3DC91_loc_1003EC91])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m3DC98_proc_1003EC98+EAX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_1003ECC0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3DD87_proc_1003ED87]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x14
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	XOR ECX, ECX
	TEST EAX, EAX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	JZ loc_1003ED48
	MOV DX,WORD PTR SS:[EBP+arg3+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV WORD PTR SS:[EBP+var_14+0x4],DX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],offset [LEGO1_rdata.m2230_ptr]
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000013
	MOV BYTE PTR [EBP+var_10+0x2],0x43
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_20+0x4]
	PUSH ECX
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x04])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m3DD91_sub_1003ED91])
loc_1003ED48:
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JNZ loc_1003ED6A
	MOV EAX,DWORD PTR [EBP+arg4+0x4]
	MOV ECX,DWORD PTR [EBP+arg3+0x4]
	PUSH EAX
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FEB0_sub_10060EB0])
loc_1003ED6A:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003ED91()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1ABF0_loc_1001BBF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1003EDA0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
	};

__asm{
	SUB ESP, 0x14
	LEA EAX,DWORD PTR [ESP+var_C+0x14]
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	MOV DWORD PTR [ESP+var_14+0x1C],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_10+0x1C],EAX
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x08],ESI
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EDI,DWORD PTR [EAX+0x6C]
	TEST EDI, EDI
	JZ loc_1003EDFA
	LEA EAX,DWORD PTR [ESP+var_14+0x1C]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4A30_sub_100A5A30])
	MOV ESI,DWORD PTR [EDI+0x14]
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	ADD ESI, 0x30
	CALL_LONG(DWORD PTR [EAX+0x08])
	PUSH EAX
	LEA ECX,DWORD PTR [ESI-0x10]
	LEA EAX,DWORD PTR [ESI-0x20]
	PUSH EAX
	PUSH ECX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m29410_sub_1002A410])
loc_1003EDFA:
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EE00(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1003EE6C
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1003EE6C
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
	MOV ESI,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x10])
	TEST AL, AL
	JNZ loc_1003EE4B
	TEST EDI, EDI
	JZ loc_1003EE67
	PUSH 0x01
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI])
	MOV AL, 0x01
	POP EDI
	POP ESI
	RET
loc_1003EE4B:
	MOV EAX,DWORD PTR [EDI+0x1C]
	TEST EAX, EAX
	JZ loc_1003EE62
	PUSH 0x00
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
loc_1003EE62:
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x40])
loc_1003EE67:
	MOV AL, 0x01
	POP EDI
	POP ESI
	RET
loc_1003EE6C:
	XOR AL, AL
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EE80(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg4]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+arg3+0x4]
	PUSH EDI
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m148C0_sub_100158C0])
	ADD ESP, 0x08
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1003EEF9
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	MOV ECX,DWORD PTR [ESP+arg1+0x8]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m20790_sub_10021790])
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1003EEF9
	PUSH EDI
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
	MOV ESI,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m740_str]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x10])
	TEST AL, AL
	JNZ loc_1003EED8
	TEST EDI, EDI
	JZ loc_1003EEF4
	PUSH 0x01
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI])
	MOV AL, 0x01
	POP EDI
	POP ESI
	RET
loc_1003EED8:
	MOV EAX,DWORD PTR [EDI+0x1C]
	TEST EAX, EAX
	JZ loc_1003EEEF
	PUSH 0x00
	PUSH 0x00000080
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6220_sub_100B7220])
	ADD ESP, 0x0C
loc_1003EEEF:
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [ESI+0x40])
loc_1003EEF4:
	MOV AL, 0x01
	POP EDI
	POP ESI
	RET
loc_1003EEF9:
	XOR AL, AL
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EF00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	MOV BL,BYTE PTR [ESP+arg1+0x4]
	TEST BL, BL
	JZ loc_1003EF15
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E0B0_sub_1005F0B0])
loc_1003EF15:
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5F540_sub_10060540])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5F4D0_sub_100604D0])
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EF40(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CALL_LONG(offset [LEGO1_text.mAF680__GetInstance_MxOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [ESP+arg1]
	PUSH 0x00
	PUSH ECX
	MOV EAX,DWORD PTR [EAX+0x18]
	PUSH 0x00005400
	PUSH EAX
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m538_PostMessageA])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003EF60()
{
__asm{
	PUSH ESI
	PUSH offset [LEGO1_data.m154_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV ESI, EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x06
	JZ FAR loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x07
	JZ FAR loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x08
	JZ FAR loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x09
	JZ FAR loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x0A
	JZ loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x0B
	JZ loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x1B
	JZ loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	CMP DWORD PTR [EAX+0x00000424],0x23
	JZ loc_1003F046
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_1003F012
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH offset [LEGO1_data.m3B8_str]
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x10])
	TEST AL, AL
	JNZ loc_1003F046
loc_1003F012:
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_1003F030
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ECX, EAX
	PUSH offset [LEGO1_data.m3C4_str]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JNZ loc_1003F046
loc_1003F030:
	MOV EAX,DWORD PTR [ESI+0x18]
	CMP EAX, 0x0A
	JZ loc_1003F046
	CMP EAX, 0x08
	JZ loc_1003F046
	CMP EAX, 0x03
	JZ loc_1003F046
	MOV AL, 0x01
	POP ESI
	RET
loc_1003F046:
	XOR AL, AL
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003F050()
{
	enum{
		var_24 = -0x24,
		r = 0x0,
	};

__asm{
	SUB ESP, 0x20
	PUSH ESI
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A4B0_sub_1008B4B0])
	ADD ESP, 0x04
	MOV ESI, EAX
	CMP DWORD PTR [ESP+r+0x28],0x00
	JLE loc_1003F084
	INC ESI
	CMP ESI, 0x05
	JLE loc_1003F089
	MOV ESI, 0x00000005
	JMP loc_1003F089
loc_1003F084:
	DEC ESI
	JNS loc_1003F089
	XOR ESI, ESI
loc_1003F089:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m3E0D0_sub_1003F0D0])
	LEA EAX,DWORD PTR [ESP+var_24+0x2C]
	ADD ESP, 0x04
	PUSH ESI
	PUSH offset [LEGO1_data.m40F0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA EAX,DWORD PTR [ESP+var_24+0x34]
	ADD ESP, 0x0C
	PUSH EAX
	PUSH offset [LEGO1_data.m3824_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	MOV EAX, ESI
	POP ESI
	ADD ESP, 0x20
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003F0D0(DWORD arg1)
{
	enum{
		var_160 = -0x160,
		var_15C = -0x15C,
		var_158 = -0x158,
		var_154 = -0x154,
		var_150 = -0x150,
		var_14C = -0x14C,
		var_148 = -0x148,
		var_144 = -0x144,
		var_140 = -0x140,
		var_13C = -0x13C,
		var_138 = -0x138,
		var_130 = -0x130,
		var_12C = -0x12C,
		var_128 = -0x128,
		var_124 = -0x124,
		var_120 = -0x120,
		var_11C = -0x11C,
		var_118 = -0x118,
		var_114 = -0x114,
		var_110 = -0x110,
		var_10C = -0x10C,
		var_108 = -0x108,
		var_104 = -0x104,
		var_100 = -0x100,
		var_FC = -0xFC,
		var_F8 = -0xF8,
		var_F4 = -0xF4,
		var_F0 = -0xF0,
		var_EC = -0xEC,
		var_E8 = -0xE8,
		var_E4 = -0xE4,
		var_DC = -0xDC,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x0000015C
	XOR ECX, ECX
	MOV EAX, 0xC3160000
	PUSH EBX
	MOV DWORD PTR [ESP+var_A0+0x160],ECX
	PUSH ESI
	MOV EDX, 0x42480000
	MOV ESI, 0xC2480000
	MOV DWORD PTR [ESP+var_9C+0x164],ECX
	MOV DWORD PTR [ESP+var_98+0x164],EAX
	MOV DWORD PTR [ESP+var_94+0x164],EDX
	MOV DWORD PTR [ESP+var_90+0x164],ESI
	MOV DWORD PTR [ESP+var_A4+0x164],0x3F800000
	MOV DWORD PTR [ESP+var_84+0x164],ECX
	MOV DWORD PTR [ESP+var_7C+0x164],EDX
	MOV DWORD PTR [ESP+var_78+0x164],ESI
	MOV DWORD PTR [ESP+var_74+0x164],ECX
	MOV DWORD PTR [ESP+var_8C+0x164],0x3F4F1AA0
	MOV DWORD PTR [ESP+var_6C+0x164],ECX
	MOV DWORD PTR [ESP+var_68+0x164],ECX
	MOV DWORD PTR [ESP+var_88+0x164],0xBF16872B
	MOV DWORD PTR [ESP+var_80+0x164],0xC2960000
	MOV DWORD PTR [ESP+var_70+0x164],0xBF800000
	MOV DWORD PTR [ESP+var_60+0x164],EAX
	MOV DWORD PTR [ESP+var_54+0x164],ECX
	MOV DWORD PTR [ESP+var_64+0x164],0x43160000
	MOV DWORD PTR [ESP+var_4C+0x164],EDX
	MOV DWORD PTR [ESP+var_48+0x164],ESI
	MOV DWORD PTR [ESP+var_5C+0x164],0xBE9E353F
	MOV DWORD PTR [ESP+var_58+0x164],0xBF7374BC
	MOV DWORD PTR [ESP+var_50+0x164],0x41C80000
	MOV DWORD PTR [ESP+var_3C+0x164],ECX
	MOV DWORD PTR [ESP+var_34+0x164],EDX
	MOV DWORD PTR [ESP+var_44+0x164],0xBF4F1AA0
	MOV DWORD PTR [ESP+var_30+0x164],ESI
	MOV DWORD PTR [ESP+var_28+0x164],ECX
	MOV DWORD PTR [ESP+var_40+0x164],0xBF16872B
	MOV DWORD PTR [ESP+var_24+0x164],ECX
	MOV DWORD PTR [ESP+var_1C+0x164],EDX
	LEA EAX,DWORD PTR [ESP+var_14C+0x164]
	MOV DWORD PTR [ESP+var_18+0x164],ESI
	MOV EDX, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_150+0x164],EAX
	MOV DWORD PTR [ESP+var_38+0x164],0x42960000
	MOV DWORD PTR [ESP+var_154+0x164],EDX
	MOV DWORD PTR [ESP+var_148+0x164],ECX
	LEA EBX,DWORD PTR [ESP+var_C+0x164]
	MOV DWORD PTR [ESP+var_144+0x164],ECX
	MOV DWORD PTR [ESP+var_10+0x164],EBX
	MOV DWORD PTR [ESP+var_14+0x164],EDX
	LEA EAX,DWORD PTR [ESP+var_138+0x164]
	MOV DWORD PTR [ESP+var_140+0x164],EDX
	LEA EDX,DWORD PTR [ESP+var_E4+0x164]
	MOV DWORD PTR [ESP+var_13C+0x164],EAX
	MOV DWORD PTR [ESP+var_2C+0x164],0xBF800000
	MOV EAX,DWORD PTR [ESP+arg1+0x164]
	MOV DWORD PTR [ESP+var_E8+0x164],EDX
	MOV DWORD PTR [ESP+var_20+0x164],0x43160000
	MOV DWORD PTR [ESP+var_14C+0x164],0x3F800000
	MOV DWORD PTR [ESP+var_EC+0x164],offset [LEGO1_rdata.m300_ptr]
	CMP EAX, ECX
	JGE loc_1003F281
	XOR EAX, EAX
	JMP loc_1003F28B
loc_1003F281:
	CMP EAX, 0x05
	JLE loc_1003F28B
	MOV EAX, 0x00000005
loc_1003F28B:
	LEA EAX,DWORD PTR [EAX*2+EAX]
	LEA ECX,DWORD PTR [EAX*8+ESP+var_A4+0x164]
	LEA ESI,DWORD PTR [EAX*8+0x00000000]
	LEA EAX,DWORD PTR [ESP+var_15C+0x164]
	MOV DWORD PTR [ESP+var_158+0x164],ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x164]
	PUSH EAX
	MOV DWORD PTR [ESP+var_15C+0x168],offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	LEA ECX,DWORD PTR [ESI+ESP+var_9C+0x168]
	LEA EDX,DWORD PTR [ESP+var_160+0x168]
	MOV EAX,DWORD PTR [ESP+var_144+0x168]
	PUSH EDX
	MOV DWORD PTR [ESP+var_158+0x168],ECX
	LEA ECX,DWORD PTR [ESP+var_140+0x168]
	MOV DWORD PTR [ESP+var_15C+0x168],offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	LEA ECX,DWORD PTR [ESP+var_F0+0x168]
	LEA EDX,DWORD PTR [ESP+var_158+0x168]
	LEA EAX,DWORD PTR [ESP+var_18+0x168]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_140+0x168]
	PUSH EDX
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	MOV ECX,DWORD PTR [ESP+var_DC+0x168]
	ADD ESP, 0x10
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [ESP+var_130+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESP+var_12C+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ESP+var_128+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [ESP+var_124+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ESP+var_120+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ESP+var_11C+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x18]
	MOV DWORD PTR [ESP+var_118+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [ESP+var_114+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x20]
	MOV DWORD PTR [ESP+var_110+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x24]
	MOV DWORD PTR [ESP+var_10C+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x28]
	MOV DWORD PTR [ESP+var_108+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV DWORD PTR [ESP+var_104+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x30]
	MOV DWORD PTR [ESP+var_100+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x34]
	MOV DWORD PTR [ESP+var_FC+0x168],EAX
	MOV EDX,DWORD PTR [ECX+0x38]
	MOV DWORD PTR [ESP+var_F8+0x168],EDX
	MOV EAX,DWORD PTR [ECX+0x3C]
	MOV DWORD PTR [ESP+var_F4+0x168],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	LEA ECX,DWORD PTR [ESP+var_130+0x168]
	MOV EDX,DWORD PTR [EAX+0x68]
	PUSH ECX
	PUSH 0x00
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAAB60_sub_100ABB60])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	LEA ECX,DWORD PTR [ESP+var_130+0x168]
	MOV EDX,DWORD PTR [EAX+0x68]
	PUSH ECX
	PUSH 0x01
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAAB60_sub_100ABB60])
	POP ESI
	POP EBX
	ADD ESP, 0x0000015C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003F3B0(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_20 = -0x20,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3E529_proc_1003F529]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH ESI
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x02
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ESI]
	LEA ECX,DWORD PTR [EBP+var_10+0x2]
	PUSH ECX
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV ECX, ESI
	CALL_LONG(EDI)
	MOVSX EAX,WORD PTR [EBP+var_10+0x2]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EBX, EAX
	MOVSX ECX,WORD PTR [EBP+var_10+0x2]
	PUSH ECX
	PUSH EBX
	MOV ECX, ESI
	CALL_LONG(EDI)
	MOVSX EAX,WORD PTR [EBP+var_10+0x2]
	PUSH EBX
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	MOV BYTE PTR [EBX+EAX],0x00
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV EBX, 0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	TEST EDI, EDI
	JZ loc_1003F44F
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EBX, EAX
loc_1003F44F:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	TEST EBX, EBX
	JZ FAR loc_1003F4F6
	PUSH 0x00
	MOV ECX, EBX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JZ loc_1003F49C
	TEST EBX, EBX
	JZ loc_1003F47D
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003F47D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3E533_sub_1003F533])
	XOR EAX, EAX
loc_1003F48B:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
loc_1003F49C:
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1003F4D7
	MOV EDI,DWORD PTR [EBP+var_20+0x4]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	PUSH EDI
	MOV ECX, ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x10],EBX
	MOV BYTE PTR [EBP+var_8+0x4],0x02
loc_1003F4D7:
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	TEST EAX, EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	JNZ loc_1003F4F6
	TEST EBX, EBX
	JZ loc_1003F4F6
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m98030_sub_10099030])
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1003F4F6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m3E533_sub_1003F533])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	JMP loc_1003F48B
}
}

__declspec(naked) DWORD LEGO1_proc_1003F507()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1003F50F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1003F51C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003F533()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003F540(DWORD arg1, DWORD arg2)
{
	enum{
		var_7A0 = -0x7A0,
		var_79C = -0x79C,
		var_3A0 = -0x3A0,
		var_A0 = -0xA0,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_7C = -0x7C,
		var_34 = -0x34,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3E884_proc_1003F884]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg2+0x4]
	SUB ESP, 0x00000790
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAD350_sub_100AE350])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EDI,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_20+0x4],ESI
	MOV ECX,DWORD PTR [EDI+0x04]
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JZ loc_1003F5C8
loc_1003F588:
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV ESI,DWORD PTR [EBP+arg2+0x4]
loc_1003F58E:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ESI]
	JNZ loc_1003F5AE
	OR BL, BL
	JZ loc_1003F5AA
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ESI+0x01]
	JNZ loc_1003F5AE
	ADD EDX, 0x02
	ADD ESI, 0x02
	OR BL, BL
	JNZ loc_1003F58E
loc_1003F5AA:
	XOR EDX, EDX
	JMP loc_1003F5B3
loc_1003F5AE:
	SBB EDX, EDX
	SBB EDX, -0x01
loc_1003F5B3:
	TEST EDX, EDX
	JG loc_1003F5BD
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX]
	JMP loc_1003F5C0
loc_1003F5BD:
	MOV ECX,DWORD PTR [ECX+0x08]
loc_1003F5C0:
	CMP ECX,DWORD PTR [offset LEGO1_data + 0x100]
	JNZ loc_1003F588
loc_1003F5C8:
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CMP DWORD PTR [EAX+0x0C],EDI
	JZ loc_1003F602
	MOV EDX,DWORD PTR [EBP+arg2+0x4]
	MOV ECX,DWORD PTR [EDI+0x0C]
loc_1003F5D6:
	MOV BL,BYTE PTR [EDX]
	CMP BL,BYTE PTR [ECX]
	JNZ loc_1003F5F6
	OR BL, BL
	JZ loc_1003F5F2
	MOV BL,BYTE PTR [EDX+0x01]
	CMP BL,BYTE PTR [ECX+0x01]
	JNZ loc_1003F5F6
	ADD EDX, 0x02
	ADD ECX, 0x02
	OR BL, BL
	JNZ loc_1003F5D6
loc_1003F5F2:
	XOR ECX, ECX
	JMP loc_1003F5FB
loc_1003F5F6:
	SBB ECX, ECX
	SBB ECX, -0x01
loc_1003F5FB:
	TEST ECX, ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	JLE loc_1003F60B
loc_1003F602:
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
loc_1003F60B:
	MOV ECX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x0C],ECX
	JZ loc_1003F618
	MOV ECX,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [EBP+var_20+0x4],ECX
loc_1003F618:
	CMP DWORD PTR [EBP+var_20+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m3E81C_loc_1003F81C])
	LEA EDI,DWORD PTR [EBP+var_3A0+0x4]
	MOV ESI, 0x000000FF
loc_1003F62D:
	MOV ECX, EDI
	ADD EDI, 0x03
	CALL_LONG(offset [LEGO1_text.m984C0_sub_100994C0])
	DEC ESI
	JNS loc_1003F62D
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	LEA EDI,DWORD PTR [EBP+var_A0+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ECX, 0x0000001B
	REP STOSD
	PUSH 0x00
	LEA EDX,DWORD PTR [EBP+var_A0+0x4]
	MOV DWORD PTR [EBP+var_A0+0x4],0x0000006C
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH 0x00
	PUSH EDX
	PUSH 0x00
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x64])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m3E81C_loc_1003F81C])
	PUSH 0x00000310
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_1003F6B4
	MOV EAX,DWORD PTR [EBP+var_98+0x4]
	MOV ECX,DWORD PTR [EBP+var_94+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m985A0_sub_100995A0])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	JMP loc_1003F6BB
loc_1003F6B4:
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
loc_1003F6BB:
	XOR EDX, EDX
	MOV BYTE PTR [EBP+var_8+0x4],DL
	CMP DWORD PTR [EBP+var_14+0x4],EDX
	JZ_LONG(offset [LEGO1_text.m3E864_loc_1003F864])
	MOV EAX,DWORD PTR [EBP+var_90+0x4]
	CMP DWORD PTR [EBP+var_94+0x4],EAX
	JZ loc_1003F71C
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EBP+var_7C+0x4]
	CMP DWORD PTR [EBP+var_98+0x4],EDX
	MOV EAX,DWORD PTR [EAX+0x0000030C]
	JBE loc_1003F743
loc_1003F6EB:
	MOV ECX,DWORD PTR [EBP+var_94+0x4]
	MOV EDI, EBX
	MOV ESI, EAX
	INC EDX
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	AND ECX, 0x03
	REP MOVSB
	ADD EBX,DWORD PTR [EBP+var_90+0x4]
	ADD EAX,DWORD PTR [EBP+var_94+0x4]
	CMP DWORD PTR [EBP+var_98+0x4],EDX
	JA loc_1003F6EB
	JMP loc_1003F743
loc_1003F71C:
	MOV EDX,DWORD PTR [EBP+var_98+0x4]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	IMUL EDX,DWORD PTR [EBP+var_94+0x4]
	MOV EDI,DWORD PTR [EAX+0x0000030C]
	MOV ESI,DWORD PTR [EBP+var_7C+0x4]
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_1003F743:
	MOV EAX,DWORD PTR [EBP+var_7C+0x4]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	MOV ECX,DWORD PTR [EBP+var_20+0x4]
	LEA EDX,DWORD PTR [EBP+var_7A0+0x4]
	PUSH EDX
	PUSH 0x00000100
	MOV EAX,DWORD PTR [ECX+0x08]
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x10])
	TEST EAX, EAX
	JNZ_LONG(offset [LEGO1_text.m3E848_loc_1003F848])
	XOR EDX, EDX
	LEA EAX,DWORD PTR [EBP+var_79C+0x3]
	LEA ECX,DWORD PTR [EBP+var_3A0+0x4]
loc_1003F786:
	CMP BYTE PTR [EAX],0x00
	JNZ loc_1003F7AD
	MOV BL,BYTE PTR [EAX-0x03]
	ADD EAX, 0x04
	MOV BYTE PTR [ECX],BL
	ADD ECX, 0x03
	MOV BL,BYTE PTR [EAX-0x06]
	INC EDX
	LEA ESI,DWORD PTR [EBP+var_A0+0x4]
	MOV BYTE PTR [ECX-0x02],BL
	MOV BL,BYTE PTR [EAX-0x05]
	CMP ECX, ESI
	MOV BYTE PTR [ECX-0x01],BL
	JB loc_1003F786
loc_1003F7AD:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	TEST EDX, EDX
	MOV DWORD PTR [EAX+0x08],EDX
	JLE loc_1003F7D1
	LEA ESI,DWORD PTR [EBP+var_3A0+0x4]
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	ADD EDI, 0x0C
	MOV ECX, EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP MOVSB
loc_1003F7D1:
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EBX, 0x00000002
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	SUB ESP, 0x10
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ESP
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],BL
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5030_sub_10006030])
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m98070_sub_10099070])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m3E840_sub_1003F840])
	JMP_LONG(offset [LEGO1_text.m3E81C_loc_1003F81C])
}
}

__declspec(naked) DWORD LEGO1_sub_1003F840()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m98030_sub_10099030])
}
}

__declspec(naked) DWORD LEGO1_sub_1003F88E()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1003F8A0(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3E906_proc_1003F906]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	SUB ESP, 0x10
	MOV EDI,DWORD PTR [EBP+arg2+0x4]
	MOV ECX, EDI
	MOV DWORD PTR [EBP+var_14+0x4],ESP
	CALL_LONG(offset [LEGO1_text.m3E920_RetThis_2])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mAD2A0___0MxString__QAE_ABV0__Z])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m5030_sub_10006030])
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x10]
	CALL_LONG(offset [LEGO1_text.m98070_sub_10099070])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_RetThis_2()
{
__asm{
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003F930(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x0C
	PUSH EBX
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_C+0x10],ECX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	XOR ECX, ECX
	MOV EBP,DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EDX
	JZ loc_1003F998
loc_1003F957:
	MOV ESI,DWORD PTR [EDX+0x0C]
	MOV EDI,DWORD PTR [ESP+var_C+0x1C]
loc_1003F95E:
	MOV BL,BYTE PTR [ESI]
	CMP BL,BYTE PTR [EDI]
	JNZ loc_1003F97E
	OR BL, BL
	JZ loc_1003F97A
	MOV BL,BYTE PTR [ESI+0x01]
	CMP BL,BYTE PTR [EDI+0x01]
	JNZ loc_1003F97E
	ADD ESI, 0x02
	ADD EDI, 0x02
	OR BL, BL
	JNZ loc_1003F95E
loc_1003F97A:
	XOR ESI, ESI
	JMP loc_1003F983
loc_1003F97E:
	SBB ESI, ESI
	SBB ESI, -0x01
loc_1003F983:
	TEST ESI, ESI
	JG loc_1003F98D
	MOV EBP, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_1003F990
loc_1003F98D:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_1003F990:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EDX
	JNZ loc_1003F957
loc_1003F998:
	MOV DWORD PTR [ESP+var_8+0x1C],EBP
	CMP DWORD PTR [EAX+0x0C],EBP
	JZ loc_1003F9D5
	MOV ESI,DWORD PTR [ESP+var_C+0x1C]
	MOV EDX,DWORD PTR [EBP+arg1217227-0x4A4B20]
loc_1003F9A8:
	MOV BL,BYTE PTR [ESI]
	CMP BL,BYTE PTR [EDX]
	JNZ loc_1003F9C8
	OR BL, BL
	JZ loc_1003F9C4
	MOV BL,BYTE PTR [ESI+0x01]
	CMP BL,BYTE PTR [EDX+0x01]
	JNZ loc_1003F9C8
	ADD ESI, 0x02
	ADD EDX, 0x02
	OR BL, BL
	JNZ loc_1003F9A8
loc_1003F9C4:
	XOR EDX, EDX
	JMP loc_1003F9CD
loc_1003F9C8:
	SBB EDX, EDX
	SBB EDX, -0x01
loc_1003F9CD:
	TEST EDX, EDX
	LEA EDX,DWORD PTR [ESP+var_8+0x1C]
	JLE loc_1003F9E0
loc_1003F9D5:
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ESP+var_4+0x1C],EDX
	LEA EDX,DWORD PTR [ESP+var_4+0x1C]
loc_1003F9E0:
	MOV EDX,DWORD PTR [EDX]
	CMP DWORD PTR [EAX+0x0C],EDX
	JZ loc_1003F9EA
	MOV ECX,DWORD PTR [EDX+0x10]
loc_1003F9EA:
	TEST ECX, ECX
	JZ loc_1003FA03
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV EDX,DWORD PTR [EAX+0x10]
	MOV EBX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EBX+0x0000030C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m65010_sub_10066010])
loc_1003FA03:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003FA50(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3EB55_proc_1003FB55]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH ESI
	PUSH EDI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, ECX
	XOR EDI, EDI
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CMP DWORD PTR [EBP+arg1+0x4],EDI
	JZ loc_1003FA92
	MOV DWORD PTR [ESI+0x04],offset LEGO1_rdata + 0x3660
	LEA ECX,DWORD PTR [ESI+0x24]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_1C+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],EDI
loc_1003FA92:
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	XOR ECX, ECX
	MOV BYTE PTR [ESI+0x08],AL
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV DWORD PTR [ESI+0x10],ECX
	MOV DWORD PTR [ESI+0x14],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1510_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX],EDX
	MOV EDX, 0xFFFFFFFF
	MOV WORD PTR DS:[ESI+0x18],DX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3738_ptr]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],EDX
	MOV DWORD PTR [ESI+EDI+0x04],offset [LEGO1_rdata.m3668_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX-0x20]
	MOV DWORD PTR [ESI+EAX],EDI
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [ESI+0x1C],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1003FB1B()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217218-0x4A4B20],0x01
	JZ loc_1003FB2C
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x24
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1003FB2C:
	RET
	TEST BYTE PTR [EBP-0x18],0x02
	JZ loc_1003FB3E
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1003FB3E:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003FD90(DWORD arg1, DWORD arg2)
{
	enum{
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x50
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ESP+arg1+0x58]
	MOV ECX, ESI
	MOV EAX,DWORD PTR [ESI]
	CALL_LONG(DWORD PTR [EAX+0x7C])
	TEST AL, AL
	JNZ loc_1003FE21
	CMP BYTE PTR [ESP+arg2+0x58],0x00
	JZ loc_1003FE21
	CMP DWORD PTR [ESI+0x000000DC],0x00
	JZ loc_1003FDC1
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	ADD ESP, 0x50
	RETN 0x0008
loc_1003FDC1:
	LEA EAX,DWORD PTR [ESP+0x18]
	MOV EDI,DWORD PTR [ESI+0x54]
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
	LEA ECX,DWORD PTR [EDI+0x10]
	MOV DWORD PTR [ESP+var_44+0x58],EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_44+0x58]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m328_ptr])
	MOV EAX,DWORD PTR [ESP+var_44+0x58]
	PUSH offset LEGO1_data + 0x14EF0
	ADD EAX, 0x30
	LEA ECX,DWORD PTR [ESP+var_4C+0x58]
	MOV DWORD PTR [ESP+var_4C+0x58],offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [ESP+var_48+0x58],EAX
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m560_ptr])
	LEA ECX,DWORD PTR [ESP+var_48+0x58]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x14])
	MOV DWORD PTR [ESI+0x000000DC],0x00000102
loc_1003FE21:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x50
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1003FE30(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3EEF3_proc_1003FEF3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	JZ loc_1003FE78
	MOV DWORD PTR [ESI+0x04],offset [LEGO1_rdata.m3748]
	LEA ECX,DWORD PTR [ESI+0x34]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
loc_1003FE78:
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m3EA50_sub_1003FA50])
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3820_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m3750_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x30]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [ESI+EAX],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x20],0xBF800000
	MOV DWORD PTR [ESI+0x24],0x00000000
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+EAX+0x000000E0],0x00000004
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1003FEE1()
{
	enum{
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217219-0x4A4B20],0x01
	JZ loc_1003FEF2
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x34
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_1003FEF2:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1003FF5C()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10040350(DWORD arg1, DWORD arg2)
{
__asm{
	CALL_LONG(offset [LEGO1_text.m3F360_sub_10040360])
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10040360()
{
	enum{
		var_F0 = -0xF0,
		var_EC = -0xEC,
		var_E8 = -0xE8,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_38 = -0x38,
		var_28 = -0x28,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3FA56_proc_10040A56]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000128
	MOV DWORD PTR [EBP+var_38+0x4],0x00000000
	PUSH EBX
	MOV EAX,DWORD PTR [ECX+0x24]
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA EAX,DWORD PTR [EBP+var_E8+0x4]
	MOV EDI, EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EBP+var_F0+0x4],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [EBP+var_EC+0x4],EAX
	MOV ESI,DWORD PTR [ECX+EBX+0x000000F4]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [EBP+var_EC+0x4]
	MOV EDI, offset [LEGO1_rdata.m518_ptr]
	ADD EAX, 0x30
	MOV DWORD PTR [EBP+var_64+0x4],EDI
	LEA ECX,DWORD PTR [EBP+var_74+0x4]
	MOV DWORD PTR [EBP+var_60+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_EC+0x4]
	MOV DWORD PTR [EBP+var_84+0x4],EDI
	ADD EAX, 0x20
	MOV DWORD PTR [EBP+var_78+0x4],ECX
	MOV DWORD PTR [EBP+var_7C+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBP+var_80+0x4],EAX
	MOV ECX,DWORD PTR [EDX+0x00004208]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ECX+EDX+0x58]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, 0x30
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_7C+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	LEA ECX,DWORD PTR [EBP+var_64+0x4]
	MOV EBX,DWORD PTR [EBP+var_7C+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_7C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV EDX,DWORD PTR [EBP+var_78+0x4]
	MOV ECX,DWORD PTR [EBP+var_78+0x4]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [EBP+var_78+0x4]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x3640]
	FNSTSW AX
	TEST AH,0x01
	JZ_LONG(offset [LEGO1_text.m3F5B9_loc_100405B9])
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x00004208]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ECX+EAX+0x58]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, 0x30
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_7C+0x4]
	MOV EBX,DWORD PTR [EBP+var_7C+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],EDI
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV EDX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EDX+0x00004208]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+var_54+0x4]
	MOV EBX,DWORD PTR [ECX+EDX+0x58]
	MOV EDX, EAX
	MOV ECX,DWORD PTR [EBX+0x14]
	ADD ECX, 0x20
	MOV DWORD PTR [EBP+var_58+0x4],EAX
	MOV DWORD PTR [EBP+var_5C+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	PUSH 0x3C
	MOV DWORD PTR [EDX+0x08],ECX
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV ECX,DWORD PTR [EAX+0x00004208]
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV EBX,DWORD PTR [ECX+EAX+0x0000008C]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ_LONG(offset [LEGO1_text.m3F546_loc_10040546])
	LEA EAX,DWORD PTR [EBP+var_14+0x3]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m184F0_sub_100194F0])
	LEA EAX,DWORD PTR [ESI+0x14]
	LEA ECX,DWORD PTR [ESI+0x0C]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV DWORD PTR [ESI+0x0C],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESI+0x28]
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x20]
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV DWORD PTR [ESI+0x20],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x34],0x00000000
	MOV BYTE PTR [ESI+0x38],0x00
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EBP+var_18+0x4],ESI
	JMP_LONG(offset [LEGO1_text.m3F54D_loc_1004054D])
}
}

__declspec(naked) DWORD LEGO1_sub_100406DC()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_proc_100406E4()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10040880()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_10040888()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_proc_10040890()
{
	enum{
		arg1217189 = 0x4A4A94,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217189-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10040A41()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_proc_10040A49()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10040A60()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_10040DB9()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10040E10(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m3FEFF_proc_10040EFF]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	JZ loc_10040E5A
	MOV DWORD PTR [ESI+0x04],offset [LEGO1_rdata.m3830]
	LEA ECX,DWORD PTR [ESI+0x60]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_18+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
loc_10040E5A:
	XOR EBX, EBX
	MOV ECX, ESI
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m3EA50_sub_1003FA50])
	LEA ECX,DWORD PTR [ESI+0x3C]
	LEA EAX,DWORD PTR [ESI+0x44]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x40],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3908_ptr]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m3838_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA EDX,DWORD PTR [EAX-0x5C]
	MOV DWORD PTR [EAX+ESI],EDX
	MOV DWORD PTR [ESI+0x28],EBX
	MOV DWORD PTR [ESI+0x2C],EBX
	MOV DWORD PTR [ESI+0x30],EBX
	MOV DWORD PTR [ESI+0x34],EBX
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x38],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x54],EBX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESI+EAX+0x000000E0],0x00000004
	MOV BYTE PTR [ESI+0x58],BL
	MOV DWORD PTR [ESI+0x24],EBX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x2C])
	MOV EAX, ESI
	POP EDI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_10040EED()
{
	enum{
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217219-0x4A4B20],0x01
	JZ loc_10040EFE
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x60
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_10040EFE:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10040F20()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	MOV DWORD PTR [ECX-0x60],offset [LEGO1_rdata.m3908_ptr]
	PUSH offset [LEGO1_text.m3FF7C_proc_10040F7C]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [ECX-0x5C]
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EDX+ECX-0x5C],offset [LEGO1_rdata.m3838_ptr]
	MOV EAX,DWORD PTR [EDX-0x5C]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x5C]
	MOV DWORD PTR [EDX+EAX-0x60],ECX
	CALL_LONG(offset [LEGO1_text.m3FF86_sub_10040F86])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10040F86()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x3C
	JMP_LONG(offset [LEGO1_text.m3FFA0_loc_10040FA0])
}
}

__declspec(naked) DWORD LEGO1_sub_10040FE1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x04
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100417A0(DWORD arg1, DWORD arg2)
{
__asm{
	CMP BYTE PTR [ECX+0x58],0x08
	JNB loc_100417AE
	CALL_LONG(offset [LEGO1_text.m407C0_sub_100417C0])
	RETN 0x0008
loc_100417AE:
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100417C0()
{
	enum{
		var_15C = -0x15C,
		var_158 = -0x158,
		var_154 = -0x154,
		var_114 = -0x114,
		var_110 = -0x110,
		var_10C = -0x10C,
		var_CC = -0xCC,
		var_C8 = -0xC8,
		var_C4 = -0xC4,
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_5C = -0x5C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4102D_proc_1004202D]
	PUSH EAX
	MOV DWORD PTR [ECX+0x2C],0x00000000
	MOV DWORD PTR [ECX+0x30],0x00000000
	MOV DWORD PTR [ECX+0x38],0x00000000
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000014C
	MOV EDX,DWORD PTR [ECX+0x28]
	MOV EAX,DWORD PTR [ECX+0x04]
	PUSH EBX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EBP+var_10C+0x4]
	MOV EDI, ECX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_114+0x4],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [EBP+var_110+0x4],ECX
	MOV ECX, 0x00000010
	MOV ESI,DWORD PTR [EAX+ESI+0x000000F4]
	REP MOVSD
	MOV DWORD PTR [EBP+var_88+0x4],offset [LEGO1_rdata.m518_ptr]
	MOV EAX,DWORD PTR [EBP+var_110+0x4]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x30
	MOV DWORD PTR [EBP+var_84+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_110+0x4]
	ADD EAX, 0x20
	CMP BYTE PTR [ECX+0x58],0x08
	MOV DWORD PTR [EBP+var_C8+0x4],EAX
	MOV DWORD PTR [EBP+var_CC+0x4],offset [LEGO1_rdata.m518_ptr]
	JNB FAR loc_10041AEC
	FLD DWORD PTR [ECX+0x24]
	FADD DWORD PTR [offset LEGO1_rdata + 0x3654]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	FCOMP DWORD PTR [ECX+EBX+0x00000088]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_10041AEC
	MOV DWORD PTR [EBP+var_48+0x4],0x00000000
	ADD EDX, 0x000000FC
	MOV DWORD PTR [EBP+var_2C+0x4],EDX
loc_1004189F:
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV AX,WORD PTR DS:[EAX+0x00000154]
	TEST AL, 0x04
	JZ FAR loc_10041AD8
	TEST AL, 0x10
	JNZ FAR loc_10041AD8
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	CMP DWORD PTR [EAX+0x000000DC],0x00
	JNZ FAR loc_10041AD8
	MOV ECX,DWORD PTR [EAX+0x54]
	LEA EDX,DWORD PTR [EBP+var_154+0x4]
	MOV EDI, EDX
	MOV DWORD PTR [EBP+var_158+0x4],EDX
	MOV DWORD PTR [EBP+var_15C+0x4],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [ECX+0x14]
	LEA EDX,DWORD PTR [EBP+var_BC+0x4]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [EBP+var_158+0x4]
	LEA ECX,DWORD PTR [EBP+var_BC+0x4]
	ADD EAX, 0x30
	MOV DWORD PTR [EBP+var_C0+0x4],ECX
	MOV DWORD PTR [EBP+var_A0+0x4],EAX
	MOV DWORD PTR [EBP+var_A4+0x4],offset [LEGO1_rdata.m518_ptr]
	MOV ECX,DWORD PTR [EBP+var_A0+0x4]
	MOV DWORD PTR [EBP+var_C4+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+var_88+0x4]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_C4+0x4]
	MOV EBX,DWORD PTR [EBP+var_C4+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV EDX,DWORD PTR [EBP+var_C0+0x4]
	MOV ECX,DWORD PTR [EBP+var_C0+0x4]
	ADD EDX, 0x08
	ADD ECX, 0x04
	MOV EAX,DWORD PTR [EBP+var_C0+0x4]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x3658]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1004199E
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX+0x28]
	MOV ECX,DWORD PTR [EAX+0x00004210]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	JMP FAR loc_10041AD8
loc_1004199E:
	PUSH 0x3C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_5C+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10041A06
	LEA EAX,DWORD PTR [EBP+var_30+0x3]
	MOV ECX, ESI
	PUSH EAX
	LEA EDI,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m184F0_sub_100194F0])
	LEA EAX,DWORD PTR [ESI+0x14]
	MOV ECX, EDI
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESI+0x28]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m488_ptr]
	LEA EDI,DWORD PTR [ESI+0x20]
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESI+0x34],0x00000000
	MOV BYTE PTR [ESI+0x38],0x00
	MOV DWORD PTR [EBP+var_24+0x4],ESI
	JMP loc_10041A0D
loc_10041A06:
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
loc_10041A0D:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EDX+0x00000088]
	LEA EDX,DWORD PTR [EBP+var_A4+0x4]
	ADD ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [EBP+var_70+0x4]
	PUSH EAX
	PUSH 0x01
	PUSH EBX
	LEA EAX,DWORD PTR [EBP+var_C4+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX+0x0000008C]
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_CC+0x4]
	PUSH EBX
	LEA EDX,DWORD PTR [EBP+var_88+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_24+0x4]
	PUSH EDX
	MOV ECX,DWORD PTR [ECX+0x0000013C]
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m47310_sub_10048310])
	TEST EAX, EAX
	JNZ loc_10041AAC
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_10041A9D
	FLD DWORD PTR [EBP+var_70+0x4]
	FCOMP DWORD PTR [EBP+var_8C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10041AAC
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ loc_10041A9D
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m40CBD_sub_10041CBD])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10041A9D:
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV ECX,DWORD PTR [EBP+var_70+0x4]
	MOV DWORD PTR [EBP+var_8C+0x4],ECX
loc_10041AAC:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP EAX,DWORD PTR [EBP+var_24+0x4]
	JZ loc_10041AD8
	CMP DWORD PTR [EBP+var_24+0x4],0x00
	JZ loc_10041AD8
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m40CC5_sub_10041CC5])
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10041AD8:
	ADD DWORD PTR [EBP+var_2C+0x4],0x000001A0
	INC DWORD PTR [EBP+var_48+0x4]
	CMP DWORD PTR [EBP+var_48+0x4],0x14
	JL FAR loc_1004189F
loc_10041AEC:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ_LONG(offset [LEGO1_text.m40EB6_loc_10041EB6])
	MOV DWORD PTR [EBP+var_2C+0x4],0x00000000
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147E0_sub_100157E0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m25570_sub_10026570])
	LEA ECX,DWORD PTR [EBP+var_64+0x4]
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_94+0x4]
	MOV ESI, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_98+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EBP+var_9C+0x4],offset [LEGO1_rdata.m488_ptr]
	PUSH EAX
	MOV DWORD PTR [EBP+var_68+0x4],ECX
	MOV DWORD PTR [EBP+var_6C+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_18+0x4],0x00000000
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m147F0_sub_100157F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m2F790_sub_10030790])
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	JLE FAR loc_10041C53
	LEA EDI,DWORD PTR [EAX+0x11]
loc_10041B67:
	CMP BYTE PTR [EDI],0x00
	JGE FAR loc_10041C46
	CMP DWORD PTR [EDI+0x17],0x00
	JZ FAR loc_10041C46
	CMP DWORD PTR [EDI-0x11],0x00
	JZ FAR loc_10041C46
	TEST EBX, EBX
	JZ FAR loc_10041C46
	CMP ESI, -0x01
	JZ loc_10041B9A
	CMP EBX, 0x0F
	JZ FAR loc_10041C46
loc_10041B9A:
	MOV ECX,DWORD PTR [EDI+0x13]
	MOV EAX,DWORD PTR [EDI+0x0F]
	LEA EDX,DWORD PTR [EBP+var_A8+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX,DWORD PTR [EDI+0x0B]
	PUSH EDX
	MOV DWORD PTR [EBP+var_AC+0x4],EDX
	MOV DWORD PTR [EBP+var_B0+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_A8+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_A4+0x4],EAX
	MOV DWORD PTR [EBP+var_A0+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	LEA ECX,DWORD PTR [EBP+var_64+0x4]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	LEA EAX,DWORD PTR [EBP+var_88+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	MOV EAX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [EBP+var_68+0x4]
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	ADD ECX, 0x04
	ADD EAX, 0x08
	TEST ESI, ESI
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EBP+var_68+0x4]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBP+var_1C+0x4]
	JL loc_10041C37
	FLD DWORD PTR [EBP+var_1C+0x4]
	FCOMP DWORD PTR [EBP+var_70+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10041C46
loc_10041C37:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ESI, EBX
	MOV DWORD PTR [EBP+var_70+0x4],EAX
	MOV DWORD PTR [EBP+var_18+0x4],0x00000001
loc_10041C46:
	ADD EDI, 0x2C
	INC EBX
	CMP DWORD PTR [EBP+var_2C+0x4],EBX
	JG FAR loc_10041B67
loc_10041C53:
	CMP ESI, -0x01
	JZ_LONG(offset [LEGO1_text.m40D3A_loc_10041D3A])
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m40CDA_loc_10041CDA])
	LEA EAX,DWORD PTR [ESI*4+ESI]
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	LEA EAX,DWORD PTR [EAX*8+EAX]
	SUB EAX, ESI
	ADD EAX,DWORD PTR [EBP+var_34+0x4]
	MOV DWORD PTR [EDX+0x30],EAX
	MOV ECX,DWORD PTR [EAX+0x28]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV EBX,DWORD PTR [EAX+0x24]
	MOV ESI,DWORD PTR [EAX+0x20]
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_40+0x4],EAX
	MOV DWORD PTR [EBP+var_44+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_9C+0x4]
	MOV DWORD PTR [EBP+var_38+0x4],ESI
	MOV DWORD PTR [EBP+var_34+0x4],EBX
	MOV EBX,DWORD PTR [EBP+var_9C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA ECX,DWORD PTR [EBP+var_3C+0x4]
	JMP_LONG(offset [LEGO1_text.m40D24_loc_10041D24])
}
}

__declspec(naked) DWORD LEGO1_sub_10041CBD()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_10041CC5()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_proc_10041CCD()
{
	enum{
		arg1217202 = 0x4A4AC8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217202-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10041FFA()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_proc_10042002()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10042037()
{
	enum{
		arg1217212 = 0x4A4AF0,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_10042300()
{
	enum{
		var_B0 = -0xB0,
		var_AC = -0xAC,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_9C = -0x9C,
		var_98 = -0x98,
		var_94 = -0x94,
		var_90 = -0x90,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_50 = -0x50,
		var_48 = -0x48,
		var_44 = -0x44,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m415A9_proc_100425A9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000A0
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	PUSH ESI
	MOV EBX, 0x00000001
	PUSH EDI
	LEA ESI,DWORD PTR [EBP+var_B0+0x4]
	MOV EDI,DWORD PTR [ECX+0x28]
loc_10042332:
	MOV ECX, ESI
	ADD ESI, 0x14
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	DEC EBX
	JNS loc_10042332
	LEA EAX,DWORD PTR [EBP+var_5C+0x4]
	LEA ECX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EBP+var_60+0x4],EAX
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	MOV EAX, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_64+0x4],EAX
	MOV DWORD PTR [EBP+var_38+0x4],EAX
	MOV ECX,DWORD PTR [EDI+0x00004200]
	MOV ESI, offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [EBP+var_48+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ECX+EDX+0x58]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, 0x30
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_B0+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV EAX,DWORD PTR [EBP+var_B0+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV ECX,DWORD PTR [EDI+0x00004204]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ECX+EAX+0x58]
	MOV EAX,DWORD PTR [ECX+0x14]
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	ADD EAX, 0x30
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_9C+0x4]
	MOV EBX,DWORD PTR [EBP+var_9C+0x4]
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX+EDX+0x58]
	LEA ECX,DWORD PTR [EBP+var_64+0x4]
	MOV EBX,DWORD PTR [EBP+var_64+0x4]
	MOV EAX,DWORD PTR [EAX+0x14]
	ADD EAX, 0x30
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	LEA ESI,DWORD PTR [EBP+var_1C+0x4]
	PUSH ESI
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV EAX,DWORD PTR [EBP+var_AC+0x4]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	MOV ESI,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(DWORD PTR [ESI+0x20])
	MOV EBX,DWORD PTR [EBP+var_A4+0x4]
	LEA ECX,DWORD PTR [EBP+var_A8+0x4]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV DWORD PTR [EDX+0x08],ECX
	LEA EAX,DWORD PTR [EBP+var_64+0x4]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	ADD ECX, 0x04
	ADD EAX, 0x08
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	MOV EAX,DWORD PTR [EBP+var_98+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_38+0x4]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBP+var_1C+0x4]
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV EBX,DWORD PTR [EBP+var_90+0x4]
	LEA ECX,DWORD PTR [EBP+var_94+0x4]
	LEA EDX,DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [ECX]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [EBP+var_64+0x4]
	MOV DWORD PTR [EDX+0x04],EBX
	PUSH EAX
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	MOV EBX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	ADD ECX, 0x04
	ADD EAX, 0x08
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOM DWORD PTR [EBP+var_1C+0x4]
	FSTP DWORD PTR [EBP+var_18+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100424B6
	MOV DWORD PTR [EBP+var_48+0x4],0x00000001
loc_100424B6:
	MOV EAX,DWORD PTR [EBP+var_48+0x4]
	CMP DWORD PTR [EAX*4+EBP+var_1C+0x4],0x43610000
	JGE_LONG(offset [LEGO1_text.m41973_loc_10042973])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ECX+0x38],0x00000008
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX+EDX+0x00000138]
	TEST EAX, EAX
	JZ loc_10042511
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m415B3_sub_100425B3])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+EDX+0x00000138],0x00000000
loc_10042511:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x2C],0x00
	JZ loc_10042521
	MOV DWORD PTR [ECX+0x2C],0x00000000
loc_10042521:
	XOR EDX, EDX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_44+0x4],EDX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EAX+0x04]
	ADD EAX, ECX
	MOV ECX,DWORD PTR [EAX+0x0000008C]
	MOV ESI,DWORD PTR [EAX+0x000000E4]
	MOV DWORD PTR [EBP+var_50+0x4],ECX
	MOV EDI,DWORD PTR [ESI+0x2C]
	FLD DWORD PTR [EDI]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3630]
	FSTP QWORD PTR [EBP+var_1C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JZ_LONG(offset [LEGO1_text.m415BB_loc_100425BB])
	FLD QWORD PTR [EBP+var_1C+0x4]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3628]
	FNSTSW AX
	TEST AH,0x01
	JNZ_LONG(offset [LEGO1_text.m415BB_loc_100425BB])
	LEA EBX,DWORD PTR [ESI+0x1C]
	MOV EAX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBP+var_60+0x4]
	FSTP QWORD PTR [EBP+var_24+0x4]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [EBP+var_1C+0x4]
	FLD QWORD PTR [EBP+var_24+0x4]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3630]
	FCOMP QWORD PTR [EBP+var_1C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JNZ_LONG(offset [LEGO1_text.m41766_loc_10042766])
	FLD QWORD PTR [EBP+var_24+0x4]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3630]
	FCOMP QWORD PTR [EBP+var_1C+0x4]
	FNSTSW AX
	TEST AH,0x41
	JNZ_LONG(offset [LEGO1_text.m415F2_loc_100425F2])
	JMP_LONG(offset [LEGO1_text.m41766_loc_10042766])
}
}

__declspec(naked) DWORD LEGO1_sub_100425B3()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_sub_10042A6B()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m17B70_loc_10018B70])
}
}

__declspec(naked) DWORD LEGO1_loc_10042A73()
{
	enum{
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	MOV EDX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EDX-0x5C]
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],ECX
	MOV EDX,DWORD PTR [EAX+0x04]
	FILD DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	XOR EAX, EAX
	FSTP DWORD PTR [ECX+EDX+0x28]
	JMP_LONG(offset [LEGO1_text.m41A9E_loc_10042A9E])
}
}

__declspec(naked) DWORD LEGO1_loc_10042A96()
{
__asm{
	SUB ECX, 0x5C
	CALL_LONG(offset [LEGO1_text.m2E1B0_sub_1002F1B0])
	JMP_LONG(offset [LEGO1_text.m41A9E_loc_10042A9E])
}
}

__declspec(naked) DWORD LEGO1_loc_10042A9E()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EBP
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10042AB0(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m41C09_proc_10042C09]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000000
	CMP DWORD PTR [EBP+arg1+0x4],0x00
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	MOV ESI, ECX
	JZ loc_10042AF9
	MOV DWORD PTR [ESI+0x04],offset [LEGO1_rdata.m3918]
	LEA ECX,DWORD PTR [ESI+0x54]
	CALL_LONG(offset [LEGO1_text.m2C700_sub_1002D700])
	OR DWORD PTR [EBP+var_1C+0x4],0x01
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
loc_10042AF9:
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	XOR EBX, EBX
	MOV BYTE PTR [ESI+0x08],AL
	MOV DWORD PTR [ESI+0x0C],EBX
	MOV DWORD PTR [ESI+0x10],EBX
	MOV DWORD PTR [ESI+0x14],EBX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m1510_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESI+ECX+0x04],offset [LEGO1_rdata.m1440_ptr]
	MOV EAX,DWORD PTR [ESI+0x04]
	PUSH 0x0C
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX,DWORD PTR [EAX+0x04]
	LEA ECX,DWORD PTR [EAX-0x1C]
	MOV DWORD PTR [ESI+EAX],ECX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV WORD PTR DS:[ESI+0x18],0xFFFF
	MOV BYTE PTR [ESI+0x1C],AL
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX],EAX
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EAX+0x04],EAX
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x24],EBX
	LEA EAX,DWORD PTR [ESI+0x44]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x40],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m39F0_ptr]
	MOV DWORD PTR [ESI+0x3C],offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ESI+0x3C],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESI+EDX+0x04],offset [LEGO1_rdata.m3920_ptr]
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	LEA EDX,DWORD PTR [EAX-0x50]
	MOV DWORD PTR [ESI+EAX],EDX
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x2C],EBX
	MOV DWORD PTR [ESI+0x28],EBX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_10042BB9()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	TEST BYTE PTR [EBP+arg1217218-0x4A4B20],0x01
	JZ loc_10042BCA
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x54
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_10042BCA:
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10042BCB()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x1C
	JMP_LONG(offset [LEGO1_text.m41C20_loc_10042C20])
}
}

__declspec(naked) DWORD LEGO1_proc_10042BD6()
{
	enum{
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x1C
	JMP_LONG(offset [LEGO1_text.m41C90_loc_10042C90])
	TEST BYTE PTR [EBP+arg1217218-0x4A4B20],0x02
	JZ loc_10042BF2
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
loc_10042BF2:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10042CD1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m41C20_loc_10042C20])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10042EE0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH ESI
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX, ECX
	MOV DWORD PTR [ESP+arg2+0x8],ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX],ECX
	POP ESI
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1004309A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x38
	JMP_LONG(offset [LEGO1_text.m41C90_loc_10042C90])
}
}

__declspec(naked) DWORD LEGO1_sub_100430AF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x34
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD LEGO1_sub_10043187()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x10
	JMP_LONG(offset [LEGO1_text.m3FFA0_loc_10040FA0])
}
}

__declspec(naked) DWORD LEGO1_sub_10043397()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	SUB ECX, 0x04
	JMP_LONG(offset [LEGO1_text.m1B140_sub_1001C140])
}
}

__declspec(naked) DWORD LEGO1_sub_10043430()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m42532_proc_10043532]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	LEA ECX,DWORD PTR [ESI+0x20]
	MOV DWORD PTR [EBP+var_8+0x4],EDI
	MOV EBX, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mD38_ptr]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mCD8_ptr]
	CALL_LONG(offset [LEGO1_text.mB44E0_sub_100B54E0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mBE8_ptr]
	CALL_LONG(offset [LEGO1_text.mB1760_sub_100B2760])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	LEA ECX,DWORD PTR [ESI+0x74]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3A38_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000005
	MOV DWORD PTR [ESI+0x68],EDI
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x06
	MOV WORD PTR DS:[ESI+0x00000090],DI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3AC8_ptr]
	AND BYTE PTR [ESI+0x5E],0xFD
	MOV WORD PTR DS:[ESI+0x70],0x0001
	MOV EAX, ESI
	MOV DWORD PTR [ESI+0x6C],EDI
	MOV DWORD PTR [ESI+0x00000084],EDI
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100435A5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB740_loc_1000C740])
}
}

__declspec(naked) DWORD LEGO1_sub_1004374D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB740_loc_1000C740])
}
}

__declspec(naked) DWORD LEGO1_sub_10043780()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m427E4_proc_100437E4]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3AC8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ECX+0x6C]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m427D9_sub_100437D9])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m427EE_sub_100437EE])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100437D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x74
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100437EE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m42550_loc_10043550])
}
}

__declspec(naked) DWORD LEGO1_sub_10043A50()
{
	enum{
		var_C = -0xC,
	};

__asm{
	SUB ESP, 0x08
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x7C]
	PUSH EDI
	PUSH EBP
	MOV EBX, ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB68F0__GetVariable_MxVariableTable__QAEPBDPBD_Z])
	PUSH EAX
	MOV ESI, EAX
	CALL_LONG(offset [LEGO1_text.m8A6C0_sub_1008B6C0])
	FSTP DWORD PTR [ESP+var_C+0x20]
	ADD ESP, 0x04
	TEST ESI, ESI
	JZ FAR loc_10043CD1
	FLD DWORD PTR [EBX+0x00000084]
	FCOMP DWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x40
	JNZ FAR loc_10043CD1
	FLD DWORD PTR [ESP+var_C+0x1C]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3A20]
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [EBX+0x00000084],EAX
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10043AC0
	MOV DWORD PTR [EBX+0x00000084],0x3F7D70A4
	JMP loc_10043AD7
loc_10043AC0:
	FLDZ
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10043AD7
	MOV DWORD PTR [EBX+0x00000084],0x00000000
loc_10043AD7:
	MOV ESI,DWORD PTR [EBX+0x50]
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV EDX,DWORD PTR [EAX+0x08]
	TEST EDX, EDX
	JG loc_10043AE6
	NEG EDX
loc_10043AE6:
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [ESI+0x14]
	ADD ECX, 0x03
	MOV ESI,DWORD PTR [EBX+0x6C]
	AND ECX, -0x04
	IMUL ECX,EDX
	REP MOVSB
	MOVSX EAX,WORD PTR [EBX+0x00000090]
	TEST EAX, EAX
	JZ loc_10043B16
	CMP EAX, 0x02
	JZ FAR loc_10043BE9
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RET
loc_10043B16:
	MOV AX,WORD PTR DS:[EBX+0x0000008C]
	SUB AX,WORD PTR DS:[EBX+0x00000088]
	INC AX
	MOVSX ECX,AX
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	FILD DWORD PTR [ESP+var_C+0x1C]
	FMUL DWORD PTR [EBX+0x00000084]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	MOV DX,WORD PTR DS:[EBX+0x0000008A]
	CMP WORD PTR DS:[EBX+0x0000008E],DX
	JLE FAR loc_10043CD1
loc_10043B50:
	MOV ESI,DWORD PTR [EBX+0x50]
	MOV EDI,DWORD PTR [ESI+0x0C]
	MOV ECX,DWORD PTR [EDI+0x10]
	TEST ECX, ECX
	JNZ loc_10043B92
	CMP ECX, 0x10
	JZ loc_10043B69
	MOV ECX,DWORD PTR [EDI+0x08]
	TEST ECX, ECX
	JGE loc_10043B6E
loc_10043B69:
	MOVSX ECX,DX
	JMP loc_10043B78
loc_10043B6E:
	JG loc_10043B72
	NEG ECX
loc_10043B72:
	MOVSX EBP,DX
	SUB ECX, EBP
	DEC ECX
loc_10043B78:
	MOV EDI,DWORD PTR [EDI+0x04]
	ADD EDI, 0x03
	AND EDI, -0x04
	IMUL EDI,ECX
	MOVSX ECX,WORD PTR [EBX+0x00000088]
	ADD EDI,DWORD PTR [ESI+0x14]
	ADD EDI, ECX
	JMP loc_10043BBB
loc_10043B92:
	CMP ECX, 0x10
	JNZ loc_10043B9C
	MOV EDI,DWORD PTR [ESI+0x14]
	JMP loc_10043BBB
loc_10043B9C:
	MOV ECX,DWORD PTR [EDI+0x08]
	TEST ECX, ECX
	JGE loc_10043BA7
	XOR ECX, ECX
	JMP loc_10043BAC
loc_10043BA7:
	JG loc_10043BAB
	NEG ECX
loc_10043BAB:
	DEC ECX
loc_10043BAC:
	MOV EDI,DWORD PTR [EDI+0x04]
	ADD EDI, 0x03
	AND EDI, -0x04
	IMUL EDI,ECX
	ADD EDI,DWORD PTR [ESI+0x14]
loc_10043BBB:
	TEST AX, AX
	JLE loc_10043BD2
	MOV SI, AX
loc_10043BC3:
	CMP BYTE PTR [EDI],0x00
	JZ loc_10043BCD
	MOV CL,BYTE PTR [EBX+0x70]
	MOV BYTE PTR [EDI],CL
loc_10043BCD:
	INC EDI
	DEC SI
	JNZ loc_10043BC3
loc_10043BD2:
	INC DX
	CMP WORD PTR DS:[EBX+0x0000008E],DX
	JG FAR loc_10043B50
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RET
loc_10043BE9:
	MOV DI,WORD PTR DS:[EBX+0x0000008E]
	MOV SI, DI
	MOV AX, DI
	SUB AX,WORD PTR DS:[EBX+0x0000008A]
	INC AX
	MOVSX ECX,AX
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	FILD DWORD PTR [ESP+var_C+0x1C]
	FMUL DWORD PTR [EBX+0x00000084]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	SUB SI, AX
	CMP DI, SI
	JLE FAR loc_10043CD1
loc_10043C21:
	MOV EDX,DWORD PTR [EBX+0x50]
	MOV ECX,DWORD PTR [EDX+0x0C]
	MOV EAX,DWORD PTR [ECX+0x10]
	TEST EAX, EAX
	JNZ loc_10043C63
	CMP EAX, 0x10
	JZ loc_10043C3A
	MOV EAX,DWORD PTR [ECX+0x08]
	TEST EAX, EAX
	JGE loc_10043C3F
loc_10043C3A:
	MOVSX EAX,DI
	JMP loc_10043C49
loc_10043C3F:
	JG loc_10043C43
	NEG EAX
loc_10043C43:
	MOVSX EBP,DI
	SUB EAX, EBP
	DEC EAX
loc_10043C49:
	MOV ECX,DWORD PTR [ECX+0x04]
	ADD ECX, 0x03
	AND ECX, -0x04
	IMUL ECX,EAX
	MOVSX EAX,WORD PTR [EBX+0x00000088]
	ADD ECX,DWORD PTR [EDX+0x14]
	ADD ECX, EAX
	JMP loc_10043C8C
loc_10043C63:
	CMP EAX, 0x10
	JNZ loc_10043C6D
	MOV ECX,DWORD PTR [EDX+0x14]
	JMP loc_10043C8C
loc_10043C6D:
	MOV EAX,DWORD PTR [ECX+0x08]
	TEST EAX, EAX
	JGE loc_10043C78
	XOR EAX, EAX
	JMP loc_10043C7D
loc_10043C78:
	JG loc_10043C7C
	NEG EAX
loc_10043C7C:
	DEC EAX
loc_10043C7D:
	MOV ECX,DWORD PTR [ECX+0x04]
	ADD ECX, 0x03
	AND ECX, -0x04
	IMUL ECX,EAX
	ADD ECX,DWORD PTR [EDX+0x14]
loc_10043C8C:
	XOR DX, DX
	MOV AX,WORD PTR DS:[EBX+0x0000008C]
	SUB AX,WORD PTR DS:[EBX+0x00000088]
	INC AX
	TEST AX, AX
	JLE loc_10043CC6
loc_10043CA4:
	CMP BYTE PTR [ECX],0x00
	JZ loc_10043CAE
	MOV AL,BYTE PTR [EBX+0x70]
	MOV BYTE PTR [ECX],AL
loc_10043CAE:
	INC DX
	INC ECX
	MOV AX,WORD PTR DS:[EBX+0x0000008C]
	SUB AX,WORD PTR DS:[EBX+0x00000088]
	INC AX
	CMP AX, DX
	JG loc_10043CA4
loc_10043CC6:
	DEC DI
	CMP DI, SI
	JG FAR loc_10043C21
loc_10043CD1:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10043DE0()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10043E20(DWORD arg1)
{
	enum{
		r = 0x0,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	TEST EAX, EAX
	JZ loc_10043E39
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
loc_10043E39:
	CMP BYTE PTR [ESP+r+0x8],0x00
	JNZ loc_10043E49
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mB44F0_sub_100B54F0])
loc_10043E49:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10043F50()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m42FB0_proc_10043FB0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB50B0_sub_100B60B0])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV WORD PTR DS:[ESI+0x4C],CX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3B88_ptr]
	MOV WORD PTR DS:[ESI+0x4E],AX
	MOV BYTE PTR [ESI+0x50],CL
	MOV WORD PTR DS:[ESI+0x52],CX
	MOV DWORD PTR [ESI+0x58],ECX
	MOV WORD PTR DS:[ESI+0x54],CX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10044110()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m43164_proc_10044164]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3B88_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x58]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	TEST EAX, EAX
	JZ loc_1004414B
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1004414B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4316E_sub_1004416E])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004416E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB5390_loc_100B6390])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10044270(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217224 = 0x4A4B20,
		arg1217255 = 0x4A4B9C,
		arg1217256 = 0x4A4BA0,
		arg1217257 = 0x4A4BA4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP WORD PTR DS:[ESI+0x4C],0x03
	PUSH EBP
	JZ FAR loc_10044339
	MOV EBX,DWORD PTR [ESP+arg3+0x10]
	LEA EAX,DWORD PTR [ESI+0x40]
	PUSH EBX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB6170_sub_100B7170])
	ADD ESP, 0x08
	TEST AL, AL
	JZ FAR loc_1004446E
	CMP WORD PTR DS:[ESI+0x4C],0x02
	JNZ FAR loc_1004432A
	MOV EDI,DWORD PTR [EBX]
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x00000080])
	MOV EBP, EAX
	MOV ECX, EBX
	CALL_LONG(DWORD PTR [EDI+0x00000084])
	CMP WORD PTR DS:[ESI+0x52],0x02
	MOV EDI, EAX
	JNZ loc_10044330
	CMP WORD PTR DS:[ESI+0x54],0x02
	JNZ loc_10044330
	MOV ECX,DWORD PTR [EBX+0x10]
	MOV EAX, EBP
	CDQ
	SUB EAX, EDX
	SAR EAX, 0x01
	ADD ECX, EAX
	MOV EAX, EDI
	CDQ
	CMP ECX,DWORD PTR [ESP+arg1+0x10]
	MOV ECX,DWORD PTR [EBX+0x14]
	JLE loc_10044306
	SUB EAX, EDX
	SAR EAX, 0x01
	ADD ECX, EAX
	MOV EAX,DWORD PTR [ESP+arg2+0x10]
	CMP ECX, EAX
	MOV AX, 0x0003
	JLE loc_100442F9
	MOV AX, 0x0001
loc_100442F9:
	MOV WORD PTR DS:[ESI+0x56],AX
	POP EBP
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_10044306:
	SUB EAX, EDX
	SAR EAX, 0x01
	ADD ECX, EAX
	MOV EAX,DWORD PTR [ESP+arg2+0x10]
	CMP ECX, EAX
	MOV AX, 0x0004
	JLE loc_1004431D
	MOV AX, 0x0002
loc_1004431D:
	MOV WORD PTR DS:[ESI+0x56],AX
	POP EBP
	MOV AL, 0x01
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_1004432A:
	MOV WORD PTR DS:[ESI+0x56],0xFFFF
loc_10044330:
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_10044339:
	MOV EAX,DWORD PTR [ESI+0x44]
	MOV EBX,DWORD PTR [ESP+arg3+0x10]
	MOV ECX,DWORD PTR [EAX]
	MOV EDI,DWORD PTR [ECX+0x08]
	CMP EDI, EBX
	JZ loc_10044355
	MOV EAX,DWORD PTR [EBX+0x18]
	CMP DWORD PTR [EDI+0x18],EAX
	JGE FAR loc_1004446E
loc_10044355:
	MOV EBP,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217255-0x4A4B20])
	TEST AL, AL
	JZ FAR loc_1004446E
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217257-0x4A4B20])
	LEA EBX,DWORD PTR [EAX-0x01]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217256-0x4A4B20])
	MOV ECX,DWORD PTR [EDI+0x10]
	MOV EDX,DWORD PTR [EDI+0x14]
	ADD EBX, EDX
	LEA EAX,DWORD PTR [ECX+EAX-0x01]
	CMP ECX,DWORD PTR [ESP+arg1+0x10]
	JG FAR loc_1004446E
	CMP DWORD PTR [ESP+arg1+0x10],EAX
	JGE FAR loc_1004446E
	MOV EAX,DWORD PTR [ESP+arg2+0x10]
	CMP EDX, EAX
	JG FAR loc_1004446E
	CMP EAX, EBX
	JGE FAR loc_1004446E
	CMP DWORD PTR [EDI+0x54],0x00
	JZ loc_100443B5
	XOR EAX, EAX
	JMP loc_1004441E
loc_100443B5:
	MOV EDI,DWORD PTR [EDI+0x50]
	MOV EBX,DWORD PTR [EDI+0x0C]
	MOV EBP,DWORD PTR [EBX+0x10]
	TEST EBP, EBP
	JNZ loc_100443F5
	CMP EBP, 0x10
	JZ loc_100443CE
	MOV EBP,DWORD PTR [EBX+0x08]
	TEST EBP, EBP
	JGE loc_100443D2
loc_100443CE:
	SUB EAX, EDX
	JMP loc_100443DC
loc_100443D2:
	JG loc_100443D6
	NEG EBP
loc_100443D6:
	SUB EDX, EAX
	LEA EAX,DWORD PTR [EBP+EDX+arg1217224-0x4A4B21]
loc_100443DC:
	MOV EDX,DWORD PTR [EBX+0x04]
	ADD EDX, 0x03
	AND EDX, -0x04
	IMUL EDX,EAX
	ADD EDX,DWORD PTR [EDI+0x14]
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	SUB EDX, ECX
	ADD EAX, EDX
	JMP loc_1004441E
loc_100443F5:
	CMP EBP, 0x10
	JNZ loc_100443FF
	MOV EAX,DWORD PTR [EDI+0x14]
	JMP loc_1004441E
loc_100443FF:
	MOV ECX,DWORD PTR [EBX+0x08]
	TEST ECX, ECX
	JGE loc_1004440A
	XOR ECX, ECX
	JMP loc_1004440F
loc_1004440A:
	JG loc_1004440E
	NEG ECX
loc_1004440E:
	DEC ECX
loc_1004440F:
	MOV EAX,DWORD PTR [EBX+0x04]
	ADD EAX, 0x03
	AND EAX, -0x04
	IMUL EAX,ECX
	ADD EAX,DWORD PTR [EDI+0x14]
loc_1004441E:
	MOV WORD PTR DS:[ESI+0x56],0x0000
	MOV EBX,DWORD PTR [ESI+0x58]
	TEST EBX, EBX
	JZ loc_10044453
	MOV DI, 0x0001
	MOV DX,WORD PTR DS:[EBX]
	CMP DX, DI
	JL loc_1004445E
	MOVZX EAX,BYTE PTR DS:[EAX]
loc_1004443B:
	MOVSX ECX,DI
	CMP WORD PTR DS:[ECX*2+EBX],AX
	JZ loc_1004444D
	INC DI
	CMP DI, DX
	JLE loc_1004443B
	JMP loc_1004445E
loc_1004444D:
	MOV WORD PTR DS:[ESI+0x56],DI
	JMP loc_1004445E
loc_10044453:
	CMP BYTE PTR [EAX],0x00
	JZ loc_1004445E
	MOV WORD PTR DS:[ESI+0x56],0x0001
loc_1004445E:
	CMP WORD PTR DS:[ESI+0x56],0x00
	JZ loc_1004446E
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_1004446E:
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10044480(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.mB44C0_sub_100B54C0])
	TEST AL, AL
	JZ loc_1004449E
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, 0x08
	JZ loc_100444A5
	CMP EAX, 0x09
	JZ loc_100444EB
loc_1004449E:
	XOR AL, AL
	POP EDI
	POP ESI
	RETN 0x0008
loc_100444A5:
	MOV AX,WORD PTR DS:[EDI+0x4C]
	TEST AX, AX
	JZ loc_100444BA
	CMP AX, 0x0002
	JZ loc_100444BA
	CMP AX, 0x0003
	JNZ loc_1004449E
loc_100444BA:
	MOV EAX,DWORD PTR [EDI+0x1C]
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV DWORD PTR [ESI+0x20],ECX
	MOV ECX, EDI
	MOV EAX,DWORD PTR [EDI+0x1C]
	MOV EDX,DWORD PTR [EAX+0x20]
	MOV DWORD PTR [ESI+0x24],EDX
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV DWORD PTR [ESI+0x04],0x00000011
	MOV CX,WORD PTR DS:[EDI+0x4E]
	MOV AL, 0x01
	MOV WORD PTR DS:[ESI+0x28],CX
	POP EDI
	POP ESI
	RETN 0x0008
loc_100444EB:
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	MOV ECX,DWORD PTR [ESI+0x14]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x10]
	PUSH ECX
	PUSH EDX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m43270_sub_10044270])
	TEST AL, AL
	JZ loc_1004449E
	MOV EAX,DWORD PTR [EDI+0x1C]
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV DWORD PTR [ESI+0x20],ECX
	MOV EAX,DWORD PTR [EDI+0x1C]
	MOV EDX,DWORD PTR [EAX+0x20]
	MOV DWORD PTR [ESI+0x24],EDX
	MOV CX,WORD PTR DS:[EDI+0x56]
	MOV EAX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV DWORD PTR [ESI+0x04],0x00000011
	MOV CX,WORD PTR DS:[EDI+0x4E]
	MOV AL, 0x01
	MOV WORD PTR DS:[ESI+0x28],CX
	POP EDI
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100448D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m43987_proc_10044987]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x20]
	CALL_LONG(offset [LEGO1_text.mB5D20___0MxCriticalSection__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mD38_ptr]
	CALL_LONG(offset [LEGO1_text.mB3D50__Init_MxPresenter__IAEXXZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.mCD8_ptr]
	CALL_LONG(offset [LEGO1_text.mB44E0_sub_100B54E0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV DWORD PTR [ESI+0x50],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3C10_ptr]
	CALL_LONG(offset [LEGO1_text.m43AB0_nullsub])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_nullsub()
{
__asm{
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10044AC0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m43B1F_proc_10044B1F]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3C10_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m43B70_sub_10044B70])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m43B14_sub_10044B14])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m43B29_sub_10044B29])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10044B14()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x50
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10044B29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB550_loc_1000C550])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10044B70(DWORD arg1)
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m43BF0_proc_10044BF0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST EAX, EAX
	JZ loc_10044BA7
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
loc_10044BA7:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	ADD EAX, 0x20
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mB7ED0_sub_100B8ED0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m43AB0_nullsub])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m43BFA_sub_10044BFA])
	CMP BYTE PTR [EBP+arg1+0x4],0x00
	JNZ loc_10044BE1
	PUSH 0x00
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.mB44F0_sub_100B54F0])
loc_10044BE1:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10044BFA()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_10044E32()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10044E50()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m43E8D_proc_10044E8D]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3C88_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m43E97_sub_10044E97])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10044E97()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x04
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10044F20()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x14],EAX
	MOV DWORD PTR [ECX+0x18],EAX
	MOV DWORD PTR [ECX+0x1C],EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10044F40()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m440F7_proc_100450F7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [EDX+0x20],AL
	MOV CL,BYTE PTR [EBP+var_10+0x2]
	MOV BYTE PTR [EDX+0x21],CL
	MOV DWORD PTR [EDX+0x28],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ESI
	JNZ loc_10044FAA
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x4360], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4360]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10044FAA:
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m440CE_sub_100450CE])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4360]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV DWORD PTR [EDX+0x2C],0x00000000
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDX+0x24],EAX
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [EDX+0x24]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV DWORD PTR [EAX+0x08],EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [EDX+0x30],AL
	MOV CL,BYTE PTR [EBP+var_10+0x2]
	MOV DWORD PTR [EDX+0x38],0x00000000
	MOV BYTE PTR [EDX+0x31],CL
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],0x00
	JNZ loc_10045035
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EAX+0x04],0x00000000
	MOV DWORD PTR [EAX+0x10],0x00000001
	ADD ESP, 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x11A4], EAX
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX+0x08],0x00000000
loc_10045035:
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m440A5_sub_100450A5])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR ECX, ECX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],ECX
	MOV DWORD PTR [EDX+0x34],EAX
	MOV DWORD PTR [EDX+0x3C],ECX
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [EDX+0x34]
	MOV BYTE PTR [EBP+var_8+0x4],0x08
	MOV DWORD PTR [EAX+0x08],EAX
	MOV DWORD PTR [EDX], offset [LEGO1_rdata.m3D60_ptr]
	MOV DWORD PTR [EDX+0x08],ECX
	MOV WORD PTR DS:[EDX+0x18],CX
	MOV DWORD PTR [EDX+0x0C],ECX
	MOV WORD PTR DS:[EDX+0x1A],CX
	MOV DWORD PTR [EDX+0x10],ECX
	MOV WORD PTR DS:[EDX+0x1C],CX
	MOV EAX, EDX
	MOV WORD PTR DS:[EDX+0x1E],CX
	POP ESI
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EDX+0x14],ECX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100450A5()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_100450CE()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10045270()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDX
	JZ loc_1004528E
loc_1004527D:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004528B
	MOV EDX, EAX
	JMP loc_1004527D
loc_1004528B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_1004528E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100452A2
loc_10045296:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10045296
loc_100452A2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100452AB
	MOV DWORD PTR [ECX],EDX
loc_100452AB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100452B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100452DA
loc_100452CC:
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ECX
	JZ loc_100452FF
	MOV EAX, ECX
	JMP loc_100452CC
loc_100452DA:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_100452F6
loc_100452E6:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100452E6
loc_100452F6:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10045303
loc_100452FF:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_10045303:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EBX
	JZ loc_10045337
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDX
	JZ loc_10045333
loc_1004531E:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004532C
	MOV EDX, EAX
	JMP loc_1004531E
loc_1004532C:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10045341
loc_10045333:
	MOV EDX, EBX
	JMP loc_10045341
loc_10045337:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10045341:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_100453DA
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1004536B
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1004536B
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1004536D
loc_1004536B:
	MOV DWORD PTR [EAX],EDX
loc_1004536D:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_1004539E
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4360]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10045395
	MOV EAX, EDX
loc_10045383:
	MOV EDI,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDI
	JZ loc_10045391
	MOV EAX, EDI
	JMP loc_10045383
loc_10045391:
	MOV DWORD PTR [EBX],EAX
	JMP loc_1004539E
loc_10045395:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_1004539E:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_1004543A
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4360]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100453CF
	MOV EBX, EDX
loc_100453BC:
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100453CB
	MOV EBX, EAX
	JMP loc_100453BC
loc_100453CB:
	MOV DWORD PTR [EDI],EBX
	JMP loc_1004543A
loc_100453CF:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_1004543A
loc_100453DA:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_100453EE
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10045403
loc_100453EE:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10045403:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004541D
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004541D
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_1004541F
loc_1004541D:
	MOV DWORD PTR [EAX],ECX
loc_1004541F:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	ADD EAX, 0x10
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDI,DWORD PTR [ECX+0x10]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX],EDI
loc_1004543A:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_100456D6
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_100456CF
loc_10045450:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_100456CF
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_100454D8
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_100454BD
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_10045495
	MOV DWORD PTR [EAX+0x04],EBP
loc_10045495:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_100454B1
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EAX],EBP
	JZ loc_100454B1
	MOV DWORD PTR [EAX+0x08],EDI
	JMP loc_100454B3
loc_100454B1:
	MOV DWORD PTR [EAX],EDI
loc_100454B3:
	MOV DWORD PTR [EDI],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100454BD:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10045561
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10045561
	JMP loc_10045547
loc_100454D8:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_1004552E
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EAX]
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EAX],EDI
	MOV EDI,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDI
	JZ loc_10045505
	MOV DWORD PTR [EDI+0x04],EAX
loc_10045505:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EAX
	JZ loc_10045522
	MOV EDI,DWORD PTR [EAX+0x04]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JZ loc_10045522
	MOV EDI,DWORD PTR [EAX+0x04]
loc_10045522:
	MOV DWORD PTR [EDI],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_1004552E:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10045621
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10045621
loc_10045547:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10045450
	JMP FAR loc_100456CF
loc_10045561:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_100455BC
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004558F
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004558F:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100455AE
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100455AE
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_100455B0
loc_100455AE:
	MOV DWORD PTR [EAX],EBX
loc_100455B0:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_100455BC:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100455EE
	MOV DWORD PTR [EAX+0x04],EDI
loc_100455EE:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10045618
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004560F
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100456CC
loc_1004560F:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100456CC
loc_10045618:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	JMP FAR loc_100456CC
loc_10045621:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_10045677
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004564F
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004564F:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004566B
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004566B
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_1004566D
loc_1004566B:
	MOV DWORD PTR [EAX],EBX
loc_1004566D:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_10045677:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100456A8
	MOV DWORD PTR [EAX+0x04],EDI
loc_100456A8:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100456C7
	MOV EBP,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100456C7
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_100456C9
loc_100456C7:
	MOV DWORD PTR [EAX],EBX
loc_100456C9:
	MOV DWORD PTR [EBX+0x08],EDI
loc_100456CC:
	MOV DWORD PTR [EDI+0x04],EBX
loc_100456CF:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_100456D6:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10045700(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	PUSH EDI
	MOV EDI, ECX
	MOV EBX, ESI
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ESI
	JZ loc_10045733
loc_10045713:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m44700_sub_10045700])
	MOV EBX,DWORD PTR [EBX]
	PUSH ESI
	MOV ESI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EBX
	JNZ loc_10045713
loc_10045733:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100457B3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x30
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100457BE()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x20
	JMP_LONG(offset [LEGO1_text.m447E0_loc_100457E0])
}
}

__declspec(naked) DWORD LEGO1_sub_100457D3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10045821()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44830_loc_10045830])
}
}

__declspec(naked) DWORD LEGO1_sub_10045871()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m441A0_loc_100451A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10045A69()
{
	enum{
		arg1217213 = 0x4A4AF4,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD LEGO1_sub_10045AC1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44AD0_loc_10045AD0])
}
}

__declspec(naked) DWORD LEGO1_sub_10045B20()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_10045B3D
	PUSH 0x03
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10045B3D:
	MOV DWORD PTR [ESI+0x08],0x00000000
	MOV WORD PTR DS:[ESI+0x18],0x0000
	MOV EAX,DWORD PTR [ESI+0x10]
	TEST EAX, EAX
	JZ loc_10045B5A
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10045B5A:
	MOV DWORD PTR [ESI+0x10],0x00000000
	MOV WORD PTR DS:[ESI+0x1C],0x0000
	MOV ECX,DWORD PTR [ESI+0x14]
	TEST ECX, ECX
	JZ loc_10045B74
	PUSH 0x03
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10045B74:
	MOV DWORD PTR [ESI+0x14],0x00000000
	MOV WORD PTR DS:[ESI+0x1E],0x0000
	MOV ECX,DWORD PTR [ESI+0x0C]
	TEST ECX, ECX
	JZ loc_10045B8E
	PUSH 0x03
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_10045B8E:
	XOR EDX, EDX
	XOR ECX, ECX
	MOV WORD PTR DS:[ESI+0x1A],DX
	MOV DWORD PTR [ESI+0x0C],EDX
loc_10045B99:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42E8]
	ADD EAX, ECX
	CMP DWORD PTR [EAX],ESI
	JNZ loc_10045BAF
	MOV DWORD PTR [EAX],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42E8]
	MOV DWORD PTR [ECX+EAX+0x04],EDX
loc_10045BAF:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42EC]
	ADD EAX, ECX
	CMP DWORD PTR [EAX],ESI
	JNZ loc_10045BC5
	MOV DWORD PTR [EAX],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42EC]
	MOV DWORD PTR [ECX+EAX+0x04],EDX
loc_10045BC5:
	ADD ECX, 0x08
	CMP ECX, 0x00000080
	JL loc_10045B99
	XOR ECX, ECX
	XOR EDX, EDX
loc_10045BD4:
	MOV EAX, DWORD PTR [offset LEGO1_data.m4358]
	ADD EAX, ECX
	CMP DWORD PTR [EAX],ESI
	JNZ loc_10045BEA
	MOV DWORD PTR [EAX],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data.m4358]
	MOV DWORD PTR [ECX+EAX+0x04],EDX
loc_10045BEA:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x435C]
	ADD EAX, ECX
	CMP DWORD PTR [EAX],ESI
	JNZ loc_10045C00
	MOV DWORD PTR [EAX],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x435C]
	MOV DWORD PTR [ECX+EAX+0x04],EDX
loc_10045C00:
	ADD ECX, 0x08
	CMP ECX, 0x50
	JL loc_10045BD4
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10045C20(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_C = -0xC,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	MOV ECX,DWORD PTR [EAX+0x00000138]
	TEST ECX, ECX
	JZ loc_10045C4B
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV EAX,DWORD PTR [ESP+arg1+0x2C]
	MOV DWORD PTR [EAX+0x00000138],0x00000000
loc_10045C4B:
	MOV EAX,DWORD PTR [ESP+arg2+0x2C]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45B50_sub_10046B50])
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV EDI, EAX
	MOV EAX,DWORD PTR [ESP+arg3+0x2C]
	MOV EDX,DWORD PTR [ESP+arg5+0x2C]
	MOV EBX,DWORD PTR [EAX*4+ECX]
	MOV EBP,DWORD PTR [EDX*4+ECX]
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_10045C84
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [ESP+var_1C+0x2C],EAX
	FILD DWORD PTR [ESP+var_1C+0x2C]
	JMP loc_10045C95
loc_10045C84:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_1C+0x2C],ECX
	FILD DWORD PTR [ESP+var_1C+0x2C]
loc_10045C95:
	FSTP DWORD PTR [ESP+var_1C+0x2C]
	MOV EAX,DWORD PTR [ESP+arg6+0x2C]
	MOV ECX,DWORD PTR [ESP+arg4+0x2C]
	MOV EDX,DWORD PTR [ESP+var_1C+0x2C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg1+0x30]
	PUSH EBP
	PUSH ECX
	PUSH EBX
	PUSH EDX
	MOV EBX,DWORD PTR [EAX]
	PUSH EDI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	TEST EAX, EAX
	JZ loc_10045CCC
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0018
loc_10045CCC:
	MOV EAX,DWORD PTR [ESP+0x30]
	MOV ECX, 0x00000001
	MOV DWORD PTR [EAX+0x00000138],ESI
	MOV EDX,DWORD PTR [ESI+0x34]
	MOV EBX, EDX
	MOV EDI,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDI
	JZ loc_10045D10
	MOV EAX,DWORD PTR [ESP+r+0x30]
loc_10045CEF:
	MOV EBX, EDI
	MOV ECX, 0x00000001
	CMP DWORD PTR [EDI+0x0C],EAX
	JG loc_10045CFD
	XOR ECX, ECX
loc_10045CFD:
	TEST ECX, ECX
	JNZ loc_10045D06
	MOV EDI,DWORD PTR [EDI+0x08]
	JMP loc_10045D08
loc_10045D06:
	MOV EDI,DWORD PTR [EDI]
loc_10045D08:
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDI
	JNZ loc_10045CEF
loc_10045D10:
	CMP DWORD PTR [ESI+0x38],0x00
	JZ loc_10045D23
	LEA EAX,DWORD PTR [ESP+r+0x30]
	LEA ECX,DWORD PTR [ESP+var_C+0x30]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_10045D5D
loc_10045D23:
	MOV DWORD PTR [ESP+var_1C+0x30],EBX
	TEST ECX, ECX
	JZ loc_10045D45
	CMP DWORD PTR [EDX],EBX
	JNZ loc_10045D3C
	LEA EAX,DWORD PTR [ESP+r+0x30]
	LEA ECX,DWORD PTR [ESP+var_14+0x30]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_10045D5D
loc_10045D3C:
	LEA ECX,DWORD PTR [ESP+var_1C+0x30]
	CALL_LONG(offset [LEGO1_text.m44D80_sub_10045D80])
loc_10045D45:
	MOV EAX,DWORD PTR [ESP+var_1C+0x30]
	MOV ECX,DWORD PTR [ESP+r+0x30]
	CMP DWORD PTR [EAX+0x0C],ECX
	JGE loc_10045D66
	LEA EAX,DWORD PTR [ESP+r+0x30]
	LEA ECX,DWORD PTR [ESP+var_20+0x30]
	PUSH EAX
	PUSH EBX
	PUSH EDI
loc_10045D5D:
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x30]
	CALL_LONG(offset [LEGO1_text.m44DD0_sub_10045DD0])
loc_10045D66:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0018
}
}

__declspec(naked) DWORD LEGO1_sub_10045D80()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_10045D98
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_10045D98
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10045D98:
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10045DB5
loc_10045DA2:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_10045DB1
	MOV EAX, EDX
	JMP loc_10045DA2
loc_10045DB1:
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10045DB5:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10045DC7
loc_10045DBC:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_10045DBC
loc_10045DC7:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10045DD0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_10045E14
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_10045E14:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_10045E44
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JNZ loc_10045E44
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x0C],EAX
	JG loc_10045E44
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10045E66
	MOV DWORD PTR [EAX],EDX
	JMP loc_10045E66
loc_10045E44:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EAX, ECX
	JZ loc_10045E59
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10045E66
	MOV DWORD PTR [EAX],EDX
	JMP loc_10045E66
loc_10045E59:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10045E66:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_10046029
loc_10045E76:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_10046029
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_10045F52
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_10045FFF
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP EDX, ECX
	JNZ loc_10045EE2
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10045EC2
	MOV DWORD PTR [EAX+0x04],ECX
loc_10045EC2:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10045EDC
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10045EDC
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10045EDE
loc_10045EDC:
	MOV DWORD PTR [EAX],EDX
loc_10045EDE:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_10045EE2:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10045F14
	MOV DWORD PTR [EAX+0x04],EDX
loc_10045F14:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10045F48
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10045F3B
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1004601D
loc_10045F3B:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1004601D
loc_10045F48:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	JMP FAR loc_10045FFA
loc_10045F52:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_10045FFF
	MOV EDX,DWORD PTR [EAX]
	CMP EDX, ECX
	JNZ loc_10045F9A
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10045F77
	MOV DWORD PTR [EAX+0x04],ECX
loc_10045F77:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10045F93
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10045F93
	MOV DWORD PTR [EBX],EDX
	JMP loc_10045F95
loc_10045F93:
	MOV DWORD PTR [EAX],EDX
loc_10045F95:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_10045F9A:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10045FCC
	MOV DWORD PTR [EAX+0x04],EDX
loc_10045FCC:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10045FF6
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10045FED
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004601D
loc_10045FED:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004601D
loc_10045FF6:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
loc_10045FFA:
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004601D
loc_10045FFF:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1004601D:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10045E76
loc_10046029:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046050(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x3C
	MOV DWORD PTR [ESP+var_38+0x3C],ECX
	PUSH EBX
	MOV DWORD PTR [ESP+var_3C+0x40],0x00000000
	PUSH ESI
	PUSH EDI
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1004607D
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [ESP+var_34+0x4C],EAX
	FILD DWORD PTR [ESP+var_34+0x4C]
	JMP loc_1004608E
loc_1004607D:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESP+var_34+0x4C],ECX
	FILD DWORD PTR [ESP+var_34+0x4C]
loc_1004608E:
	FSTP DWORD PTR [ESP+var_C+0x4C]
	MOV EAX,DWORD PTR [ESP+arg1+0x4C]
	MOV ECX,DWORD PTR [EAX+0x00000138]
	TEST ECX, ECX
	JZ loc_100460B4
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV EAX,DWORD PTR [ESP+arg1+0x4C]
	MOV DWORD PTR [EAX+0x00000138],0x00000000
loc_100460B4:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESP+var_38+0x4C]
	CMP WORD PTR DS:[ECX+0x18],AX
	MOV DWORD PTR [ESP+var_10+0x4C],EAX
	JBE FAR loc_100461B1
	MOV EBP,DWORD PTR [ESP+arg3+0x4C]
	MOV DWORD PTR [ESP+var_14+0x4C],EAX
loc_100460D0:
	MOV ECX,DWORD PTR [ESP+var_38+0x4C]
	MOV EAX,DWORD PTR [ESP+arg2+0x4C]
	MOV EDI,DWORD PTR [ECX+0x08]
	LEA EDX,DWORD PTR [ESP+var_8+0x4C]
	ADD EDI,DWORD PTR [ESP+var_14+0x4C]
	MOV DWORD PTR [ESP+var_1C+0x4C],EAX
	LEA EAX,DWORD PTR [ESP+var_1C+0x4C]
	MOV ESI,DWORD PTR [EDI+0x68]
	LEA ECX,DWORD PTR [EDI+0x64]
	PUSH EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m45640_sub_10046640])
	CMP ESI,DWORD PTR [ESP+var_8+0x4C]
	JZ FAR loc_10046183
	XOR EBX, EBX
	CMP BYTE PTR [EDI+0x04],BL
	JBE loc_1004616F
	XOR ESI, ESI
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x38]
	MOV DWORD PTR [ESP+var_4+0x4C],ECX
loc_10046115:
	MOV EAX,DWORD PTR [EDI+0x2C]
	LEA ECX,DWORD PTR [ESP+var_2C+0x4C]
	MOV DWORD PTR [ESP+var_30+0x4C],ECX
	MOV DWORD PTR [ESP+var_34+0x4C],offset [LEGO1_rdata.m1E8_ptr]
	MOV EAX,DWORD PTR [ESI+EAX+0x04]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [ECX+0x0C],EAX
	LEA ECX,DWORD PTR [ESP+var_34+0x4C]
	PUSH ECX
	PUSH EBP
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESP+var_4+0x54])
	MOV ECX,DWORD PTR [ESP+var_34+0x50]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x3D30]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_1004616F
	ADD ESI, 0x18
	INC EBX
	XOR EAX, EAX
	MOV AL,BYTE PTR [EDI+0x04]
	CMP EAX, EBX
	JG loc_10046115
loc_1004616F:
	XOR EAX, EAX
	MOV AL,BYTE PTR [EDI+0x04]
	CMP EAX, EBX
	JNZ loc_10046183
	CMP DWORD PTR [ESP+var_40+0x50],0x00
	JNZ loc_100461A2
	MOV DWORD PTR [ESP+var_40+0x50],EDI
loc_10046183:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	ADD DWORD PTR [ESP+var_18+0x50],0x74
	MOV AX,WORD PTR DS:[ECX+0x18]
	INC DWORD PTR [ESP+var_14+0x50]
	CMP EAX,DWORD PTR [ESP+var_14+0x50]
	JG FAR loc_100460D0
	JMP loc_100461B5
loc_100461A2:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x3C
	RETN 0x0010
loc_100461B1:
	MOV EBP,DWORD PTR [ESP+arg3+0x4C]
loc_100461B5:
	XOR EDI, EDI
	CMP DWORD PTR [ESP+var_3C+0x4C],EDI
	JZ FAR loc_10046300
	MOV DWORD PTR [ESP+var_1C+0x4C],EDI
	MOV ESI,DWORD PTR [ESP+arg4+0x4C]
loc_100461C9:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESP+var_3C+0x4C]
	MOV AL,BYTE PTR [ECX+0x04]
	CMP EAX,DWORD PTR [ESP+var_1C+0x4C]
	JLE FAR loc_100462B6
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV EBX,DWORD PTR [EDI+EAX]
	TEST BYTE PTR [EBX+0x24],0x03
	JZ FAR loc_100462AA
	LEA EAX,DWORD PTR [ESP+var_2C+0x4C]
	PUSH ECX
	MOV ECX, EBX
	MOV DWORD PTR [ESP+var_30+0x50],EAX
	MOV DWORD PTR [ESP+var_34+0x50],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
	MOV ECX,DWORD PTR [ESP+var_3C+0x4C]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ loc_1004623A
	MOV ECX,DWORD PTR [EAX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_30+0x4C]
	FLD DWORD PTR [ECX]
	FCHS
	FSTP DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_30+0x4C]
	FLD DWORD PTR [ECX+0x04]
	FCHS
	FSTP DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [EAX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_30+0x4C]
	FLD DWORD PTR [ECX+0x08]
	FCHS
	FSTP DWORD PTR [EDX+0x08]
	JMP loc_10046249
loc_1004623A:
	MOV EAX,DWORD PTR [EAX+0x2C]
	LEA ECX,DWORD PTR [ESP+var_34+0x4C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_34+0x50]
	CALL_LONG(DWORD PTR [EAX+0x20])
loc_10046249:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [ESP+var_34+0x50]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_30+0x50]
	MOV EAX,DWORD PTR [ESP+var_30+0x50]
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x3D30]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10046280
	MOV ECX,DWORD PTR [ESP+var_40+0x50]
	PUSH ECX
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV EBX, EAX
loc_10046280:
	TEST BYTE PTR [EBX+0x24],0x03
	JZ loc_100462C5
	MOV EAX,DWORD PTR [ESP+var_10+0x50]
	PUSH 0x3F000000
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	PUSH EBX
	MOV EDX,DWORD PTR [ESP+arg2+0x50]
	PUSH ESI
	PUSH EBP
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x00000084])
	TEST EAX, EAX
	JZ loc_100462D4
loc_100462AA:
	ADD EDI, 0x04
	INC DWORD PTR [ESP+var_20+0x50]
	JMP FAR loc_100461C9
loc_100462B6:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x3C
	RETN 0x0010
loc_100462C5:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x3C
	RETN 0x0010
loc_100462D4:
	MOV EAX,DWORD PTR [ESP+0x50]
	MOV ECX,DWORD PTR [ESP+var_3C+0x50]
	LEA EDX,DWORD PTR [ESP+r+0x50]
	MOV DWORD PTR [EAX+0x00000138],ECX
	LEA EAX,DWORD PTR [ESP+var_20+0x50]
	PUSH EDX
	PUSH EAX
	ADD ECX, 0x30
	CALL_LONG(offset [LEGO1_text.m45310_sub_10046310])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x3C
	RETN 0x0010
loc_10046300:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x3C
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046310(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EDI, ECX
	MOV EBP, EDX
	MOV ECX, 0x00000001
	MOV EBX,DWORD PTR [EDX+0x04]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_10046355
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX,DWORD PTR [EAX]
loc_10046334:
	MOV EBP, EBX
	MOV ECX, 0x00000001
	CMP DWORD PTR [EBX+0x0C],EAX
	JG loc_10046342
	XOR ECX, ECX
loc_10046342:
	TEST ECX, ECX
	JNZ loc_1004634B
	MOV EBX,DWORD PTR [EBX+0x08]
	JMP loc_1004634D
loc_1004634B:
	MOV EBX,DWORD PTR [EBX]
loc_1004634D:
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_10046334
loc_10046355:
	CMP DWORD PTR [EDI+0x08],0x00
	JZ loc_1004638F
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m44DD0_sub_10045DD0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1004638F:
	MOV DWORD PTR [ESP+var_4+0x1C],EBP
	TEST ECX, ECX
	JZ loc_100463D8
	CMP DWORD PTR [EDX],EBP
	JNZ loc_100463CF
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m44DD0_sub_10045DD0])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_100463CF:
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m44D80_sub_10045D80])
loc_100463D8:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EDX,DWORD PTR [EAX]
	CMP DWORD PTR [ECX+0x0C],EDX
	JGE FAR loc_1004655A
	PUSH 0x00
	MOV ECX, EDI
	MOV DWORD PTR [ESP+var_C+0x20],0x00000001
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m2B4A0_sub_1002C4A0])
	MOV ESI, EAX
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH ECX
	LEA EDX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [ESI],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH EDX
	MOV DWORD PTR [ESI+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m497A0_sub_1004A7A0])
	ADD ESP, 0x08
	INC DWORD PTR [EDI+0x0C]
	CMP DWORD PTR [EDI+0x04],EBP
	JZ loc_1004644B
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_1004644B
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV ECX,DWORD PTR [EAX]
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],ECX
	JG loc_1004644B
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],ESI
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10046466
	MOV DWORD PTR [EAX],ESI
	JMP loc_10046466
loc_1004644B:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],ESI
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP EBP, EAX
	JZ loc_1004645D
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10046466
	MOV DWORD PTR [EAX],ESI
	JMP loc_10046466
loc_1004645D:
	MOV DWORD PTR [EAX+0x04],ESI
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10046466:
	MOV EBX, ESI
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JZ FAR loc_10046536
loc_10046474:
	LEA ECX,DWORD PTR [EBX+0x04]
	MOV EDX,DWORD PTR [ECX]
	LEA EAX,DWORD PTR [EDX+0x10]
	CMP DWORD PTR [EAX],0x00
	JNZ FAR loc_10046536
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EDX
	JNZ loc_100464D1
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_1004650C
	CMP DWORD PTR [EDX+0x08],EBX
	JNZ loc_100464AA
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m45580_sub_10046580])
loc_100464AA:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m455E0_sub_100465E0])
	JMP loc_1004652A
loc_100464D1:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ loc_1004650C
	CMP DWORD PTR [EDX],EBX
	JNZ loc_100464E5
	PUSH EDX
	MOV EBX, EDX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m455E0_sub_100465E0])
loc_100464E5:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m45580_sub_10046580])
	JMP loc_1004652A
loc_1004650C:
	MOV DWORD PTR [EAX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EAX+0x04]
loc_1004652A:
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ FAR loc_10046474
loc_10046536:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX+0x10],0x00000001
	MOV DWORD PTR [EAX],ESI
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1004655A:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],0x00000000
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

