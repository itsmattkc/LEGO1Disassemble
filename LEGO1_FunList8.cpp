#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD LEGO1_sub_1004E38A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x74
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E39F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB2420_loc_100B3420])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E3B0()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x68],EAX
	MOV DWORD PTR [ECX+0x6C],EAX
	MOV BYTE PTR [ECX+0x70],AL
	MOV BYTE PTR [ECX+0x00000084],AL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004E656()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4D7B0_loc_1004E7B0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E6D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4D6F0_loc_1004E6F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E731()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E799()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E7F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4D6F0_loc_1004E6F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004EAEF()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4D7B0_loc_1004E7B0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004EB20(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_sub_1004EB40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4DB94_proc_1004EB94]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.mD90_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4DB9E_sub_1004EB9E])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004EB9E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB550_loc_1000C550])
}
}

__declspec(naked) DWORD LEGO1_sub_1004EBD0(DWORD arg1)
{
	enum{
		var_44 = -0x44,
		var_34 = -0x34,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4DEA1_proc_1004EEA1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x34
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	MOV DWORD PTR [EBP+var_20+0x4],0xFFFFFFFF
	PUSH EBX
	MOV ECX,DWORD PTR [EAX+0x18]
	PUSH ESI
	PUSH EDI
	PUSH ECX
	XOR ESI, ESI
	LEA ECX,DWORD PTR [EBP+var_44+0x4]
	CALL_LONG(offset [LEGO1_text.m98080_sub_10099080])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x74]
	PUSH 0x18
	MOV ECX,DWORD PTR [EAX+0x00000880]
	MOV EAX,DWORD PTR [ECX+0x10]
	SHL EAX, 0x1F
	SAR EAX, 0x1F
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV EDI, EAX
	TEST EDI, EDI
	JZ_LONG(offset [LEGO1_text.m4DCAB_loc_1004ECAB])
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV BYTE PTR [EBP+var_8+0x4],0x03
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4110_ptr]
	MOV DWORD PTR [EDI+0x08],ESI
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m4DF20_proc_1004EF20]
	MOV BYTE PTR [EBP+var_8+0x4],0x05
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4128_ptr]
	MOV DWORD PTR [EDI+0x14],ESI
	MOV DWORD PTR [EDI+0x10],ESI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4140_ptr]
	MOV DWORD PTR [EDI+0x0C],offset [LEGO1_text.m4DFC0_proc_1004EFC0]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m4158_ptr]
	JMP_LONG(offset [LEGO1_text.m4DCAD_loc_1004ECAD])
}
}

__declspec(naked) DWORD LEGO1_proc_1004EC8B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1004EC93()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DED0_loc_1004EED0])
}
}

__declspec(naked) DWORD LEGO1_proc_1004EC9B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DF30_loc_1004EF30])
}
}

__declspec(naked) DWORD LEGO1_proc_1004ECA3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E0B0_loc_1004F0B0])
}
}

__declspec(naked) DWORD LEGO1_loc_1004ECAB()
{
__asm{
	XOR ECX, ECX
	JMP_LONG(offset [LEGO1_text.m4DCAD_loc_1004ECAD])
}
}

__declspec(naked) DWORD __stdcall LEGO1_loc_1004ECAD(DWORD arg1)
{
	enum{
		arg1217208 = 0x4A4AE0,
		arg1217212 = 0x4A4AF0,
		arg1217213 = 0x4A4AF4,
		arg1217214 = 0x4A4AF8,
		arg1217215 = 0x4A4AFC,
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217221 = 0x4A4B14,
		arg1217223 = 0x4A4B1C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV DWORD PTR [EAX+0x50],ECX
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1004EE16
	MOV DWORD PTR [EBP+arg1217214-0x4A4B20],0x00000000
	CMP DWORD PTR [EBP+arg1217215-0x4A4B20],0x00
	JBE FAR loc_1004EE0F
loc_1004ECDE:
	PUSH 0x04
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1004EE16
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	CALL_LONG(offset [LEGO1_text.m98160_sub_10099160])
	TEST EAX, EAX
	JNZ FAR loc_1004EE16
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH ESI
	MOV EBX, 0x00000000
	MOV BYTE PTR [ESI+EAX],0x00
	CALL_LONG(offset [LEGO1_text.m8B410_sub_1008C410])
	ADD ESP, 0x04
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x06
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_1004ED4D
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m97FB0_sub_10098FB0])
	MOV EBX, EAX
loc_1004ED4D:
	MOV EAX,DWORD PTR [EBP+arg1217212-0x4A4B20]
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	PUSH EAX
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m98050_sub_10099050])
	TEST EAX, EAX
	JNZ FAR loc_1004EE16
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217220-0x4A4B20],EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	TEST EAX, EAX
	JZ loc_1004EDA3
	MOV ECX, EAX
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	PUSH ESI
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x08
	CALL_LONG(offset [LEGO1_text.mAD510___4MxString__QAEABV0_PBD_Z])
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x07
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],EAX
	MOV DWORD PTR [EAX+0x10],EBX
	JMP loc_1004EDAA
loc_1004EDA3:
	MOV DWORD PTR [EBP+arg1217213-0x4A4B20],0x00000000
loc_1004EDAA:
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH 0x0C
	MOV EBX,DWORD PTR [EAX+0x50]
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	MOV EDI,DWORD PTR [EBX+0x14]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217219-0x4A4B20],EAX
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x09
	TEST EAX, EAX
	JZ loc_1004EDDD
	MOV ECX,DWORD PTR [EBP+arg1217213-0x4A4B20]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x08],0x00000000
	JMP loc_1004EDDF
loc_1004EDDD:
	XOR EAX, EAX
loc_1004EDDF:
	MOV BYTE PTR [EBP+arg1217223-0x4A4B20],0x00
	TEST EDI, EDI
	JZ loc_1004EDEC
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_1004EDEF
loc_1004EDEC:
	MOV DWORD PTR [EBX+0x10],EAX
loc_1004EDEF:
	PUSH ESI
	MOV DWORD PTR [EBX+0x14],EAX
	XOR ESI, ESI
	INC DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	INC DWORD PTR [EBP+arg1217214-0x4A4B20]
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217215-0x4A4B20],EAX
	JA FAR loc_1004ECDE
loc_1004EE0F:
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],0x00000000
loc_1004EE16:
	TEST ESI, ESI
	JZ loc_1004EE23
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1004EE23:
	CMP DWORD PTR [EBP+arg1217217-0x4A4B20],0x00
	JZ loc_1004EE43
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV ECX,DWORD PTR [EAX+0x50]
	TEST ECX, ECX
	JZ loc_1004EE43
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	MOV DWORD PTR [EAX+0x50],0x00000000
loc_1004EE43:
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4DEAB_sub_1004EEAB])
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	MOV ECX,DWORD PTR [EBP+arg1217221-0x4A4B20]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_proc_1004EE65()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_proc_1004EE6D()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1004EE7A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1004EE87()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1004EE94()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004EEAB()
{
	enum{
		arg1217208 = 0x4A4AE0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217208-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m44A80_loc_10045A80])
}
}

__declspec(naked) DWORD LEGO1_sub_1004EF17()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004EFB3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DED0_loc_1004EED0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F030()
{
	enum{
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD420___1MxString__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F099()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E0B0_loc_1004F0B0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F0F1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DF30_loc_1004EF30])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F15F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F20B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DED0_loc_1004EED0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F279()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4DF30_loc_1004EF30])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F290()
{
	enum{
		var_60 = -0x60,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4E4E1_proc_1004F4E1]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x50
	MOV DWORD PTR [EBP+var_28+0x4],ECX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x50]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [EBP+var_1C+0x4],ESI
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m4170_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m4188_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m41A0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EAX, 0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
loc_1004F2FB:
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JNZ loc_1004F309
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EAX+0x10]
	JMP loc_1004F30F
loc_1004F309:
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
loc_1004F30F:
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	JZ FAR loc_1004F490
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EBP+var_18+0x4],0x00
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_40+0x4],ECX
	JZ FAR loc_1004F490
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	MOV EBX,DWORD PTR [EAX+0x10]
	LEA EDI,DWORD PTR [EAX+0x08]
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+var_3C+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	LEA ECX,DWORD PTR [EAX+0x08]
	MOV ESI, EAX
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	LEA EAX,DWORD PTR [EBP+var_3C+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mCC0_sub_10001CC0])
	MOV DWORD PTR [EBP+var_4C+0x4],EAX
	CMP DWORD PTR [ESI+0x0C],EAX
	JZ loc_1004F390
	MOV ECX,DWORD PTR [EBP+var_3C+0x4]
	MOV EDX,DWORD PTR [EAX+0x0C]
loc_1004F364:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1004F384
	OR AL, AL
	JZ loc_1004F380
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1004F384
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1004F364
loc_1004F380:
	XOR EAX, EAX
	JMP loc_1004F389
loc_1004F384:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1004F389:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [EBP+var_4C+0x4]
	JLE loc_1004F399
loc_1004F390:
	MOV EAX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_48+0x4]
loc_1004F399:
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [ESI+0x0C],EAX
	JZ loc_1004F3A6
	MOV ECX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_1004F3A6:
	CMP DWORD PTR [EBP+var_14+0x4],0x00
	JNZ FAR loc_1004F47A
	PUSH EBX
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m64C60_sub_10065C60])
	ADD ESP, 0x08
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	TEST EAX, EAX
	JZ FAR loc_1004F2FB
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m14800_sub_10015800])
	MOV EBX, EAX
	LEA ECX,DWORD PTR [EBP+var_34+0x4]
	LEA EAX,DWORD PTR [EBP+var_30+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E740_sub_1004F740])
	MOV ECX,DWORD PTR [EBP+var_34+0x4]
	CMP DWORD PTR [EBX+0x0C],ECX
	JZ loc_1004F413
	CMP BYTE PTR [EBX+0x04],0x00
	MOV ECX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [EBP+var_2C+0x4],ECX
	JZ loc_1004F450
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	MOV ESI,DWORD PTR [EAX+0x10]
	TEST ESI, ESI
	JZ loc_1004F450
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m64C00_sub_10065C00])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_1004F450
loc_1004F413:
	MOV EDI,DWORD PTR [EBP+var_30+0x4]
	MOV ECX, 0xFFFFFFFF
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI,DWORD PTR [EBP+var_30+0x4]
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	SUB EAX, EAX
	REPNE SCAS
	NOT ECX
	SUB EDI, ECX
	MOV EAX, ECX
	SHR ECX, 0x02
	MOV ESI, EDI
	MOV EDI,DWORD PTR [EBP+var_2C+0x4]
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
loc_1004F450:
	MOV ECX,DWORD PTR [EBP+var_2C+0x4]
	LEA EAX,DWORD PTR [EBP+var_60+0x4]
	MOV DWORD PTR [EBP+var_50+0x4],0x00000000
	MOV DWORD PTR [EBP+var_54+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	PUSH ECX
	PUSH EAX
	LEA ECX,DWORD PTR [EBX+0x08]
	CALL_LONG(offset [LEGO1_text.m4E800_sub_1004F800])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [ECX+0x10],EAX
	JMP FAR loc_1004F2FB
loc_1004F47A:
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EAX+0x0000030C]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m65010_sub_10066010])
	JMP FAR loc_1004F2FB
loc_1004F490:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV ECX,DWORD PTR [EAX+0x50]
	TEST ECX, ECX
	JZ loc_1004F4A0
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1004F4A0:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x50],0x00000000
	CALL_LONG(offset [LEGO1_text.m4E4EB_sub_1004F4EB])
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004F4EB()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E6F0_loc_1004F6F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F559()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E570_loc_1004F570])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F5B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E6A0_loc_1004F6A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F619()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F689()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E6A0_loc_1004F6A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F6E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004F731()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4E570_loc_1004F570])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004F740(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x08
	MOV EDX,DWORD PTR [ECX+0x04]
	PUSH EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH ESI
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	PUSH EDI
	PUSH EBP
	MOV EBP,DWORD PTR [ESP+arg2+0x18]
	JZ loc_1004F799
loc_1004F759:
	MOV ESI,DWORD PTR [EAX+0x0C]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
loc_1004F75F:
	MOV BL,BYTE PTR [ESI]
	CMP BL,BYTE PTR [EDI]
	JNZ loc_1004F77F
	OR BL, BL
	JZ loc_1004F77B
	MOV BL,BYTE PTR [ESI+0x01]
	CMP BL,BYTE PTR [EDI+0x01]
	JNZ loc_1004F77F
	ADD ESI, 0x02
	ADD EDI, 0x02
	OR BL, BL
	JNZ loc_1004F75F
loc_1004F77B:
	XOR ESI, ESI
	JMP loc_1004F784
loc_1004F77F:
	SBB ESI, ESI
	SBB ESI, -0x01
loc_1004F784:
	TEST ESI, ESI
	JG loc_1004F78E
	MOV EDX, EAX
	MOV EAX,DWORD PTR [EAX]
	JMP loc_1004F791
loc_1004F78E:
	MOV EAX,DWORD PTR [EAX+0x08]
loc_1004F791:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JNZ loc_1004F759
loc_1004F799:
	MOV DWORD PTR [ESP+var_8+0x18],EDX
	CMP DWORD PTR [ECX+0x04],EDX
	JZ loc_1004F7D5
	MOV ESI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDX+0x0C]
loc_1004F7A8:
	MOV DL,BYTE PTR [ESI]
	CMP DL,BYTE PTR [EAX]
	JNZ loc_1004F7C8
	OR DL, DL
	JZ loc_1004F7C4
	MOV DL,BYTE PTR [ESI+0x01]
	CMP DL,BYTE PTR [EAX+0x01]
	JNZ loc_1004F7C8
	ADD ESI, 0x02
	ADD EAX, 0x02
	OR DL, DL
	JNZ loc_1004F7A8
loc_1004F7C4:
	XOR EAX, EAX
	JMP loc_1004F7CD
loc_1004F7C8:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1004F7CD:
	TEST EAX, EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x18]
	JLE loc_1004F7E0
loc_1004F7D5:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	LEA EAX,DWORD PTR [ESP+var_4+0x18]
loc_1004F7E0:
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004F800(DWORD arg1, DWORD arg2)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EAX, 0x00000001
	MOV EBX,DWORD PTR [ESP+arg2+0x20]
	PUSH EBP
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EBP, ECX
	MOV EDI,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EDI
	JZ loc_1004F868
loc_1004F820:
	MOV ESI, EDI
	MOV ECX,DWORD PTR [EBX]
	MOV EDX,DWORD PTR [EDI+0x0C]
loc_1004F827:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1004F847
	OR AL, AL
	JZ loc_1004F843
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1004F847
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1004F827
loc_1004F843:
	XOR EAX, EAX
	JMP loc_1004F84C
loc_1004F847:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1004F84C:
	TEST EAX, EAX
	SETG CL
	XOR EAX, EAX
	MOV AL, CL
	TEST EAX, EAX
	JNZ loc_1004F85E
	MOV EDI,DWORD PTR [EDI+0x08]
	JMP loc_1004F860
loc_1004F85E:
	MOV EDI,DWORD PTR [EDI]
loc_1004F860:
	CMP DWORD PTR [offset LEGO1_data + 0x100],EDI
	JNZ loc_1004F820
loc_1004F868:
	CMP DWORD PTR [EBP+arg1217226-0x4A4B20],0x00
	JZ loc_1004F898
	LEA EAX,DWORD PTR [ESP+var_4+0x24]
	PUSH EBX
	PUSH ESI
	MOV ECX, EBP
	MOV DWORD PTR [ESP+var_14+0x2C],0x00000001
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [ESP+var_14+0x24]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	MOV DWORD PTR [ESP+var_C+0x24],ECX
	JMP FAR loc_1004F940
loc_1004F898:
	MOV DWORD PTR [ESP+var_8+0x24],ESI
	TEST EAX, EAX
	JZ loc_1004F8D7
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EAX],ESI
	JNZ loc_1004F8CE
	LEA EAX,DWORD PTR [ESP+var_4+0x24]
	PUSH EBX
	PUSH ESI
	MOV ECX, EBP
	MOV DWORD PTR [ESP+var_14+0x2C],0x00000001
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [ESP+var_14+0x24]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	MOV DWORD PTR [ESP+var_C+0x24],ECX
	JMP loc_1004F940
loc_1004F8CE:
	LEA ECX,DWORD PTR [ESP+var_8+0x24]
	CALL_LONG(offset [LEGO1_text.m4E960_sub_1004F960])
loc_1004F8D7:
	MOV EAX,DWORD PTR [ESP+var_8+0x24]
	MOV EDX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EAX+0x0C]
loc_1004F8E0:
	MOV AL,BYTE PTR [ECX]
	CMP AL,BYTE PTR [EDX]
	JNZ loc_1004F900
	OR AL, AL
	JZ loc_1004F8FC
	MOV AL,BYTE PTR [ECX+0x01]
	CMP AL,BYTE PTR [EDX+0x01]
	JNZ loc_1004F900
	ADD ECX, 0x02
	ADD EDX, 0x02
	OR AL, AL
	JNZ loc_1004F8E0
loc_1004F8FC:
	XOR EAX, EAX
	JMP loc_1004F905
loc_1004F900:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1004F905:
	TEST EAX, EAX
	JLE loc_1004F930
	LEA EAX,DWORD PTR [ESP+var_4+0x24]
	PUSH EBX
	PUSH ESI
	MOV ECX, EBP
	MOV DWORD PTR [ESP+var_14+0x2C],0x00000001
	PUSH EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4E9B0_sub_1004F9B0])
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [ESP+var_14+0x24]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
	MOV DWORD PTR [ESP+var_C+0x24],ECX
	JMP loc_1004F940
loc_1004F930:
	MOV DWORD PTR [ESP+var_C+0x24],0x00000000
	MOV EAX,DWORD PTR [ESP+var_8+0x24]
	MOV DWORD PTR [ESP+var_10+0x24],EAX
loc_1004F940:
	MOV ECX,DWORD PTR [ESP+var_10+0x24]
	MOV EAX,DWORD PTR [ESP+arg1+0x24]
	MOV EDX,DWORD PTR [ESP+var_C+0x24]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX],ECX
	POP ESI
	MOV DWORD PTR [EAX+0x04],EDX
	POP EBX
	ADD ESP, 0x14
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1004F960()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x14],0x00
	JNZ loc_1004F978
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_1004F978
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_1004F978:
	MOV EDX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EDX
	JZ loc_1004F995
loc_1004F982:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1004F991
	MOV EDX, EAX
	JMP loc_1004F982
loc_1004F991:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
loc_1004F995:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_1004F9A7
loc_1004F99C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1004F99C
loc_1004F9A7:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004F9B0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x14],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x100]
	MOV DWORD PTR [EAX],EBX
	ADD EAX, 0x0C
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x100]
	MOV DWORD PTR [EAX-0x04],EBX
	MOV EBX,DWORD PTR [ESP+arg4+0x14]
	JZ loc_1004F9F9
	MOV EDX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004F9F9:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_1004FA50
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JNZ loc_1004FA50
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [ECX+0x0C]
loc_1004FA12:
	MOV DL,BYTE PTR [EAX]
	CMP DL,BYTE PTR [EDI]
	JNZ loc_1004FA32
	OR DL, DL
	JZ loc_1004FA2E
	MOV DL,BYTE PTR [EAX+0x01]
	CMP DL,BYTE PTR [EDI+0x01]
	JNZ loc_1004FA32
	ADD EAX, 0x02
	ADD EDI, 0x02
	OR DL, DL
	JNZ loc_1004FA12
loc_1004FA2E:
	XOR EAX, EAX
	JMP loc_1004FA37
loc_1004FA32:
	SBB EAX, EAX
	SBB EAX, -0x01
loc_1004FA37:
	TEST EAX, EAX
	JG loc_1004FA50
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1004FA72
	MOV DWORD PTR [EAX],EDX
	JMP loc_1004FA72
loc_1004FA50:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_1004FA65
	CMP DWORD PTR [EAX],ECX
	JNZ loc_1004FA72
	MOV DWORD PTR [EAX],EDX
	JMP loc_1004FA72
loc_1004FA65:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_1004FA72:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1004FC36
loc_1004FA82:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBP,DWORD PTR [EAX+0x14]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],0x00
	JNZ FAR loc_1004FC36
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX]
	CMP EBX, EAX
	JNZ FAR loc_1004FB5E
	MOV EBX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_1004FC0B
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_1004FAEE
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1004FACE
	MOV DWORD PTR [EAX+0x04],ECX
loc_1004FACE:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1004FAE8
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1004FAE8
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1004FAEA
loc_1004FAE8:
	MOV DWORD PTR [EAX],EDX
loc_1004FAEA:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_1004FAEE:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1004FB20
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004FB20:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004FB54
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004FB47
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1004FC2A
loc_1004FB47:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1004FC2A
loc_1004FB54:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	JMP FAR loc_1004FC06
loc_1004FB5E:
	CMP DWORD PTR [EBX+0x14],0x00
	JZ FAR loc_1004FC0B
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1004FBA6
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1004FB83
	MOV DWORD PTR [EAX+0x04],ECX
loc_1004FB83:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1004FB9F
	MOV EAX,DWORD PTR [EDI]
	LEA EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBX],ECX
	JNZ loc_1004FB9F
	MOV DWORD PTR [EBX],EDX
	JMP loc_1004FBA1
loc_1004FB9F:
	MOV DWORD PTR [EAX],EDX
loc_1004FBA1:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1004FBA6:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x14],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x14],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x100],EAX
	JZ loc_1004FBD8
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004FBD8:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004FC02
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004FBF9
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004FC2A
loc_1004FBF9:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004FC2A
loc_1004FC02:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
loc_1004FC06:
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004FC2A
loc_1004FC0B:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],0x00000001
	MOV DWORD PTR [EBX+0x14],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x14],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1004FC2A:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_1004FA82
loc_1004FC36:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x14],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD LEGO1_sub_1004FCE0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4EDF3_proc_1004FDF3]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m1BA40___0LegoWorld__QAE_XZ])
	LEA EAX,DWORD PTR [ESI+0x000000F8]
	PUSH offset [LEGO1_text.m79470_proc_1007A470]
	PUSH offset [LEGO1_text.m792B0_sub_1007A2B0]
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	PUSH 0x0A
	PUSH 0x00000194
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B250_sub_1008C250])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	LEA EAX,DWORD PTR [ESI+0x000010E4]
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m42E0_ptr]
	MOV DWORD PTR [ESI+0x000010E0],EAX
	MOV DWORD PTR [ESI+0x000010C4],EBX
	MOV DWORD PTR [ESI+0x000010CC],EBX
	MOV DWORD PTR [ESI+0x000010D8],EBX
	MOV DWORD PTR [ESI+0x00001128],EBX
	MOV BYTE PTR [ESI+0x000010C2],BL
	MOV DWORD PTR [ESI+0x00001130],EBX
	MOV BYTE PTR [ESI+0x000010C0],BL
	MOV BYTE PTR [ESI+0x000010C1],BL
	MOV DWORD PTR [ESI+0x00001138],EBX
	MOV DWORD PTR [ESI+0x00001140],EBX
	MOV DWORD PTR [ESI+0x00001144],EBX
	MOV DWORD PTR [ESI+0x00001150],EBX
	MOV DWORD PTR [ESI+0x000010C8],EBX
	MOV DWORD PTR [ESI+0x000010DC],offset [LEGO1_rdata.m350_ptr]
	MOV DWORD PTR [ESI+0x000010DC],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESI+0x000010D4],offset LEGO1_data + 0x1D4
	MOV BYTE PTR [ESI+0x0000113C],0x05
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABD20_sub_100ACD20])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1004FDD8()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m79470_proc_1007A470]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x0A
	ADD EAX, 0x000000F8
	PUSH 0x00000194
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004FE40()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4EF00_proc_1004FF00]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m42E0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	CMP BYTE PTR [ECX+0x000010C2],0x00
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_1004FE84
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
loc_1004FE84:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m50900_sub_10051900])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	TEST EAX, EAX
	JZ loc_1004FEB3
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m1FF10_sub_10020F10])
loc_1004FEB3:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m4EEE5_sub_1004FEE5])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4EF0A_sub_1004FF0A])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004FEE5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	PUSH offset [LEGO1_text.m79470_proc_1007A470]
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x0A
	ADD EAX, 0x000000F8
	PUSH 0x00000194
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m8B2E0_sub_1008C2E0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004FF0A()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1CFA0___1LegoWorld__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100506F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x000010CC]
	PUSH EDI
	MOV ESI, ECX
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ_LONG(offset [LEGO1_text.m4FA10_loc_10050A10])
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	MOV EAX,DWORD PTR [EAX+0x0C]
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m4FA10_loc_10050A10])
	MOV ECX,DWORD PTR [EAX+0x1C]
	MOV EAX,DWORD PTR [ESI+0x000010C4]
	CMP EAX, 0x05
	JNZ loc_1005073C
	CMP DWORD PTR [ESI+0x00001144],ECX
	JNZ loc_1005073C
	XOR EAX, EAX
	POP EDI
	MOV DWORD PTR [ESI+0x00001144],0x00000000
	POP ESI
	POP EBX
	RETN 0x0004
loc_1005073C:
	CMP DWORD PTR [ESI+0x00001140],ECX
	JZ loc_1005074C
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_1005074C:
	MOV DWORD PTR [ESI+0x00001140],0x00000000
	SUB EAX, 0x02
	CMP EAX, 0x0C
	JA_LONG(offset [LEGO1_text.m4FA10_loc_10050A10])
	XOR ECX, ECX
	MOV CL,BYTE PTR [offset LEGO1_text.m4FA34_proc_10050A34+EAX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m4FA18_proc_10050A18+ECX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_10050A50()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00001150]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_10050A74
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3A060_sub_1003B060])
	MOV DWORD PTR [ESI+0x00001150],0x00000000
loc_10050A74:
	MOV EAX, 0x00000001
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10050F09()
{
	enum{
		arg1217215 = 0x4A4AFC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217215-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50410_loc_10051410])
}
}

__declspec(naked) DWORD LEGO1_sub_10050F11()
{
	enum{
		arg1217178 = 0x4A4A68,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217178-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10051026()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10051038()
{
	enum{
		arg1217178 = 0x4A4A68,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217178-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100510B1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10051259()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_100513F9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD LEGO1_sub_10051451()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m50050_loc_10051050])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10051460(DWORD arg1)
{
	enum{
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x00000090
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x000010C4]
	PUSH EDI
	MOV EBX, ECX
	CMP EAX, 0x05
	MOV ECX,DWORD PTR [ESP+arg1+0x9C]
	JNZ loc_100514F4
	CMP WORD PTR DS:[ECX+0x0C],0x32
	JNZ loc_100514F4
	MOV EAX,DWORD PTR [EBX+0x000010D8]
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x00000104]
	MOV DWORD PTR [ECX+0x000000DC],0x00000004
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m50900_sub_10051900])
	CMP DWORD PTR [EBX+0x000010D0],0x00015F90
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x01
	JGE loc_100514C5
	PUSH 0x0000020F
	JMP loc_100514CA
loc_100514C5:
	PUSH 0x00000210
loc_100514CA:
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m51560_sub_10052560])
	MOV DWORD PTR [EBX+0x0000112C],0x00000032
	MOV DWORD PTR [EBX+0x000010C4],0x00000006
	MOV DWORD PTR [EBX+0x000010D0],0x00000000
	JMP FAR loc_1005169B
loc_100514F4:
	CMP EAX, 0x05
	JNZ loc_1005153B
	CMP WORD PTR DS:[ECX+0x0C],0x2A
	JNZ loc_10051532
	CMP DWORD PTR [EBX+0x00001144],0x00
	JNZ FAR loc_1005169B
	PUSH 0x00
	MOV ECX, EBX
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00000249
	CALL_LONG(offset [LEGO1_text.m51560_sub_10052560])
	MOV DWORD PTR [EBX+0x00001144],0x00000249
	JMP FAR loc_1005169B
loc_10051532:
	CMP EAX, 0x05
	JZ FAR loc_1005168F
loc_1005153B:
	CMP EAX, 0x07
	JZ FAR loc_10051681
	CMP EAX, 0x0A
	JNZ FAR loc_1005169B
	CMP WORD PTR DS:[ECX+0x0C],0x0165
	JNZ FAR loc_1005169B
	MOV EAX,DWORD PTR [EBX+0x000010D8]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	MOV ECX,DWORD PTR [EAX+0x00000104]
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00000118
	MOV DWORD PTR [ECX+0x000000DC],0x00000004
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m51560_sub_10052560])
	TEST EAX, EAX
	JNZ loc_10051593
	MOV DWORD PTR [EBX+0x00001140],0x00000118
loc_10051593:
	MOV ECX,DWORD PTR [EBX+0x00001138]
	CALL_LONG(offset [LEGO1_text.m18560_sub_10019560])
	MOV DWORD PTR [EBX+0x000010C4],0x0000000B
	MOV DWORD PTR [EBX+0x000010D0],0x00000000
	MOV AL,BYTE PTR [EBX+0x000010C0]
	CMP AL, 0x06
	JNB loc_100515DE
	XOR ECX, ECX
	MOV CL, AL
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ECX,DWORD PTR [EBX+EAX+0x000000F8]
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	INC BYTE PTR [EBX+0x000010C0]
loc_100515DE:
	LEA EAX,DWORD PTR [ESP+var_8C+0xA0]
	MOV EDX, offset [LEGO1_rdata.m300_ptr]
	MOV ECX,DWORD PTR [EBX+0x00001128]
	MOV EDI, EAX
	MOV DWORD PTR [ESP+var_90+0xA0],EAX
	MOV DWORD PTR [ESP+var_94+0xA0],EDX
	MOV ESI,DWORD PTR [ECX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	LEA EAX,DWORD PTR [ESP+var_44+0xA0]
	MOV ESI,DWORD PTR [ESP+var_90+0xA0]
	MOV EDI, EAX
	MOV ECX, 0x00000010
	MOV DWORD PTR [ESP+var_48+0xA0],EAX
	MOV DWORD PTR [ESP+var_4C+0xA0],EDX
	REP MOVSD
	MOV ECX,DWORD PTR [EBX+0x00001138]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [ECX+EAX+0x0000008C]
	MOV EAX,DWORD PTR [ESP+var_90+0xA0]
	ADD EAX, 0x30
	FLD DWORD PTR [EAX+0x04]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4208]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_48+0xA0]
	PUSH ECX
	FSTP DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_40+0xA0]
	LEA EDX,DWORD PTR [ESP+var_8C+0xA0]
	ADD EAX, 0x30
	PUSH EDX
	XOR ECX, ECX
	FLD DWORD PTR [EAX+0x04]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x4220]
	FSTP DWORD PTR [EAX+0x04]
	MOV CL,BYTE PTR [EBX+0x000010C0]
	MOV EAX, ECX
	LEA EDX,DWORD PTR [ECX*4+ECX]
	LEA ECX,DWORD PTR [EDX*8+EDX]
	LEA ECX,DWORD PTR [ECX*8+ECX]
	SUB ECX, EAX
	LEA ECX,DWORD PTR [EBX+ECX+0xFFFFFF64]
	CALL_LONG(offset [LEGO1_text.m79670_sub_1007A670])
	JMP loc_1005169B
loc_10051681:
	MOVSX EAX,WORD PTR [ECX+0x0C]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m50FA0_sub_10051FA0])
	JMP loc_1005169B
loc_1005168F:
	MOVSX EAX,WORD PTR [ECX+0x0C]
	PUSH EAX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m511F0_sub_100521F0])
loc_1005169B:
	XOR EAX, EAX
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000090
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100516B0()
{
	enum{
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
	};

__asm{
	SUB ESP, 0x00000090
	PUSH EBX
	PUSH ESI
	MOV AL,BYTE PTR [ECX+0x000010C0]
	PUSH EDI
	PUSH EBP
	MOV EBX, ECX
	CMP AL, 0x04
	JBE loc_100516D6
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000090
	RET
loc_100516D6:
	XOR ECX, ECX
	MOV CL, AL
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA EBP,DWORD PTR [EBX+EAX+0x000000F8]
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	LEA ECX,DWORD PTR [ESP+var_88+0xA0]
	MOV EDX, offset [LEGO1_rdata.m300_ptr]
	MOV EAX,DWORD PTR [EBX+0x00001128]
	MOV EDI, ECX
	MOV DWORD PTR [ESP+var_8C+0xA0],ECX
	MOV DWORD PTR [ESP+var_90+0xA0],EDX
	MOV ESI,DWORD PTR [EAX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	LEA ECX,DWORD PTR [ESP+var_40+0xA0]
	MOV ESI,DWORD PTR [ESP+var_8C+0xA0]
	MOV EDI, ECX
	MOV DWORD PTR [ESP+var_44+0xA0],ECX
	MOV ECX, 0x00000010
	MOV DWORD PTR [ESP+var_48+0xA0],EDX
	REP MOVSD
	MOV ECX,DWORD PTR [EBX+0x00001138]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_8C+0xA0]
	ADD EAX, 0x30
	MOV ECX,DWORD PTR [ECX+EDX+0x0000008C]
	FLD DWORD PTR [EAX+0x04]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4228]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_48+0xA4]
	PUSH ECX
	FSTP DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_44+0xA8]
	LEA EDX,DWORD PTR [ESP+var_90+0xA8]
	ADD EAX, 0x30
	PUSH EDX
	MOV ECX, EBP
	FLD DWORD PTR [EAX+0x04]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x4220]
	FSTP DWORD PTR [EAX+0x04]
	CALL_LONG(offset [LEGO1_text.m79670_sub_1007A670])
	XOR EAX, EAX
	POP EBP
	POP EDI
	INC BYTE PTR [EBX+0x000010C0]
	MOV DWORD PTR [EBX+0x000010C4],0x00000009
	MOV DWORD PTR [EBX+0x000010D0],0x00000000
	POP ESI
	POP EBX
	ADD ESP, 0x00000090
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100517B0()
{
	enum{
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1217245 = 0x4A4B74,
	};

__asm{
	SUB ESP, 0x48
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	XOR ECX, ECX
	MOV CL,BYTE PTR [EBX+0x000010C0]
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA EBP,DWORD PTR [EBX+EAX+0x000000F8]
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	LEA ECX,DWORD PTR [ESP+var_40+0x58]
	MOV EAX,DWORD PTR [EBX+0x00001128]
	MOV EDI, ECX
	MOV DWORD PTR [ESP+var_44+0x58],ECX
	MOV DWORD PTR [ESP+var_48+0x58],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [EAX+0x14]
	MOV ECX, 0x00000010
	REP MOVSD
	MOV EAX,DWORD PTR [ESP+var_44+0x58]
	LEA ECX,DWORD PTR [ESP+var_48+0x58]
	ADD EAX, 0x30
	PUSH ECX
	FLD DWORD PTR [EAX+0x04]
	FADD QWORD PTR [offset LEGO1_rdata + 0x4208]
	FSTP DWORD PTR [EAX+0x04]
	MOV ESI,DWORD PTR [EBP+arg1217245-0x4A4B20]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x14])
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
	POP EBP
	INC BYTE PTR [EBX+0x000010C0]
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x48
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10051840(DWORD arg1)
{
	enum{
		var_AC = -0xAC,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m508E7_proc_100518E7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0000009C
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x456C]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_8C+0x4]
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m508DF_sub_100518DF])
	MOV ESI,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x04
	PUSH 0x05
	LEA EAX,DWORD PTR [EBP+var_AC+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_90+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E2F0_sub_1007F2F0])
	MOV EAX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x000010C8],ESI
	CALL_LONG(offset [LEGO1_text.m508F1_sub_100518F1])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100518DF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100518F1()
{
	enum{
		arg1217182 = 0x4A4A78,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217182-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10051900()
{
__asm{
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	TEST EAX, EAX
	JZ loc_10051959
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5DF10_sub_1005EF10])
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E0B0_sub_1005F0B0])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5F540_sub_10060540])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5F4D0_sub_100604D0])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E700_sub_1005F700])
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
loc_10051959:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051960()
{
__asm{
	PUSH ESI
	PUSH offset LEGO1_data + 0x32BC
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14840_sub_10015840])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_10051978
	MOV BYTE PTR [EAX+0x0C],0x00
loc_10051978:
	PUSH offset LEGO1_data + 0x32B4
	CALL_LONG(offset [LEGO1_text.m14840_sub_10015840])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_1005198D
	MOV BYTE PTR [EAX+0x0C],0x00
loc_1005198D:
	PUSH offset [LEGO1_data.m44DC_str]
	CALL_LONG(offset [LEGO1_text.m14840_sub_10015840])
	ADD ESP, 0x04
	TEST EAX, EAX
	JZ loc_100519A2
	MOV BYTE PTR [EAX+0x0C],0x00
loc_100519A2:
	MOV EAX,DWORD PTR [ESI+0x000010D8]
	POP ESI
	MOV ECX,DWORD PTR [EAX+0x00000104]
	MOV DWORD PTR [ECX+0x000000DC],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051A60()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, 0x0000000A
	LEA EDI,DWORD PTR [ECX+0x0000014C]
	XOR EBX, EBX
loc_10051A70:
	MOV EAX,DWORD PTR [EDI]
	TEST EAX, EAX
	JZ loc_10051A83
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_10051A83
	LEA ECX,DWORD PTR [EDI-0x54]
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
loc_10051A83:
	ADD EDI, 0x00000194
	DEC ESI
	JNZ loc_10051A70
	POP EDI
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051A90()
{
__asm{
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x0000014C]
	MOV ESI, 0x0000000A
loc_10051A9D:
	CMP DWORD PTR [EDI],0x00
	JZ loc_10051AAA
	LEA ECX,DWORD PTR [EDI-0x54]
	CALL_LONG(offset [LEGO1_text.m799D0_sub_1007A9D0])
loc_10051AAA:
	ADD EDI, 0x00000194
	DEC ESI
	JNZ loc_10051A9D
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051AC0()
{
	enum{
		var_C8 = -0xC8,
		var_C4 = -0xC4,
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B8 = -0xB8,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1217224 = 0x4A4B20,
		arg1217227 = 0x4A4B2C,
		arg1217229 = 0x4A4B34,
		arg1217234 = 0x4A4B48,
	};

__asm{
	SUB ESP, 0x000000C4
	MOV EAX, 0x3F000000
	MOV DWORD PTR [ESP+var_74+0xC4],EAX
	PUSH EBX
	PUSH ESI
	MOV EBX, ECX
	MOV DWORD PTR [ESP+var_78+0xCC],0x429E2000
	MOV DWORD PTR [ESP+var_70+0xCC],0xC19E0000
	MOV DWORD PTR [ESP+var_6C+0xCC],0x4287412B
	MOV DWORD PTR [ESP+var_68+0xCC],0x3F6ACD6C
	MOV DWORD PTR [ESP+var_64+0xCC],0x4137F929
	PUSH EDI
	PUSH EBP
	MOV DWORD PTR [ESP+var_60+0xD4],0xC257BB30
	MOV DWORD PTR [ESP+var_5C+0xD4],0x4017D317
	MOV DWORD PTR [ESP+var_58+0xD4],0xC274D446
	MOV DWORD PTR [ESP+var_54+0xD4],0xC1F7E282
	MOV DWORD PTR [ESP+var_50+0xD4],0x3E9BEB5B
	MOV DWORD PTR [ESP+var_4C+0xD4],0xC23DC04F
	MOV DWORD PTR [ESP+var_48+0xD4],0xC28E7ABA
	MOV DWORD PTR [ESP+var_44+0xD4],0x40EA3B75
	MOV DWORD PTR [ESP+var_40+0xD4],0xC1B80000
	MOV DWORD PTR [ESP+var_3C+0xD4],0xC26E0A72
	MOV DWORD PTR [ESP+var_38+0xD4],0x4165F8FF
	MOV DWORD PTR [ESP+var_34+0xD4],0x41C59FF8
	MOV DWORD PTR [ESP+var_30+0xD4],0x42942000
	MOV DWORD PTR [ESP+var_2C+0xD4],0x3FC00000
	MOV DWORD PTR [ESP+var_28+0xD4],0xC2B64000
	MOV DWORD PTR [ESP+var_24+0xD4],0xC1A38000
	MOV DWORD PTR [ESP+var_1C+0xD4],0xC2A52000
	MOV DWORD PTR [ESP+var_18+0xD4],0x42A0EC69
	MOV DWORD PTR [ESP+var_14+0xD4],0x3F19999A
	MOV DWORD PTR [ESP+var_10+0xD4],0xC26E0575
	MOV DWORD PTR [ESP+var_C+0xD4],0x42A80000
	MOV DWORD PTR [ESP+var_8+0xD4],0x40900000
	MOV DWORD PTR [ESP+var_4+0xD4],0x41D00000
	MOV DWORD PTR [ESP+var_20+0xD4],EAX
	CALL_LONG(offset [LEGO1_text.m50A60_sub_10051A60])
	XOR ECX, ECX
	MOV CL,BYTE PTR [EBX+0x000010C0]
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA EDX,DWORD PTR [EBX+EAX+0x000000F8]
	MOV DWORD PTR [ESP+var_C4+0xD8],EDX
	MOV ECX,DWORD PTR [ESP+var_C4+0xD8]
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	MOV ECX,DWORD PTR [ESP+var_C4+0xD4]
	LEA EAX,DWORD PTR [ESP+var_B8+0xD4]
	MOV EDI, EAX
	MOV EBP,DWORD PTR [ECX+0x54]
	MOV ECX, 0x00000010
	MOV DWORD PTR [ESP+var_BC+0xD4],EAX
	MOV DWORD PTR [ESP+var_C0+0xD4],offset [LEGO1_rdata.m300_ptr]
	MOV ESI,DWORD PTR [EBP+arg1217229-0x4A4B20]
	REP MOVSD
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051C6C
	MOV BYTE PTR [EBX+0x0000114C],0x00
	LEA EDX,DWORD PTR [ESP+var_78+0xD4]
	JMP loc_10051C77
loc_10051C6C:
	MOV BYTE PTR [EBX+0x0000114C],0x01
	LEA EDX,DWORD PTR [ESP+var_6C+0xD4]
loc_10051C77:
	MOV EAX,DWORD PTR [ESP+var_BC+0xD4]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x30],ECX
	MOV EAX,DWORD PTR [ESP+var_BC+0xD4]
	MOV ESI,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x34],ESI
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV ECX,DWORD PTR [ESP+var_BC+0xD4]
	LEA EDX,DWORD PTR [ESP+var_C0+0xD4]
	PUSH EDX
	MOV DWORD PTR [ECX+0x38],EAX
	MOV ECX, EBP
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV BYTE PTR [EBP+arg1217227-0x4A4B20],0x01
	MOV ESI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESI+0x14])
	MOV ECX,DWORD PTR [ESP+var_C8+0xD8]
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
	MOV AL,BYTE PTR [EBX+0x000010C0]
	XOR ECX, ECX
	INC AL
	MOV CL, AL
	MOV BYTE PTR [EBX+0x000010C0],AL
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ESI,DWORD PTR [EBX+EAX+0x000000F8]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	MOV EDI,DWORD PTR [ESI+0x54]
	LEA ECX,DWORD PTR [ESP+var_C4+0xD8]
	MOV EBP,DWORD PTR [ESP+var_C4+0xD8]
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217234-0x4A4B20])
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051D17
	MOV BYTE PTR [EBX+0x0000114D],0x02
	LEA ECX,DWORD PTR [ESP+var_64+0xD8]
	JMP loc_10051D25
loc_10051D17:
	MOV BYTE PTR [EBX+0x0000114D],0x03
	LEA ECX,DWORD PTR [ESP+var_58+0xD8]
loc_10051D25:
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EAX+0x30],EDX
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV EBP,DWORD PTR [ECX+0x04]
	LEA EDX,DWORD PTR [ESP+var_C4+0xD8]
	PUSH EDX
	MOV DWORD PTR [EAX+0x34],EBP
	MOV EAX,DWORD PTR [ESP+var_BC+0xD8]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EAX+0x38],ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV BYTE PTR [EDI+0x0C],0x01
	MOV EBP,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217229-0x4A4B20])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
	MOV AL,BYTE PTR [EBX+0x000010C0]
	XOR ECX, ECX
	INC AL
	MOV CL, AL
	MOV BYTE PTR [EBX+0x000010C0],AL
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ESI,DWORD PTR [EBX+EAX+0x000000F8]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	MOV EDI,DWORD PTR [ESI+0x54]
	LEA ECX,DWORD PTR [ESP+var_C4+0xD8]
	MOV EBP,DWORD PTR [ESP+var_C4+0xD8]
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217234-0x4A4B20])
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051DC5
	MOV BYTE PTR [EBX+0x0000114E],0x04
	LEA ECX,DWORD PTR [ESP+var_4C+0xD8]
	JMP loc_10051DD3
loc_10051DC5:
	MOV BYTE PTR [EBX+0x0000114E],0x05
	LEA ECX,DWORD PTR [ESP+var_40+0xD8]
loc_10051DD3:
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV EDX,DWORD PTR [ECX]
	MOV DWORD PTR [EAX+0x30],EDX
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV EBP,DWORD PTR [ECX+0x04]
	LEA EDX,DWORD PTR [ESP+var_C4+0xD8]
	PUSH EDX
	MOV DWORD PTR [EAX+0x34],EBP
	MOV EAX,DWORD PTR [ESP+var_BC+0xD8]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EAX+0x38],ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV BYTE PTR [EDI+0x0C],0x01
	MOV EBP,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217229-0x4A4B20])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
	MOV AL,BYTE PTR [EBX+0x000010C0]
	XOR ECX, ECX
	INC AL
	MOV CL, AL
	MOV BYTE PTR [EBX+0x000010C0],AL
	PUSH ECX
	LEA EAX,DWORD PTR [ECX*4+ECX]
	LEA EDX,DWORD PTR [EAX*8+EAX]
	LEA EAX,DWORD PTR [EDX*8+EDX]
	SUB EAX, ECX
	LEA ESI,DWORD PTR [EBX+EAX+0x000000F8]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m794E0_sub_1007A4E0])
	MOV EDI,DWORD PTR [ESI+0x54]
	LEA ECX,DWORD PTR [ESP+var_C4+0xD8]
	MOV EBP,DWORD PTR [ESP+var_C4+0xD8]
	LEA EAX,DWORD PTR [EDI+0x10]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217234-0x4A4B20])
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051E9A
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051E8A
	MOV BYTE PTR [EBX+0x0000114F],0x06
	LEA EDX,DWORD PTR [ESP+var_34+0xD8]
	JMP loc_10051ECF
loc_10051E8A:
	MOV BYTE PTR [EBX+0x0000114F],0x07
	LEA EDX,DWORD PTR [ESP+var_28+0xD8]
	JMP loc_10051ECF
loc_10051E9A:
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x01
	XOR EAX, EDX
	SUB EAX, EDX
	CMP AX, 0x0001
	JNZ loc_10051EC1
	MOV BYTE PTR [EBX+0x0000114F],0x08
	LEA EDX,DWORD PTR [ESP+var_1C+0xD8]
	JMP loc_10051ECF
loc_10051EC1:
	MOV BYTE PTR [EBX+0x0000114F],0x09
	LEA EDX,DWORD PTR [ESP+var_10+0xD8]
loc_10051ECF:
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [EAX+0x30],ECX
	MOV EAX,DWORD PTR [ESP+var_C0+0xD8]
	MOV EBP,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x34],EBP
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV ECX,DWORD PTR [ESP+var_C0+0xD8]
	LEA EDX,DWORD PTR [ESP+var_C4+0xD8]
	PUSH EDX
	MOV DWORD PTR [ECX+0x38],EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.mA48F0_sub_100A58F0])
	MOV BYTE PTR [EDI+0x0C],0x01
	MOV EBP,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBP+arg1217229-0x4A4B20])
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m79990_sub_1007A990])
	POP EBP
	INC BYTE PTR [EBX+0x000010C0]
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x000000C4
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051F20()
{
__asm{
	PUSH EBX
	PUSH ESI
	LEA EBX,DWORD PTR [ECX+0x000000F8]
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, 0x0000000A
loc_10051F30:
	MOV ECX, EBX
	ADD EBX, 0x00000194
	CALL_LONG(offset [LEGO1_text.m79620_sub_1007A620])
	DEC EDI
	JNZ loc_10051F30
	MOV ECX,DWORD PTR [ESI+0x00001138]
	MOV EAX, 0x00000000
	TEST ECX, ECX
	JZ loc_10051F59
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [ECX+EDX+0x04]
loc_10051F59:
	MOV DWORD PTR [EAX+0x000000DC],0x00000004
	MOV EAX,DWORD PTR [ESI+0x000010CC]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x32
	MOV DWORD PTR [EAX+0x08],0x00000068
	MOV DWORD PTR [ESI+0x00001150],0x00000002
	PUSH 0x03
	CALL_LONG(offset [LEGO1_text.m14900__TransitionManager__YAPAVMxTransitionManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m4AB70_sub_1004BB70])
	XOR EAX, EAX
	POP EDI
	MOV DWORD PTR [ESI+0x000010C4],0x0000000E
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10051FA0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00002AAA
	IDIV ECX
	INC AL
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	SUB ECX, 0x02
	CMP ECX, 0x28
	JA_LONG(offset [LEGO1_text.m51185_loc_10052185])
	XOR EDX, EDX
	MOV DL,BYTE PTR [offset LEGO1_text.m511BC_proc_100521BC+ECX]
	JMP_LONG(DWORD PTR [offset LEGO1_text.m5118C_proc_1005218C+EDX*4])
}
}

__declspec(naked) DWORD LEGO1_sub_100521F0()
{
	enum{
		var_5C = -0x5C,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_30 = -0x30,
		var_28 = -0x28,
		var_20 = -0x20,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x54
	LEA EAX,DWORD PTR [ESP+var_20+0x54]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	XOR EDI, EDI
	PUSH EAX
	LEA ECX,DWORD PTR [ESP+var_28+0x68]
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [ESP+var_28+0x64],offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [ESP+arg1+0x64]
	CMP EAX, 0x2A
	JG loc_10052226
	JZ loc_10052297
	CMP EAX, 0x02
	JZ loc_1005223B
	JMP_LONG(offset [LEGO1_text.m51436_loc_10052436])
loc_10052226:
	SUB EAX, 0x00000133
	CMP EAX, 0x05
	JA_LONG(offset [LEGO1_text.m51436_loc_10052436])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m51548_proc_10052548+EAX*4])
loc_1005223B:
	LEA EAX,DWORD PTR [ESP+var_4C+0x64]
	LEA ECX,DWORD PTR [ESP+var_54+0x64]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESP+var_54+0x64]
	LEA ECX,DWORD PTR [ESP+var_28+0x64]
	MOV DWORD PTR [ESP+var_54+0x64],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_4C+0x64],0xC111999A
	MOV DWORD PTR [ESP+var_48+0x64],0x00000000
	MOV DWORD PTR [ESP+var_44+0x64],0xC1840000
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	PUSH offset LEGO1_data + 0x43EC
	MOV EDI, 0x00000243
	PUSH offset [LEGO1_data.m4488_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	JMP_LONG(offset [LEGO1_text.m51436_loc_10052436])
loc_10052297:
	LEA EAX,DWORD PTR [ESP+var_54+0x6C]
	LEA ECX,DWORD PTR [ESP+var_5C+0x6C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	LEA EAX,DWORD PTR [ESP+var_5C+0x6C]
	LEA ECX,DWORD PTR [ESP+var_30+0x6C]
	MOV DWORD PTR [ESP+var_5C+0x6C],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_54+0x6C],0xC11AB852
	MOV DWORD PTR [ESP+var_50+0x6C],0x00000000
	MOV DWORD PTR [ESP+var_4C+0x6C],0xC2313333
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	PUSH offset LEGO1_data + 0x43E4
	MOV EDI, 0x00000245
	PUSH offset [LEGO1_data.m4488_str]
	CALL_LONG(offset [LEGO1_text.mABF20__VariableTable__YAPAVMxVariableTable__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB63A0__SetVariable_MxVariableTable__QAEXPBD0_Z])
	JMP_LONG(offset [LEGO1_text.m51436_loc_10052436])
}
}

__declspec(naked) DWORD LEGO1_sub_10052560(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_100 = -0x100,
		var_E4 = -0xE4,
		var_E0 = -0xE0,
		var_C0 = -0xC0,
		var_AC = -0xAC,
		var_98 = -0x98,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5167E_proc_1005267E]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x000000F0
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x00001140],0x00
	JZ loc_10052596
	CMP BYTE PTR [EBP+arg3+0x4],0x00
	JZ_LONG(offset [LEGO1_text.m517E5_loc_100527E5])
loc_10052596:
	CMP BYTE PTR [EBP+arg2+0x4],0x00
	JNZ_LONG(offset [LEGO1_text.m51693_loc_10052693])
	LEA ECX,DWORD PTR [EBP+var_100+0x4]
	CALL_LONG(offset [LEGO1_text.mAC810___0MxDSAction__QAE_XZ])
	MOV EDI,DWORD PTR [EBP+arg1+0x4]
	PUSH 0x0F
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_E4+0x4],EDI
	CALL_LONG(offset [LEGO1_text.m14700__Lego__YAPAVLegoOmni__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5A460_sub_1005B460])
	MOV EAX,DWORD PTR [EAX]
	LEA ECX,DWORD PTR [EBP+var_E0+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mAC1C0___4MxAtomId__QAEAAV0_ABV0__Z])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m51676_sub_10052676])
	MOV EDI,DWORD PTR [EBP+arg4+0x4]
	TEST EDI, EDI
	JZ loc_1005263C
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	LEA ECX,DWORD PTR [EBP+var_24+0x4]
	PUSH ECX
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV DWORD PTR [EBP+var_24+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [EBP+var_1C+0x4],0x00000000
	MOV DWORD PTR [EBP+var_18+0x4],0x3F800000
	MOV DWORD PTR [EBP+var_14+0x4],0x00000000
	LEA ECX,DWORD PTR [EBP+var_98+0x4]
	MOV EBX,DWORD PTR [EBP+var_98+0x4]
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV ESI,DWORD PTR [EBP+var_C0+0x4]
	PUSH EDI
	LEA ECX,DWORD PTR [EBP+var_C0+0x4]
	CALL_LONG(DWORD PTR [ESI+0x00000088])
loc_1005263C:
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	TEST ECX, ECX
	JZ loc_10052656
	PUSH ECX
	MOV EAX,DWORD PTR [EBP+var_AC+0x4]
	LEA ECX,DWORD PTR [EBP+var_AC+0x4]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
loc_10052656:
	LEA EAX,DWORD PTR [EBP+var_100+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m14890_sub_10015890])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	ADD ESP, 0x04
	CALL_LONG(offset [LEGO1_text.m51688_sub_10052688])
	JMP_LONG(offset [LEGO1_text.m517E5_loc_100527E5])
}
}

__declspec(naked) DWORD LEGO1_sub_10052676()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10052688()
{
	enum{
		arg1217161 = 0x4A4A24,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217161-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10052800()
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI, 0x00000000
	MOV ECX,DWORD PTR [ESI+0x00001138]
	TEST ECX, ECX
	JZ loc_1005281D
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [ECX+EDX+0x04]
loc_1005281D:
	PUSH 0x3F000000
	MOV ECX, ESI
	PUSH 0x00
	PUSH 0x3F000000
	PUSH 0x02
	PUSH offset [LEGO1_data.m4510_str]
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m1E720_sub_1001F720])
	PUSH offset [LEGO1_data.m4504_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH 0x00
	MOV ECX,DWORD PTR [ESI+0x00001138]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
	PUSH offset [LEGO1_data.m44F8_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH 0x40C00000
	MOV ECX,DWORD PTR [ESI+0x00001138]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
	PUSH offset [LEGO1_data.m44EC_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH 0x40400000
	MOV ECX,DWORD PTR [ESI+0x00001138]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
	PUSH offset [LEGO1_data.m44E4_str]
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m71C_str]
	CALL_LONG(offset [LEGO1_text.m203A0_sub_100213A0])
	PUSH 0xBF800000
	MOV ECX,DWORD PTR [ESI+0x00001138]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m6C680_sub_1006D680])
	PUSH 0x00
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x30])
	MOV ECX,DWORD PTR [ESI+0x00001138]
	CALL_LONG(offset [LEGO1_text.m17980_sub_10018980])
	XOR EAX, EAX
	POP EDI
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100528E0()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m520A7_proc_100530A7]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	PUSH ESI
	PUSH EDI
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1005292A
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4874_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_1005292A:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x451C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052963
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4858_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052963:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4520], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_1005299C
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m483C_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_1005299C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4524], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100529D5
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4820_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_100529D5:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4528], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000004
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052A0E
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4804_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052A0E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x452C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000005
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052A47
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m47E8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052A47:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4530], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000006
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052A80
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m47CC_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052A80:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4534], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000007
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052AB9
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m47B0_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052AB9:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4538], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000008
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052AF2
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4798_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052AF2:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x453C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000009
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052B2B
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4778_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052B2B:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4540], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000A
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052B64
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4758_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052B64:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4544], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000B
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052B9D
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4738_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052B9D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4548], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000C
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052BD6
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4718_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052BD6:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x454C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000D
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052C0F
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m46F8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052C0F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4550], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000E
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052C48
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m46D8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052C48:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4554], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000000F
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052C81
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m46B8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052C81:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4558], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000010
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052CBA
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m469C_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052CBA:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x455C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000011
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052CF3
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4680_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052CF3:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4560], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000012
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052D2C
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4664_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052D2C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4564], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000013
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052D65
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m464C_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052D65:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4568], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000014
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052D9E
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4630_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052D9E:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x456C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000015
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052DD7
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m4618_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052DD7:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4570], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000016
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052E10
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m4604_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052E10:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4574], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000017
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052E49
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m45EC_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052E49:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4578], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000018
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052E82
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m45D0_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052E82:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x457C], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000019
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052EBB
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m45B8_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052EBB:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4580], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000001A
	MOV ESI, EAX
	MOV EAX, 0x00000000
	TEST ESI, ESI
	JZ loc_10052EF4
	PUSH 0x03
	MOV ECX, ESI
	PUSH offset [LEGO1_data.m45A0_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052EF4:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x4584], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x0000001B
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_10052F2D
	PUSH 0x03
	MOV ECX, EDI
	PUSH offset [LEGO1_data.m458C_str]
	CALL_LONG(offset [LEGO1_text.mABF90___0MxAtomId__QAE_PBDW4LookupMode___Z])
loc_10052F2D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	POP EDI
	MOV DWORD PTR [offset LEGO1_data + 0x4588], EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F48()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F55()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F62()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F6F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F7C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F89()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052F96()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FA3()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FB0()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FBD()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FCA()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FD7()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FE4()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FF1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10052FFE()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005300B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053018()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053025()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053032()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005303F()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005304C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053059()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053066()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053073()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10053080()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005308D()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_1005309A()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100530C0()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x451C]
	TEST ESI, ESI
	JZ loc_100530DB
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100530DB:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4520]
	TEST ESI, ESI
	JZ loc_100530F5
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100530F5:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4524]
	TEST ESI, ESI
	JZ loc_1005310F
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005310F:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4528]
	TEST ESI, ESI
	JZ loc_10053129
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053129:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x452C]
	TEST ESI, ESI
	JZ loc_10053143
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053143:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4530]
	TEST ESI, ESI
	JZ loc_1005315D
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005315D:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4534]
	TEST ESI, ESI
	JZ loc_10053177
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053177:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4538]
	TEST ESI, ESI
	JZ loc_10053191
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053191:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x453C]
	TEST ESI, ESI
	JZ loc_100531AB
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100531AB:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4540]
	TEST ESI, ESI
	JZ loc_100531C5
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100531C5:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4544]
	TEST ESI, ESI
	JZ loc_100531DF
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100531DF:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4548]
	TEST ESI, ESI
	JZ loc_100531F9
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100531F9:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x454C]
	TEST ESI, ESI
	JZ loc_10053213
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053213:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4550]
	TEST ESI, ESI
	JZ loc_1005322D
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005322D:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4554]
	TEST ESI, ESI
	JZ loc_10053247
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053247:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4558]
	TEST ESI, ESI
	JZ loc_10053261
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053261:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x455C]
	TEST ESI, ESI
	JZ loc_1005327B
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005327B:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4560]
	TEST ESI, ESI
	JZ loc_10053295
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053295:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4564]
	TEST ESI, ESI
	JZ loc_100532AF
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100532AF:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4568]
	TEST ESI, ESI
	JZ loc_100532C9
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100532C9:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x456C]
	TEST ESI, ESI
	JZ loc_100532E3
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100532E3:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4570]
	TEST ESI, ESI
	JZ loc_100532FD
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_100532FD:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4574]
	TEST ESI, ESI
	JZ loc_10053317
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053317:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4578]
	TEST ESI, ESI
	JZ loc_10053331
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053331:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x457C]
	TEST ESI, ESI
	JZ loc_1005334B
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005334B:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4580]
	TEST ESI, ESI
	JZ loc_10053365
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053365:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4584]
	TEST ESI, ESI
	JZ loc_1005337F
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_1005337F:
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4588]
	TEST ESI, ESI
	JZ loc_10053399
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
loc_10053399:
	XOR EAX, EAX
	MOV DWORD PTR [offset LEGO1_data + 0x451C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4520], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4524], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4528], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x452C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4530], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4534], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4538], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x453C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4540], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4544], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4548], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x454C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4550], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4554], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4558], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x455C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4560], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4564], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4568], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x456C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4570], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4574], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4578], EAX
	POP ESI
	MOV DWORD PTR [offset LEGO1_data + 0x457C], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4580], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4584], EAX
	MOV DWORD PTR [offset LEGO1_data + 0x4588], EAX
	RET
}
}

__declspec(naked) DWORD LEGO1__GetNoCD_SourceName__YAPBDXZ()
{
__asm{
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4588]
	MOV EAX,DWORD PTR [EAX]
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10053440()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m52492_proc_10053492]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB50B0_sub_100B60B0])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4398_ptr]
	CALL_LONG(offset [LEGO1_text.m525C0_sub_100535C0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100535C0()
{
__asm{
	MOV DWORD PTR [ECX+0x4C],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_100535D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m5261B_proc_1005361B]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4398_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m52640_sub_10053640])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m52625_sub_10053625])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10053625()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB5390_loc_100B6390])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053640(DWORD arg1)
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST EAX, EAX
	JZ loc_10053659
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
loc_10053659:
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x68])
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053730(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV ECX,DWORD PTR [ECX+0x4C]
	TEST ECX, ECX
	JZ loc_1005374D
	MOV EAX,DWORD PTR [ESP+arg3]
	PUSH 0x01
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mF9B0_sub_100109B0])
loc_1005374D:
	RETN 0x000C
}
}

__declspec(naked) DWORD LEGO1_proc_10053750()
{
	enum{
		var_200 = -0x200,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x1C]
	SUB ESP, 0x00000204
	MOV EDX, ECX
	PUSH ESI
	MOV CX,WORD PTR DS:[EAX+0x00000080]
	PUSH EDI
	MOV WORD PTR SS:[ESP+var_200+0x20A],CX
	MOV EAX,DWORD PTR [EAX+0x7C]
	TEST CX, CX
	MOV DWORD PTR [ESP+var_200+0x20C],EAX
	JZ loc_100537A6
	MOV EAX,DWORD PTR [ESP+var_200+0x20A]
	LEA EDI,DWORD PTR [ESP+var_200+0x20C]
	AND EAX, 0x0000FFFF
	MOV ESI,DWORD PTR [ESP+var_200+0x20C]
	MOV ECX, EAX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EAX
	AND ECX, 0x03
	REP MOVSB
	MOV BYTE PTR [EAX+ESP+var_200+0x20C],0x00
	MOV ECX,DWORD PTR [EDX+0x4C]
	LEA EDX,DWORD PTR [ESP+var_200+0x20C]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x20])
loc_100537A6:
	POP EDI
	POP ESI
	ADD ESP, 0x00000204
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100538A0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m528EB_proc_100538EB]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4460_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH 0x01
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m52900_sub_10053900])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m528F5_sub_100538F5])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100538F5()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2C820_loc_1002D820])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053900(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ESP+arg1],0x00
	PUSH ESI
	MOV ESI, ECX
	JZ loc_1005392B
	MOV EAX,DWORD PTR [ESI+0x54]
	TEST EAX, EAX
	JZ loc_1005392B
	MOV EAX,DWORD PTR [EAX+0x000000E4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82C30_sub_10083C30])
	MOV DWORD PTR [ESI+0x54],0x00000000
loc_1005392B:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10053930()
{
__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x54]
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x000000E4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m82C30_sub_10083C30])
	MOV DWORD PTR [ESI+0x54],0x00000000
	MOV ECX,DWORD PTR [ESI+0x00000088]
	TEST ECX, ECX
	JZ loc_10053960
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m564A0_sub_100574A0])
loc_10053960:
	PUSH ESI
	MOV ECX,DWORD PTR [ESI+0x00000138]
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV WORD PTR DS:[ESI+0x00000154],0x0000
	XOR EAX, EAX
	POP ESI
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053980(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	SUB ESP, 0x24
	MOV EAX,DWORD PTR [ESP+arg3+0x24]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR EDI, EDI
	CMP DWORD PTR [ESP+arg2+0x30],EDI
	PUSH EAX
	JZ FAR loc_10053A59
	LEA ECX,DWORD PTR [ESP+var_C+0x34]
	PUSH offset [LEGO1_data.m41E8_str]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA ECX,DWORD PTR [ESP+var_C+0x3C]
	ADD ESP, 0x0C
	PUSH EDI
	PUSH offset [LEGO1_data.m3840_str]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	LEA ECX,DWORD PTR [ESP+var_28+0x3C]
	MOV DWORD PTR [ESI+0x54],EAX
	MOV BYTE PTR [EAX+0x0C],0x01
	MOV DWORD PTR [ESP+var_2C+0x3C],ECX
	MOV DWORD PTR [ESP+var_30+0x3C],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_20+0x3C],EDI
	MOV DWORD PTR [ESP+var_24+0x3C],EDI
	MOV DWORD PTR [ESP+var_28+0x3C],EDI
	MOV EAX,DWORD PTR [ESI+0x54]
	FLD DWORD PTR [EAX+0x000000FC]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4428]
	LEA EAX,DWORD PTR [ESP+var_30+0x3C]
	FSTP DWORD PTR [ESP+var_1C+0x3C]
	MOV EDI,DWORD PTR [ESI+0x54]
	PUSH EAX
	LEA EBX,DWORD PTR [EDI+0x000000A8]
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA EDX,DWORD PTR [ESP+var_28+0x3C]
	LEA ECX,DWORD PTR [EDI+0x000000B0]
loc_10053A17:
	MOV EAX,DWORD PTR [EDX]
	ADD EDX, 0x04
	MOV DWORD PTR [ECX],EAX
	ADD ECX, 0x04
	LEA EAX,DWORD PTR [ESP+var_1C+0x3C]
	CMP EDX, EAX
	JB loc_10053A17
	MOV EAX,DWORD PTR [ESP+var_1C+0x3C]
	PUSH EBX
	LEA ECX,DWORD PTR [EDI+0x000000E8]
	MOV DWORD PTR [EDI+0x000000BC],EAX
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV EAX,DWORD PTR [EDI+0x000000BC]
	MOV DWORD PTR [EDI+0x000000FC],EAX
	MOV WORD PTR DS:[ESI+0x00000154],0x0001
	JMP FAR loc_10053B16
loc_10053A59:
	LEA ECX,DWORD PTR [ESP+var_14+0x3C]
	PUSH offset [LEGO1_data.m41C8_str]
	PUSH ECX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m8A5A0_sub_1008B5A0])
	LEA ECX,DWORD PTR [ESP+var_14+0x44]
	ADD ESP, 0x0C
	PUSH EDI
	PUSH offset [LEGO1_data.m4890_str]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m147B0_sub_100157B0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m84210_sub_10085210])
	LEA ECX,DWORD PTR [ESP+var_30+0x44]
	MOV DWORD PTR [ESI+0x54],EAX
	MOV BYTE PTR [EAX+0x0C],0x01
	MOV DWORD PTR [ESP+var_34+0x44],ECX
	MOV DWORD PTR [ESP+var_38+0x44],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_28+0x44],EDI
	MOV DWORD PTR [ESP+var_2C+0x44],EDI
	MOV DWORD PTR [ESP+var_30+0x44],EDI
	MOV EAX,DWORD PTR [ESI+0x54]
	FLD DWORD PTR [EAX+0x000000FC]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4424]
	LEA EAX,DWORD PTR [ESP+var_38+0x44]
	FSTP DWORD PTR [ESP+var_24+0x44]
	MOV EDI,DWORD PTR [ESI+0x54]
	PUSH EAX
	LEA EBX,DWORD PTR [EDI+0x000000A8]
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mFBE0_sub_10010BE0])
	LEA ECX,DWORD PTR [ESP+var_30+0x44]
	LEA EDX,DWORD PTR [EDI+0x000000B0]
loc_10053AD9:
	MOV EAX,DWORD PTR [ECX]
	ADD ECX, 0x04
	MOV DWORD PTR [EDX],EAX
	ADD EDX, 0x04
	LEA EAX,DWORD PTR [ESP+var_24+0x44]
	CMP ECX, EAX
	JB loc_10053AD9
	MOV EAX,DWORD PTR [ESP+var_24+0x44]
	PUSH EBX
	LEA ECX,DWORD PTR [EDI+0x000000E8]
	MOV DWORD PTR [EDI+0x000000BC],EAX
	CALL_LONG(offset [LEGO1_text.mFC00_sub_10010C00])
	MOV EAX,DWORD PTR [EDI+0x000000BC]
	MOV DWORD PTR [EDI+0x000000FC],EAX
	MOV WORD PTR DS:[ESI+0x00000154],0x0002
loc_10053B16:
	OR BYTE PTR [ESI+0x00000154],0x04
	MOV EAX,DWORD PTR [ESP+var_10+0x44]
	POP EDI
	MOV DWORD PTR [ESI+0x0000015C],EAX
	XOR EAX, EAX
	POP ESI
	POP EBX
	ADD ESP, 0x24
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053B40(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217223 = 0x4A4B1C,
		arg1217224 = 0x4A4B20,
		arg1217245 = 0x4A4B74,
	};

__asm{
	SUB ESP, 0x40
	MOV EAX,DWORD PTR [ESP+arg2+0x40]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0x50]
	MOV ECX,DWORD PTR [EAX+0x04]
	LEA EAX,DWORD PTR [ESP+var_38+0x50]
	MOV EDX,DWORD PTR [EDI+0x04]
	FLD DWORD PTR [EDX+0x04]
	FDIV DWORD PTR [ECX+0x04]
	MOV EDX, EAX
	MOV DWORD PTR [ESP+var_40+0x50],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_3C+0x50],EAX
	FCHS
	FSTP DWORD PTR [ESP+var_2C+0x50]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [ESP+var_C+0x50]
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA EDX,DWORD PTR [ESP+var_2C+0x50]
	LEA ECX,DWORD PTR [ESP+var_40+0x50]
	PUSH EDX
	MOV EBX,DWORD PTR [ESP+var_40+0x54]
	MOV DWORD PTR [ESP+var_10+0x54],EAX
	MOV DWORD PTR [ESP+var_14+0x54],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV EBX,DWORD PTR [ESP+var_44+0x54]
	LEA ECX,DWORD PTR [ESP+var_44+0x54]
	PUSH EDI
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV EAX,DWORD PTR [ESP+var_14+0x54]
	XOR EBX, EBX
	LEA EBP,DWORD PTR [ESI+0x00000174]
	MOV ECX,DWORD PTR [ESP+arg2+0x54]
	PUSH ECX
	MOV DWORD PTR [EAX+0x08],EBX
	MOV ECX, EBP
	MOV DWORD PTR [EAX],EBX
	MOV EAX,DWORD PTR [ESP+var_10+0x54]
	MOV DWORD PTR [EAX+0x04],0xBF800000
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	LEA ECX,DWORD PTR [ESI+0x00000188]
	PUSH EDI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	LEA ECX,DWORD PTR [ESP+var_24+0x54]
	MOV EAX,DWORD PTR [ESP+var_14+0x54]
	MOV DWORD PTR [ESP+var_2C+0x54],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_28+0x54],ECX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	PUSH EBP
	MOV DWORD PTR [ECX+0x08],EAX
	LEA ECX,DWORD PTR [ESP+var_28+0x54]
	MOV EBP,DWORD PTR [ESP+var_28+0x54]
	CALL_LONG(DWORD PTR [EBP+arg1217245-0x4A4B20])
	JMP loc_10053C22
loc_10053C1E:
	FSTP DWORD PTR [EBX+EAX-0x04]
loc_10053C22:
	MOV ECX,DWORD PTR [EDI+0x04]
	MOV EAX,DWORD PTR [ESP+var_40+0x54]
	FLD DWORD PTR [ECX]
	FCOMP DWORD PTR [EAX]
	FNSTSW AX
	TEST AH,0x40
	JNZ loc_10053C99
	MOV EAX,DWORD PTR [ESP+var_28+0x54]
	MOV EDX,DWORD PTR [ESI+0x00000178]
	ADD EAX, EBX
	MOV EBP,DWORD PTR [ESP+var_40+0x54]
	FLD DWORD PTR [EBX+EDX]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4428]
	ADD EBX, 0x04
	CMP EBX, 0x0C
	FADD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EBX+EBP+arg1217223-0x4A4B20]
	FSUB DWORD PTR [ECX+EBX-0x04]
	MOV EAX,DWORD PTR [ESI+0x00000164]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4430]
	FDIVP ST(1),ST
	JL loc_10053C1E
	FSTP DWORD PTR [EBX+EAX-0x04]
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV ECX,DWORD PTR [ESP+var_28+0x54]
	POP EBP
	POP EDI
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4428]
	XOR EAX, EAX
	FDIVR DWORD PTR [ECX]
	FSTP DWORD PTR [ESI+0x0000019C]
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x000C
loc_10053C99:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x40
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053CB0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		r = 0x0,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	TEST BYTE PTR [ECX+0x00000154],0x01
	JZ loc_10053CCC
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x00
	PUSH 0x00
	PUSH offset [LEGO1_data.m48A0_str]
	JMP loc_10053CDA
loc_10053CCC:
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x00
	PUSH 0x00
	PUSH offset [LEGO1_data.m4898_str]
loc_10053CDA:
	MOV ECX,DWORD PTR [EAX+0x40]
	CALL_LONG(offset [LEGO1_text.m3CAE0_sub_1003DAE0])
	MOV EAX,DWORD PTR [ESP+var_8+0x10]
	MOV ECX,DWORD PTR [ESP+var_4+0x10]
	MOV EDX,DWORD PTR [ESP+r+0x10]
	MOV DWORD PTR [ESI+0x00000138],EAX
	MOV DWORD PTR [ESI+0x00000088],ECX
	MOV DWORD PTR [ESI+0x0000019C],EDX
	MOV DWORD PTR [ESI+0x78],0x461C4000
	MOV DWORD PTR [ESI+0x7C],0x00000000
	MOV DWORD PTR [ESI+0x00000084],0xBF800000
	MOV DWORD PTR [ESI+0x000000DC],0x00000001
	XOR EAX, EAX
	POP ESI
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053D30(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	PUSH ESI
	MOV ESI, ECX
	MOV AX,WORD PTR DS:[ESI+0x00000154]
	OR AL, 0x08
	MOV WORD PTR DS:[ESI+0x00000154],AX
	TEST AL, 0x01
	JZ loc_10053D57
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x00
	PUSH 0x00
	PUSH offset [LEGO1_data.m48A0_str]
	JMP loc_10053D65
loc_10053D57:
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	PUSH 0x00
	PUSH 0x00
	PUSH offset [LEGO1_data.m4898_str]
loc_10053D65:
	MOV ECX,DWORD PTR [EAX+0x40]
	CALL_LONG(offset [LEGO1_text.m3CAE0_sub_1003DAE0])
	MOV EAX,DWORD PTR [ESP+var_8+0x10]
	MOV ECX,DWORD PTR [ESP+var_4+0x10]
	MOV DWORD PTR [ESI+0x00000138],EAX
	MOV DWORD PTR [ESI+0x0000019C],ECX
	MOV DWORD PTR [ESI+0x78],0x461C4000
	MOV DWORD PTR [ESI+0x7C],0x00000000
	MOV DWORD PTR [ESI+0x00000084],0xBF800000
	MOV DWORD PTR [ESI+0x000000DC],0x00000001
	XOR EAX, EAX
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10053DB0(DWORD arg1, DWORD arg2)
{
	enum{
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	FLD DWORD PTR [ESP+arg1]
	FMUL DWORD PTR [ESP+arg1]
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x3C
	MOV EDX, offset [LEGO1_rdata.m518_ptr]
	PUSH ESI
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_28+0x40],EDX
	FSTP DWORD PTR [ESP+var_18+0x40]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ESP+var_30+0x40],EDX
	MOV DWORD PTR [ESP+var_24+0x40],ECX
	MOV DWORD PTR [ESP+var_38+0x40],EDX
	LEA EAX,DWORD PTR [ECX+0x10]
	ADD ECX, 0x30
	MOV DWORD PTR [ESP+var_2C+0x40],EAX
	MOV DWORD PTR [ESP+var_1C+0x40],ECX
	LEA EAX,DWORD PTR [ECX-0x10]
	MOV DWORD PTR [ESP+var_20+0x40],EDX
	LEA EDX,DWORD PTR [ESP+var_C+0x40]
	LEA ECX,DWORD PTR [ESP+var_14+0x40]
	MOV DWORD PTR [ESP+var_34+0x40],EAX
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.mB0F0_sub_1000C0F0])
	MOV DWORD PTR [ESP+var_14+0x40],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [ESI+0x00000178]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x44]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m4A8_ptr])
	LEA ECX,DWORD PTR [ESI+0x0000017C]
	LEA EDX,DWORD PTR [ESP+var_10+0x44]
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x04],EAX
	LEA EAX,DWORD PTR [ESP+r+0x44]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_18+0x44]
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_14+0x44]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV ECX,DWORD PTR [ESI+0x00000164]
	MOV EAX,DWORD PTR [ESP+var_24+0x44]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x44]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [ESP+var_1C+0x44]
	MOV EAX,DWORD PTR [ESP+var_24+0x44]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x44]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	LEA ECX,DWORD PTR [ESP+var_18+0x44]
	MOV EAX,DWORD PTR [ESP+var_24+0x44]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x44]
	CALL_LONG(DWORD PTR [EAX+0x48])
	LEA ECX,DWORD PTR [ESI+0x00000188]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_20+0x44]
	MOV EAX,DWORD PTR [ESP+var_20+0x44]
	CALL_LONG(DWORD PTR [EAX+0x48])
	MOV ECX,DWORD PTR [ESI+0x00000164]
	MOV EAX,DWORD PTR [ESP+var_3C+0x44]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_38+0x44]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [ESP+var_40+0x44]
	MOV EAX,DWORD PTR [ESP+var_3C+0x44]
	MOV DWORD PTR [ESP+var_40+0x44],0x40000000
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_38+0x44]
	ADD ESI, 0x00000174
	CALL_LONG(DWORD PTR [EAX+0x5C])
	LEA ECX,DWORD PTR [ESP+r+0x44]
	MOV EAX,DWORD PTR [ESP+var_3C+0x44]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_38+0x44]
	CALL_LONG(DWORD PTR [EAX+0x5C])
	MOV EAX,DWORD PTR [ESP+var_3C+0x44]
	LEA ECX,DWORD PTR [ESP+var_3C+0x44]
	PUSH ESI
	CALL_LONG(DWORD PTR [EAX+0x48])
	LEA EAX,DWORD PTR [ESP+var_40+0x44]
	LEA ECX,DWORD PTR [ESP+var_3C+0x44]
	MOV ESI,DWORD PTR [ESP+var_3C+0x44]
	PUSH EAX
	MOV DWORD PTR [ESP+var_3C+0x44],0xBF800000
	CALL_LONG(DWORD PTR [ESI+0x5C])
	LEA ECX,DWORD PTR [ESP+var_3C+0x44]
	MOV ESI,DWORD PTR [ESP+var_3C+0x44]
	CALL_LONG(DWORD PTR [ESI+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_1005403D
	FLD DWORD PTR [ESP+var_40+0x44]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_1005403D
	LEA EAX,DWORD PTR [ESP+var_40+0x44]
	LEA ECX,DWORD PTR [ESP+var_3C+0x44]
	MOV ESI,DWORD PTR [ESP+var_3C+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x14])
	MOV ECX,DWORD PTR [ESP+var_28+0x44]
	XOR EAX, EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV ECX,DWORD PTR [ESP+var_28+0x44]
	MOV DWORD PTR [ECX], 0x3F800000
	MOV ECX,DWORD PTR [ESP+var_28+0x44]
	MOV EAX,DWORD PTR [ESP+var_38+0x44]
	PUSH ECX
	MOV ESI,DWORD PTR [ESP+var_30+0x44]
	LEA ECX,DWORD PTR [ESP+var_30+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x74])
	LEA ECX,DWORD PTR [ESP+var_34+0x44]
	MOV ESI,DWORD PTR [ESP+var_34+0x44]
	CALL_LONG(DWORD PTR [ESI+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10053F9F
	FLD DWORD PTR [ESP+var_40+0x44]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10053F9F
	LEA EAX,DWORD PTR [ESP+var_40+0x44]
	JMP loc_10054007
loc_10053F9F:
	MOV EAX,DWORD PTR [ESP+var_28+0x44]
	MOV DWORD PTR [EAX+0x04],0x00000000
	MOV DWORD PTR [EAX], 0x00000000
	MOV EAX,DWORD PTR [ESP+var_28+0x44]
	MOV DWORD PTR [EAX+0x08],0x3F800000
	MOV EAX,DWORD PTR [ESP+var_28+0x44]
	MOV ECX,DWORD PTR [ESP+var_38+0x44]
	MOV ESI,DWORD PTR [ESP+var_34+0x44]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_2C+0x44]
	CALL_LONG(DWORD PTR [ESI+0x74])
	LEA ECX,DWORD PTR [ESP+var_34+0x44]
	MOV ESI,DWORD PTR [ESP+var_34+0x44]
	CALL_LONG(DWORD PTR [ESI+0x40])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10054031
	FLD DWORD PTR [ESP+var_40+0x44]
	FSQRT
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4420]
	FSTP DWORD PTR [ESP+var_40+0x44]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10054031
	LEA EAX,DWORD PTR [ESP+var_40+0x44]
loc_10054007:
	MOV ESI,DWORD PTR [ESP+var_34+0x44]
	LEA ECX,DWORD PTR [ESP+var_34+0x44]
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x14])
	MOV EAX,DWORD PTR [ESP+var_38+0x44]
	MOV ECX,DWORD PTR [ESP+var_30+0x44]
	MOV ESI,DWORD PTR [ESP+var_2C+0x44]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_24+0x44]
	CALL_LONG(DWORD PTR [ESI+0x74])
	XOR EAX, EAX
	POP ESI
	ADD ESP, 0x3C
	RETN 0x0008
loc_10054031:
	MOV EAX, 0xFFFFFFFF
	POP ESI
	ADD ESP, 0x3C
	RETN 0x0008
loc_1005403D:
	MOV EAX, 0xFFFFFFFF
	POP ESI
	ADD ESP, 0x3C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10054915()
{
	enum{
		arg1217207 = 0x4A4ADC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217207-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_10054AC0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m53B63_proc_10054B63]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	MOV ECX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],EBX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m45B8_ptr]
	CALL_LONG(offset [LEGO1_text.m53CD0_sub_10054CD0])
	MOV DWORD PTR [ESI+0x18],EBX
	MOV DWORD PTR [ESI+0x1C],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x24],EBX
	MOV DWORD PTR [ESI+0x30],EBX
	MOV DWORD PTR [ESI+0x34],EBX
	MOV BYTE PTR [ESI+0x5C],BL
	MOV BYTE PTR [ESI+0x5D],BL
	MOV BYTE PTR [ESI+0x6C],BL
	MOV DWORD PTR [ESI+0x64],EBX
	MOV DWORD PTR [ESI+0x68],EBX
	MOV DWORD PTR [ESI+0x60],EBX
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_10054B31
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11418]
	MOV DWORD PTR [ESI+0x58],EAX
	JMP loc_10054B3D
loc_10054B31:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ESI+0x58],ECX
loc_10054B3D:
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B470__Register_LegoInputManager__QAEXPAVMxCore___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10054C30()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m53C81_proc_10054C81]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m45B8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5B5C0__UnRegister_LegoInputManager__QAEXPAVMxCore___Z])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m53C8B_sub_10054C8B])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10054C8B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10054CA0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV DWORD PTR [ECX+0x08],EAX
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ESP+arg2+0x4]
	MOV DWORD PTR [ESI+0x0C],ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST BYTE PTR [EAX+0x44],0x01
	JZ loc_10054CCA
	MOV DWORD PTR [ESI+0x08],0x00000280
	MOV DWORD PTR [ESI+0x0C],0x000001E0
loc_10054CCA:
	POP ESI
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10054CD0()
{
__asm{
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C28]
	MOV DWORD PTR [ECX+0x10],EAX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C2C]
	MOV DWORD PTR [ECX+0x14],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C3C]
	MOV DWORD PTR [ECX+0x3C],EAX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C38]
	MOV DWORD PTR [ECX+0x38],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C44]
	MOV DWORD PTR [ECX+0x44],EAX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C40]
	MOV DWORD PTR [ECX+0x40],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C4C]
	MOV DWORD PTR [ECX+0x4C],EAX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C48]
	MOV DWORD PTR [ECX+0x48],EDX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C34]
	MOV DWORD PTR [ECX+0x2C],EAX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C30]
	MOV DWORD PTR [ECX+0x28],EDX
	MOV AL, BYTE PTR [offset LEGO1_data + 0x4C54]
	MOV BYTE PTR [ECX+0x54],AL
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C50]
	MOV DWORD PTR [ECX+0x50],EDX
	RET
}
}

__declspec(naked) DWORD LEGO1__GetDefaults_LegoNavController__SAXPAHPAM11111111PAE_Z(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9, DWORD arg10, DWORD arg11)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
		arg9 = 0x24,
		arg10 = 0x28,
		arg11 = 0x2C,
	};

__asm{
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C28]
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV EDX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [EAX],ECX
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C30]
	MOV EAX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C34]
	MOV DWORD PTR [EAX],EDX
	MOV EAX,DWORD PTR [ESP+arg4]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C38]
	MOV EDX,DWORD PTR [ESP+arg5]
	MOV DWORD PTR [EAX],ECX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C3C]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ESP+arg6]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C48]
	MOV EAX,DWORD PTR [ESP+arg7]
	MOV DWORD PTR [EDX],ECX
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x4C4C]
	MOV DWORD PTR [EAX],EDX
	MOV EAX,DWORD PTR [ESP+arg8]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C40]
	MOV EDX,DWORD PTR [ESP+arg9]
	MOV DWORD PTR [EAX],ECX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4C44]
	MOV DWORD PTR [EDX],EAX
	MOV EDX,DWORD PTR [ESP+arg10]
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4C50]
	MOV EAX,DWORD PTR [ESP+arg11]
	MOV DWORD PTR [EDX],ECX
	MOV DL,BYTE PTR [offset LEGO1_data + 0x4C54]
	MOV BYTE PTR [EAX],DL
	RET
}
}

__declspec(naked) DWORD LEGO1__SetDefaults_LegoNavController__SAXHMMMMMMMMME_Z(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9, DWORD arg10, DWORD arg11)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
		arg9 = 0x24,
		arg10 = 0x28,
		arg11 = 0x2C,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [ESP+arg3]
	MOV DWORD PTR [offset LEGO1_data + 0x4C28], EAX
	MOV EAX,DWORD PTR [ESP+arg4]
	MOV DWORD PTR [offset LEGO1_data + 0x4C30],ECX
	MOV ECX,DWORD PTR [ESP+arg5]
	MOV DWORD PTR [offset LEGO1_data + 0x4C34],EDX
	MOV EDX,DWORD PTR [ESP+arg6]
	MOV DWORD PTR [offset LEGO1_data + 0x4C38], EAX
	MOV EAX,DWORD PTR [ESP+arg7]
	MOV DWORD PTR [offset LEGO1_data + 0x4C3C],ECX
	MOV ECX,DWORD PTR [ESP+arg8]
	MOV DWORD PTR [offset LEGO1_data + 0x4C48],EDX
	MOV EDX,DWORD PTR [ESP+arg9]
	MOV DWORD PTR [offset LEGO1_data + 0x4C4C], EAX
	MOV EAX,DWORD PTR [ESP+arg10]
	MOV DWORD PTR [offset LEGO1_data + 0x4C40],ECX
	MOV CL,BYTE PTR [ESP+arg11]
	MOV DWORD PTR [offset LEGO1_data + 0x4C44],EDX
	MOV DWORD PTR [offset LEGO1_data + 0x4C50], EAX
	MOV BYTE PTR [offset LEGO1_data + 0x4C54],CL
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10054E40(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP BYTE PTR [ECX+0x5C],0x00
	JZ loc_10054E50
	CALL_LONG(offset [LEGO1_text.m53CD0_sub_10054CD0])
loc_10054E50:
	CMP BYTE PTR [ESP+arg3+0xC],0x00
	JZ FAR loc_10054EE7
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	SUB EAX, EDX
	MOV ECX, ESI
	SAR EAX, 0x01
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x24]
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESI+0x28]
	MOV EBX,DWORD PTR [ESP+arg2+0xC]
	PUSH EAX
	MOV EAX, ECX
	SUB ECX, EBX
	CDQ
	SUB EAX, EDX
	SAR EAX, 0x01
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x20]
	FLD DWORD PTR [ESI+0x44]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x3C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	SUB EAX, EDX
	MOV ECX, ESI
	SAR EAX, 0x01
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x34]
	FLD DWORD PTR [ESI+0x40]
	MOV EDI,DWORD PTR [ESI+0x0C]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x38]
	PUSH EAX
	MOV EAX, EDI
	SUB EDI, EBX
	MOV ECX, ESI
	CDQ
	SUB EAX, EDX
	SAR EAX, 0x01
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x30]
	POP EDI
	POP ESI
	POP EBX
	RETN 0x000C
loc_10054EE7:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESI+0x48]
	MOV EDX,DWORD PTR [ESI+0x4C]
	POP EDI
	MOV DWORD PTR [ESI+0x24],EAX
	MOV DWORD PTR [ESI+0x20],EAX
	MOV DWORD PTR [ESI+0x30],ECX
	MOV DWORD PTR [ESI+0x34],EDX
	POP ESI
	POP EBX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10054F10(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x04
	MOV ECX,DWORD PTR [ECX+0x10]
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg2+0x8]
	SUB EDX, ESI
	CMP EDX, ECX
	JLE loc_10054F4C
	SUB EDX, ECX
	SUB ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EDX
	FILD DWORD PTR [ESP+var_4+0x8]
	MOV DWORD PTR [ESP+var_4+0x8],ESI
	FIDIV DWORD PTR [ESP+var_4+0x8]
	FMUL DWORD PTR [ESP+arg3+0x8]
	FSTP DWORD PTR [ESP+var_4+0x8]
	FLD DWORD PTR [ESP+var_4+0x8]
	POP ESI
	ADD ESP, 0x04
	RETN 0x000C
loc_10054F4C:
	MOV EAX, ECX
	NEG EAX
	CMP EAX, EDX
	JLE loc_10054F7B
	ADD EDX, ECX
	SUB ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EDX
	FILD DWORD PTR [ESP+var_4+0x8]
	MOV DWORD PTR [ESP+var_4+0x8],ESI
	FIDIV DWORD PTR [ESP+var_4+0x8]
	FMUL DWORD PTR [ESP+arg3+0x8]
	FSTP DWORD PTR [ESP+var_4+0x8]
	FLD DWORD PTR [ESP+var_4+0x8]
	POP ESI
	ADD ESP, 0x04
	RETN 0x000C
loc_10054F7B:
	MOV DWORD PTR [ESP+var_4+0x8],0x00000000
	FLD DWORD PTR [ESP+var_4+0x8]
	POP ESI
	ADD ESP, 0x04
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10054F90(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x08
	SUB EAX,DWORD PTR [ESP+arg2+0x8]
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	MOV DWORD PTR [ESP+var_8+0x8],EAX
	FILD DWORD PTR [ESP+var_8+0x8]
	FIDIV DWORD PTR [ESP+arg2+0x8]
	FMUL DWORD PTR [ESP+arg3+0x8]
	FSTP DWORD PTR [ESP+var_4+0x8]
	FILD DWORD PTR [ESP+arg4+0x8]
	FCOM DWORD PTR [ESP+var_4+0x8]
	FSTP DWORD PTR [ESP+var_8+0x8]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10054FCF
	MOV EAX,DWORD PTR [ESP+var_8+0x8]
	MOV DWORD PTR [ESP+var_4+0x8],EAX
loc_10054FCF:
	FLD DWORD PTR [ESP+var_4+0x8]
	ADD ESP, 0x08
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10054FE0(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	FLD DWORD PTR [ESP+arg1]
	FSUB DWORD PTR [ESP+arg2]
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x08
	MOV EDX, 0x00000001
	MOV DWORD PTR [ESP+var_8+0x8],EAX
	FCOM DWORD PTR [offset LEGO1_rdata + 0x4548]
	FSTP DWORD PTR [ESP+var_4+0x8]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1005500E
	MOV EDX, 0xFFFFFFFF
loc_1005500E:
	FLD DWORD PTR [ECX+0x14]
	FLD DWORD PTR [ESP+var_4+0x8]
	FABS
	FCOMPP
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_1005506C
	FLD DWORD PTR [ESP+arg4+0x8]
	FMUL DWORD PTR [ESP+arg3+0x8]
	MOV DWORD PTR [ESP+var_4+0x8],EDX
	TEST EDX, EDX
	FIMUL DWORD PTR [ESP+var_4+0x8]
	FADD DWORD PTR [ESP+arg2+0x8]
	FSTP DWORD PTR [ESP+var_8+0x8]
	FLD DWORD PTR [ESP+var_8+0x8]
	FLD DWORD PTR [ESP+arg1+0x8]
	FCOM ST(1)
	FNSTSW AX
	JLE loc_1005505F
	TEST AH,0x41
	JZ loc_1005504F
	FXCH ST(1)
loc_1005504F:
	FSTP ST(0)
	FSTP DWORD PTR [ESP+var_8+0x8]
	FLD DWORD PTR [ESP+var_8+0x8]
	ADD ESP, 0x08
	RETN 0x0010
loc_1005505F:
	TEST AH,0x01
	JNZ loc_10055066
	FXCH ST(1)
loc_10055066:
	FSTP ST(0)
	FSTP DWORD PTR [ESP+var_8+0x8]
loc_1005506C:
	FLD DWORD PTR [ESP+var_8+0x8]
	ADD ESP, 0x08
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10055080(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_24 = -0x24,
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg5 = 0x14,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
	};

__asm{
	SUB ESP, 0x68
	CMP BYTE PTR [offset LEGO1_data + 0x4C58],0x00
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	JNZ loc_1005509E
	XOR AL, AL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x68
	RETN 0x0014
loc_1005509E:
	XOR EBX, EBX
	MOV BYTE PTR [ESP+var_64+0x77],BL
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_100550B6
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_100550BF
loc_100550B6:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
loc_100550BF:
	MOV EAX, ECX
	SUB EAX,DWORD PTR [ESI+0x58]
	MOV DWORD PTR [ESP+var_24+0x78],EAX
	MOV DWORD PTR [ESI+0x58],ECX
	FILD DWORD PTR [ESP+var_24+0x78]
	MOV ECX, ESI
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4550]
	FSTP DWORD PTR [ESP+var_64+0x78]
	CALL_LONG(offset [LEGO1_text.m548B0_sub_100558B0])
	CMP EAX, -0x01
	JNZ loc_100550F1
	LEA EAX,DWORD PTR [ESP+var_64+0x77]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m54750_sub_10055750])
loc_100550F1:
	CMP BYTE PTR [ESI+0x54],0x00
	LEA EDI,DWORD PTR [ESI+0x1C]
	JZ loc_10055120
	FLD DWORD PTR [ESI+0x34]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4558]
	MOV EAX,DWORD PTR [ESP+var_64+0x78]
	MOV ECX,DWORD PTR [EDI]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x24]
	SUB ESP, 0x04
	FSTP DWORD PTR [ESP]
	PUSH ECX
	PUSH EDX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m53FE0_sub_10054FE0])
	FSTP DWORD PTR [EDI]
	JMP loc_10055125
loc_10055120:
	MOV EAX,DWORD PTR [ESI+0x24]
	MOV DWORD PTR [EDI],EAX
loc_10055125:
	MOV EAX,DWORD PTR [ESP+var_64+0x78]
	MOV ECX,DWORD PTR [ESI+0x30]
	PUSH EAX
	MOV EDX,DWORD PTR [ESI+0x18]
	PUSH ECX
	MOV EAX,DWORD PTR [ESI+0x20]
	PUSH EDX
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m53FE0_sub_10054FE0])
	FSTP DWORD PTR [ESI+0x18]
	CMP BYTE PTR [ESP+var_64+0x77],0x00
	JNZ loc_10055168
	FLD DWORD PTR [EDI]
	FABS
	FCOMP DWORD PTR [ESI+0x14]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10055168
	FLD DWORD PTR [ESI+0x18]
	FABS
	FCOMP DWORD PTR [ESI+0x14]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_100552C7
loc_10055168:
	LEA EAX,DWORD PTR [ESP+var_58+0x78]
	MOV ECX, offset [LEGO1_rdata.m488_ptr]
	LEA EDX,DWORD PTR [ESP+var_30+0x78]
	MOV DWORD PTR [ESP+var_5C+0x78],EAX
	FLD DWORD PTR [ESI+0x28]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x4544]
	LEA EAX,DWORD PTR [ESP+var_44+0x78]
	MOV DWORD PTR [ESP+var_60+0x78],ECX
	MOV DWORD PTR [ESP+var_34+0x78],EDX
	FCHS
	FCOM DWORD PTR [ESI+0x18]
	MOV DWORD PTR [ESP+var_38+0x78],ECX
	MOV DWORD PTR [ESP+var_48+0x78],EAX
	MOV DWORD PTR [ESP+var_4C+0x78],ECX
	FSTP DWORD PTR [ESP+var_24+0x78]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100551B1
	MOV EAX,DWORD PTR [ESP+var_24+0x78]
	MOV DWORD PTR [ESI+0x18],EAX
loc_100551B1:
	FLD DWORD PTR [ESI+0x18]
	FMUL DWORD PTR [ESP+var_64+0x78]
	MOV EBP,DWORD PTR [ESP+arg2+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FMUL DWORD PTR [EAX]
	FSTP DWORD PTR [ESP+var_58+0x78]
	FLD DWORD PTR [ESI+0x18]
	FMUL DWORD PTR [ESP+var_64+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_5C+0x78]
	FMUL DWORD PTR [EAX+0x04]
	FSTP DWORD PTR [ECX+0x04]
	FLD DWORD PTR [ESI+0x18]
	FMUL DWORD PTR [ESP+var_64+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+var_5C+0x78]
	MOV EDX,DWORD PTR [ESP+arg3+0x78]
	FMUL DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [ESP+arg1+0x78]
	FSTP DWORD PTR [ECX+0x08]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [ESP+var_5C+0x78]
	FLD DWORD PTR [ECX]
	FADD DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+var_5C+0x78]
	FLD DWORD PTR [EBX+0x04]
	FADD DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [ESP+var_5C+0x78]
	MOV EBX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [ECX+0x08]
	FADD DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [ECX+0x08]
	CMP BYTE PTR [ESI+0x54],0x00
	JZ loc_1005523F
	FLD DWORD PTR [EDI]
	FMUL DWORD PTR [ESP+var_64+0x78]
	JMP loc_10055244
loc_1005523F:
	FLD DWORD PTR [ESI+0x50]
	FMUL DWORD PTR [EDI]
loc_10055244:
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4560]
	FSTP DWORD PTR [ESP+var_64+0x78]
	MOV ECX,DWORD PTR [ESP+arg5+0x78]
	TEST ECX, ECX
	JZ loc_1005526F
	MOV ECX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [ECX+0x04],0x80000000
	JBE loc_1005526F
	FLD DWORD PTR [ESP+var_64+0x78]
	FCHS
	FSTP DWORD PTR [ESP+var_64+0x78]
loc_1005526F:
	FLD DWORD PTR [ESP+var_64+0x78]
	FCOS
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+arg4+0x78]
	FSTP DWORD PTR [ESP+var_4+0x78]
	FLD DWORD PTR [ESP+var_64+0x78]
	FSIN
	MOV EBX,DWORD PTR [ECX+0x04]
	FST DWORD PTR [ESP+var_C+0x78]
	FMUL DWORD PTR [EDI+0x08]
	FLD DWORD PTR [EDI]
	FMUL DWORD PTR [ESP+var_4+0x78]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX]
	FLD DWORD PTR [ESP+var_C+0x78]
	FCHS
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EDI
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EBX,DWORD PTR [ECX+0x04]
	FMUL DWORD PTR [EDI]
	FLD DWORD PTR [EDI+0x08]
	FMUL DWORD PTR [ESP+var_4+0x78]
	FADDP ST(1),ST
	FSTP DWORD PTR [EBX+0x08]
	MOV BL, 0x01
	JMP loc_100552E0
loc_100552C7:
	MOV EAX,DWORD PTR [ESP+arg1+0x78]
	MOV EBP,DWORD PTR [ESP+arg2+0x78]
	MOV EDX,DWORD PTR [ESP+arg3+0x78]
	MOV ECX,DWORD PTR [ESP+arg4+0x78]
loc_100552E0:
	CMP BYTE PTR [ESI+0x5D],0x00
	JZ FAR loc_100554E8
	LEA EDI,DWORD PTR [ESP+var_44+0x78]
	MOV DWORD PTR [ESP+var_48+0x78],EDI
	LEA EDI,DWORD PTR [ESP+var_30+0x78]
	MOV DWORD PTR [ESP+var_4C+0x78],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_34+0x78],EDI
	TEST BL, BL
	MOV DWORD PTR [ESP+var_38+0x78],offset [LEGO1_rdata.m488_ptr]
	LEA EDI,DWORD PTR [ESP+var_58+0x78]
	MOV DWORD PTR [ESP+var_5C+0x78],EDI
	MOV DWORD PTR [ESP+var_60+0x78],offset [LEGO1_rdata.m488_ptr]
	JZ loc_10055368
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_30+0x78],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [ESP+var_34+0x78]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EDI,DWORD PTR [ESP+var_34+0x78]
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x08],EBX
	MOV EDI,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EDI],EBX
	MOV EDI,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EDI,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDI+0x08],EBX
	JMP loc_100553B0
loc_10055368:
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ESP+var_30+0x78],EBX
	MOV EBX,DWORD PTR [ESP+var_34+0x78]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EDI
	MOV EBX,DWORD PTR [ESP+var_34+0x78]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x08],EDI
	MOV EBX,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBX],EDI
	MOV EBX,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX+0x04],EDI
	MOV EBX,DWORD PTR [ESP+var_5C+0x78]
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EBP,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x08],EBP
loc_100553B0:
	TEST DWORD PTR [ESI+0x64],0x7FFFFFFF
	JZ loc_100553EC
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EBX,DWORD PTR [ESP+var_48+0x78]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ESI+0x64]
	FSTP DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EBX,DWORD PTR [ESP+var_48+0x78]
	FLD DWORD PTR [EAX+0x04]
	FMUL DWORD PTR [ESI+0x64]
	FSTP DWORD PTR [EBX+0x04]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EBX,DWORD PTR [ESP+var_48+0x78]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESI+0x64]
	FSTP DWORD PTR [EBX+0x08]
	JMP loc_10055402
loc_100553EC:
	MOV EAX,DWORD PTR [ESP+var_48+0x78]
	XOR EDI, EDI
	MOV DWORD PTR [EAX],EDI
	MOV EAX,DWORD PTR [ESP+var_48+0x78]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EAX,DWORD PTR [ESP+var_48+0x78]
	MOV DWORD PTR [EAX+0x08],EDI
loc_10055402:
	FLD DWORD PTR [ESI+0x60]
	MOV EAX,DWORD PTR [ESP+var_48+0x78]
	ADD EAX, 0x04
	FADD DWORD PTR [EAX]
	FSTP DWORD PTR [EAX]
	MOV EBX,DWORD PTR [ESP+var_34+0x78]
	MOV EBP,DWORD PTR [ESP+var_48+0x78]
	MOV EAX,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [EBX]
	FADD DWORD PTR [EBP+arg1217224-0x4A4B20]
	FSTP DWORD PTR [EAX]
	MOV EBX,DWORD PTR [ESP+var_34+0x78]
	MOV EBP,DWORD PTR [ESP+var_48+0x78]
	MOV EAX,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [EBX+0x04]
	FADD DWORD PTR [EBP+arg1217225-0x4A4B20]
	FSTP DWORD PTR [EAX+0x04]
	MOV EBX,DWORD PTR [ESP+var_34+0x78]
	MOV EBP,DWORD PTR [ESP+var_48+0x78]
	MOV EAX,DWORD PTR [EDX+0x04]
	FLD DWORD PTR [EBX+0x08]
	FADD DWORD PTR [EBP+arg1217226-0x4A4B20]
	FSTP DWORD PTR [EAX+0x08]
	TEST DWORD PTR [ESI+0x68],0x7FFFFFFF
	JZ loc_100554A8
	FLD DWORD PTR [ESI+0x68]
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4560]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	FLD ST(0)
	FCOS
	FSTP DWORD PTR [ESP+var_4+0x78]
	FSIN
	MOV EDX,DWORD PTR [ECX+0x04]
	FST DWORD PTR [ESP+var_C+0x78]
	FMUL DWORD PTR [EAX+0x08]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [ESP+var_4+0x78]
	FADDP ST(1),ST
	FSTP DWORD PTR [EDX]
	FLD DWORD PTR [ESP+var_C+0x78]
	FCHS
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EAX+0x08]
	FMUL DWORD PTR [ESP+var_4+0x78]
	FADDP ST(1),ST
	FSTP DWORD PTR [EDX+0x08]
	JMP loc_100554CD
loc_100554A8:
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX],EBX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [ESP+var_5C+0x78]
	MOV ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
loc_100554CD:
	MOV DWORD PTR [ESI+0x68],0x00000000
	MOV DWORD PTR [ESI+0x64],0x00000000
	MOV DWORD PTR [ESI+0x60],0x00000000
	MOV BYTE PTR [ESI+0x5D],0x00
	MOV BL, 0x01
loc_100554E8:
	MOV AL, BL
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x68
	RETN 0x0014
}
}

__declspec(naked) DWORD LEGO1_sub_10055500(DWORD arg1)
{
	enum{
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
		arg1217216 = 0x4A4B00,
		arg1217220 = 0x4A4B10,
	};

__asm{
	SUB ESP, 0x74
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, 0xFFFFFFFF
	PUSH EBP
	MOV EDI, offset [LEGO1_data.m4C64_ptr]
	MOV ESI,DWORD PTR [ESP+arg1+0x84]
loc_10055518:
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_10055601
	MOV DWORD PTR [ESP+var_48+0x84],offset [LEGO1_rdata.m300_ptr]
	LEA EAX,DWORD PTR [ESP+var_40+0x84]
	MOV DWORD PTR [ESP+var_44+0x84],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EBX,DWORD PTR [EAX+0x6C]
	LEA ECX,DWORD PTR [EDI+0x10]
	LEA EAX,DWORD PTR [EDI+0x1C]
	LEA EDX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_70+0x84],EAX
	MOV DWORD PTR [ESP+var_68+0x84],ECX
	LEA EAX,DWORD PTR [ESP+var_48+0x84]
	LEA ECX,DWORD PTR [ESP+var_74+0x84]
	MOV DWORD PTR [ESP+var_60+0x84],EDX
	PUSH EAX
	LEA EDX,DWORD PTR [ESP+var_6C+0x88]
	PUSH ECX
	LEA EAX,DWORD PTR [ESP+var_64+0x8C]
	PUSH EDX
	MOV DWORD PTR [ESP+var_74+0x90],offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [ESP+var_6C+0x90],offset [LEGO1_rdata.m518_ptr]
	MOV DWORD PTR [ESP+var_64+0x90],offset [LEGO1_rdata.m518_ptr]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	LEA ECX,DWORD PTR [ESP+var_54+0x94]
	LEA EDX,DWORD PTR [ESP+var_5C+0x94]
	MOV DWORD PTR [ESP+var_58+0x94],ECX
	MOV EAX, ECX
	MOV DWORD PTR [ESP+var_5C+0x94],offset [LEGO1_rdata.m488_ptr]
	ADD ESP, 0x10
	MOV ECX, EBX
	MOV DWORD PTR [EAX], 0x00000000
	PUSH EDX
	MOV DWORD PTR [EAX+0x04],0x00000000
	MOV DWORD PTR [EAX+0x08],0x00000000
	CALL_LONG(offset [LEGO1_text.mA4A30_sub_100A5A30])
	LEA ECX,DWORD PTR [ESP+var_48+0x84]
	PUSH ECX
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	MOV EBP,DWORD PTR [EBX+0x14]
	MOV EAX,DWORD PTR [EBX]
	MOV ECX, EBX
	ADD EBP, 0x30
	XOR EBX, EBX
	CALL_LONG(DWORD PTR [EAX+0x08])
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	LEA EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH EAX
	PUSH ECX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m29410_sub_1002A410])
loc_10055601:
	ADD EDI, 0x60
	CMP EDI, offset LEGO1_data + 0x66A4
	JB FAR loc_10055518
	MOV EAX, EBX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x74
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10055620(DWORD arg1)
{
	enum{
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x74
	MOV EAX, 0xFFFFFFFF
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg1+0x80]
	CMP EDI, 0x46
	JNB FAR loc_10055710
	SHL EDI, 0x05
	LEA EAX,DWORD PTR [ESP+var_40+0x80]
	MOV DWORD PTR [ESP+var_48+0x80],offset [LEGO1_rdata.m300_ptr]
	MOV DWORD PTR [ESP+var_44+0x80],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	LEA EBX,DWORD PTR [offset LEGO1_data + 0x4C74+EDI*2+EDI]
	MOV ESI,DWORD PTR [EAX+0x6C]
	LEA EAX,DWORD PTR [offset LEGO1_data + 0x4C80+EDI*2+EDI]
	LEA ECX,DWORD PTR [EDI*2+EDI]
	MOV EDX, offset [LEGO1_rdata.m518_ptr]
	ADD ECX, offset [LEGO1_data.m4C68]
	MOV DWORD PTR [ESP+var_70+0x80],EAX
	MOV DWORD PTR [ESP+var_74+0x80],EDX
	LEA EAX,DWORD PTR [ESP+var_48+0x80]
	MOV DWORD PTR [ESP+var_68+0x80],EBX
	MOV DWORD PTR [ESP+var_6C+0x80],EDX
	PUSH EAX
	LEA EAX,DWORD PTR [ESP+var_64+0x84]
	MOV DWORD PTR [ESP+var_60+0x84],ECX
	LEA ECX,DWORD PTR [ESP+var_6C+0x84]
	MOV DWORD PTR [ESP+var_64+0x84],EDX
	LEA EDX,DWORD PTR [ESP+var_74+0x84]
	PUSH EDX
	PUSH ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA4B40_sub_100A5B40])
	LEA ECX,DWORD PTR [ESP+var_54+0x90]
	XOR EDI, EDI
	MOV DWORD PTR [ESP+var_58+0x90],ECX
	MOV EAX, ECX
	MOV DWORD PTR [ESP+var_5C+0x90],offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESP+var_5C+0x90]
	ADD ESP, 0x10
	MOV DWORD PTR [EAX],EDI
	PUSH ECX
	MOV ECX, ESI
	MOV DWORD PTR [EAX+0x04],EDI
	MOV DWORD PTR [EAX+0x08],EDI
	CALL_LONG(offset [LEGO1_text.mA4A30_sub_100A5A30])
	LEA EAX,DWORD PTR [ESP+var_48+0x80]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH ESI
	MOV EAX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	MOV EBX,DWORD PTR [ESI+0x14]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	ADD EBX, 0x30
	CALL_LONG(DWORD PTR [EAX+0x08])
	PUSH EAX
	LEA ECX,DWORD PTR [EBX-0x10]
	LEA EAX,DWORD PTR [EBX-0x20]
	PUSH EAX
	PUSH ECX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m14710__SoundManager__YAPAVLegoSoundManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m29410_sub_1002A410])
	XOR EAX, EAX
loc_10055710:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x74
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10055720(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	CMP EAX, 0x46
	JNB loc_10055734
	SHL EAX, 0x05
	LEA EAX,DWORD PTR [offset LEGO1_data + 0x4C60+EAX*2+EAX]
	RET
loc_10055734:
	XOR EAX, EAX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10055740()
{
__asm{
	MOV EAX, 0x00000046
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10055750(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x14
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [EAX+0x70]
	TEST ECX, ECX
	JZ FAR loc_1005589B
	LEA EAX,DWORD PTR [ESP+var_C+0x24]
	LEA EDX,DWORD PTR [ESP+var_4+0x24]
	LEA EBP,DWORD PTR [ESP+var_10+0x24]
	PUSH EAX
	LEA EAX,DWORD PTR [ESP+var_14+0x28]
	PUSH EDX
	PUSH EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5B320_sub_1005C320])
	CMP EAX, -0x01
	JZ FAR loc_1005589B
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESP+var_10+0x24]
	IMUL EAX,ECX
	CDQ
	MOV EDI, 0x00000064
	IDIV EDI
	MOV EBP, EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	IMUL EAX,DWORD PTR [ESP+var_14+0x24]
	CDQ
	IDIV EDI
	CMP DWORD PTR [ESP+var_14+0x24],0x2D
	MOV EDI, EAX
	JLE loc_100557DE
	CMP DWORD PTR [ESP+var_14+0x24],0x37
	JGE loc_100557DE
	CMP DWORD PTR [ESP+var_10+0x24],0x2D
	JLE loc_100557DE
	CMP DWORD PTR [ESP+var_10+0x24],0x37
	JGE loc_100557DE
	MOV EAX,DWORD PTR [ESI+0x48]
	MOV ECX,DWORD PTR [ESI+0x4C]
	MOV DWORD PTR [ESI+0x24],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x30],EAX
	MOV DWORD PTR [ESI+0x34],ECX
	JMP loc_10055859
loc_100557DE:
	MOV EAX,DWORD PTR [ESI+0x28]
	PUSH EAX
	MOV EAX, ECX
	CDQ
	SUB EAX, EDX
	SUB ECX, EBP
	SAR EAX, 0x01
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x20]
	FLD DWORD PTR [ESI+0x40]
	MOV EBX,DWORD PTR [ESI+0x0C]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x38]
	PUSH ECX
	MOV EAX, EBX
	SUB EBX, EBP
	MOV ECX, ESI
	CDQ
	SUB EAX, EDX
	SAR EAX, 0x01
	PUSH EAX
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x30]
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	SUB EAX, EDX
	MOV ECX, ESI
	SAR EAX, 0x01
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x24]
	FLD DWORD PTR [ESI+0x44]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x3C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	SUB EAX, EDX
	MOV ECX, ESI
	SAR EAX, 0x01
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x34]
loc_10055859:
	CMP DWORD PTR [ESP+var_C+0x24],0x00
	JL loc_1005588F
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	TEST EAX, EAX
	JZ loc_1005588F
	MOV ECX,DWORD PTR [EAX+0x00000098]
	TEST ECX, ECX
	JZ loc_1005588F
	FILD DWORD PTR [ESP+var_C+0x24]
	SUB ESP, 0x04
	FMUL QWORD PTR [offset LEGO1_rdata + 0x4560]
	FSTP DWORD PTR [ESP]
	CALL_LONG(offset [LEGO1_text.m11320_sub_10012320])
	MOV EAX,DWORD PTR [ESP+arg1+0x24]
	MOV BYTE PTR [EAX],0x01
loc_1005588F:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
loc_1005589B:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_100558B0()
{
	enum{
		var_28 = -0x28,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR EBX, EBX
	MOV BYTE PTR [ESP+var_C+0x1F],BL
	CALL_LONG(offset [LEGO1_text.m59D10__GetInstance_LegoOmni__SAPAV1_XZ])
	MOV ECX,DWORD PTR [EAX+0x70]
	TEST ECX, ECX
	JZ FAR loc_10055A50
	LEA EAX,DWORD PTR [ESP+var_8+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m5B160_sub_1005C160])
	CMP EAX, -0x01
	JZ FAR loc_10055A50
	CMP DWORD PTR [ESP+var_8+0x20],EBX
	JNZ loc_1005590F
	CMP BYTE PTR [ESI+0x6C],BL
	JZ loc_10055902
	MOV EAX,DWORD PTR [ESI+0x4C]
	MOV ECX,DWORD PTR [ESI+0x48]
	MOV DWORD PTR [ESI+0x24],EBX
	MOV DWORD PTR [ESI+0x20],EBX
	MOV DWORD PTR [ESI+0x34],EAX
	MOV DWORD PTR [ESI+0x30],ECX
	MOV BYTE PTR [ESI+0x6C],BL
loc_10055902:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
loc_1005590F:
	MOV BYTE PTR [ESI+0x6C],0x01
	MOV EAX,DWORD PTR [ESP+var_8+0x20]
	AND EAX, 0x03
	CMP EAX, 0x01
	JZ loc_10055939
	CMP EAX, 0x02
	JZ loc_1005593D
	MOV EAX,DWORD PTR [ESI+0x4C]
	MOV BL, 0x01
	MOV EBP,DWORD PTR [ESP+var_C+0x20]
	MOV DWORD PTR [ESI+0x34],EAX
	MOV DWORD PTR [ESI+0x24],0x00000000
	JMP loc_10055940
loc_10055939:
	XOR EBP, EBP
	JMP loc_10055940
loc_1005593D:
	MOV EBP,DWORD PTR [ESI+0x08]
loc_10055940:
	MOV EAX,DWORD PTR [ESP+var_8+0x20]
	AND EAX, 0x0C
	CMP EAX, 0x04
	JZ loc_10055969
	CMP EAX, 0x08
	JZ loc_1005596D
	MOV EAX,DWORD PTR [ESI+0x48]
	MOV EDI,DWORD PTR [ESP+var_C+0x20]
	MOV DWORD PTR [ESI+0x20],0x00000000
	MOV BYTE PTR [ESP+var_C+0x1F],0x01
	MOV DWORD PTR [ESI+0x30],EAX
	JMP loc_10055970
loc_10055969:
	XOR EDI, EDI
	JMP loc_10055970
loc_1005596D:
	MOV EDI,DWORD PTR [ESI+0x0C]
loc_10055970:
	MOV EAX,DWORD PTR [ESP+var_8+0x20]
	AND EAX, 0x10
	JZ loc_10055981
	FLD DWORD PTR [offset LEGO1_rdata + 0x4568]
	JMP loc_10055987
loc_10055981:
	FLD DWORD PTR [offset LEGO1_rdata + 0x4580]
loc_10055987:
	FSTP DWORD PTR [ESP+var_4+0x20]
	TEST EAX, EAX
	JZ loc_10055997
	FLD DWORD PTR [offset LEGO1_rdata + 0x4568]
	JMP loc_1005599D
loc_10055997:
	FLD DWORD PTR [offset LEGO1_rdata + 0x457C]
loc_1005599D:
	FSTP DWORD PTR [ESP+var_C+0x20]
	TEST BL, BL
	JNZ loc_100559EE
	MOV EAX,DWORD PTR [ESI+0x2C]
	PUSH EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	SUB EAX, EDX
	MOV ECX, ESI
	SAR EAX, 0x01
	PUSH EAX
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x24]
	FLD DWORD PTR [ESI+0x44]
	FDIV DWORD PTR [ESP+var_C+0x20]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x3C]
	FDIV DWORD PTR [ESP+var_4+0x20]
	PUSH EAX
	SUB ESP, 0x04
	MOV EAX,DWORD PTR [ESI+0x08]
	CDQ
	MOV ECX, ESI
	SUB EAX, EDX
	SAR EAX, 0x01
	PUSH EAX
	PUSH EBP
	FSTP DWORD PTR [ESP+var_28+0x30]
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x34]
loc_100559EE:
	CMP BYTE PTR [ESP+var_C+0x1F],0x00
	JNZ loc_10055A46
	MOV ECX,DWORD PTR [ESI+0x0C]
	MOV EAX,DWORD PTR [ESI+0x28]
	PUSH EAX
	MOV EAX, ECX
	CDQ
	SUB EAX, EDX
	SUB ECX, EDI
	SAR EAX, 0x01
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m53F10_sub_10054F10])
	FSTP DWORD PTR [ESI+0x20]
	FLD DWORD PTR [ESI+0x40]
	FDIV DWORD PTR [ESP+var_C+0x20]
	MOV EBX,DWORD PTR [ESI+0x0C]
	CALL_LONG(offset [LEGO1_text.m8A608_sub_1008B608])
	FLD DWORD PTR [ESI+0x38]
	FDIV DWORD PTR [ESP+var_4+0x20]
	PUSH EAX
	SUB ESP, 0x04
	MOV EAX, EBX
	CDQ
	SUB EBX, EDI
	MOV ECX, ESI
	SUB EAX, EDX
	SAR EAX, 0x01
	PUSH EAX
	PUSH EBX
	FSTP DWORD PTR [ESP+var_28+0x30]
	CALL_LONG(offset [LEGO1_text.m53F90_sub_10054F90])
	FSTP DWORD PTR [ESI+0x30]
loc_10055A46:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
loc_10055A50:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10055F25()
{
	enum{
		arg1217202 = 0x4A4AC8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217202-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10055F2D()
{
	enum{
		arg1217166 = 0x4A4A38,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217166-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10055F38()
{
	enum{
		arg1217075 = 0x4A48CC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217075-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10055FE6()
{
	enum{
		arg1217202 = 0x4A4AC8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217202-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10055FF8()
{
	enum{
		arg1217130 = 0x4A49A8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217130-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_10056BB9()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10056BE2()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B23]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10056CF0()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EDX
	JZ loc_10056D0E
loc_10056CFD:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056D0B
	MOV EDX, EAX
	JMP loc_10056CFD
loc_10056D0B:
	MOV DWORD PTR [ECX],EDX
	RET
loc_10056D0E:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_10056D22
loc_10056D16:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_10056D16
loc_10056D22:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_10056D2B
	MOV DWORD PTR [ECX],EDX
loc_10056D2B:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10056D30(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],ECX
	JZ loc_10056D60
loc_10056D4C:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056D5A
	MOV ECX, EAX
	JMP loc_10056D4C
loc_10056D5A:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	JMP loc_10056D89
loc_10056D60:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_10056D7C
loc_10056D6C:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10056D6C
loc_10056D7C:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10056D89
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_10056D89:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EBX
	JZ loc_10056DBD
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EDX
	JZ loc_10056DB9
loc_10056DA4:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056DB2
	MOV EDX, EAX
	JMP loc_10056DA4
loc_10056DB2:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10056DC7
loc_10056DB9:
	MOV EDX, EBX
	JMP loc_10056DC7
loc_10056DBD:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10056DC7:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_10056E60
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10056DF1
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10056DF1
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10056DF3
loc_10056DF1:
	MOV DWORD PTR [EAX],EDX
loc_10056DF3:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10056E24
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x3200]
	CMP DWORD PTR [EDI],EAX
	JZ loc_10056E1B
	MOV EDI, EDX
loc_10056E09:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056E17
	MOV EDI, EAX
	JMP loc_10056E09
loc_10056E17:
	MOV DWORD PTR [EBX],EDI
	JMP loc_10056E24
loc_10056E1B:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10056E24:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_10056EBE
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x3200]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10056E55
	MOV EAX, EDX
loc_10056E42:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EBX
	JZ loc_10056E51
	MOV EAX, EBX
	JMP loc_10056E42
loc_10056E51:
	MOV DWORD PTR [EDI],EAX
	JMP loc_10056EBE
loc_10056E55:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_10056EBE
loc_10056E60:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_10056E74
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_10056E89
loc_10056E74:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_10056E89:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056EA3
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056EA3
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10056EA5
loc_10056EA3:
	MOV DWORD PTR [EAX],ECX
loc_10056EA5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EBP
loc_10056EBE:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_1005715E
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_10057157
loc_10056ED4:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_10057157
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_10056F5F
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_10056F44
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056F1B
	MOV DWORD PTR [EAX+0x04],EDI
loc_10056F1B:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056F37
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056F37
	MOV DWORD PTR [EAX+0x08],EBP
	JMP loc_10056F39
loc_10056F37:
	MOV DWORD PTR [EAX],EBP
loc_10056F39:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10056F44:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10056FE8
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10056FE8
	JMP loc_10056FCE
loc_10056F5F:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_10056FB5
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EDI,DWORD PTR [EBX]
	MOV EBP,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10056F8C
	MOV DWORD PTR [EAX+0x04],EDI
loc_10056F8C:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056FA9
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EDI
	JZ loc_10056FA9
	MOV EAX,DWORD PTR [EDI+0x04]
loc_10056FA9:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV DWORD PTR [EDI+0x04],EBP
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_10056FB5:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100570A9
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_100570A9
loc_10056FCE:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10056ED4
	JMP FAR loc_10057157
loc_10056FE8:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_10057044
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10057016
	MOV DWORD PTR [EAX+0x04],EDI
loc_10057016:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10057036
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JNZ loc_10057036
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_10057038
loc_10057036:
	MOV DWORD PTR [EAX],EBX
loc_10057038:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10057044:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10057076
	MOV DWORD PTR [EAX+0x04],EBX
loc_10057076:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_100570A0
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10057097
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10057154
loc_10057097:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10057154
loc_100570A0:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EBX
	JMP FAR loc_10057154
loc_100570A9:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_100570FF
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_100570D7
	MOV DWORD PTR [EAX+0x04],EDI
loc_100570D7:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100570F3
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100570F3
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_100570F5
loc_100570F3:
	MOV DWORD PTR [EAX],EBX
loc_100570F5:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_100570FF:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EAX
	JZ loc_10057130
	MOV DWORD PTR [EAX+0x04],EBX
loc_10057130:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_1005714F
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_1005714F
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_10057151
loc_1005714F:
	MOV DWORD PTR [EAX],EDI
loc_10057151:
	MOV DWORD PTR [EDI+0x08],EBX
loc_10057154:
	MOV DWORD PTR [EBX+0x04],EDI
loc_10057157:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_1005715E:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10057180(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV EBX, EDI
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EDI
	JZ loc_100571B3
loc_10057193:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m56180_sub_10057180])
	MOV EBX,DWORD PTR [EBX]
	PUSH EDI
	MOV EDI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x3200],EBX
	JNZ loc_10057193
loc_100571B3:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10057201()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m55C20_loc_10056C20])
}
}

__declspec(naked) DWORD LEGO1_sub_10057251()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m561C0_loc_100571C0])
}
}

__declspec(naked) DWORD LEGO1_proc_10057260()
{
	enum{
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m563CA_proc_100573CA]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4618_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x18
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	XOR ECX, ECX
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV EAX,DWORD PTR [EDX+0x58]
	MOV BYTE PTR [EBP+var_8+0x4],0x02
	MOV ESI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	CMP ESI, EAX
	JZ loc_100572F4
loc_1005729D:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV DWORD PTR [EDX+0x00000088],ECX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_100572C5
loc_100572B7:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_100572E6
	MOV EDX, EAX
	JMP loc_100572B7
loc_100572C5:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100572DE
loc_100572D0:
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100572D0
loc_100572DE:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100572E9
loc_100572E6:
	MOV DWORD PTR [EBP+var_14+0x4],EDX
loc_100572E9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EDX+0x58],EAX
	JNZ loc_1005729D
loc_100572F4:
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	CMP DWORD PTR [EDX+0x60],0x00
	MOV EAX,DWORD PTR [EDX+0x58]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	JZ loc_10057355
	LEA ESI,DWORD PTR [EDX+0x54]
	LEA EAX,DWORD PTR [EBP+var_24+0x4]
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m563E0_sub_100573E0])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10057355
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDX+0x58]
	CMP EAX,DWORD PTR [EBP+var_1C+0x4]
	JNZ loc_10057355
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B630_sub_1002C630])
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV ECX,DWORD PTR [EDX+0x58]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [EDX+0x58]
	MOV DWORD PTR [EDX+0x60],0x00000000
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [EDX+0x58]
	MOV DWORD PTR [EAX+0x08],EAX
	JMP loc_10057388
loc_10057355:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JZ loc_10057388
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	ADD ESI, 0x54
loc_10057363:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m2AFB0_sub_1002BFB0])
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	LEA ECX,DWORD PTR [EBP+var_28+0x4]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m2AFF0_sub_1002BFF0])
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],ECX
	JNZ loc_10057363
loc_10057388:
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m563B4_sub_100573B4])
	MOV BYTE PTR [EBP+var_8+0x4],0x00
	CALL_LONG(offset [LEGO1_text.m563BF_sub_100573BF])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m563D4_sub_100573D4])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100573B4()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x64
	JMP_LONG(offset [LEGO1_text.m56210_loc_10057210])
}
}

__declspec(naked) DWORD LEGO1_sub_100573BF()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	ADD ECX, 0x54
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD LEGO1_sub_100573D4()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m99800_loc_1009A800])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100573E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100573F0(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x58]
	PUSH EDI
	MOV ESI, ECX
	MOV EBX, EAX
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX, 0x00000001
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_10057432
	MOV ECX,DWORD PTR [ESP+arg1+0x28]
loc_10057411:
	MOV EBX, EDI
	MOV EDX, 0x00000001
	CMP DWORD PTR [EDI+0x0C],ECX
	JG loc_1005741F
	XOR EDX, EDX
loc_1005741F:
	TEST EDX, EDX
	JNZ loc_10057428
	MOV EDI,DWORD PTR [EDI+0x08]
	JMP loc_1005742A
loc_10057428:
	MOV EDI,DWORD PTR [EDI]
loc_1005742A:
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_10057411
loc_10057432:
	CMP DWORD PTR [ESI+0x5C],0x00
	JZ loc_10057445
	LEA EAX,DWORD PTR [ESP+arg1+0x28]
	LEA ECX,DWORD PTR [ESP+var_8+0x28]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_1005747F
loc_10057445:
	MOV DWORD PTR [ESP+var_28+0x34],EBX
	TEST EDX, EDX
	JZ loc_10057467
	CMP DWORD PTR [EAX],EBX
	JNZ loc_1005745E
	LEA EAX,DWORD PTR [ESP+var_8+0x34]
	LEA ECX,DWORD PTR [ESP+var_1C+0x34]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_1005747F
loc_1005745E:
	LEA ECX,DWORD PTR [ESP+var_34+0x40]
	CALL_LONG(offset [LEGO1_text.m44D80_sub_10045D80])
loc_10057467:
	MOV EAX,DWORD PTR [ESP+var_34+0x40]
	MOV ECX,DWORD PTR [ESP+var_14+0x40]
	CMP DWORD PTR [EAX+0x0C],ECX
	JGE loc_10057488
	LEA EAX,DWORD PTR [ESP+var_14+0x40]
	LEA ECX,DWORD PTR [ESP+var_30+0x40]
	PUSH EAX
	PUSH EBX
	PUSH EDI
loc_1005747F:
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x54]
	CALL_LONG(offset [LEGO1_text.m44DD0_sub_10045DD0])
loc_10057488:
	MOV EAX,DWORD PTR [ESP+var_14+0x40]
	POP EDI
	MOV DWORD PTR [EAX+0x00000088],ESI
	XOR EAX, EAX
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100574A0(DWORD arg1)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x0C
	LEA EAX,DWORD PTR [ESP+arg1+0xC]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	LEA EDI,DWORD PTR [ECX+0x54]
	PUSH EBP
	MOV ESI, ECX
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m458C0_sub_100468C0])
	MOV EBX, EAX
	MOV ECX, EDI
	LEA EAX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1ED70_sub_1001FD70])
	MOV EDX, EAX
	MOV DWORD PTR [ESP+var_C+0x1C],EAX
	CMP EAX, EBX
	JZ loc_1005750B
loc_100574D0:
	MOV EBP,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EBP
	JZ loc_100574EE
loc_100574DB:
	MOV ECX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_100574EA
	MOV EBP, ECX
	JMP loc_100574DB
loc_100574EA:
	MOV EDX, EBP
	JMP loc_10057507
loc_100574EE:
	MOV ECX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [ECX+0x08],EDX
	JNZ loc_10057500
loc_100574F6:
	MOV EDX, ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [ECX+0x08],EDX
	JZ loc_100574F6
loc_10057500:
	CMP DWORD PTR [EDX+0x08],ECX
	JZ loc_10057507
	MOV EDX, ECX
loc_10057507:
	CMP EDX, EBX
	JNZ loc_100574D0
loc_1005750B:
	CMP DWORD PTR [ESI+0x60],0x00
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],ECX
	JZ loc_1005756A
	MOV ECX,DWORD PTR [ESI+0x58]
	CMP DWORD PTR [ECX],EAX
	JNZ loc_1005756A
	CMP ECX, EBX
	JNZ loc_1005756A
	MOV EBP,DWORD PTR [ECX+0x04]
	MOV EBX, EBP
loc_10057529:
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EBX
	JZ loc_1005754B
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B630_sub_1002C630])
	MOV EBX,DWORD PTR [EBX]
	PUSH EBP
	MOV EBP, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_10057529
loc_1005754B:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV ECX,DWORD PTR [ESI+0x58]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x58]
	MOV DWORD PTR [ESI+0x60],0x00000000
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ESI+0x58]
	MOV DWORD PTR [EAX+0x08],EAX
	JMP loc_10057596
loc_1005756A:
	CMP EAX, EBX
	JZ loc_10057596
loc_1005756E:
	MOV EAX,DWORD PTR [ESP+var_C+0x1C]
	LEA ECX,DWORD PTR [ESP+var_C+0x1C]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	CALL_LONG(offset [LEGO1_text.m2AFB0_sub_1002BFB0])
	MOV EAX,DWORD PTR [ESP+var_8+0x1C]
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m2AFF0_sub_1002BFF0])
	CMP DWORD PTR [ESP+var_C+0x1C],EBX
	JNZ loc_1005756E
loc_10057596:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100575B0(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217230 = 0x4A4B38,
		arg1217245 = 0x4A4B74,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR EBX, EBX
	CMP BYTE PTR [ESI+0x48],BL
	JBE FAR loc_10057712
	CMP DWORD PTR [ESI+0x50],EBX
	JZ FAR loc_10057712
	PUSH ESI
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV ECX,DWORD PTR [EAX]
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [ESP+arg1+0x2C]
	LEA EAX,DWORD PTR [ESP+var_C+0x2C]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x30]
	MOV DWORD PTR [ESP+var_10+0x30],EAX
	MOV DWORD PTR [ESP+var_14+0x30],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	MOV EBP,DWORD PTR [ESP+var_18+0x30]
	LEA ECX,DWORD PTR [ESP+var_18+0x30]
	PUSH EDI
	CALL_LONG(DWORD PTR [EBP+arg1217245-0x4A4B20])
	MOV ECX,DWORD PTR [ESI+0x50]
	MOV EDX,DWORD PTR [ESP+var_14+0x30]
	MOV EBP,DWORD PTR [ESP+var_18+0x30]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [ESP+var_18+0x30]
	PUSH EAX
	PUSH EDX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FSTP DWORD PTR [ESP+var_20+0x30]
	MOV ECX,DWORD PTR [ESP+arg1+0x30]
	MOV EAX,DWORD PTR [ESP+var_18+0x30]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x30]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV EBP,DWORD PTR [ESP+var_18+0x30]
	LEA ECX,DWORD PTR [ESP+var_18+0x30]
	PUSH EDI
	CALL_LONG(DWORD PTR [EBP+arg1217245-0x4A4B20])
	MOV ECX,DWORD PTR [ESI+0x50]
	MOV EDX,DWORD PTR [ESP+var_14+0x30]
	MOV EBP,DWORD PTR [ESP+var_18+0x30]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [ESP+var_18+0x30]
	PUSH EAX
	PUSH EDX
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FCOM DWORD PTR [ESP+var_20+0x30]
	FSTP DWORD PTR [ESP+var_1C+0x30]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_100576BA
	CMP BYTE PTR [ESI+0x48],BL
	JBE FAR loc_10057712
	XOR EDI, EDI
	MOV EBP,DWORD PTR [ESP+arg2+0x30]
loc_10057674:
	MOV EDX,DWORD PTR [ESI+0x4C]
	ADD EDX, EDI
	FLD DWORD PTR [EDX+0x08]
	FCOMP DWORD PTR [ESP+var_20+0x30]
	MOV ECX,DWORD PTR [EDX]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_100576A3
	FLD DWORD PTR [EDX+0x08]
	FCOMP DWORD PTR [ESP+var_1C+0x30]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_100576A3
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EAX
	PUSH 0x01
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
loc_100576A3:
	ADD EDI, 0x0C
	INC EBX
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x48]
	CMP EAX, EBX
	JG loc_10057674
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x000C
loc_100576BA:
	FLD DWORD PTR [ESP+0x14]
	FCOMP DWORD PTR [ESP+var_20+0x30]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10057712
	XOR EBX, EBX
	XOR EDI, EDI
	CMP BYTE PTR [ESI+0x48],BL
	JBE loc_10057712
	MOV EBP,DWORD PTR [ESP+arg2+0x30]
loc_100576D6:
	MOV EDX,DWORD PTR [ESI+0x4C]
	ADD EDX, EBX
	FLD DWORD PTR [EDX+0x08]
	FCOMP DWORD PTR [ESP+var_1C+0x30]
	MOV ECX,DWORD PTR [EDX]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10057705
	FLD DWORD PTR [EDX+0x08]
	FCOMP DWORD PTR [ESP+var_20+0x30]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10057705
	MOV EAX,DWORD PTR [EDX+0x04]
	PUSH EAX
	PUSH 0x00
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
loc_10057705:
	ADD EBX, 0x0C
	INC EDI
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x48]
	CMP EAX, EDI
	JG loc_100576D6
loc_10057712:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10057720(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	MOV EBX,DWORD PTR [ESP+arg2+0x14]
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg3+0x18]
	PUSH EBP
	MOV ECX,DWORD PTR [EBX]
	MOV ESI,DWORD PTR [EDI]
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP EDX, ECX
	JNZ loc_10057742
	LEA EAX,DWORD PTR [ESI+0x24]
	TEST BYTE PTR [EAX],0x01
	JNZ loc_10057757
loc_10057742:
	CMP DWORD PTR [ESI+0x08],ECX
	JNZ FAR loc_100578F9
	LEA EAX,DWORD PTR [ESI+0x24]
	TEST BYTE PTR [EAX],0x02
	JZ FAR loc_100578F9
loc_10057757:
	MOV EBP, EDX
	CMP EDX, ECX
	JNZ loc_10057760
	MOV EBP,DWORD PTR [ESI+0x08]
loc_10057760:
	TEST EBP, EBP
	JNZ loc_10057766
	MOV EBP, ECX
loc_10057766:
	MOV DWORD PTR [ESP+var_4+0x1C],0x00000000
	CMP DWORD PTR [ESI+0x08],EBP
	JNZ loc_1005777E
	TEST BYTE PTR [EAX],0x01
	JZ loc_1005777E
	TEST BYTE PTR [EBP+arg1217227-0x4A4B20],0x01
	JNZ loc_1005778D
loc_1005777E:
	CMP EBP, EDX
	JNZ loc_100577A0
	TEST BYTE PTR [EAX],0x02
	JZ loc_100577A0
	TEST BYTE PTR [EBP+arg1217227-0x4A4B20],0x01
	JZ loc_100577A0
loc_1005778D:
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV ECX,DWORD PTR [ESP+arg1+0x1C]
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x7C])
	MOV BYTE PTR [ESP+var_8+0x1B],AL
	JMP loc_100577A5
loc_100577A0:
	MOV BYTE PTR [ESP+var_8+0x1B],0x01
loc_100577A5:
	PUSH EBP
	MOV ECX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EAX
	CMP EBP,DWORD PTR [ECX+0x04]
	JNZ loc_100577BB
	MOV EDX,DWORD PTR [ECX+0x08]
	JMP loc_100577BE
loc_100577BB:
	MOV EDX,DWORD PTR [ECX+0x04]
loc_100577BE:
	MOV AX,WORD PTR DS:[ECX+0x24]
	TEST AL, 0x03
	JZ loc_100577EF
	CMP BYTE PTR [ESP+var_8+0x1B],0x00
	JNZ loc_100577EB
	CMP DWORD PTR [ECX+0x08],EDX
	JNZ loc_100577DC
	TEST AL, 0x01
	JZ loc_100577DC
	TEST BYTE PTR [EDX+0x0C],0x01
	JNZ loc_100577EB
loc_100577DC:
	CMP DWORD PTR [ECX+0x04],EDX
	JNZ loc_100577EF
	TEST AL, 0x02
	JZ loc_100577EF
	TEST BYTE PTR [EDX+0x0C],0x01
	JZ loc_100577EF
loc_100577EB:
	INC DWORD PTR [ESP+var_4+0x1C]
loc_100577EF:
	CMP ESI, ECX
	JNZ loc_100577A5
	MOV BYTE PTR [ESP+var_8+0x1A],0x01
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	DEC EAX
	CMP DWORD PTR [ESP+var_4+0x1C],0x01
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	JG loc_10057812
	MOV DWORD PTR [ESP+var_8+0x1C],0x00000000
	JMP loc_1005783B
loc_10057812:
	CMP DWORD PTR [ESP+var_4+0x1C],0x02
	JNZ loc_10057823
	MOV DWORD PTR [ESP+var_8+0x1C],0x00000001
	JMP loc_1005783B
loc_10057823:
	LEA EAX,DWORD PTR [ESP+var_8+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1A]
	MOV EDX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EAX
	PUSH ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX, EDX
	CALL_LONG(DWORD PTR [EAX+0x000000A4])
loc_1005783B:
	CMP DWORD PTR [ESP+var_8+0x1C],0x00
	JLE loc_100578A1
loc_10057842:
	PUSH EBP
	MOV ECX,DWORD PTR [EDI]
	CMP BYTE PTR [ESP+var_4+0x1A],0x00
	JZ loc_10057853
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	JMP loc_10057858
loc_10057853:
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
loc_10057858:
	MOV DWORD PTR [EDI],EAX
	MOV ECX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX, EAX
	CMP EBP, EAX
	JNZ loc_10057868
	MOV EDX,DWORD PTR [ECX+0x08]
loc_10057868:
	TEST BYTE PTR [ECX+0x24],0x03
	JZ loc_1005789A
	CMP BYTE PTR [ESP+var_8+0x1B],0x00
	JNZ loc_10057896
	CMP DWORD PTR [ECX+0x08],EDX
	JNZ loc_10057886
	TEST BYTE PTR [ECX+0x24],0x01
	JZ loc_10057886
	TEST BYTE PTR [EDX+0x0C],0x01
	JNZ loc_10057896
loc_10057886:
	CMP EAX, EDX
	JNZ loc_1005789A
	TEST BYTE PTR [ECX+0x24],0x02
	JZ loc_1005789A
	TEST BYTE PTR [EDX+0x0C],0x01
	JZ loc_1005789A
loc_10057896:
	DEC DWORD PTR [ESP+var_8+0x1C]
loc_1005789A:
	CMP DWORD PTR [ESP+var_8+0x1C],0x00
	JG loc_10057842
loc_100578A1:
	MOV ECX,DWORD PTR [EDI]
	CMP ESI, ECX
	JNZ loc_100578B9
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	PUSH EBP
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EAX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV DWORD PTR [EDI],EAX
loc_100578B9:
	MOV ECX,DWORD PTR [EBX]
	CMP EBP, ECX
	JZ loc_100578E1
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m564A0_sub_100574A0])
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV ECX, EBP
	PUSH EAX
	MOV DWORD PTR [EBX],EBP
	CALL_LONG(offset [LEGO1_text.m563F0_sub_100573F0])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0010
loc_100578E1:
	FLD QWORD PTR [offset LEGO1_rdata + 0x45E8]
	MOV EAX,DWORD PTR [ESP+arg4+0x1C]
	POP EBP
	POP EDI
	POP ESI
	FSUB DWORD PTR [EAX]
	POP EBX
	FSTP DWORD PTR [EAX]
	ADD ESP, 0x0C
	RETN 0x0010
loc_100578F9:
	MOV EBP, 0x00000003
loc_100578FE:
	MOV EAX,DWORD PTR [EBX]
	MOV ECX,DWORD PTR [EDI]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV DWORD PTR [EDI],EAX
	TEST WORD PTR DS:[EAX+0x24],BP
	JNZ loc_10057914
	CMP ESI, EAX
	JNZ loc_100578FE
loc_10057914:
	MOV ECX,DWORD PTR [EDI]
	CMP ESI, ECX
	JNZ loc_10057930
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBX]
	PUSH EAX
	MOV ECX,DWORD PTR [EDI]
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV DWORD PTR [EDI],EAX
loc_10057930:
	FLD QWORD PTR [offset LEGO1_rdata + 0x45E8]
	MOV EAX,DWORD PTR [ESP+arg4+0x1C]
	POP EBP
	POP EDI
	POP ESI
	FSUB DWORD PTR [EAX]
	POP EBX
	FSTP DWORD PTR [EAX]
	ADD ESP, 0x0C
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10057950(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		r = 0x0,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg1217225 = 0x4A4B24,
		arg1217230 = 0x4A4B38,
		arg1217232 = 0x4A4B40,
		arg1217250 = 0x4A4B88,
		arg1217258 = 0x4A4BA8,
	};

__asm{
	SUB ESP, 0x00000080
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	XOR EBX, EBX
	LEA EAX,DWORD PTR [ESP+var_20+0x90]
	MOV DWORD PTR [ESP+var_80+0x90],EBX
	MOV DWORD PTR [ESP+var_50+0x90],EBX
	MOV DWORD PTR [ESP+var_60+0x90],EBX
	MOV DWORD PTR [ESP+var_24+0x90],EAX
	MOV DWORD PTR [ESP+var_7C+0x90],EBX
	MOV DWORD PTR [ESP+var_28+0x90],offset [LEGO1_rdata.m488_ptr]
	CMP BYTE PTR [ESI+0x04],BL
	JBE FAR loc_10057B07
	XOR EDI, EDI
	MOV EAX,DWORD PTR [ESP+arg3+0x90]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX+0x38]
	MOV DWORD PTR [ESP+var_3C+0x90],EDX
loc_10057999:
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV EBP,DWORD PTR [ESI+0x2C]
	ADD EBP, EBX
	MOV ECX,DWORD PTR [EDI+EAX]
	MOV EAX,DWORD PTR [ESP+arg3+0x90]
	PUSH EBP
	MOV DWORD PTR [ESP+var_74+0x94],ECX
	PUSH EAX
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	CALL_LONG(DWORD PTR [ESP+var_3C+0x98])
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FADD DWORD PTR [EAX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x45F0]
	FNSTSW AX
	TEST AH,0x41
	JZ FAR loc_10057AEE
	CMP DWORD PTR [ESP+var_58+0x98],0x00
	JNZ FAR loc_10057A60
	MOV EAX,DWORD PTR [ESP+arg1+0x98]
	LEA ECX,DWORD PTR [ESP+var_30+0x98]
	MOV EBP,DWORD PTR [ESP+var_30+0x98]
	PUSH EAX
	MOV DWORD PTR [ESP+var_54+0x98],0x00000001
	CALL_LONG(DWORD PTR [EBP+arg1217258-0x4A4B20])
	MOV ECX,DWORD PTR [ESP+r+0x98]
	MOV EAX,DWORD PTR [ESP+var_30+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_2C+0x98]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EDX,DWORD PTR [ESP+var_2C+0x98]
	MOV ECX,DWORD PTR [ESP+var_2C+0x98]
	ADD EDX, 0x04
	ADD ECX, 0x08
	MOV EAX,DWORD PTR [ESP+var_2C+0x98]
	FLD DWORD PTR [EAX]
	FMUL DWORD PTR [EAX]
	FLD DWORD PTR [EDX]
	FMUL DWORD PTR [EDX]
	FADDP ST(1),ST
	FLD DWORD PTR [ECX]
	FMUL DWORD PTR [ECX]
	FADDP ST(1),ST
	FCOM DWORD PTR [offset LEGO1_rdata + 0x45E4]
	FSTP DWORD PTR [ESP+var_68+0x98]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_10057FC4
	FLD DWORD PTR [ESP+var_68+0x98]
	FSQRT
	MOV EBP,DWORD PTR [ESP+var_30+0x98]
	LEA EAX,DWORD PTR [ESP+var_68+0x98]
	LEA ECX,DWORD PTR [ESP+var_30+0x98]
	PUSH EAX
	FSTP DWORD PTR [ESP+var_64+0x98]
	CALL_LONG(DWORD PTR [EBP+arg1217250-0x4A4B20])
loc_10057A60:
	MOV EAX,DWORD PTR [ESI+0x2C]
	MOV EDX,DWORD PTR [ESP+var_2C+0x98]
	MOV ECX,DWORD PTR [EBX+EAX+0x04]
	MOV EAX,DWORD PTR [ESP+var_30+0x98]
	PUSH ECX
	PUSH EDX
	LEA ECX,DWORD PTR [ESP+var_28+0x98]
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x45E4]
	FSTP DWORD PTR [ESP+var_1C+0x98]
	FNSTSW AX
	TEST AH,0x40
	JNZ loc_10057AEE
	MOV EBP,DWORD PTR [ESI+0x2C]
	MOV ECX,DWORD PTR [ESP+r+0x98]
	ADD EBP, EBX
	MOV EAX,DWORD PTR [ECX]
	PUSH EBP
	PUSH ECX
	CALL_LONG(DWORD PTR [EAX+0x38])
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FADD DWORD PTR [ECX+0x0C]
	FCHS
	FDIV DWORD PTR [ESP+var_1C+0x98]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x45F8]
	FSTP DWORD PTR [ESP+var_1C+0x98]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10057AEE
	FLD DWORD PTR [ESP+var_68+0x98]
	FCOMP DWORD PTR [ESP+var_1C+0x98]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10057AEE
	CMP DWORD PTR [ESP+var_88+0x98],0x00
	JZ loc_10057ADE
	FLD DWORD PTR [ESP+var_60+0x98]
	FCOMP DWORD PTR [ESP+var_1C+0x98]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10057AEE
loc_10057ADE:
	MOV EAX,DWORD PTR [ESP+var_1C+0x98]
	MOV DWORD PTR [ESP+var_60+0x98],EAX
	MOV ECX,DWORD PTR [ESP+var_7C+0x98]
	MOV DWORD PTR [ESP+var_88+0x98],ECX
loc_10057AEE:
	ADD EBX, 0x18
	ADD EDI, 0x04
	XOR EAX, EAX
	INC DWORD PTR [ESP+var_84+0x98]
	MOV AL,BYTE PTR [ESI+0x04]
	CMP EAX,DWORD PTR [ESP+var_84+0x98]
	JG FAR loc_10057999
loc_10057B07:
	CMP DWORD PTR [ESP+var_88+0x98],0x00
	JZ FAR loc_10057FC4
	CMP DWORD PTR [ESP+var_60+0x98],0x80000000
	JBE loc_10057B24
	MOV DWORD PTR [ESP+var_60+0x98],0x00000000
loc_10057B24:
	LEA EAX,DWORD PTR [ESP+var_14+0x98]
	LEA ECX,DWORD PTR [ESP+var_50+0x98]
	MOV DWORD PTR [ESP+var_18+0x98],EAX
	PUSH ESI
	MOV EAX, offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_18+0x98],EAX
	MOV DWORD PTR [ESP+var_50+0x98],ECX
	MOV ECX,DWORD PTR [ESP+var_84+0x98]
	MOV DWORD PTR [ESP+var_54+0x98],EAX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	MOV EDI,DWORD PTR [ESP+arg2+0x98]
	MOV ECX,DWORD PTR [ESP+var_2C+0x98]
	MOV DWORD PTR [ESP+var_64+0x98],EAX
	PUSH ECX
	MOV ECX, EDI
	MOV EAX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA ECX,DWORD PTR [ESP+var_60+0x98]
	MOV EBX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [ESP+r+0x98]
	MOV EBX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV ECX,DWORD PTR [ESP+arg1+0x98]
	MOV EAX,DWORD PTR [ESP+var_1C+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_18+0x98]
	CALL_LONG(DWORD PTR [EAX+0x00000088])
	MOV ECX,DWORD PTR [ESP+var_64+0x98]
	MOV EBX,DWORD PTR [ESP+var_1C+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_18+0x98]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX,DWORD PTR [ESP+var_88+0x98]
	CMP DWORD PTR [ECX+0x04],ESI
	JNZ loc_10057BEC
	MOV ECX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_54+0x98]
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	FLD DWORD PTR [ECX]
	FCHS
	FSTP DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_54+0x98]
	FLD DWORD PTR [ECX+0x04]
	FCHS
	FSTP DWORD PTR [EDX+0x04]
	MOV ECX,DWORD PTR [EAX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_54+0x98]
	FLD DWORD PTR [ECX+0x08]
	FCHS
	FSTP DWORD PTR [EDX+0x08]
	JMP loc_10057BFF
loc_10057BEC:
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	MOV EBX,DWORD PTR [ESP+var_58+0x98]
	MOV ECX,DWORD PTR [EAX+0x2C]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_54+0x98]
	CALL_LONG(DWORD PTR [EBX+0x20])
loc_10057BFF:
	MOV EAX,DWORD PTR [ESP+var_54+0x98]
	MOV ECX,DWORD PTR [ESP+var_18+0x98]
	MOV EBX,DWORD PTR [ESP+var_1C+0x98]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x98]
	CALL_LONG(DWORD PTR [EBX+0x18])
	FCOM DWORD PTR [offset LEGO1_rdata + 0x45E4]
	FSTP DWORD PTR [ESP+var_80+0x98]
	FNSTSW AX
	MOV DWORD PTR [ESP+var_5C+0x98],0x00000000
	TEST AH,0x01
	JZ FAR loc_10057D81
	LEA EAX,DWORD PTR [ESP+var_74+0x98]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+var_84+0x98]
	MOV DWORD PTR [ESP+var_74+0x98],EAX
	MOV DWORD PTR [ESP+var_78+0x98],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
	CMP EAX,DWORD PTR [ESP+var_88+0x98]
	MOV EBX, EAX
	JZ FAR loc_10057ED8
loc_10057C5D:
	MOV EAX,DWORD PTR [EBX+0x2C]
	CMP DWORD PTR [EBX+0x04],ESI
	JNZ loc_10057C8F
	FLD DWORD PTR [EAX]
	FCHS
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBX+0x2C]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBX+0x2C]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	JMP loc_10057C9B
loc_10057C8F:
	MOV EBP,DWORD PTR [ESP+var_7C+0x98]
	LEA ECX,DWORD PTR [ESP+var_7C+0x98]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217232-0x4A4B20])
loc_10057C9B:
	MOV EAX,DWORD PTR [ESP+var_54+0x98]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	MOV EBP,DWORD PTR [ESP+var_7C+0x98]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_74+0x98]
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4600]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_10057ED8
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	PUSH EAX
	MOV EBP, EAX
	LEA EAX,DWORD PTR [ESP+var_38+0x98]
	LEA ECX,DWORD PTR [ESP+var_38+0x98]
	MOV DWORD PTR [ESP+var_3C+0x98],EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_40+0x98],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	LEA ECX,DWORD PTR [ESP+var_40+0x98]
	MOV EAX,DWORD PTR [ESP+var_40+0x98]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	MOV EDX,DWORD PTR [ESP+var_40+0x98]
	MOV EAX,DWORD PTR [ESP+var_44+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_40+0x98]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOM DWORD PTR [ESP+var_80+0x98]
	FSTP DWORD PTR [ESP+var_84+0x98]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10057D68
	FLD DWORD PTR [EBX+0x3C]
	FCOMP DWORD PTR [ESP+var_84+0x98]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10057D68
	MOV EAX,DWORD PTR [ESP+var_84+0x98]
	MOV DWORD PTR [ESP+var_5C+0x98],EBX
	MOV DWORD PTR [ESP+var_80+0x98],EAX
	MOV EAX,DWORD PTR [ESP+var_58+0x98]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_54+0x98]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA EAX,DWORD PTR [ESP+var_74+0x98]
	LEA ECX,DWORD PTR [ESP+var_50+0x98]
	MOV DWORD PTR [ESP+var_64+0x98],EBP
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
loc_10057D68:
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
	CMP EAX,DWORD PTR [ESP+var_88+0x98]
	MOV EBX, EAX
	JNZ FAR loc_10057C5D
	JMP FAR loc_10057ED8
loc_10057D81:
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	FLD DWORD PTR [EAX+0x3C]
	FCOMP DWORD PTR [ESP+var_80+0x98]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_10057ED8
	LEA EAX,DWORD PTR [ESP+var_74+0x98]
	PUSH ESI
	MOV ECX,DWORD PTR [ESP+var_84+0x98]
	MOV DWORD PTR [ESP+var_74+0x98],EAX
	MOV DWORD PTR [ESP+var_78+0x98],offset [LEGO1_rdata.m488_ptr]
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	CMP EAX,DWORD PTR [ESP+var_88+0x98]
	MOV EBX, EAX
	JZ FAR loc_10057ED8
loc_10057DBD:
	MOV EAX,DWORD PTR [EBX+0x2C]
	CMP DWORD PTR [EBX+0x04],ESI
	JNZ loc_10057DEF
	FLD DWORD PTR [EAX]
	FCHS
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FSTP DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EBX+0x2C]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBX+0x2C]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [ECX+0x08]
	JMP loc_10057DFB
loc_10057DEF:
	MOV EBP,DWORD PTR [ESP+var_7C+0x98]
	LEA ECX,DWORD PTR [ESP+var_7C+0x98]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+arg1217232-0x4A4B20])
loc_10057DFB:
	MOV EAX,DWORD PTR [ESP+var_54+0x98]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	MOV EBP,DWORD PTR [ESP+var_7C+0x98]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_74+0x98]
	CALL_LONG(DWORD PTR [EBP+arg1217230-0x4A4B20])
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x4600]
	FNSTSW AX
	TEST AH,0x41
	JNZ FAR loc_10057ED8
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	PUSH EAX
	MOV EBP, EAX
	LEA EAX,DWORD PTR [ESP+var_38+0x98]
	LEA ECX,DWORD PTR [ESP+var_38+0x98]
	MOV DWORD PTR [ESP+var_3C+0x98],EAX
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [ESP+var_40+0x98],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	LEA ECX,DWORD PTR [ESP+var_40+0x98]
	MOV EAX,DWORD PTR [ESP+var_40+0x98]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	MOV EDX,DWORD PTR [ESP+var_40+0x98]
	MOV EAX,DWORD PTR [ESP+var_44+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_40+0x98]
	PUSH EDX
	CALL_LONG(DWORD PTR [EAX+0x18])
	FCOM DWORD PTR [ESP+var_80+0x98]
	FSTP DWORD PTR [ESP+var_84+0x98]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10057EC4
	CMP DWORD PTR [ESP+var_84+0x98],0x80000000
	JA loc_10057EC4
	MOV EAX,DWORD PTR [ESP+var_84+0x98]
	MOV DWORD PTR [ESP+var_5C+0x98],EBX
	MOV DWORD PTR [ESP+var_80+0x98],EAX
	MOV EAX,DWORD PTR [ESP+var_58+0x98]
	MOV ECX,DWORD PTR [ESP+var_78+0x98]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_54+0x98]
	CALL_LONG(DWORD PTR [EAX+0x20])
	LEA EAX,DWORD PTR [ESP+var_74+0x98]
	LEA ECX,DWORD PTR [ESP+var_50+0x98]
	MOV DWORD PTR [ESP+var_64+0x98],EBP
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x04],EDX
	MOV EAX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
loc_10057EC4:
	PUSH ESI
	MOV ECX, EBX
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	CMP EAX,DWORD PTR [ESP+var_88+0x98]
	MOV EBX, EAX
	JNZ FAR loc_10057DBD
loc_10057ED8:
	CMP DWORD PTR [ESP+var_5C+0x98],0x00
	JZ loc_10057EE7
	MOV EAX,DWORD PTR [ESP+var_5C+0x98]
	MOV DWORD PTR [ESP+var_88+0x98],EAX
loc_10057EE7:
	CMP DWORD PTR [ESP+var_80+0x98],0x00
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	JLE FAR loc_10057F88
	FLD DWORD PTR [EAX+0x3C]
	FCOMP DWORD PTR [ESP+var_80+0x98]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10057F3F
	MOV EAX,DWORD PTR [ESP+var_54+0x98]
	MOV ECX, EDI
	PUSH EAX
	MOV EBX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EBX+0x20])
	LEA ECX,DWORD PTR [ESP+var_80+0x98]
	MOV EBX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [ESP+var_64+0x98]
	MOV EBX,DWORD PTR [EDI]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, 0x00000001
	JMP FAR loc_10057FC6
loc_10057F3F:
	MOV ECX,DWORD PTR [ESP+var_88+0x98]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX, EDI
	PUSH EAX
	MOV EBX,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV ECX,DWORD PTR [ESP+var_88+0x98]
	TEST BYTE PTR [ECX+0x24],0x03
	JNZ loc_10057F74
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m994F0_sub_1009A4F0])
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, 0x00000002
	JMP loc_10057FC6
loc_10057F74:
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
	MOV DWORD PTR [ECX],EAX
	MOV EAX, 0x00000002
	JMP loc_10057FC6
loc_10057F88:
	TEST BYTE PTR [EAX+0x24],0x03
	JNZ loc_10057FA1
	MOV ECX,DWORD PTR [ESP+var_88+0x98]
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m994D0_sub_1009A4D0])
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	JMP loc_10057FAC
loc_10057FA1:
	MOV ECX,DWORD PTR [ESP+arg3+0x98]
	MOV EAX,DWORD PTR [ESP+var_88+0x98]
loc_10057FAC:
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [ESP+var_64+0x98]
	MOV EBX,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV EAX, 0x00000002
	JMP loc_10057FC6
loc_10057FC4:
	XOR EAX, EAX
loc_10057FC6:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x00000080
	RETN 0x0014
}
}

