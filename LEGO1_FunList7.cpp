#include "stdafx.h"
#include "LEGO1.h"

#pragma warning (disable:4730)
#pragma warning (disable:4733)
#pragma warning (disable:4799)
#define DB(b) __asm _emit b

__declspec(naked) DWORD __stdcall LEGO1_sub_10046580(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_1004659A
	MOV DWORD PTR [EAX+0x04],ESI
loc_1004659A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_100465C8
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX],ESI
	JZ loc_100465BD
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_100465BD:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_100465C8:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100465E0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_100465FA
	MOV DWORD PTR [EAX+0x04],ESI
loc_100465FA:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004662C
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],ESI
	JZ loc_10046620
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10046620:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004662C:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046640(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	MOV EAX,DWORD PTR [ESP+arg2+0x8]
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV EDI, ESI
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x3200]
	JZ loc_10046671
	MOV ECX,DWORD PTR [EAX]
loc_1004665B:
	CMP DWORD PTR [EDX+0x0C],ECX
	JL loc_10046666
	MOV EDI, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_10046669
loc_10046666:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_10046669:
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x3200]
	JNZ loc_1004665B
loc_10046671:
	MOV DWORD PTR [ESP+var_8+0x10],EDI
	CMP EDI, ESI
	JZ loc_10046684
	MOV EAX,DWORD PTR [EAX]
	CMP DWORD PTR [EDI+0x0C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x10]
	JLE loc_1004668C
loc_10046684:
	LEA EAX,DWORD PTR [ESP+var_4+0x10]
	MOV DWORD PTR [ESP+var_4+0x10],ESI
loc_1004668C:
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100466A0(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_28 = -0x28,
		var_1C = -0x1C,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x00000138]
	TEST ECX, ECX
	JZ loc_100466CA
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m45770_sub_10046770])
	MOV EAX,DWORD PTR [ESP+arg1+0x28]
	MOV DWORD PTR [EAX+0x00000138],0x00000000
loc_100466CA:
	MOV EDX,DWORD PTR [ESI+0x34]
	MOV ECX, 0x00000001
	MOV EBX, EDX
	MOV EDI,DWORD PTR [EDX+0x04]
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_10046704
	MOV EAX,DWORD PTR [ESP+arg1+0x28]
loc_100466E3:
	MOV EBX, EDI
	MOV ECX, 0x00000001
	CMP DWORD PTR [EDI+0x0C],EAX
	JG loc_100466F1
	XOR ECX, ECX
loc_100466F1:
	TEST ECX, ECX
	JNZ loc_100466FA
	MOV EDI,DWORD PTR [EDI+0x08]
	JMP loc_100466FC
loc_100466FA:
	MOV EDI,DWORD PTR [EDI]
loc_100466FC:
	CMP EDI,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_100466E3
loc_10046704:
	CMP DWORD PTR [ESI+0x38],0x00
	JZ loc_10046717
	LEA EAX,DWORD PTR [ESP+arg1+0x28]
	LEA ECX,DWORD PTR [ESP+var_8+0x28]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_10046751
loc_10046717:
	MOV DWORD PTR [ESP+var_28+0x34],EBX
	TEST ECX, ECX
	JZ loc_10046739
	CMP DWORD PTR [EDX],EBX
	JNZ loc_10046730
	LEA EAX,DWORD PTR [ESP+var_8+0x34]
	LEA ECX,DWORD PTR [ESP+var_1C+0x34]
	PUSH EAX
	PUSH EBX
	PUSH EDI
	JMP loc_10046751
loc_10046730:
	LEA ECX,DWORD PTR [ESP+var_34+0x40]
	CALL_LONG(offset [LEGO1_text.m44D80_sub_10045D80])
loc_10046739:
	MOV EAX,DWORD PTR [ESP+var_34+0x40]
	MOV ECX,DWORD PTR [ESP+var_14+0x40]
	CMP DWORD PTR [EAX+0x0C],ECX
	JGE loc_1004675A
	LEA EAX,DWORD PTR [ESP+var_14+0x40]
	LEA ECX,DWORD PTR [ESP+var_30+0x40]
	PUSH EAX
	PUSH EBX
	PUSH EDI
loc_10046751:
	PUSH ECX
	LEA ECX,DWORD PTR [ESI+0x30]
	CALL_LONG(offset [LEGO1_text.m44DD0_sub_10045DD0])
loc_1004675A:
	MOV EAX,DWORD PTR [ESP+var_14+0x40]
	POP EDI
	MOV DWORD PTR [EAX+0x00000138],ESI
	XOR EAX, EAX
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046770(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x10
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	PUSH EBX
	MOV DWORD PTR [ESP+var_4+0x14],0xFFFFFFFF
	PUSH ESI
	MOV EBX,DWORD PTR [EAX]
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	MOV ECX, EAX
	LEA EDI,DWORD PTR [ESI+0x30]
	CALL_LONG(DWORD PTR [EBX+0x000000C4])
	LEA EAX,DWORD PTR [ESP+arg1+0x20]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m458C0_sub_100468C0])
	MOV EBX, EAX
	MOV ECX, EDI
	LEA EAX,DWORD PTR [ESP+arg1+0x20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m1ED70_sub_1001FD70])
	MOV ECX, EAX
	MOV DWORD PTR [ESP+var_10+0x20],EAX
	CMP EAX, EBX
	JZ loc_100467EC
loc_100467B6:
	MOV EDX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EDX
	JZ loc_100467CF
loc_100467C1:
	MOV ECX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_100467E6
	MOV EDX, ECX
	JMP loc_100467C1
loc_100467CF:
	MOV EDX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EDX+0x08],ECX
	JNZ loc_100467E1
loc_100467D7:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],ECX
	JZ loc_100467D7
loc_100467E1:
	CMP DWORD PTR [ECX+0x08],EDX
	JZ loc_100467E8
loc_100467E6:
	MOV ECX, EDX
loc_100467E8:
	CMP ECX, EBX
	JNZ loc_100467B6
loc_100467EC:
	MOV ECX,DWORD PTR [ESP+var_10+0x20]
	MOV DWORD PTR [ESP+var_10+0x20],ECX
	CMP DWORD PTR [ESI+0x3C],0x00
	JZ loc_1004684B
	MOV ECX,DWORD PTR [ESI+0x34]
	CMP DWORD PTR [ECX],EAX
	JNZ loc_1004684B
	CMP EBX, ECX
	JNZ loc_1004684B
	MOV EBP,DWORD PTR [ECX+0x04]
	MOV EBX, EBP
loc_1004680A:
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_1004682C
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, EDI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m2B630_sub_1002C630])
	MOV EBX,DWORD PTR [EBX]
	PUSH EBP
	MOV EBP, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_1004680A
loc_1004682C:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV ECX,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ESI+0x3C],0x00000000
	MOV EAX,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ESI+0x34]
	MOV DWORD PTR [EAX+0x08],EAX
	JMP loc_10046877
loc_1004684B:
	CMP EAX, EBX
	JZ loc_10046877
loc_1004684F:
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	LEA ECX,DWORD PTR [ESP+var_10+0x20]
	MOV DWORD PTR [ESP+var_C+0x20],EAX
	CALL_LONG(offset [LEGO1_text.m2AFB0_sub_1002BFB0])
	MOV EAX,DWORD PTR [ESP+var_C+0x20]
	LEA ECX,DWORD PTR [ESP+var_8+0x20]
	PUSH EAX
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(offset [LEGO1_text.m2AFF0_sub_1002BFF0])
	CMP EBX,DWORD PTR [ESP+var_10+0x20]
	JNZ loc_1004684F
loc_10046877:
	XOR EDI, EDI
	XOR EBX, EBX
	CMP WORD PTR DS:[ESI+0x18],DI
	JBE loc_100468AA
loc_10046881:
	MOV EAX,DWORD PTR [ESP+arg1+0x20]
	MOV ECX,DWORD PTR [ESI+0x08]
	PUSH EAX
	ADD ECX, EDI
	CALL_LONG(offset [LEGO1_text.m564A0_sub_100574A0])
	TEST EAX, EAX
	JNZ loc_1004689C
	MOV DWORD PTR [ESP+var_4+0x20],0x00000000
loc_1004689C:
	ADD EDI, 0x74
	INC EBX
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ESI+0x18]
	CMP EAX, EBX
	JG loc_10046881
loc_100468AA:
	MOV EAX,DWORD PTR [ESP+var_4+0x20]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100468C0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JZ loc_100468EA
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ECX]
loc_100468D4:
	CMP DWORD PTR [EDX+0x0C],ECX
	JLE loc_100468DF
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_100468E2
loc_100468DF:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_100468E2:
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x11A4]
	JNZ loc_100468D4
loc_100468EA:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100468F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH EBP
	MOV EDI, ECX
	XOR EBP, EBP
	CMP WORD PTR DS:[EDI+0x18],BP
	JBE loc_10046923
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_10046904:
	MOV ECX,DWORD PTR [EDI+0x08]
	ADD ECX, EBP
	TEST BYTE PTR [ECX+0x0C],0x04
	JNZ loc_10046915
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m56FE0_sub_10057FE0])
loc_10046915:
	ADD EBP, 0x74
	INC EBX
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDI+0x18]
	CMP EAX, EBX
	JG loc_10046904
loc_10046923:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046930(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	CMP WORD PTR DS:[ECX+0x18],BX
	PUSH EBP
	MOV EDI, ECX
	JBE loc_1004695D
	XOR EBP, EBP
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_10046944:
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x08]
	ADD ECX, EBP
	INC EBX
	ADD EBP, 0x74
	CALL_LONG(offset [LEGO1_text.m576E0_sub_100586E0])
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDI+0x18]
	CMP EAX, EBX
	JG loc_10046944
loc_1004695D:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10046970()
{
	enum{
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m45B12_proc_10046B12]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x28
	MOV DWORD PTR [EBP+var_34+0x4],ECX
	PUSH EBX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_100469A3
	FILD DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_100469B2
loc_100469A3:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB ECX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	FILD DWORD PTR [EBP+var_14+0x4]
loc_100469B2:
	FSTP DWORD PTR [EBP+var_30+0x4]
	MOV EAX,DWORD PTR [EBP+var_34+0x4]
	ADD EAX, 0x30
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	MOV AL,BYTE PTR [EAX]
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	XOR ESI, ESI
	MOV BYTE PTR [EBP+var_2C+0x4],AL
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DL,BYTE PTR [ECX+0x01]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ESI
	MOV BYTE PTR [EBP+var_28+0x1],DL
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBP+var_24+0x4],EAX
	JNZ loc_10046A02
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x11A4], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10046A02:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m45AFA_sub_10046AFA])
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x11A4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	CALL_LONG(offset [LEGO1_text.m2B4A0_sub_1002C4A0])
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV DWORD PTR [EBP+var_20+0x4],0x00000000
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	PUSH EDX
	LEA ECX,DWORD PTR [EBP+var_2C+0x4]
	MOV DWORD PTR [EAX+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m2B4C0_sub_1002C4C0])
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CMP ECX, EAX
	JZ FAR loc_10046ADF
	MOV EBX, 0x00000004
loc_10046A58:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EBP+var_34+0x4]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV ESI,DWORD PTR [EDX+0x34]
	LEA EAX,DWORD PTR [EBP+var_38+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH ECX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	CALL_LONG(offset [LEGO1_text.m2B440_sub_1002C440])
	CMP ESI,DWORD PTR [EBP+var_38+0x4]
	JZ loc_10046A93
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	TEST BYTE PTR [EAX+0x000000DC],BL
	JNZ loc_10046A93
	MOV EAX,DWORD PTR [EBP+var_30+0x4]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	PUSH EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x70])
loc_10046A93:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],ECX
	JZ loc_10046AAF
loc_10046AA1:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x11A4],EAX
	JZ loc_10046AD0
	MOV ECX, EAX
	JMP loc_10046AA1
loc_10046AAF:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [ECX+0x08],EAX
	JNZ loc_10046AC8
loc_10046ABA:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_10046ABA
loc_10046AC8:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_10046AD3
loc_10046AD0:
	MOV DWORD PTR [EBP+var_14+0x4],ECX
loc_10046AD3:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JNZ FAR loc_10046A58
loc_10046ADF:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m45B1C_sub_10046B1C])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10046AFA()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10046B1C()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m2B6C0_loc_1002C6C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046B30(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],EDX
	XOR EDX, EDX
	MOV DX,WORD PTR DS:[ECX+0x18]
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV DWORD PTR [EAX],EDX
	XOR EAX, EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046B50(DWORD arg1)
{
	enum{
		arg1 = 0x4,
		arg1217228 = 0x4A4B30,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	XOR EBX, EBX
	PUSH EBP
	MOV EDI, ECX
	XOR EBP, EBP
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
loc_10046B5E:
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDI+0x18]
	CMP EAX, EBX
	JLE loc_10046B83
	PUSH ESI
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX,DWORD PTR [EBP+EAX+arg1217228-0x4A4B20]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m8B110_sub_1008C110])
	ADD ESP, 0x08
	TEST EAX, EAX
	JZ loc_10046B8C
	ADD EBP, 0x74
	INC EBX
	JMP loc_10046B5E
loc_10046B83:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
loc_10046B8C:
	MOV EAX,DWORD PTR [EDI+0x08]
	LEA ECX,DWORD PTR [EBX*8+0x00000000]
	SUB ECX, EBX
	POP EBP
	POP EDI
	POP ESI
	LEA EDX,DWORD PTR [ECX*4+EBX]
	POP EBX
	LEA EAX,DWORD PTR [EDX*4+EAX]
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046BB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	XOR EDX, EDX
	PUSH EDI
	XOR EDI, EDI
	CMP WORD PTR DS:[ECX+0x1E],DX
	JBE loc_10046BD5
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
loc_10046BC0:
	MOV EAX,DWORD PTR [ECX+0x14]
	ADD EDX, 0x14
	INC EDI
	MOV DWORD PTR [EDX+EAX-0x08],ESI
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ECX+0x1E]
	CMP EAX, EDI
	JG loc_10046BC0
loc_10046BD5:
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10046BE0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	CMP BYTE PTR [ESP+arg1],0x00
	PUSH ESI
	MOV ESI, ECX
	JZ loc_10046BFD
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH 0x0A
	MOV EDX,DWORD PTR [EAX]
	PUSH ESI
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x14])
	POP ESI
	RETN 0x0004
loc_10046BFD:
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10046C10()
{
	enum{
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m45D93_proc_10046D93]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	CMP DWORD PTR [offset LEGO1_data + 0x42E8],0x00
	PUSH EBX
	PUSH ESI
	PUSH EDI
	JNZ_LONG(offset [LEGO1_text.m45DAA_loc_10046DAA])
	CMP DWORD PTR [offset LEGO1_data + 0x42EC],0x00
	JNZ_LONG(offset [LEGO1_text.m45DAA_loc_10046DAA])
	CMP DWORD PTR [offset LEGO1_data.m4358],0x00
	JNZ_LONG(offset [LEGO1_text.m45DAA_loc_10046DAA])
	CMP DWORD PTR [offset LEGO1_data + 0x435C],0x00
	JNZ_LONG(offset [LEGO1_text.m45DAA_loc_10046DAA])
	PUSH 0x00000080
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_10046C97
	MOV EBX, EDI
	MOV ESI, 0x0000000F
loc_10046C86:
	MOV ECX, EBX
	ADD EBX, 0x08
	CALL_LONG(offset [LEGO1_text.m45DC0_sub_10046DC0])
	DEC ESI
	JNS loc_10046C86
	MOV EAX, EDI
	JMP loc_10046C99
loc_10046C97:
	XOR EAX, EAX
loc_10046C99:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x00000080
	MOV DWORD PTR [offset LEGO1_data + 0x42E8], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10046CDA
	MOV EBX, ESI
	MOV EDI, 0x0000000F
loc_10046CC9:
	MOV ECX, EBX
	ADD EBX, 0x08
	CALL_LONG(offset [LEGO1_text.m45DD0_sub_10046DD0])
	DEC EDI
	JNS loc_10046CC9
	MOV EAX, ESI
	JMP loc_10046CDC
loc_10046CDA:
	XOR EAX, EAX
loc_10046CDC:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x50
	MOV DWORD PTR [offset LEGO1_data + 0x42EC], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	MOV EDI, EAX
	TEST EDI, EDI
	JZ loc_10046D1A
	MOV EBX, EDI
	MOV ESI, 0x00000009
loc_10046D09:
	MOV ECX, EBX
	ADD EBX, 0x08
	CALL_LONG(offset [LEGO1_text.m45DC0_sub_10046DC0])
	DEC ESI
	JNS loc_10046D09
	MOV EAX, EDI
	JMP loc_10046D1C
loc_10046D1A:
	XOR EAX, EAX
loc_10046D1C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	PUSH 0x50
	MOV DWORD PTR [offset LEGO1_data.m4358], EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000003
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10046D5A
	MOV EDI, ESI
	MOV EBX, 0x00000009
loc_10046D49:
	MOV ECX, EDI
	ADD EDI, 0x08
	CALL_LONG(offset [LEGO1_text.m45DD0_sub_10046DD0])
	DEC EBX
	JNS loc_10046D49
	MOV EAX, ESI
	JMP loc_10046D5C
loc_10046D5A:
	XOR EAX, EAX
loc_10046D5C:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [offset LEGO1_data + 0x435C], EAX
	XOR EAX, EAX
	JMP_LONG(offset [LEGO1_text.m45DAF_loc_10046DAF])
}
}

__declspec(naked) DWORD LEGO1_proc_10046D6C()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10046D79()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10046D86()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10046DC0()
{
__asm{
	MOV EAX, ECX
	MOV DWORD PTR [ECX], 0x00000000
	MOV DWORD PTR [ECX+0x04],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10046DD0()
{
__asm{
	MOV EAX, ECX
	MOV DWORD PTR [ECX], 0x00000000
	MOV DWORD PTR [ECX+0x04],0x00000000
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10046DE0()
{
__asm{
	PUSH ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42E8]
	XOR ESI, ESI
	TEST EAX, EAX
	JZ loc_10046E43
	CMP DWORD PTR [offset LEGO1_data + 0x42EC],ESI
	JZ loc_10046E43
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x42EC]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX, DWORD PTR [offset LEGO1_data.m4358]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x435C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV DWORD PTR [offset LEGO1_data + 0x42E8],ESI
	XOR EAX, EAX
	MOV DWORD PTR [offset LEGO1_data + 0x42EC],ESI
	MOV DWORD PTR [offset LEGO1_data.m4358],ESI
	MOV DWORD PTR [offset LEGO1_data + 0x435C],ESI
	POP ESI
	RET
loc_10046E43:
	MOV EAX, 0xFFFFFFFF
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10046E50(DWORD arg1)
{
	enum{
		var_28 = -0x28,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m460B5_proc_100470B5]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x30
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ECX,DWORD PTR [EAX]
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EDI
	MOV EDX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x1E
	PUSH 0x02
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_1C+0x4],EDX
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	CALL_LONG(EDX)
	TEST EAX, EAX
	JZ loc_10046E9B
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m4638B_loc_1004738B])
loc_10046E9B:
	MOV EAX,DWORD PTR [EBP+var_28+0x4]
	MOV AX,WORD PTR DS:[EAX]
	TEST AX, AX
	JZ loc_10046EF9
	MOVZX EBX,AX
	LEA EAX,DWORD PTR [EBX*4+0x00000000]
	LEA EAX,DWORD PTR [EAX*4+EAX]
	ADD EAX, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	ADD ESP, 0x04
	MOV ESI, EAX
	MOV EDI, 0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST ESI, ESI
	JZ loc_10046EEC
	LEA EDI,DWORD PTR [ESI+0x04]
	PUSH offset [LEGO1_text.m46470_proc_10047470]
	PUSH offset [LEGO1_text.m463A0_proc_100473A0]
	MOV DWORD PTR [ESI],EBX
	PUSH EBX
	PUSH 0x14
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m8B250_sub_1008C250])
loc_10046EEC:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x14],EDI
loc_10046EF9:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH 0x02
	ADD EAX, 0x1C
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_18+0x4],EAX
	CALL_LONG(DWORD PTR [EBP+var_1C+0x4])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m45F26_loc_10046F26])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m4638B_loc_1004738B])
}
}

__declspec(naked) DWORD LEGO1_proc_10046F19()
{
	enum{
		arg1217219 = 0x4A4B0C,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10046F26()
{
	enum{
		arg1217216 = 0x4A4B00,
		arg1217218 = 0x4A4B08,
		arg1217219 = 0x4A4B0C,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217219-0x4A4B20]
	MOV AX,WORD PTR DS:[EAX]
	TEST AX, AX
	JZ loc_10046F7C
	MOVZX EDI,AX
	LEA EAX,DWORD PTR [EDI*4+0x00000000]
	LEA ECX,DWORD PTR [EAX*4+EAX]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000001
	MOV ESI, EAX
	TEST ESI, ESI
	JZ loc_10046F6D
	MOV EBX, ESI
	DEC EDI
	JS loc_10046F69
loc_10046F5C:
	MOV ECX, EBX
	ADD EBX, 0x14
	CALL_LONG(offset [LEGO1_text.m1C170_sub_1001D170])
	DEC EDI
	JNS loc_10046F5C
loc_10046F69:
	MOV ECX, ESI
	JMP loc_10046F6F
loc_10046F6D:
	XOR ECX, ECX
loc_10046F6F:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x10],ECX
loc_10046F7C:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x02
	ADD EAX, 0x1A
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	PUSH EAX
	MOV DWORD PTR [EBP+arg1217216-0x4A4B20],EAX
	CALL_LONG(DWORD PTR [EBP+arg1217218-0x4A4B20])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m45FA9_loc_10046FA9])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m4638B_loc_1004738B])
}
}

__declspec(naked) DWORD LEGO1_proc_10046F9C()
{
	enum{
		arg1217216 = 0x4A4B00,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_loc_10046FA9()
{
	enum{
		arg1217216 = 0x4A4B00,
		arg1217217 = 0x4A4B04,
		arg1217218 = 0x4A4B08,
		arg1217220 = 0x4A4B10,
		arg1217223 = 0x4A4B1C,
		arg1217226 = 0x4A4B28,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217216-0x4A4B20]
	MOV AX,WORD PTR DS:[EAX]
	TEST AX, AX
	JZ loc_10047002
	MOVZX EDI,AX
	MOV EAX, EDI
	SHL EAX, 0x06
	ADD EAX, 0x04
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV ESI, 0x00000000
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0x00000002
	TEST EBX, EBX
	JZ loc_10046FF5
	LEA ESI,DWORD PTR [EBX+0x04]
	PUSH offset [LEGO1_text.m46A30_proc_10047A30]
	PUSH offset [LEGO1_text.m469D0_proc_100479D0]
	MOV DWORD PTR [EBX],EDI
	PUSH EDI
	PUSH 0x40
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m8B250_sub_1008C250])
loc_10046FF5:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	MOV DWORD PTR [EBP+arg1217223-0x4A4B20],0xFFFFFFFF
	MOV DWORD PTR [EAX+0x0C],ESI
loc_10047002:
	MOV EAX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	PUSH 0x02
	ADD EAX, 0x18
	MOV ECX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	PUSH EAX
	MOV DWORD PTR [EBP+arg1217217-0x4A4B20],EAX
	CALL_LONG(DWORD PTR [EBP+arg1217218-0x4A4B20])
	TEST EAX, EAX
	JZ_LONG(offset [LEGO1_text.m4602F_loc_1004702F])
	MOV EAX, 0xFFFFFFFF
	JMP_LONG(offset [LEGO1_text.m4638B_loc_1004738B])
}
}

__declspec(naked) DWORD LEGO1_proc_10047022()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100474BA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x10
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_100474CF()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m46420_loc_10047420])
}
}

__declspec(naked) DWORD LEGO1_sub_100474E0()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_100474F8
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_100474F8
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_100474F8:
	MOV EAX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_10047515
loc_10047502:
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDX
	JZ loc_10047511
	MOV EAX, EDX
	JMP loc_10047502
loc_10047511:
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10047515:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10047527
loc_1004751C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1004751C
loc_10047527:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047530(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047550(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4360]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4360]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_10047594
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_10047594:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_100475C4
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JNZ loc_100475C4
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x0C],EAX
	JG loc_100475C4
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100475E6
	MOV DWORD PTR [EAX],EDX
	JMP loc_100475E6
loc_100475C4:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_100475D9
	CMP DWORD PTR [EAX],ECX
	JNZ loc_100475E6
	MOV DWORD PTR [EAX],EDX
	JMP loc_100475E6
loc_100475D9:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_100475E6:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_100477A9
loc_100475F6:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_100477A9
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_100476D2
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_1004777F
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_10047662
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_10047642
	MOV DWORD PTR [EAX+0x04],ECX
loc_10047642:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_1004765C
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_1004765C
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_1004765E
loc_1004765C:
	MOV DWORD PTR [EAX],EDX
loc_1004765E:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_10047662:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_10047694
	MOV DWORD PTR [EAX+0x04],EDI
loc_10047694:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_100476C8
	MOV EBX,DWORD PTR [EDI+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDI
	JZ loc_100476BB
	MOV DWORD PTR [EBX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1004779D
loc_100476BB:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP FAR loc_1004779D
loc_100476C8:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],EDI
	JMP FAR loc_1004777A
loc_100476D2:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_1004777F
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_1004771A
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100476F7
	MOV DWORD PTR [EAX+0x04],ECX
loc_100476F7:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10047713
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10047713
	MOV DWORD PTR [EBX],EDX
	JMP loc_10047715
loc_10047713:
	MOV DWORD PTR [EAX],EDX
loc_10047715:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_1004771A:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV EDX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004774C
	MOV DWORD PTR [EAX+0x04],EDI
loc_1004774C:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10047776
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_1004776D
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004779D
loc_1004776D:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004779D
loc_10047776:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],EDI
loc_1004777A:
	MOV DWORD PTR [EDI+0x04],EDX
	JMP loc_1004779D
loc_1004777F:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1004779D:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_100475F6
loc_100477A9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100477D0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100477EA
	MOV DWORD PTR [EAX+0x04],ESI
loc_100477EA:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_10047818
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004780D
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004780D:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_10047818:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047830(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EDX,DWORD PTR [ESP+arg1]
	PUSH ESI
	MOV ESI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [ESI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_1004784A
	MOV DWORD PTR [EAX+0x04],EDX
loc_1004784A:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1004787C
	MOV ECX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10047870
	MOV DWORD PTR [ECX],ESI
	MOV DWORD PTR [ESI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_10047870:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
loc_1004787C:
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [ESI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],ESI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10047916()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	ADD ECX, 0x10
	JMP_LONG(offset [LEGO1_text.mABFD0___1MxAtomId__QAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004792B()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m46420_loc_10047420])
}
}

__declspec(naked) DWORD LEGO1_sub_100479BA()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m46AE0_loc_10047AE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10047A71()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m46AE0_loc_10047AE0])
}
}

__declspec(naked) DWORD LEGO1_sub_10047B21()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m994C0_loc_1009A4C0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047B30(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		r = 0x0,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	XOR EBP, EBP
	CMP WORD PTR DS:[EBX+0x1E],BP
	JBE FAR loc_10047BD5
	XOR EDI, EDI
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	MOV ECX,DWORD PTR [EAX]
	MOV ESI,DWORD PTR [ECX+0x04]
loc_10047B50:
	LEA EAX,DWORD PTR [ESP+r+0x13]
	PUSH 0x01
	MOV ECX,DWORD PTR [ESP+arg1+0x18]
	PUSH EAX
	MOV BYTE PTR [ESP+r+0x1B],0x00
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_10047BE1
	CMP BYTE PTR [ESP+var_8+0x1B],0x00
	JBE loc_10047BAE
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBX+0x14]
	MOV DWORD PTR [EDI+ECX+0x04],EAX
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	MOV ECX,DWORD PTR [EBX+0x14]
	PUSH EAX
	MOV EDX,DWORD PTR [EDI+ECX+0x04]
	MOV ECX,DWORD PTR [ESP+r+0x1C]
	PUSH EDX
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_10047BF0
	MOV EAX,DWORD PTR [EBX+0x14]
	MOV ECX,DWORD PTR [EDI+EAX+0x04]
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESP+var_8+0x1B]
	MOV BYTE PTR [EAX+ECX],0x00
loc_10047BAE:
	PUSH 0x04
	MOV EAX,DWORD PTR [EBX+0x14]
	ADD EAX, EDI
	MOV ECX,DWORD PTR [ESP+r+0x1C]
	ADD EAX, 0x08
	PUSH EAX
	CALL_LONG(ESI)
	TEST EAX, EAX
	JNZ loc_10047BFF
	ADD EDI, 0x14
	INC EBP
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EBX+0x1E]
	CMP EAX, EBP
	JG FAR loc_10047B50
loc_10047BD5:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_10047BE1:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_10047BF0:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
loc_10047BFF:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047C10(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
		arg1217229 = 0x4A4B34,
		arg1217230 = 0x4A4B38,
		arg1217231 = 0x4A4B3C,
		arg1217232 = 0x4A4B40,
		arg1217233 = 0x4A4B44,
		arg1217234 = 0x4A4B48,
	};

__asm{
	SUB ESP, 0x0C
	XOR EAX, EAX
	MOV DWORD PTR [ESP+var_4+0xC],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CMP WORD PTR DS:[ECX+0x1A],AX
	PUSH EBP
	MOV ESI, ECX
	JBE FAR loc_10047DDD
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ESP+var_8+0x1C],EAX
	MOV EAX,DWORD PTR [EDI]
	MOV EBX,DWORD PTR [EAX+0x04]
loc_10047C36:
	MOV EBP,DWORD PTR [ESI+0x0C]
	PUSH 0x02
	ADD EBP,DWORD PTR [ESP+var_8+0x20]
	LEA ECX,DWORD PTR [EBP+arg1217233-0x4A4B20]
	PUSH ECX
	MOV ECX, EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047DE9
	LEA EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047DF8
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	LEA ECX,DWORD PTR [ESP+var_C+0x22]
	SHL EAX, 0x02
	PUSH ECX
	MOV ECX, EDI
	LEA EAX,DWORD PTR [EAX*4+EAX]
	ADD EAX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+arg1217231-0x4A4B20],EAX
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E07
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	AND EAX, 0x0000FFFF
	SHL EAX, 0x02
	LEA EAX,DWORD PTR [EAX*4+EAX]
	ADD EAX,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [EBP+arg1217232-0x4A4B20],EAX
	TEST BYTE PTR [EBP+arg1217233-0x4A4B20],0x04
	JZ loc_10047D1E
	LEA EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E16
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	MOV ECX, EAX
	SHL EAX, 0x03
	SUB EAX, ECX
	LEA EAX,DWORD PTR [EAX*4+ECX]
	LEA ECX,DWORD PTR [ESP+var_C+0x22]
	SHL EAX, 0x02
	PUSH ECX
	ADD EAX,DWORD PTR [ESI+0x08]
	MOV ECX, EDI
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E25
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	LEA ECX,DWORD PTR [ESP+var_C+0x22]
	SHL EAX, 0x06
	PUSH ECX
	ADD EAX,DWORD PTR [ESI+0x0C]
	MOV ECX, EDI
	MOV DWORD PTR [EBP+arg1217227-0x4A4B20],EAX
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E34
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	AND EAX, 0x0000FFFF
	SHL EAX, 0x06
	ADD EAX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EAX
loc_10047D1E:
	TEST BYTE PTR [EBP+arg1217233-0x4A4B20],0x08
	JZ loc_10047D9D
	LEA EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	PUSH EAX
	MOV ECX, EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E43
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	MOV ECX, EAX
	SHL EAX, 0x03
	SUB EAX, ECX
	LEA EAX,DWORD PTR [EAX*4+ECX]
	LEA ECX,DWORD PTR [ESP+var_C+0x22]
	SHL EAX, 0x02
	PUSH ECX
	ADD EAX,DWORD PTR [ESI+0x08]
	MOV ECX, EDI
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EAX
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E52
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	PUSH 0x02
	AND EAX, 0x0000FFFF
	LEA ECX,DWORD PTR [ESP+var_C+0x22]
	SHL EAX, 0x06
	PUSH ECX
	ADD EAX,DWORD PTR [ESI+0x0C]
	MOV ECX, EDI
	MOV DWORD PTR [EBP+arg1217229-0x4A4B20],EAX
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E61
	MOV EAX,DWORD PTR [ESP+var_10+0x22]
	AND EAX, 0x0000FFFF
	SHL EAX, 0x06
	ADD EAX,DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EBP+arg1217230-0x4A4B20],EAX
loc_10047D9D:
	LEA EAX,DWORD PTR [EBP+arg1217234-0x4A4B20]
	PUSH EAX
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.m472B0_sub_100482B0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_10047E70
	PUSH 0x04
	ADD EBP, 0x3C
	PUSH EBP
	MOV ECX, EDI
	CALL_LONG(EBX)
	TEST EAX, EAX
	JNZ FAR loc_10047E7F
	XOR EAX, EAX
	INC DWORD PTR [ESP+var_C+0x24]
	MOV AX,WORD PTR DS:[ESI+0x1A]
	ADD DWORD PTR [ESP+var_10+0x24],0x40
	CMP EAX,DWORD PTR [ESP+var_C+0x24]
	JG FAR loc_10047C36
loc_10047DDD:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047DE9:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047DF8:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E07:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E16:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E25:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E34:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E43:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E52:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E61:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E70:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
loc_10047E7F:
	MOV EAX, 0xFFFFFFFF
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10047E90(DWORD arg1)
{
	enum{
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m47260_proc_10048260]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x1C
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
	PUSH EBX
	MOV DWORD PTR [EBP+var_20+0x4],ECX
	CMP WORD PTR DS:[ECX+0x18],0x00
	PUSH ESI
	PUSH EDI
	JBE FAR loc_100481C8
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],0x00000000
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
loc_10047ED5:
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	PUSH 0x01
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV ESI,DWORD PTR [EAX+0x08]
	ADD ESI,DWORD PTR [EBP+var_28+0x4]
	LEA EAX,DWORD PTR [EBP+var_10+0x3]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100481DD
	XOR EBX, EBX
	MOV BL,BYTE PTR [EBP+var_10+0x3]
	LEA EAX,DWORD PTR [EBX*2+EBX]
	SHL EAX, 0x03
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	TEST EAX, EAX
	JZ loc_10047F2B
	MOV EDI, EAX
	DEC EBX
	JS loc_10047F26
loc_10047F19:
	MOV ECX, EDI
	ADD EDI, 0x18
	CALL_LONG(offset [LEGO1_text.m47290_sub_10048290])
	DEC EBX
	JNS loc_10047F19
loc_10047F26:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	JMP loc_10047F2D
loc_10047F2B:
	XOR EAX, EAX
loc_10047F2D:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV DWORD PTR [ESI+0x2C],EAX
	XOR EAX, EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV EDI, EAX
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	XOR BL, BL
	MOV DWORD PTR [ESI+0x08],EDI
	MOV BYTE PTR [ESI+0x04],CL
	CMP BYTE PTR [EBP+var_10+0x3],BL
	JBE loc_10047F8E
loc_10047F5A:
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100481E4
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	AND ECX, 0x0000FFFF
	SHL ECX, 0x06
	ADD ECX,DWORD PTR [EAX+0x0C]
	XOR EAX, EAX
	MOV AL, BL
	INC BL
	MOV DWORD PTR [EAX*4+EDI],ECX
	CMP BL,BYTE PTR [EBP+var_10+0x3]
	JB loc_10047F5A
loc_10047F8E:
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0C]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100481EB
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x0D]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100481F2
	PUSH 0x01
	LEA EAX,DWORD PTR [EBP+var_10+0x2]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_100481F9
	CMP BYTE PTR [EBP+var_10+0x2],0x00
	JBE loc_10048006
	XOR EAX, EAX
	MOV AL,BYTE PTR [EBP+var_10+0x2]
	INC EAX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [ESI+0x10],EAX
	XOR EAX, EAX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV AL,BYTE PTR [EBP+var_10+0x2]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_10048200
	XOR ECX, ECX
	MOV EAX,DWORD PTR [ESI+0x10]
	MOV CL,BYTE PTR [EBP+var_10+0x2]
	MOV BYTE PTR [EAX+ECX],0x00
loc_10048006:
	LEA EAX,DWORD PTR [ESI+0x14]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m472E0_sub_100482E0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_10048207
	XOR BL, BL
	CMP BYTE PTR [EBP+var_10+0x3],BL
	JBE loc_1004804E
loc_10048025:
	XOR EAX, EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV AL, BL
	LEA EAX,DWORD PTR [EAX*2+EAX]
	SHL EAX, 0x03
	ADD EAX,DWORD PTR [ESI+0x2C]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m472E0_sub_100482E0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_1004820E
	INC BL
	CMP BL,BYTE PTR [EBP+var_10+0x3]
	JB loc_10048025
loc_1004804E:
	LEA EAX,DWORD PTR [ESI+0x30]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m472B0_sub_100482B0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_10048215
	PUSH 0x04
	LEA EAX,DWORD PTR [ESI+0x44]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_1004821C
	PUSH 0x01
	LEA EAX,DWORD PTR [ESI+0x48]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_10048223
	CMP BYTE PTR [ESI+0x48],0x00
	JBE FAR loc_100481AF
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EBP+var_2C+0x4],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EDI, EAX
	MOV EAX, 0x00000000
	TEST EDI, EDI
	JZ loc_100480CB
	LEA EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX, EDI
	MOV DWORD PTR [EDI], offset [LEGO1_rdata.m488_ptr]
loc_100480CB:
	XOR EBX, EBX
	MOV DWORD PTR [ESI+0x50],EAX
	MOV BL,BYTE PTR [ESI+0x48]
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	LEA EAX,DWORD PTR [EBX*2+EBX]
	SHL EAX, 0x02
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000002
	TEST EAX, EAX
	JZ loc_1004810E
	MOV EDI, EAX
	DEC EBX
	JS loc_10048109
loc_100480FC:
	MOV ECX, EDI
	ADD EDI, 0x0C
	CALL_LONG(offset [LEGO1_text.m47280_sub_10048280])
	DEC EBX
	JNS loc_100480FC
loc_10048109:
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	JMP loc_10048110
loc_1004810E:
	XOR EAX, EAX
loc_10048110:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	XOR BL, BL
	MOV DWORD PTR [ESI+0x4C],EAX
	CMP BYTE PTR [ESI+0x48],BL
	JBE loc_10048197
loc_10048121:
	PUSH 0x02
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_1004822A
	XOR EAX, EAX
	MOV EDX,DWORD PTR [ESI+0x4C]
	MOV AL, BL
	PUSH 0x04
	LEA ECX,DWORD PTR [EAX*2+EAX]
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	LEA EDI,DWORD PTR [ECX*4+0x00000000]
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	AND ECX, 0x0000FFFF
	SHL ECX, 0x02
	LEA ECX,DWORD PTR [ECX*4+ECX]
	ADD ECX,DWORD PTR [EAX+0x14]
	MOV DWORD PTR [EDI+EDX],ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ESI+0x4C]
	ADD EAX, EDI
	ADD EAX, 0x04
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_10048231
	PUSH 0x04
	MOV EAX,DWORD PTR [ESI+0x4C]
	ADD EAX, EDI
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	ADD EAX, 0x08
	PUSH EAX
	CALL_LONG(DWORD PTR [EBP+var_18+0x4])
	TEST EAX, EAX
	JNZ FAR loc_10048238
	INC BL
	CMP BYTE PTR [ESI+0x48],BL
	JA loc_10048121
loc_10048197:
	MOV EAX,DWORD PTR [ESI+0x50]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	PUSH EAX
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m472B0_sub_100482B0])
	ADD ESP, 0x08
	TEST EAX, EAX
	JNZ FAR loc_1004823F
loc_100481AF:
	XOR ECX, ECX
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	ADD DWORD PTR [EBP+var_28+0x4],0x74
	MOV CX,WORD PTR DS:[EAX+0x18]
	INC DWORD PTR [EBP+var_24+0x4]
	CMP ECX,DWORD PTR [EBP+var_24+0x4]
	JG FAR loc_10047ED5
loc_100481C8:
	XOR EAX, EAX
loc_100481CA:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_100481DD:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_100481E4:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_100481EB:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_100481F2:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_100481F9:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048200:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048207:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_1004820E:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048215:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_1004821C:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048223:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_1004822A:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048231:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_10048238:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
loc_1004823F:
	MOV EAX, 0xFFFFFFFF
	JMP loc_100481CA
}
}

__declspec(naked) DWORD LEGO1_proc_10048246()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_proc_10048253()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	MOV EAX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10048280()
{
__asm{
	XOR EAX, EAX
	MOV DWORD PTR [ECX],EAX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x08],EAX
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10048290()
{
__asm{
	LEA EAX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m1E8_ptr]
	MOV EAX, ECX
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100482B0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg2]
	PUSH 0x0C
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	CMP EAX, 0x01
	MOV EAX, 0x00000000
	ADC EAX, -0x01
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_100482E0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg2]
	PUSH 0x10
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x28])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	CMP EAX, 0x01
	MOV EAX, 0x00000000
	ADC EAX, -0x01
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048310(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6, DWORD arg7, DWORD arg8, DWORD arg9)
{
	enum{
		var_154 = -0x154,
		var_14C = -0x14C,
		var_148 = -0x148,
		var_134 = -0x134,
		var_130 = -0x130,
		var_12C = -0x12C,
		var_128 = -0x128,
		var_124 = -0x124,
		var_120 = -0x120,
		var_11C = -0x11C,
		var_114 = -0x114,
		var_100 = -0x100,
		var_FC = -0xFC,
		var_F8 = -0xF8,
		var_F4 = -0xF4,
		var_F0 = -0xF0,
		var_E0 = -0xE0,
		var_DC = -0xDC,
		var_D8 = -0xD8,
		var_D4 = -0xD4,
		var_C8 = -0xC8,
		var_C4 = -0xC4,
		var_C0 = -0xC0,
		var_BC = -0xBC,
		var_B8 = -0xB8,
		var_B4 = -0xB4,
		var_B0 = -0xB0,
		var_A8 = -0xA8,
		var_A4 = -0xA4,
		var_A0 = -0xA0,
		var_9C = -0x9C,
		var_94 = -0x94,
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_7C = -0x7C,
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
		arg2 = 0x8,
		arg4 = 0x10,
		arg5 = 0x14,
		arg6 = 0x18,
		arg7 = 0x1C,
		arg8 = 0x20,
		arg9 = 0x24,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m47C20_proc_10048C20]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x00000144
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EBX,DWORD PTR [ECX+0x0C]
	ADD ECX, 0x0C
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [EBP+arg6+0x4]
	MOV EBX,DWORD PTR [ECX+0x20]
	ADD ECX, 0x20
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000088])
	MOV EDX,DWORD PTR [EBP+arg7+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV ESI,DWORD PTR [EBP+arg4+0x4]
	MOV DWORD PTR [ECX+0x34],EDX
	CMP DWORD PTR [EBP+arg7+0x4],ESI
	JNZ loc_10048383
	OR BYTE PTR [ECX+0x38],0x01
loc_1004836E:
	XOR EAX, EAX
loc_10048370:
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP EDI
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0024
loc_10048383:
	MOV AL,BYTE PTR [EBP-0x0D]
	PUSH 0x00
	PUSH 0x00
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	MOV BYTE PTR [EBP+var_54+0x4],AL
	CALL_LONG(offset [LEGO1_text.m48470_sub_10049470])
	MOV DWORD PTR [EBP+var_4C+0x4],0x00000000
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV DWORD PTR [EBP+var_50+0x4],EAX
	MOV AL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [EBP+var_6C+0x4],AL
	ADD EDI, 0x20
	MOV CL,BYTE PTR [EBP+var_10+0x3]
	MOV BYTE PTR [EBP+var_68+0x1],CL
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	MOV DWORD PTR [EBP+var_64+0x4],0x00000001
	CALL_LONG(offset [LEGO1_text.m48D50_sub_10049D50])
	PUSH EDI
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m47FC0_sub_10048FC0])
	MOV BYTE PTR [EBP+var_8+0x4],0x07
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],0x497423F0
	AND BYTE PTR [ECX+0x38],0xFE
	MOV DWORD PTR [EBP+var_20+0x4],0x00000000
	MOV DWORD PTR [EBP+var_24+0x4],0x00000000
loc_100483F4:
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x04]
	CMP EAX,DWORD PTR [EBP+var_20+0x4]
	JLE FAR loc_100486CC
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EBP+var_24+0x4]
	MOV EDX,DWORD PTR [EAX+ECX]
	MOV DWORD PTR [EBP+var_14+0x4],EDX
	MOV CX,WORD PTR DS:[EDX+0x24]
	TEST CL,0x03
	JZ FAR loc_100486B1
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EAX, EDI
	CMP ESI, EDI
	JNZ loc_10048427
	MOV EAX,DWORD PTR [EDX+0x08]
loc_10048427:
	TEST EAX, EAX
	JZ FAR loc_100486B1
	MOV EDX,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_1004844A
	TEST CL,0x01
	JZ loc_1004844A
	MOV DL,BYTE PTR [EAX+0x0C]
	AND DL,BYTE PTR [EBP+arg8+0x4]
	AND DL, 0x03
	CMP DL,BYTE PTR [EBP+arg8+0x4]
	JZ loc_1004846D
loc_1004844A:
	CMP EDI, EAX
	JNZ FAR loc_100486B1
	TEST CL,0x02
	JZ FAR loc_100486B1
	MOV CL,BYTE PTR [EAX+0x0C]
	AND CL,BYTE PTR [EBP+arg8+0x4]
	AND CL, 0x03
	CMP CL,BYTE PTR [EBP+arg8+0x4]
	JNZ FAR loc_100486B1
loc_1004846D:
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	CMP DWORD PTR [EBP+arg7+0x4],EAX
	JNZ FAR loc_10048600
	MOV EBX,DWORD PTR [EDI+0x1C]
	LEA ECX,DWORD PTR [EBP+var_B0+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [EBP+var_B8+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EBP+var_B4+0x4]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	MOV EAX,DWORD PTR [EDI+0x20]
	MOV EBX,DWORD PTR [EBP+var_B8+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV DWORD PTR [EBP+var_5C+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_5C+0x4]
	MOV EBX,DWORD PTR [EBP+var_B8+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	MOV EBX,DWORD PTR [EBP+var_B8+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_9C+0x4]
	PUSH ECX
	MOV EBX,DWORD PTR [EDI+0x1C]
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [EBP+var_A4+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EBP+var_A0+0x4]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	MOV EAX,DWORD PTR [EDI+0x20]
	MOV EBX,DWORD PTR [EBP+var_A4+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV DWORD PTR [EBP+var_58+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_58+0x4]
	MOV EBX,DWORD PTR [EBP+var_A4+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EBX,DWORD PTR [EBP+var_A4+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	LEA ECX,DWORD PTR [EBP+var_B8+0x4]
	CALL_LONG(offset [LEGO1_text.m2BD0_sub_10003BD0])
	FSQRT
	LEA ECX,DWORD PTR [EBP+var_A4+0x4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	CALL_LONG(offset [LEGO1_text.m2BD0_sub_10003BD0])
	FSQRT
	FADD DWORD PTR [EBP+var_2C+0x4]
	FCOM DWORD PTR [EBP+var_30+0x4]
	FSTP DWORD PTR [EBP+var_2C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_100486B1
	MOV EAX,DWORD PTR [EBP+var_2C+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_28+0x4],EAX
	MOV EDX,DWORD PTR [EAX]
	MOV EDI, EDX
	MOV DWORD PTR [EBP+var_1C+0x4],EDX
	CMP DWORD PTR [EBP+var_1C+0x4],EAX
	JZ loc_100485CE
loc_100485B8:
	PUSH EDI
	MOV EAX, EDI
	MOV EDI,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m47F70_sub_10048F70])
	CMP EDI,DWORD PTR [EBP+var_28+0x4]
	JNZ loc_100485B8
loc_100485CE:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	OR BYTE PTR [ECX+0x38],0x01
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_90+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_90+0x4]
	PUSH EAX
	MOV DWORD PTR [EBP+var_8C+0x4],ESI
	MOV EDX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [EBP+var_74+0x4]
	PUSH EDX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m47F10_sub_10048F10])
	JMP FAR loc_100486B1
loc_10048600:
	MOV EAX,DWORD PTR [EDI+0x1C]
	LEA ECX,DWORD PTR [EBP+var_F0+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m47ED0_sub_10048ED0])
	MOV EAX,DWORD PTR [EDI+0x20]
	LEA ECX,DWORD PTR [EBP+var_F0+0x4]
	PUSH EAX
	MOV EBX,DWORD PTR [EBP+var_F0+0x4]
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV DWORD PTR [EBP+var_40+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_40+0x4]
	MOV EBX,DWORD PTR [EBP+var_F0+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_F0+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	MOV EBX,DWORD PTR [EBP+var_F0+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_F0+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	LEA ECX,DWORD PTR [EBP+var_F0+0x4]
	CALL_LONG(offset [LEGO1_text.m2BD0_sub_10003BD0])
	FSQRT
	MOV EAX,DWORD PTR [EBP+var_50+0x4]
	MOV EDI,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EBP+var_100+0x4],EDI
	MOV DWORD PTR [EBP+var_FC+0x4],ESI
	LEA ECX,DWORD PTR [EBP+var_78+0x4]
	MOV DWORD PTR [EBP+var_F8+0x4],0x00000000
	LEA EDI,DWORD PTR [EBP+var_100+0x4]
	PUSH EDI
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	FSTP DWORD PTR [EBP+var_F4+0x4]
	CALL_LONG(offset [LEGO1_text.m48410_sub_10049410])
	MOV ECX,DWORD PTR [EBP+var_50+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [EBP+var_11C+0x4]
	ADD EAX, 0x08
	MOV DWORD PTR [EBP+var_34+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_34+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(offset [LEGO1_text.m485B0_sub_100495B0])
loc_100486B1:
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m48160_sub_10049160])
	ADD DWORD PTR [EBP+var_24+0x4],0x04
	INC DWORD PTR [EBP+var_20+0x4]
	JMP FAR loc_100483F4
loc_100486CC:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	TEST BYTE PTR [ECX+0x38],0x01
	JNZ FAR loc_10048AE5
	CMP DWORD PTR [EBP+var_7C+0x4],0x00
	JBE FAR loc_10048AE5
loc_100486E3:
	MOV DWORD PTR [EBP+var_C8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_C4+0x4],0x00000000
	MOV DWORD PTR [EBP+var_C0+0x4],0x00000000
	MOV DWORD PTR [EBP+var_20+0x4],0x497423F0
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	MOV DWORD PTR [EBP+var_BC+0x4],0x00000000
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_24+0x4],ECX
	MOV DWORD PTR [EBP+var_38+0x4],ECX
	MOV ECX,DWORD PTR [EBP+var_24+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	CMP DWORD PTR [EBP+var_24+0x4],EAX
	JZ loc_10048733
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	CALL_LONG(offset [LEGO1_text.m484A0_sub_100494A0])
loc_10048733:
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	CMP DWORD PTR [EBP+var_24+0x4],EAX
	JZ FAR loc_10048A87
loc_1004873F:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	ADD EAX, 0x0C
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV ESI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+var_28+0x4],0x00000001
	MOV EBX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EBX+0x04]
	MOV EDI, ECX
	CMP DWORD PTR [ESI+0x04],ECX
	JNZ loc_10048760
	MOV EDI,DWORD PTR [EBX+0x08]
loc_10048760:
	CMP DWORD PTR [EBX+0x08],EDI
	JNZ loc_10048778
	TEST BYTE PTR [EBX+0x24],0x01
	JZ loc_10048778
	MOV AL,BYTE PTR [EDI+0x0C]
	AND AL,BYTE PTR [EBP+arg8+0x4]
	AND AL, 0x03
	CMP AL,BYTE PTR [EBP+arg8+0x4]
	JZ loc_1004879B
loc_10048778:
	CMP EDI, ECX
	JNZ FAR loc_10048A4C
	TEST BYTE PTR [EBX+0x24],0x02
	JZ FAR loc_10048A4C
	MOV AL,BYTE PTR [EDI+0x0C]
	AND AL,BYTE PTR [EBP+arg8+0x4]
	AND AL, 0x03
	CMP AL,BYTE PTR [EBP+arg8+0x4]
	JNZ FAR loc_10048A4C
loc_1004879B:
	CMP DWORD PTR [EBP+arg7+0x4],EDI
	JNZ FAR loc_100488E5
	MOV EDI,DWORD PTR [EBX+0x1C]
	LEA EAX,DWORD PTR [EBP+var_D4+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_DC+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],0x00000000
	CALL_LONG(offset [LEGO1_text.m1C150_sub_1001D150])
	MOV DWORD PTR [EBP+var_DC+0x4],offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EBP+var_D8+0x4]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX+0x04],EDI
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [EBP+var_DC+0x4]
	MOV EAX,DWORD PTR [EBX+0x20]
	MOV EBX,DWORD PTR [EBP+var_DC+0x4]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x48])
	MOV DWORD PTR [EBP+var_F4+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_F4+0x4]
	MOV EBX,DWORD PTR [EBP+var_DC+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_DC+0x4]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EBP+arg5+0x4]
	MOV EBX,DWORD PTR [EBP+var_DC+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_DC+0x4]
	CALL_LONG(DWORD PTR [EBX+0x54])
	LEA ECX,DWORD PTR [EBP+var_DC+0x4]
	CALL_LONG(offset [LEGO1_text.m2BD0_sub_10003BD0])
	FSQRT
	FADD DWORD PTR [ESI+0x0C]
	FCOM DWORD PTR [EBP+var_20+0x4]
	FSTP DWORD PTR [EBP+var_1C+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_10048A4C
	MOV DWORD PTR [EBP+var_C8+0x4],0x00000000
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	FLD DWORD PTR [EBP+var_1C+0x4]
	FCOMP DWORD PTR [EBP+var_30+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_10048A4C
	MOV EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_30+0x4],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EBP+var_48+0x4],EAX
	MOV EDX,DWORD PTR [EAX]
	MOV EDI, EDX
	MOV DWORD PTR [EBP+var_2C+0x4],EDX
	MOV EAX,DWORD PTR [EBP+var_48+0x4]
	CMP DWORD PTR [EBP+var_2C+0x4],EAX
	JZ loc_100488A2
loc_10048889:
	PUSH EDI
	MOV EAX, EDI
	MOV EDI,DWORD PTR [EDI]
	LEA ECX,DWORD PTR [EBP+var_94+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m47F70_sub_10048F70])
	CMP DWORD PTR [EBP+var_48+0x4],EDI
	JNZ loc_10048889
loc_100488A2:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	OR BYTE PTR [ECX+0x38],0x01
loc_100488A9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [ESI]
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_124+0x4],ECX
	MOV DWORD PTR [EBP+var_120+0x4],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	LEA EDX,DWORD PTR [EBP+var_124+0x4]
	MOV ECX,DWORD PTR [EAX]
	PUSH EDX
	LEA EAX,DWORD PTR [EBP+var_A8+0x4]
	PUSH ECX
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m47F10_sub_10048F10])
	MOV ESI,DWORD PTR [ESI+0x08]
	TEST ESI, ESI
	JNZ loc_100488A9
	JMP FAR loc_10048A4C
loc_100488E5:
	MOV DWORD PTR [EBP+var_3C+0x4],0x00000000
	CMP BYTE PTR [EDI+0x04],0x00
	JBE FAR loc_10048A4C
	MOV DWORD PTR [EBP+var_40+0x4],0x00000000
loc_100488FD:
	MOV ECX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBP+var_40+0x4]
	MOV EDX,DWORD PTR [EAX+ECX]
	MOV DWORD PTR [EBP+var_18+0x4],EDX
	TEST BYTE PTR [EDX+0x24],0x03
	JZ FAR loc_10048A37
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	LEA ECX,DWORD PTR [EBP+var_78+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	CALL_LONG(offset [LEGO1_text.m48290_sub_10049290])
	MOV ECX,DWORD PTR [EBP+var_78+0x4]
	CMP DWORD PTR [EBP+var_84+0x4],ECX
	JZ FAR loc_10048A37
	MOV ESI,DWORD PTR [EBP+var_18+0x4]
	LEA ECX,DWORD PTR [EBP+var_114+0x4]
	MOV DWORD PTR [EBP+var_28+0x4],0x00000000
	MOV EAX,DWORD PTR [ESI+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m47ED0_sub_10048ED0])
	MOV EAX,DWORD PTR [EBX+0x1C]
	LEA ECX,DWORD PTR [EBP+var_148+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m47ED0_sub_10048ED0])
	MOV EAX,DWORD PTR [ESI+0x20]
	LEA ECX,DWORD PTR [EBP+var_114+0x4]
	PUSH EAX
	MOV ESI,DWORD PTR [EBP+var_114+0x4]
	CALL_LONG(DWORD PTR [ESI+0x48])
	MOV DWORD PTR [EBP+var_74+0x4],0x3F000000
	LEA ECX,DWORD PTR [EBP+var_74+0x4]
	MOV ESI,DWORD PTR [EBP+var_114+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_114+0x4]
	CALL_LONG(DWORD PTR [ESI+0x5C])
	MOV ECX,DWORD PTR [EBX+0x20]
	MOV EAX,DWORD PTR [EBP+var_148+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_148+0x4]
	CALL_LONG(DWORD PTR [EAX+0x48])
	LEA ECX,DWORD PTR [EBP+var_70+0x4]
	MOV ESI,DWORD PTR [EBP+var_148+0x4]
	MOV DWORD PTR [EBP+var_70+0x4],0x3F000000
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_148+0x4]
	CALL_LONG(DWORD PTR [ESI+0x5C])
	LEA ECX,DWORD PTR [EBP+var_148+0x4]
	MOV EAX,DWORD PTR [EBP+var_114+0x4]
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_114+0x4]
	CALL_LONG(DWORD PTR [EAX+0x54])
	LEA ECX,DWORD PTR [EBP+var_114+0x4]
	CALL_LONG(offset [LEGO1_text.m2BD0_sub_10003BD0])
	FSQRT
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV EDX,DWORD PTR [ECX]
	FADD DWORD PTR [EDX+0x0C]
	FCOM DWORD PTR [EBP+var_20+0x4]
	FSTP DWORD PTR [EBP+var_44+0x4]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_10048A37
	MOV EAX,DWORD PTR [EBP+var_44+0x4]
	MOV DWORD PTR [EBP+var_130+0x4],EDI
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EDX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_134+0x4],ECX
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EBP+var_44+0x4]
	LEA EDX,DWORD PTR [EBP+var_134+0x4]
	MOV DWORD PTR [EBP+var_12C+0x4],EAX
	MOV DWORD PTR [EBP+var_128+0x4],ECX
	LEA ECX,DWORD PTR [EBP+var_C8+0x4]
	MOV EAX,DWORD PTR [EDX]
	MOV ESI,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x04],ESI
	MOV EDX,DWORD PTR [EDX+0x0C]
	MOV DWORD PTR [ECX+0x08],EAX
	MOV DWORD PTR [ECX+0x0C],EDX
loc_10048A37:
	XOR EAX, EAX
	INC DWORD PTR [EBP+var_3C+0x4]
	ADD DWORD PTR [EBP+var_40+0x4],0x04
	MOV AL,BYTE PTR [EDI+0x04]
	CMP EAX,DWORD PTR [EBP+var_3C+0x4]
	JG FAR loc_100488FD
loc_10048A4C:
	CMP DWORD PTR [EBP+var_28+0x4],0x00
	JZ loc_10048A65
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	LEA ECX,DWORD PTR [EBP+var_E0+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(offset [LEGO1_text.m48890_sub_10049890])
loc_10048A65:
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	CMP DWORD PTR [EBP+var_38+0x4],EAX
	JZ loc_10048A87
	MOV EAX,DWORD PTR [EBP+var_38+0x4]
	LEA ECX,DWORD PTR [EBP+var_38+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m484A0_sub_100494A0])
	MOV EAX,DWORD PTR [EBP+var_68+0x4]
	CMP DWORD PTR [EBP+var_14+0x4],EAX
	JNZ FAR loc_1004873F
loc_10048A87:
	CMP DWORD PTR [EBP+var_C8+0x4],0x00
	JZ loc_10048AE5
	LEA EAX,DWORD PTR [EBP+var_C8+0x4]
	LEA ECX,DWORD PTR [EBP+var_88+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m48160_sub_10049160])
	MOV EAX,DWORD PTR [EBP+var_50+0x4]
	LEA ECX,DWORD PTR [EBP+var_C8+0x4]
	PUSH ECX
	LEA EDX,DWORD PTR [EBP+var_14C+0x4]
	PUSH EAX
	LEA ECX,DWORD PTR [EBP+var_54+0x4]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m48410_sub_10049410])
	MOV ECX,DWORD PTR [EBP+var_50+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [EBP+var_154+0x4]
	ADD EAX, 0x08
	MOV DWORD PTR [EBP+var_58+0x4],EAX
	LEA EAX,DWORD PTR [EBP+var_58+0x4]
	PUSH EAX
	PUSH ECX
	LEA ECX,DWORD PTR [EBP+var_6C+0x4]
	CALL_LONG(offset [LEGO1_text.m485B0_sub_100495B0])
	CMP DWORD PTR [EBP+var_7C+0x4],0x00
	JA FAR loc_100486E3
loc_10048AE5:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	TEST BYTE PTR [ECX+0x38],0x01
	JNZ loc_10048B16
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m47BF5_sub_10048BF5])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m47C10_sub_10048C10])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m47C2A_sub_10048C2A])
	MOV EAX, 0xFFFFFFFF
	JMP FAR loc_10048370
loc_10048B16:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [ECX+0x08],0x00
	JBE loc_10048B4C
	LEA EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m47F00_sub_10048F00])
	MOV EAX,DWORD PTR [EAX]
	MOV ECX,DWORD PTR [EBP+arg2+0x4]
	PUSH ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CALL_LONG(offset [LEGO1_text.m47C40_sub_10048C40])
	TEST EAX, EAX
	JZ loc_10048B4C
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [EBP+var_18+0x4]
	PUSH EDX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m47F70_sub_10048F70])
loc_10048B4C:
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CMP DWORD PTR [ECX+0x08],0x00
	JBE loc_10048BB0
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EBP+arg5+0x4]
	PUSH EAX
	MOV ESI,DWORD PTR [EDX+0x08]
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m47C40_sub_10048C40])
	TEST EAX, EAX
	JZ loc_10048BB0
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV EDI,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDI+0x04]
	ADD EDI, 0x04
	MOV EDX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EDX, EAX
	JNZ loc_10048B8B
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_10048BB0
	JMP loc_10048B8F
loc_10048B8B:
	TEST EAX, EAX
	JZ loc_10048BB0
loc_10048B8F:
	CMP EDX, EAX
	JNZ loc_10048B96
	MOV EAX,DWORD PTR [ESI+0x08]
loc_10048B96:
	CMP DWORD PTR [EBP+arg7+0x4],EAX
	JNZ loc_10048BB0
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [ECX+0x34],EDX
	LEA ECX,DWORD PTR [EBP+var_18+0x4]
	MOV EAX,DWORD PTR [EDI]
	PUSH EAX
	PUSH ECX
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	CALL_LONG(offset [LEGO1_text.m47F70_sub_10048F70])
loc_10048BB0:
	MOV EAX,DWORD PTR [EBP+arg9+0x4]
	TEST EAX, EAX
	JZ loc_10048BBC
	MOV ECX,DWORD PTR [EBP+var_30+0x4]
	MOV DWORD PTR [EAX],ECX
loc_10048BBC:
	MOV BYTE PTR [EBP+var_8+0x4],0x04
	CALL_LONG(offset [LEGO1_text.m47BF5_sub_10048BF5])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	CALL_LONG(offset [LEGO1_text.m47C10_sub_10048C10])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m47C2A_sub_10048C2A])
	JMP FAR loc_1004836E
}
}

__declspec(naked) DWORD LEGO1_sub_10048BF5()
{
	enum{
		arg1217191 = 0x4A4A9C,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217191-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m447E0_loc_100457E0])
}
}

__declspec(naked) DWORD LEGO1_sub_10048C10()
{
	enum{
		arg1217198 = 0x4A4AB8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217198-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m491A0_loc_1004A1A0])
}
}

__declspec(naked) DWORD LEGO1_sub_10048C2A()
{
	enum{
		arg1217204 = 0x4A4AD0,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217204-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49150_loc_1004A150])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048C40(DWORD arg1)
{
	enum{
		var_14 = -0x14,
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x14
	MOV EDX,DWORD PTR [ECX+0x2C]
	FLD DWORD PTR [EDX]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3D40]
	PUSH ESI
	PUSH EDI
	XOR ESI, ESI
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10048CBE
	FLD QWORD PTR [ESP+var_14+0x1C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048CBE
	MOV EAX,DWORD PTR [ECX+0x1C]
	ADD ECX, 0x1C
	MOV EDI,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EDI]
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	MOV EAX,DWORD PTR [EDI+0x04]
	FLD DWORD PTR [EAX]
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FLD QWORD PTR [ESP+var_14+0x1C]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048CB4
	FLD QWORD PTR [ESP+var_14+0x1C]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10048CFC
loc_10048CB4:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048CBE:
	MOV EDI,DWORD PTR [ESP+arg1+0x1C]
	MOV ESI,DWORD PTR [ECX+0x1C]
	ADD ECX, 0x1C
	MOV EAX,DWORD PTR [EDI+0x04]
	FLD DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESI+0x04]
	FSUB DWORD PTR [EAX]
	FDIV DWORD PTR [EDX]
	FCOM DWORD PTR [offset LEGO1_rdata + 0x3D30]
	FSTP DWORD PTR [ESP+var_4+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ FAR loc_10048EBB
	CMP DWORD PTR [ESP+var_4+0x1C],0x3F800000
	JG FAR loc_10048EBB
	MOV ESI, 0x00000001
loc_10048CFC:
	FLD DWORD PTR [EDX+0x04]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10048D6B
	FLD QWORD PTR [ESP+var_14+0x1C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048D6B
	MOV EAX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDI+0x04]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FLD DWORD PTR [EAX+0x04]
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FLD QWORD PTR [ESP+var_14+0x1C]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048D61
	FLD QWORD PTR [ESP+var_14+0x1C]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10048DD5
loc_10048D61:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048D6B:
	MOV EAX,DWORD PTR [EDI+0x04]
	TEST ESI, ESI
	FLD DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ECX]
	MOV EAX,DWORD PTR [EAX+0x04]
	FSUB DWORD PTR [EAX+0x04]
	FDIV DWORD PTR [EDX+0x04]
	FSTP DWORD PTR [ESP+var_14+0x1C]
	JZ loc_10048DC8
	FLD DWORD PTR [ESP+var_14+0x1C]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FLD DWORD PTR [ESP+var_4+0x1C]
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FLD QWORD PTR [ESP+var_14+0x1C]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048DBE
	FLD QWORD PTR [ESP+var_14+0x1C]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10048DD5
loc_10048DBE:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048DC8:
	MOV ESI, 0x00000001
	MOV EAX,DWORD PTR [ESP+var_14+0x1C]
	MOV DWORD PTR [ESP+var_4+0x1C],EAX
loc_10048DD5:
	FLD DWORD PTR [EDX+0x08]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10048E44
	FLD QWORD PTR [ESP+var_14+0x1C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048E44
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	FLD DWORD PTR [ECX+0x08]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FLD DWORD PTR [EDX+0x08]
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FLD QWORD PTR [ESP+var_14+0x1C]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048E3A
	FLD QWORD PTR [ESP+var_14+0x1C]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JNZ loc_10048E97
loc_10048E3A:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048E44:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV ECX,DWORD PTR [ECX]
	TEST ESI, ESI
	MOV EDI,DWORD PTR [ECX+0x04]
	FLD DWORD PTR [EAX+0x08]
	FSUB DWORD PTR [EDI+0x08]
	FDIV DWORD PTR [EDX+0x08]
	FSTP DWORD PTR [ESP+var_14+0x1C]
	JZ loc_10048EAE
	FLD DWORD PTR [ESP+var_14+0x1C]
	FSTP QWORD PTR [ESP+var_14+0x1C]
	FLD DWORD PTR [ESP+var_4+0x1C]
	FSTP QWORD PTR [ESP+var_C+0x1C]
	FLD QWORD PTR [ESP+var_14+0x1C]
	FADD QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_10048EA4
	FLD QWORD PTR [ESP+var_14+0x1C]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FCOMP QWORD PTR [ESP+var_C+0x1C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10048EA4
loc_10048E97:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048EA4:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048EAE:
	MOV EAX, 0x00000001
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
loc_10048EBB:
	XOR EAX, EAX
	POP EDI
	POP ESI
	ADD ESP, 0x14
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048ED0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg1]
	PUSH ESI
	LEA ESI,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m288_ptr]
	MOV DWORD PTR [ECX+0x04],ESI
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m488_ptr]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESI+0x04],EAX
	MOV EAX, ECX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI+0x08],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048F00(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048F10(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x10
	MOV EDI,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_10048F31
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_10048F36
loc_10048F31:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10048F36:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_10048F53
	MOV ECX,DWORD PTR [ESP+arg3+0xC]
	MOV EDI,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX],EDI
	MOV DWORD PTR [EDX+0x04],EBX
loc_10048F53:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048F70(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	PUSH ESI
	LEA EDX,DWORD PTR [EAX+0x04]
	MOV ESI, ECX
	MOV DWORD PTR [ESP+var_4+0x8],EAX
	MOV ECX,DWORD PTR [EAX]
	MOV EAX, ECX
	MOV DWORD PTR [ESP+arg2+0x8],ECX
	MOV ECX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV ECX,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ESP+var_4+0x8]
	PUSH EAX
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [EDX+0x04],ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0xC]
	MOV EAX,DWORD PTR [ESP+arg1+0xC]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x08]
	MOV DWORD PTR [EAX],ECX
	POP ESI
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10048FC0(DWORD arg1)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4813F_proc_1004913F]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	SUB ESP, 0x10
	MOV AL,BYTE PTR [EAX]
	MOV EDX,DWORD PTR [EBP+arg1+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EBX
	MOV BYTE PTR [ECX],AL
	PUSH ESI
	PUSH EDI
	MOV AL,BYTE PTR [EDX+0x01]
	XOR ESI, ESI
	MOV BYTE PTR [ECX+0x01],AL
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EAX
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ESI
	JNZ loc_10049027
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x4360], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4360]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10049027:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m48149_sub_10049149])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4360]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV DWORD PTR [ECX+0x0C],0x00000000
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [EBP+arg1+0x4]
	LEA EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EBP+var_1C+0x4],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDI,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBP+var_18+0x4],EDI
loc_10049077:
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDI
	JZ loc_100490C6
	MOV EAX,DWORD PTR [EDI+0x10]
	PUSH 0x14
	MOV DWORD PTR [EBP+var_20+0x4],EAX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EAX+0x04],ESI
	ADD ESP, 0x04
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EBP+var_20+0x4]
	MOV DWORD PTR [EBX+0x10],EAX
	CMP DWORD PTR [EBP+var_18+0x4],EDI
	JNZ loc_100490A2
	MOV DWORD PTR [EBP+var_18+0x4],EBX
loc_100490A2:
	PUSH EBX
	MOV EAX,DWORD PTR [EDI+0x08]
	PUSH EAX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	CALL_LONG(offset [LEGO1_text.m482F0_sub_100492F0])
	MOV DWORD PTR [EBX+0x08],EAX
	LEA EAX,DWORD PTR [EBX+0x0C]
	TEST EAX, EAX
	JZ loc_100490BE
	MOV ECX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EAX],ECX
loc_100490BE:
	MOV DWORD PTR [ESI],EBX
	MOV ESI, EBX
	MOV EDI,DWORD PTR [EDI]
	JMP loc_10049077
loc_100490C6:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4360]
	MOV ECX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EBP+arg1+0x4]
	MOV EDX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [ECX],EDX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EBX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [ECX+0x0C],EBX
	MOV ECX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ECX
	JNZ loc_10049110
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
loc_100490FA:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP EDI
	POP ESI
	POP EBX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
loc_10049110:
	MOV EDX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EDX
	JZ loc_1004911E
	MOV ECX, EDX
	JMP loc_10049110
loc_1004911E:
	MOV DWORD PTR [EAX],ECX
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV EAX,DWORD PTR [EAX+0x04]
loc_1004912C:
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],ECX
	JZ loc_1004913B
	MOV EAX, ECX
	JMP loc_1004912C
loc_1004913B:
	MOV DWORD PTR [EDX],EAX
	JMP loc_100490FA
}
}

__declspec(naked) DWORD LEGO1_sub_10049149()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049160(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0x1C]
	PUSH EBP
	PUSH EBX
	CALL_LONG(offset [LEGO1_text.m48370_sub_10049370])
	MOV EDI, EAX
	MOV EDX,DWORD PTR [ESI+0x04]
	MOV ECX, EDX
	MOV EBP,DWORD PTR [EDX+0x04]
	CMP EBP,DWORD PTR [offset LEGO1_data + 0x4360]
	JZ loc_1004919E
	MOV EAX,DWORD PTR [EBX]
loc_10049187:
	CMP DWORD PTR [EBP+arg1217227-0x4A4B20],EAX
	JL loc_10049193
	MOV ECX, EBP
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	JMP loc_10049196
loc_10049193:
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
loc_10049196:
	CMP EBP,DWORD PTR [offset LEGO1_data + 0x4360]
	JNZ loc_10049187
loc_1004919E:
	MOV EBX, ECX
	MOV DWORD PTR [ESP+var_10+0x20],ECX
	MOV DWORD PTR [ESP+var_4+0x20],0x00000000
	CMP ECX, EDI
	JZ loc_100491EA
loc_100491B0:
	MOV EAX,DWORD PTR [EBX+0x08]
	INC DWORD PTR [ESP+var_4+0x20]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EAX
	JZ loc_100491CD
loc_100491BF:
	MOV EBX,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EBX
	JZ loc_100491E4
	MOV EAX, EBX
	JMP loc_100491BF
loc_100491CD:
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX+0x08],EBX
	JNZ loc_100491DF
loc_100491D5:
	MOV EBX, EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EAX+0x08],EBX
	JZ loc_100491D5
loc_100491DF:
	CMP DWORD PTR [EBX+0x08],EAX
	JZ loc_100491E6
loc_100491E4:
	MOV EBX, EAX
loc_100491E6:
	CMP EBX, EDI
	JNZ loc_100491B0
loc_100491EA:
	CMP DWORD PTR [ESI+0x0C],0x00
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	MOV DWORD PTR [ESP+var_C+0x20],EAX
	JZ loc_10049247
	CMP DWORD PTR [EDX],ECX
	JNZ loc_10049247
	CMP EDI, EDX
	JNZ loc_10049247
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX, EDI
loc_10049205:
	CMP DWORD PTR [offset LEGO1_data + 0x4360],EBX
	JZ loc_10049227
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m44700_sub_10045700])
	MOV EBX,DWORD PTR [EBX]
	PUSH EDI
	MOV EDI, EBX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	JMP loc_10049205
loc_10049227:
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x4360]
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x04],ECX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [ESI+0x0C],0x00000000
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	JMP loc_10049273
loc_10049247:
	CMP ECX, EDI
	JZ loc_10049273
loc_1004924B:
	MOV EAX,DWORD PTR [ESP+var_C+0x20]
	LEA ECX,DWORD PTR [ESP+var_C+0x20]
	MOV DWORD PTR [ESP+var_10+0x20],EAX
	CALL_LONG(offset [LEGO1_text.m44270_sub_10045270])
	MOV EAX,DWORD PTR [ESP+var_10+0x20]
	LEA ECX,DWORD PTR [ESP+var_8+0x20]
	PUSH EAX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m442B0_sub_100452B0])
	CMP DWORD PTR [ESP+var_C+0x20],EDI
	JNZ loc_1004924B
loc_10049273:
	MOV EAX,DWORD PTR [ESP+var_4+0x20]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049290(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	PUSH ESI
	PUSH EDI
	MOV ESI,DWORD PTR [ECX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x10]
	MOV EDI, ESI
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x4360]
	JZ loc_100492C1
	MOV EAX,DWORD PTR [ECX]
loc_100492AB:
	CMP DWORD PTR [EDX+0x0C],EAX
	JL loc_100492B6
	MOV EDI, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_100492B9
loc_100492B6:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_100492B9:
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x4360]
	JNZ loc_100492AB
loc_100492C1:
	MOV DWORD PTR [ESP+var_8+0x10],EDI
	CMP EDI, ESI
	JZ loc_100492D4
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EDI+0x0C],EAX
	LEA EAX,DWORD PTR [ESP+var_8+0x10]
	JLE loc_100492DC
loc_100492D4:
	LEA EAX,DWORD PTR [ESP+var_4+0x10]
	MOV DWORD PTR [ESP+var_4+0x10],ESI
loc_100492DC:
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x10]
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100492F0(DWORD arg1, DWORD arg2)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	SUB ESP, 0x08
	MOV DWORD PTR [ESP+var_4+0x8],ECX
	PUSH EBX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	PUSH ESI
	MOV DWORD PTR [ESP+var_8+0x10],EBX
	PUSH EDI
	MOV EDI,DWORD PTR [ESP+arg2+0x14]
	PUSH EBP
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x4360]
	JZ loc_10049359
loc_1004930F:
	MOV EBP,DWORD PTR [EBX+0x10]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV DWORD PTR [EAX+0x04],EDI
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x10],EBP
	MOV ESI, EAX
	CMP EBX,DWORD PTR [ESP+var_8+0x18]
	JNZ loc_1004932E
	MOV DWORD PTR [ESP+var_8+0x18],ESI
loc_1004932E:
	PUSH ESI
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m482F0_sub_100492F0])
	MOV DWORD PTR [ESI+0x08],EAX
	LEA EAX,DWORD PTR [ESI+0x0C]
	TEST EAX, EAX
	JZ loc_1004934B
	MOV ECX,DWORD PTR [EBX+0x0C]
	MOV DWORD PTR [EAX],ECX
loc_1004934B:
	MOV DWORD PTR [EDI],ESI
	MOV EDI, ESI
	MOV EBX,DWORD PTR [EBX]
	CMP EBX,DWORD PTR [offset LEGO1_data + 0x4360]
	JNZ loc_1004930F
loc_10049359:
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4360]
	MOV DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [ESP+var_8+0x18]
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x08
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049370(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x4360]
	JZ loc_1004939A
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV ECX,DWORD PTR [ECX]
loc_10049384:
	CMP DWORD PTR [EDX+0x0C],ECX
	JLE loc_1004938F
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX]
	JMP loc_10049392
loc_1004938F:
	MOV EDX,DWORD PTR [EDX+0x08]
loc_10049392:
	CMP EDX,DWORD PTR [offset LEGO1_data + 0x4360]
	JNZ loc_10049384
loc_1004939A:
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049410(DWORD arg1, DWORD arg2, DWORD arg3)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg2+0xC]
	PUSH 0x18
	MOV EDI,DWORD PTR [EBX+0x04]
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	TEST EDI, EDI
	JZ loc_10049431
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],EDI
	JMP loc_10049436
loc_10049431:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
loc_10049436:
	LEA EDX,DWORD PTR [EAX+0x08]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV ECX,DWORD PTR [EAX+0x04]
	TEST EDX, EDX
	MOV DWORD PTR [ECX],EAX
	JZ loc_1004945F
	MOV EDI,DWORD PTR [ESP+arg3+0xC]
	MOV ECX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX],ECX
	MOV EBX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	MOV EDI,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EDX+0x0C],EDI
loc_1004945F:
	MOV ECX,DWORD PTR [ESP+arg1+0xC]
	INC DWORD PTR [ESI+0x08]
	POP EDI
	POP ESI
	POP EBX
	MOV DWORD PTR [ECX],EAX
	MOV EAX, ECX
	RETN 0x000C
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049470(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x18
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_1004948E
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_1004948E:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_100494A0()
{
__asm{
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EDX
	JZ loc_100494BE
loc_100494AD:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_100494BB
	MOV EDX, EAX
	JMP loc_100494AD
loc_100494BB:
	MOV DWORD PTR [ECX],EDX
	RET
loc_100494BE:
	MOV EDX,DWORD PTR [EAX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JNZ loc_100494D2
loc_100494C6:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX+0x08],EAX
	JZ loc_100494C6
loc_100494D2:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [EAX+0x08],EDX
	JZ loc_100494DB
	MOV DWORD PTR [ECX],EDX
loc_100494DB:
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_100495B0(DWORD arg1, DWORD arg2)
{
	enum{
		var_C = -0xC,
		var_8 = -0x8,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217227 = 0x4A4B2C,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x0C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	MOV EAX, 0x00000001
	MOV ECX,DWORD PTR [ESI+0x04]
	MOV EBP, ECX
	MOV EBX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JZ loc_10049602
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	MOV EDX,DWORD PTR [EAX]
	ADD EDX, 0x0C
loc_100495D7:
	MOV EBP, EBX
	MOV EAX,DWORD PTR [EBX+0x0C]
	FLD DWORD PTR [EAX+0x0C]
	FCOMP DWORD PTR [EDX]
	FNSTSW AX
	TEST AH,0x41
	MOV EAX, 0x00000001
	JZ loc_100495EF
	XOR EAX, EAX
loc_100495EF:
	TEST EAX, EAX
	JNZ loc_100495F8
	MOV EBX,DWORD PTR [EBX+0x08]
	JMP loc_100495FA
loc_100495F8:
	MOV EBX,DWORD PTR [EBX]
loc_100495FA:
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JNZ loc_100495D7
loc_10049602:
	CMP DWORD PTR [ESI+0x08],0x00
	JZ loc_1004963C
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m48E00_sub_10049E00])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1004963C:
	MOV DWORD PTR [ESP+var_4+0x1C],EBP
	TEST EAX, EAX
	JZ loc_10049685
	CMP DWORD PTR [ECX],EBP
	JNZ loc_1004967C
	MOV EAX,DWORD PTR [ESP+arg2+0x1C]
	LEA ECX,DWORD PTR [ESP+var_8+0x1C]
	MOV DWORD PTR [ESP+var_C+0x1C],0x00000001
	PUSH EAX
	PUSH EBP
	PUSH EBX
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m48E00_sub_10049E00])
	MOV ECX,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [EAX],ECX
	MOV EDX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],EDX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1004967C:
	LEA ECX,DWORD PTR [ESP+var_4+0x1C]
	CALL_LONG(offset [LEGO1_text.m48840_sub_10049840])
loc_10049685:
	MOV EAX,DWORD PTR [ESP+var_4+0x1C]
	MOV EDX,DWORD PTR [ESP+arg2+0x1C]
	MOV ECX,DWORD PTR [EAX+0x0C]
	MOV EAX,DWORD PTR [EDX]
	FLD DWORD PTR [ECX+0x0C]
	FCOMP DWORD PTR [EAX+0x0C]
	FNSTSW AX
	TEST AH,0x01
	JZ FAR loc_1004981D
	PUSH 0x00
	MOV ECX, ESI
	MOV DWORD PTR [ESP+var_C+0x20],0x00000001
	PUSH EBP
	CALL_LONG(offset [LEGO1_text.m48CF0_sub_10049CF0])
	MOV EDI, EAX
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4364]
	PUSH ECX
	LEA EDX,DWORD PTR [EDI+0x0C]
	MOV DWORD PTR [EDI],EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4364]
	PUSH EDX
	MOV DWORD PTR [EDI+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m49760_sub_1004A760])
	ADD ESP, 0x08
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],EBP
	JZ loc_1004970E
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JNZ loc_1004970E
	MOV EAX,DWORD PTR [EBP+arg1217227-0x4A4B20]
	MOV ECX,DWORD PTR [ESP+arg2+0x1C]
	FLD DWORD PTR [EAX+0x0C]
	MOV EDX,DWORD PTR [ECX]
	FCOMP DWORD PTR [EDX+0x0C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1004970E
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10049729
	MOV DWORD PTR [EAX],EDI
	JMP loc_10049729
loc_1004970E:
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP EBP, EAX
	JZ loc_10049720
	CMP DWORD PTR [EAX],EBP
	JNZ loc_10049729
	MOV DWORD PTR [EAX],EDI
	JMP loc_10049729
loc_10049720:
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDI
loc_10049729:
	MOV EBX, EDI
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDI
	JZ FAR loc_100497F9
loc_10049737:
	LEA ECX,DWORD PTR [EBX+0x04]
	MOV EBP,DWORD PTR [ECX]
	LEA EDX,DWORD PTR [EBP+arg1217228-0x4A4B20]
	CMP DWORD PTR [EDX],0x00
	JNZ FAR loc_100497F9
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EAX,DWORD PTR [EAX]
	CMP EAX, EBP
	JNZ loc_10049793
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV EAX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EAX+0x10],0x00
	JZ loc_100497CF
	CMP DWORD PTR [EBP+arg1217226-0x4A4B20],EBX
	JNZ loc_1004976C
	PUSH EBP
	MOV EBX, EBP
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m49090_sub_1004A090])
loc_1004976C:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m490F0_sub_1004A0F0])
	JMP loc_100497ED
loc_10049793:
	CMP DWORD PTR [EAX+0x10],0x00
	JZ loc_100497CF
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JNZ loc_100497A8
	PUSH EBP
	MOV EBX, EBP
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m490F0_sub_1004A0F0])
loc_100497A8:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	PUSH ECX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m49090_sub_1004A090])
	JMP loc_100497ED
loc_100497CF:
	MOV DWORD PTR [EDX], 0x00000001
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX]
	MOV EBX,DWORD PTR [EAX+0x04]
loc_100497ED:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EBX
	JNZ FAR loc_10049737
loc_100497F9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	MOV DWORD PTR [ECX+0x10],0x00000001
	MOV DWORD PTR [EAX],EDI
	MOV ECX,DWORD PTR [ESP+var_C+0x1C]
	POP EBP
	POP EDI
	MOV DWORD PTR [EAX+0x04],ECX
	POP ESI
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
loc_1004981D:
	MOV ECX,DWORD PTR [ESP+var_4+0x1C]
	MOV EAX,DWORD PTR [ESP+arg1+0x1C]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],0x00000000
	POP EBX
	ADD ESP, 0x0C
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_10049840()
{
__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [ESI+0x10],0x00
	JNZ loc_10049858
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ESI
	JNZ loc_10049858
	MOV EAX,DWORD PTR [ESI+0x08]
	POP ESI
	MOV DWORD PTR [ECX],EAX
	RET
loc_10049858:
	MOV EDX,DWORD PTR [ESI]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EDX
	JZ loc_10049875
loc_10049862:
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049871
	MOV EDX, EAX
	JMP loc_10049862
loc_10049871:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
loc_10049875:
	MOV EDX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EDX],ESI
	JNZ loc_10049887
loc_1004987C:
	MOV DWORD PTR [ECX],EDX
	MOV EAX, EDX
	MOV EDX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EDX],EAX
	JZ loc_1004987C
loc_10049887:
	POP ESI
	MOV DWORD PTR [ECX],EDX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049890(DWORD arg1, DWORD arg2)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg1217224 = 0x4A4B20,
		arg1217225 = 0x4A4B24,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	MOV EAX,DWORD PTR [ESP+arg2]
	SUB ESP, 0x04
	MOV DWORD PTR [ESP+var_4+0x4],EAX
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],ECX
	JZ loc_100498C0
loc_100498AC:
	MOV EAX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_100498BA
	MOV ECX, EAX
	JMP loc_100498AC
loc_100498BA:
	MOV DWORD PTR [ESP+arg2+0x14],ECX
	JMP loc_100498E9
loc_100498C0:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	MOV EAX,DWORD PTR [ECX+0x04]
	CMP DWORD PTR [EAX+0x08],ECX
	JNZ loc_100498DC
loc_100498CC:
	MOV DWORD PTR [ESP+arg2+0x14],EAX
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [EAX+0x08],ECX
	JZ loc_100498CC
loc_100498DC:
	MOV ECX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [ECX+0x08],EAX
	JZ loc_100498E9
	MOV DWORD PTR [ESP+arg2+0x14],EAX
loc_100498E9:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [ECX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JZ loc_1004991D
	LEA EDI,DWORD PTR [ECX+0x08]
	MOV EDX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EDX
	JZ loc_10049919
loc_10049904:
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049912
	MOV EDX, EAX
	JMP loc_10049904
loc_10049912:
	MOV ECX, EDX
	MOV EDX,DWORD PTR [EDX+0x08]
	JMP loc_10049927
loc_10049919:
	MOV EDX, EBX
	JMP loc_10049927
loc_1004991D:
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	MOV EDX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
loc_10049927:
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JNZ FAR loc_100499C0
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EBX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10049951
	MOV EAX,DWORD PTR [EBX+0x04]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10049951
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10049953
loc_10049951:
	MOV DWORD PTR [EAX],EDX
loc_10049953:
	MOV EBX,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	CMP DWORD PTR [EBX],EAX
	JNZ loc_10049984
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4364]
	CMP DWORD PTR [EDI],EAX
	JZ loc_1004997B
	MOV EDI, EDX
loc_10049969:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049977
	MOV EDI, EAX
	JMP loc_10049969
loc_10049977:
	MOV DWORD PTR [EBX],EDI
	JMP loc_10049984
loc_1004997B:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBP,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EBX],EBP
loc_10049984:
	MOV EDI,DWORD PTR [ESI+0x04]
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	ADD EDI, 0x08
	CMP DWORD PTR [EDI],EAX
	JNZ FAR loc_10049A1E
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4364]
	CMP DWORD PTR [EAX],EBX
	JZ loc_100499B5
	MOV EAX, EDX
loc_100499A2:
	MOV EBX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JZ loc_100499B1
	MOV EAX, EBX
	JMP loc_100499A2
loc_100499B1:
	MOV DWORD PTR [EDI],EAX
	JMP loc_10049A1E
loc_100499B5:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDI],EBX
	JMP loc_10049A1E
loc_100499C0:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EBX+0x04],ECX
	MOV EBX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EBX
	CMP DWORD PTR [EDI],ECX
	JNZ loc_100499D4
	MOV DWORD PTR [EDX+0x04],ECX
	JMP loc_100499E9
loc_100499D4:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX],EDX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [ECX+0x08],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV DWORD PTR [EBX+0x04],ECX
loc_100499E9:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDI,DWORD PTR [ESP+var_4+0x14]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049A03
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049A03
	MOV DWORD PTR [EAX+0x08],ECX
	JMP loc_10049A05
loc_10049A03:
	MOV DWORD PTR [EAX],ECX
loc_10049A05:
	MOV EAX,DWORD PTR [ESP+var_4+0x14]
	MOV EBX,DWORD PTR [EAX+0x04]
	LEA EDI,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [ECX+0x10]
	MOV DWORD PTR [ECX+0x10],EBX
	MOV ECX, EAX
	MOV DWORD PTR [EDI],EBP
loc_10049A1E:
	CMP DWORD PTR [ECX+0x10],0x01
	JNZ FAR loc_10049CC6
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JZ FAR loc_10049CBF
loc_10049A34:
	CMP DWORD PTR [EDX+0x10],0x01
	JNZ FAR loc_10049CBF
	LEA EBX,DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
	CMP EDX, EDI
	JNZ loc_10049ABC
	MOV EDI,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_10049AA1
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	MOV EDI,DWORD PTR [EAX]
	MOV DWORD PTR [EBP+arg1217226-0x4A4B20],EDI
	MOV EDI,DWORD PTR [EAX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EDI
	JZ loc_10049A79
	MOV DWORD PTR [EDI+0x04],EBP
loc_10049A79:
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EAX+0x04],EDI
	MOV EDI,DWORD PTR [ESI+0x04]
	ADD EDI, 0x04
	CMP DWORD PTR [EDI],EBP
	JZ loc_10049A95
	MOV EDI,DWORD PTR [EBP+arg1217225-0x4A4B20]
	CMP DWORD PTR [EDI],EBP
	JZ loc_10049A95
	MOV DWORD PTR [EDI+0x08],EAX
	JMP loc_10049A97
loc_10049A95:
	MOV DWORD PTR [EDI],EAX
loc_10049A97:
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10049AA1:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10049B47
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10049B47
	JMP loc_10049B2D
loc_10049ABC:
	CMP DWORD PTR [EDI+0x10],0x00
	JNZ loc_10049B14
	MOV DWORD PTR [EDI+0x10],0x00000001
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBP,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049AEB
	MOV DWORD PTR [EAX+0x04],EBP
loc_10049AEB:
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBP
	JZ loc_10049B08
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],EBP
	JZ loc_10049B08
	MOV EAX,DWORD PTR [EBP+arg1217225-0x4A4B20]
loc_10049B08:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EBP
	MOV DWORD PTR [EBP+arg1217225-0x4A4B20],EDI
	MOV EAX,DWORD PTR [EBX]
	MOV EDI,DWORD PTR [EAX]
loc_10049B14:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10049C11
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ FAR loc_10049C11
loc_10049B2D:
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EDX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],EDX
	JNZ FAR loc_10049A34
	JMP FAR loc_10049CBF
loc_10049B47:
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_10049BA3
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [EDI],EBP
	MOV EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049B75
	MOV DWORD PTR [EAX+0x04],EDI
loc_10049B75:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049B95
	MOV EAX,DWORD PTR [EDI+0x04]
	LEA EBP,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JNZ loc_10049B95
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EBX
	JMP loc_10049B97
loc_10049B95:
	MOV DWORD PTR [EAX],EBX
loc_10049B97:
	MOV DWORD PTR [EBX+0x08],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX+0x08]
loc_10049BA3:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EDI,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EAX,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EAX
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049BD5
	MOV DWORD PTR [EAX+0x04],EDI
loc_10049BD5:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049C05
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049BF9
	MOV DWORD PTR [EAX+0x08],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_10049CBF
loc_10049BF9:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_10049CBF
loc_10049C05:
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	JMP FAR loc_10049CBF
loc_10049C11:
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX+0x10],0x01
	JNZ loc_10049C67
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [EDI+0x10],0x00000000
	MOV EBX,DWORD PTR [EDI+0x08]
	MOV EBP,DWORD PTR [EBX]
	MOV DWORD PTR [EDI+0x08],EBP
	MOV EAX,DWORD PTR [EBX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049C3F
	MOV DWORD PTR [EAX+0x04],EDI
loc_10049C3F:
	MOV EAX,DWORD PTR [EDI+0x04]
	MOV DWORD PTR [EBX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049C5B
	MOV EAX,DWORD PTR [EDI+0x04]
	CMP DWORD PTR [EAX],EDI
	JZ loc_10049C5B
	MOV DWORD PTR [EAX+0x08],EBX
	JMP loc_10049C5D
loc_10049C5B:
	MOV DWORD PTR [EAX],EBX
loc_10049C5D:
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x04],EBX
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EAX]
loc_10049C67:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV EBX,DWORD PTR [EAX+0x10]
	MOV DWORD PTR [EDI+0x10],EBX
	MOV EBX, 0x00000001
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EAX+0x10],EBX
	MOV EBP,DWORD PTR [EDI]
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],EBX
	MOV EBX,DWORD PTR [EDX+0x04]
	MOV EDI,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049C98
	MOV DWORD PTR [EAX+0x04],EBX
loc_10049C98:
	MOV EAX,DWORD PTR [EBX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EBX
	JZ loc_10049CB7
	MOV EBP,DWORD PTR [EBX+0x04]
	LEA EAX,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EAX],EBX
	JZ loc_10049CB7
	MOV DWORD PTR [EBP+arg1217224-0x4A4B20],EDI
	JMP loc_10049CB9
loc_10049CB7:
	MOV DWORD PTR [EAX],EDI
loc_10049CB9:
	MOV DWORD PTR [EDI+0x08],EBX
	MOV DWORD PTR [EBX+0x04],EDI
loc_10049CBF:
	MOV DWORD PTR [EDX+0x10],0x00000001
loc_10049CC6:
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV ECX,DWORD PTR [ESP+arg2+0x18]
	MOV EAX,DWORD PTR [ESP+arg1+0x18]
	ADD ESP, 0x04
	DEC DWORD PTR [ESI+0x0C]
	MOV DWORD PTR [EAX],ECX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049CF0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],EDX
	RETN 0x0008
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049D10(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	MOV EBX,DWORD PTR [ESP+arg1+0xC]
	MOV EDI, EBX
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EBX
	JZ loc_10049D43
loc_10049D23:
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m48D10_sub_10049D10])
	MOV EDI,DWORD PTR [EDI]
	PUSH EBX
	MOV EBX, EDI
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EDI
	JNZ loc_10049D23
loc_10049D43:
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_10049D50()
{
	enum{
		var_18 = -0x18,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m48DE2_proc_10049DE2]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x08
	MOV DWORD PTR [EBP+var_18+0x4],ECX
	PUSH ESI
	XOR ESI, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CMP DWORD PTR [offset LEGO1_data + 0x4364],ESI
	JNZ loc_10049D9F
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV DWORD PTR [offset LEGO1_data + 0x4364], EAX
	MOV DWORD PTR [EAX],ESI
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x4364]
	MOV DWORD PTR [EAX+0x08],ESI
loc_10049D9F:
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m48DEC_sub_10049DEC])
	MOV ESI,DWORD PTR [offset LEGO1_data + 0x4364]
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	XOR EDX, EDX
	MOV ECX,DWORD PTR [EBP+var_18+0x4]
	MOV DWORD PTR [EAX+0x04],ESI
	MOV DWORD PTR [EAX+0x10],EDX
	MOV DWORD PTR [ECX+0x04],EAX
	MOV DWORD PTR [ECX+0x0C],EDX
	POP ESI
	MOV DWORD PTR [EAX],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x08],EAX
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_10049DEC()
{
	enum{
		arg1217221 = 0x4A4B14,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217221-0x4A4B21]
	JMP_LONG(offset [LEGO1_text.m1CDE0_loc_1001DDE0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_10049E00(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217226 = 0x4A4B28,
		arg1217228 = 0x4A4B30,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	PUSH EBP
	PUSH 0x14
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV ECX,DWORD PTR [ESP+arg3+0x18]
	MOV DWORD PTR [ESP+var_4+0x18],EAX
	ADD ESP, 0x04
	MOV DWORD PTR [EAX+0x04],ECX
	MOV DWORD PTR [EAX+0x10],0x00000000
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4364]
	ADD EAX, 0x0C
	MOV EDI,DWORD PTR [ESP+arg4+0x14]
	MOV DWORD PTR [EAX-0x0C],EBX
	MOV EBX,DWORD PTR [offset LEGO1_data + 0x4364]
	MOV DWORD PTR [EAX-0x04],EBX
	JZ loc_10049E44
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [EAX],EDX
loc_10049E44:
	INC DWORD PTR [ESI+0x0C]
	CMP DWORD PTR [ESI+0x04],ECX
	JZ loc_10049E7F
	MOV EAX,DWORD PTR [ESP+arg2+0x14]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JNZ loc_10049E7F
	MOV EAX,DWORD PTR [ECX+0x0C]
	MOV EDX,DWORD PTR [EDI]
	FLD DWORD PTR [EAX+0x0C]
	FCOMP DWORD PTR [EDX+0x0C]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_10049E7F
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX+0x08],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x08
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10049EA1
	MOV DWORD PTR [EAX],EDX
	JMP loc_10049EA1
loc_10049E7F:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [ECX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP ECX, EAX
	JZ loc_10049E94
	CMP DWORD PTR [EAX],ECX
	JNZ loc_10049EA1
	MOV DWORD PTR [EAX],EDX
	JMP loc_10049EA1
loc_10049E94:
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV DWORD PTR [EAX+0x04],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EAX+0x08],EDX
loc_10049EA1:
	MOV ECX,DWORD PTR [ESP+var_4+0x14]
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JZ FAR loc_1004A064
loc_10049EB1:
	LEA EDX,DWORD PTR [ECX+0x04]
	MOV EAX,DWORD PTR [EDX]
	LEA EBX,DWORD PTR [EAX+0x10]
	CMP DWORD PTR [EBX],0x00
	JNZ FAR loc_1004A064
	LEA EDI,DWORD PTR [EAX+0x04]
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217224-0x4A4B20]
	CMP EBP, EAX
	JNZ FAR loc_10049F8D
	MOV EBP,DWORD PTR [EDI]
	MOV EBP,DWORD PTR [EBP+arg1217226-0x4A4B20]
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_1004A03A
	LEA EBX,DWORD PTR [EAX+0x08]
	MOV EDX,DWORD PTR [EBX]
	CMP ECX, EDX
	JNZ loc_10049F1D
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049EFD
	MOV DWORD PTR [EAX+0x04],ECX
loc_10049EFD:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10049F17
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10049F17
	MOV DWORD PTR [EAX+0x08],EDX
	JMP loc_10049F19
loc_10049F17:
	MOV DWORD PTR [EAX],EDX
loc_10049F19:
	MOV DWORD PTR [EDX],ECX
	MOV DWORD PTR [EDI],EDX
loc_10049F1D:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX]
	MOV EAX,DWORD PTR [EDI+0x08]
	MOV DWORD PTR [EDX],EAX
	MOV EAX,DWORD PTR [EDI+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049F4F
	MOV DWORD PTR [EAX+0x04],EDX
loc_10049F4F:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_10049F83
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],EDX
	JZ loc_10049F76
	MOV DWORD PTR [EBX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1004A058
loc_10049F76:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP FAR loc_1004A058
loc_10049F83:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI+0x08],EDX
	JMP FAR loc_1004A035
loc_10049F8D:
	CMP DWORD PTR [EBP+arg1217228-0x4A4B20],0x00
	JZ FAR loc_1004A03A
	MOV EDX,DWORD PTR [EAX]
	CMP ECX, EDX
	JNZ loc_10049FD5
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_10049FB2
	MOV DWORD PTR [EAX+0x04],ECX
loc_10049FB2:
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ECX
	JZ loc_10049FCE
	MOV EBX,DWORD PTR [EDI]
	LEA EAX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [EAX],ECX
	JZ loc_10049FCE
	MOV DWORD PTR [EBX],EDX
	JMP loc_10049FD0
loc_10049FCE:
	MOV DWORD PTR [EAX],EDX
loc_10049FD0:
	MOV DWORD PTR [EDX+0x08],ECX
	MOV DWORD PTR [EDI],EDX
loc_10049FD5:
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV DWORD PTR [EAX+0x10],0x00000001
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [EDX+0x10],0x00000000
	MOV EAX,DWORD PTR [ECX+0x04]
	MOV EDX,DWORD PTR [EAX+0x04]
	MOV EDI,DWORD PTR [EDX+0x08]
	MOV EAX,DWORD PTR [EDI]
	MOV DWORD PTR [EDX+0x08],EAX
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_1004A007
	MOV DWORD PTR [EAX+0x04],EDX
loc_1004A007:
	MOV EAX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [EDI+0x04],EAX
	MOV EAX,DWORD PTR [ESI+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],EDX
	JZ loc_1004A031
	MOV EAX,DWORD PTR [EDX+0x04]
	CMP DWORD PTR [EAX],EDX
	JZ loc_1004A028
	MOV DWORD PTR [EAX+0x08],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004A058
loc_1004A028:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004A058
loc_1004A031:
	MOV DWORD PTR [EAX],EDI
	MOV DWORD PTR [EDI],EDX
loc_1004A035:
	MOV DWORD PTR [EDX+0x04],EDI
	JMP loc_1004A058
loc_1004A03A:
	MOV DWORD PTR [EBX], 0x00000001
	MOV DWORD PTR [EBP+arg1217228-0x4A4B20],0x00000001
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV DWORD PTR [ECX+0x10],0x00000000
	MOV EAX,DWORD PTR [EDX]
	MOV ECX,DWORD PTR [EAX+0x04]
loc_1004A058:
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX+0x04],ECX
	JNZ FAR loc_10049EB1
loc_1004A064:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EDX,DWORD PTR [ESP+var_4+0x14]
	MOV ECX,DWORD PTR [EAX+0x04]
	MOV EAX,DWORD PTR [ESP+arg1+0x14]
	POP EBP
	POP EDI
	MOV DWORD PTR [ECX+0x10],0x00000001
	POP ESI
	MOV DWORD PTR [EAX],EDX
	POP EBX
	ADD ESP, 0x04
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004A090(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ESI+0x08],EAX
	MOV EAX,DWORD PTR [EDX]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_1004A0AA
	MOV DWORD PTR [EAX+0x04],ESI
loc_1004A0AA:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004A0D8
	MOV EAX,DWORD PTR [ESI+0x04]
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004A0CD
	MOV DWORD PTR [EAX+0x08],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004A0CD:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004A0D8:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004A0F0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x4]
	MOV EDX,DWORD PTR [ESI]
	MOV EAX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ESI],EAX
	MOV EAX,DWORD PTR [EDX+0x08]
	CMP DWORD PTR [offset LEGO1_data + 0x4364],EAX
	JZ loc_1004A10A
	MOV DWORD PTR [EAX+0x04],ESI
loc_1004A10A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV DWORD PTR [EDX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x04]
	ADD EAX, 0x04
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004A13C
	MOV ECX,DWORD PTR [ESI+0x04]
	LEA EAX,DWORD PTR [ECX+0x08]
	CMP DWORD PTR [EAX],ESI
	JZ loc_1004A130
	MOV DWORD PTR [ECX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004A130:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
loc_1004A13C:
	MOV DWORD PTR [EAX],EDX
	MOV DWORD PTR [EDX+0x08],ESI
	MOV DWORD PTR [ESI+0x04],EDX
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1004A191()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m483A0_loc_100493A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004A1E1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m491F0_loc_1004A1F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004A231()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m484E0_loc_100494E0])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004A240(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5, DWORD arg6)
{
	enum{
		var_20 = -0x20,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_4 = -0x4,
		arg1 = 0x4,
		arg2 = 0x8,
		arg5 = 0x14,
		arg6 = 0x18,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x1C
	PUSH EBX
	PUSH ESI
	MOV ESI,DWORD PTR [ESP+arg1+0x24]
	PUSH EDI
	PUSH EBP
	CMP DWORD PTR [ESI+0x08],0x00
	JNZ loc_1004A28A
	MOV EAX,DWORD PTR [ESI+0x10]
	MOV EBP,DWORD PTR [ESP+arg2+0x2C]
	MOV EBX,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV EAX,DWORD PTR [ESI+0x24]
	MOV ECX,DWORD PTR [ESP+arg2+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x20])
	MOV ECX,DWORD PTR [ESI+0x34]
	MOV EDI,DWORD PTR [ESP+arg5+0x30]
	MOV EAX, 0x00000001
	POP EBP
	MOV DWORD PTR [EDI],ECX
	POP EDI
	AND BYTE PTR [ESI+0x38],0xFE
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0018
loc_1004A28A:
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV EBX,DWORD PTR [ESP+arg5+0x2C]
	MOV EDI,DWORD PTR [ESP+arg6+0x2C]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EBX],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX]
	MOV EDX,DWORD PTR [ECX+0x0C]
	MOV DWORD PTR [EDI],EDX
	MOV EAX,DWORD PTR [ESI+0x04]
	MOV ECX,DWORD PTR [EAX]
	LEA EAX,DWORD PTR [ESP+var_4+0x2C]
	PUSH ECX
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m47F70_sub_10048F70])
	LEA ECX,DWORD PTR [ESP+var_10+0x2C]
	MOV EDX,DWORD PTR [EDI]
	MOV DWORD PTR [ESP+var_14+0x2C],ECX
	PUSH EDX
	MOV DWORD PTR [ESP+var_18+0x30],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EBX]
	CALL_LONG(offset [LEGO1_text.m99530_sub_1009A530])
	MOV EBP,DWORD PTR [ESP+arg2+0x2C]
	MOV EAX,DWORD PTR [EAX+0x04]
	MOV ESI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESI+0x20])
	MOV EAX,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EBX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESI+0x54])
	LEA EAX,DWORD PTR [ESP+arg2+0x34]
	MOV ECX, EBP
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x5C])
	MOV EAX,DWORD PTR [EDI]
	MOV ECX,DWORD PTR [EBX]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m99510_sub_1009A510])
	PUSH EAX
	MOV ECX, EBP
	CALL_LONG(DWORD PTR [ESI+0x48])
	MOV ECX,DWORD PTR [EBX]
	MOV EAX,DWORD PTR [EDI]
	CMP DWORD PTR [ECX+0x04],EAX
	MOV EAX,DWORD PTR [ECX+0x2C]
	JNZ loc_1004A342
	FLD DWORD PTR [EAX]
	FCHS
	MOV EDX,DWORD PTR [ESP+var_1C+0x34]
	FSTP DWORD PTR [EDX]
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_1C+0x34]
	FLD DWORD PTR [EAX+0x04]
	FCHS
	FSTP DWORD PTR [EDX+0x04]
	MOV EAX,DWORD PTR [ECX+0x2C]
	MOV EDX,DWORD PTR [ESP+var_1C+0x34]
	FLD DWORD PTR [EAX+0x08]
	FCHS
	FSTP DWORD PTR [EDX+0x08]
	JMP loc_1004A34E
loc_1004A342:
	MOV EBX,DWORD PTR [ESP+var_20+0x34]
	LEA ECX,DWORD PTR [ESP+var_20+0x34]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x20])
loc_1004A34E:
	LEA EAX,DWORD PTR [ESP+var_20+0x34]
	MOV ECX,DWORD PTR [ESP+arg1+0x34]
	PUSH EAX
	MOV EAX,DWORD PTR [EDI]
	ADD EAX, 0x14
	MOV EBX,DWORD PTR [ECX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x1C
	RETN 0x0018
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004A380(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4, DWORD arg5)
{
	enum{
		var_78 = -0x78,
		var_74 = -0x74,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_68 = -0x68,
		var_64 = -0x64,
		var_60 = -0x60,
		var_5C = -0x5C,
		var_58 = -0x58,
		var_54 = -0x54,
		var_50 = -0x50,
		var_4C = -0x4C,
		var_48 = -0x48,
		var_44 = -0x44,
		var_40 = -0x40,
		var_3C = -0x3C,
		var_38 = -0x38,
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_4 = -0x4,
		arg2 = 0x8,
		arg3 = 0xC,
		arg5 = 0x14,
		arg1217225 = 0x4A4B24,
	};

__asm{
	SUB ESP, 0x70
	MOV DWORD PTR [ESP+var_50+0x70],ECX
	PUSH EBX
	MOV ECX,DWORD PTR [ESP+arg5+0x74]
	PUSH ESI
	LEA EDX,DWORD PTR [ESP+var_40+0x78]
	PUSH EDI
	PUSH EBP
	MOV EAX,DWORD PTR [ECX]
	XOR EDI, EDI
	MOV DWORD PTR [ESP+var_6C+0x80],EAX
	MOV EAX,DWORD PTR [ESP+var_50+0x80]
	MOV DWORD PTR [ESP+var_44+0x80],EDX
	CMP WORD PTR DS:[EAX+0x18],DI
	MOV DWORD PTR [ESP+var_30+0x80],EDI
	MOV DWORD PTR [ESP+var_48+0x80],offset [LEGO1_rdata.m488_ptr]
	MOV DWORD PTR [ESP+var_4C+0x80],0x00000001
	JBE FAR loc_1004A72A
	MOV DWORD PTR [ESP+var_34+0x80],EDI
	MOV EDI,DWORD PTR [ESP+arg3+0x80]
loc_1004A3CF:
	MOV EAX,DWORD PTR [ESP+var_50+0x80]
	MOV ECX,DWORD PTR [EAX+0x08]
	ADD ECX,DWORD PTR [ESP+var_34+0x80]
	MOV DWORD PTR [ESP+var_58+0x80],ECX
	TEST BYTE PTR [ECX+0x0C],0x04
	JNZ FAR loc_1004A70D
	ADD ECX, 0x14
	MOV DWORD PTR [ESP+var_5C+0x80],ECX
	PUSH ECX
	PUSH EDI
	MOV EAX,DWORD PTR [EDI]
	MOV ECX, EDI
	CALL_LONG(DWORD PTR [EAX+0x38])
	FSTP DWORD PTR [ESP+var_5C+0x88]
	FLD DWORD PTR [ESP+var_5C+0x88]
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3D40]
	FSTP QWORD PTR [ESP+var_70+0x88]
	FNSTSW AX
	TEST AH,0x01
	JZ loc_1004A426
	FLD QWORD PTR [ESP+var_70+0x88]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FNSTSW AX
	TEST AH,0x41
	JZ FAR loc_1004A70D
loc_1004A426:
	LEA ECX,DWORD PTR [EDI+0x14]
	MOV EAX,DWORD PTR [ESP+var_64+0x88]
	PUSH EAX
	LEA ESI,DWORD PTR [EDI+0x28]
	PUSH ECX
	MOV EBX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EBX+0x38])
	FSTP DWORD PTR [ESP+var_70+0x88]
	MOV EAX,DWORD PTR [ESP+var_64+0x88]
	MOV EBX,DWORD PTR [ESI]
	PUSH EAX
	MOV ECX, ESI
	PUSH ESI
	CALL_LONG(DWORD PTR [EBX+0x38])
	MOV ECX,DWORD PTR [ESP+var_64+0x88]
	MOV EAX,DWORD PTR [ECX+0x04]
	FADD DWORD PTR [EAX+0x0C]
	FMUL DWORD PTR [ESP+var_5C+0x88]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x3D54]
	FLD DWORD PTR [ESP+var_70+0x88]
	FMUL DWORD PTR [ESP+var_70+0x88]
	FADDP ST(1),ST
	FCOM QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FSTP DWORD PTR [ESP+var_68+0x88]
	FNSTSW AX
	TEST AH,0x01
	JNZ FAR loc_1004A70D
	CMP DWORD PTR [ESP+var_68+0x88],0x80000000
	JBE loc_1004A48F
	MOV DWORD PTR [ESP+var_68+0x88],0x00000000
	JMP loc_1004A499
loc_1004A48F:
	FLD DWORD PTR [ESP+var_68+0x88]
	FSQRT
	FSTP DWORD PTR [ESP+var_68+0x88]
loc_1004A499:
	FLD DWORD PTR [ESP+var_5C+0x88]
	FMUL DWORD PTR [offset LEGO1_rdata + 0x3D58]
	FLD DWORD PTR [ESP+var_68+0x88]
	FSUB DWORD PTR [ESP+var_70+0x88]
	FDIV ST,ST(1)
	CMP DWORD PTR [ESP+var_74+0x88],0x80000000
	FSTP DWORD PTR [ESP+var_78+0x88]
	FLD DWORD PTR [ESP+var_70+0x88]
	FADD DWORD PTR [ESP+var_68+0x88]
	FCHS
	FDIVRP ST(1),ST
	JA loc_1004A4EB
	FSTP DWORD PTR [ESP+var_70+0x88]
	CMP DWORD PTR [ESP+var_78+0x88],0x80000000
	JA loc_1004A50A
	FLD DWORD PTR [ESP+var_78+0x88]
	FCOMP DWORD PTR [ESP+var_74+0x88]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1004A50A
	MOV EAX, 0x00000001
	JMP loc_1004A50C
loc_1004A4EB:
	FSTP DWORD PTR [ESP+var_70+0x88]
	CMP DWORD PTR [ESP+var_78+0x88],0x00
	JG loc_1004A50A
	FLD DWORD PTR [ESP+var_78+0x88]
	FCOMP DWORD PTR [ESP+var_74+0x88]
	FNSTSW AX
	TEST AH,0x01
	MOV EAX, 0x00000001
	JZ loc_1004A50C
loc_1004A50A:
	XOR EAX, EAX
loc_1004A50C:
	TEST EAX, EAX
	JNZ loc_1004A567
	CMP DWORD PTR [ESP+var_74+0x88],0x80000000
	JA loc_1004A53A
	CMP DWORD PTR [ESP+var_70+0x88],0x80000000
	JA loc_1004A555
	FLD DWORD PTR [ESP+var_70+0x88]
	FCOMP DWORD PTR [ESP+var_74+0x88]
	FNSTSW AX
	TEST AH,0x41
	JZ loc_1004A555
	MOV EAX, 0x00000001
	JMP loc_1004A557
loc_1004A53A:
	CMP DWORD PTR [ESP+var_70+0x88],0x00
	JG loc_1004A555
	FLD DWORD PTR [ESP+var_70+0x88]
	FCOMP DWORD PTR [ESP+var_74+0x88]
	FNSTSW AX
	TEST AH,0x01
	MOV EAX, 0x00000001
	JZ loc_1004A557
loc_1004A555:
	XOR EAX, EAX
loc_1004A557:
	TEST EAX, EAX
	JZ FAR loc_1004A70D
	MOV EAX,DWORD PTR [ESP+var_70+0x88]
	MOV DWORD PTR [ESP+var_78+0x88],EAX
loc_1004A567:
	CMP DWORD PTR [ESP+var_54+0x88],0x00
	JNZ loc_1004A59B
	CMP DWORD PTR [ESP+var_74+0x88],0x80000000
	MOV ECX,DWORD PTR [ESP+arg3+0x88]
	FLD DWORD PTR [ECX]
	FCOMP DWORD PTR [ESP+var_78+0x88]
	FNSTSW AX
	JA loc_1004A592
	TEST AH,0x41
	JNZ FAR loc_1004A70D
	JMP loc_1004A59B
loc_1004A592:
	TEST AH,0x01
	JZ FAR loc_1004A70D
loc_1004A59B:
	LEA EAX,DWORD PTR [ESP+var_14+0x88]
	MOV EDX,DWORD PTR [EDI+0x04]
	MOV ECX, EAX
	MOV DWORD PTR [ESP+var_18+0x88],EAX
	MOV DWORD PTR [ESP+var_1C+0x88],offset [LEGO1_rdata.m488_ptr]
	MOV EAX,DWORD PTR [EDX]
	MOV DWORD PTR [ECX],EAX
	MOV EBX,DWORD PTR [EDX+0x04]
	LEA EAX,DWORD PTR [ESP+var_34+0x88]
	PUSH EAX
	MOV DWORD PTR [ECX+0x04],EBX
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [ESP+var_18+0x88]
	FLD DWORD PTR [ESP+var_74+0x88]
	FMUL DWORD PTR [ESP+var_74+0x88]
	MOV EBX,DWORD PTR [ESP+var_18+0x88]
	FSTP DWORD PTR [ESP+var_30+0x88]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV ECX,DWORD PTR [EDI+0x18]
	MOV EAX,DWORD PTR [ESP+var_50+0x88]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_4C+0x88]
	CALL_LONG(DWORD PTR [EAX+0x20])
	MOV EBX,DWORD PTR [EDI+0x20]
	LEA EDX,DWORD PTR [EDI+0x1C]
	LEA ECX,DWORD PTR [ESP+var_48+0x88]
	MOV EAX,DWORD PTR [EDX]
	MOV EDX,DWORD PTR [EDX+0x08]
	MOV DWORD PTR [ECX],EAX
	LEA EAX,DWORD PTR [ESP+var_78+0x88]
	MOV DWORD PTR [ECX+0x04],EBX
	PUSH EAX
	MOV DWORD PTR [ECX+0x08],EDX
	LEA ECX,DWORD PTR [ESP+var_4C+0x88]
	MOV EBX,DWORD PTR [ESP+var_4C+0x88]
	CALL_LONG(DWORD PTR [EBX+0x5C])
	MOV EBX,DWORD PTR [ESP+var_50+0x88]
	LEA ECX,DWORD PTR [ESP+var_50+0x88]
	PUSH ESI
	CALL_LONG(DWORD PTR [EBX+0x48])
	LEA EAX,DWORD PTR [ESP+var_1C+0x88]
	LEA ECX,DWORD PTR [ESP+var_50+0x88]
	MOV EBX,DWORD PTR [ESP+var_50+0x88]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x48])
	XOR EBX, EBX
	MOV ECX,DWORD PTR [ESP+var_60+0x88]
	MOV BL,BYTE PTR [ECX+0x04]
	DEC EBX
	JS loc_1004A682
	LEA EAX,DWORD PTR [EBX*2+EBX]
	ADD ECX, 0x2C
	MOV DWORD PTR [ESP+var_70+0x88],ECX
	LEA ESI,DWORD PTR [EAX*8+0x00000000]
loc_1004A64B:
	MOV EAX,DWORD PTR [ESP+var_70+0x88]
	MOV EBP,DWORD PTR [EAX]
	MOV EAX,DWORD PTR [ESP+var_4C+0x88]
	ADD EBP, ESI
	PUSH EAX
	MOV EAX,DWORD PTR [ESP+var_4C+0x88]
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_48+0x88]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV ECX,DWORD PTR [EBP+arg1217225-0x4A4B20]
	FADD DWORD PTR [ECX+0x0C]
	FCOMP QWORD PTR [offset LEGO1_rdata + 0x3D48]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_1004A682
	SUB ESI, 0x18
	DEC EBX
	TEST ESI, ESI
	JGE loc_1004A64B
loc_1004A682:
	TEST EBX, EBX
	JGE FAR loc_1004A70D
	LEA EAX,DWORD PTR [ESP+var_28+0x88]
	MOV EDX,DWORD PTR [ESP+var_4+0x88]
	MOV DWORD PTR [ESP+var_30+0x88],offset [LEGO1_rdata.m488_ptr]
	MOV ECX,DWORD PTR [EDX+0x04]
	MOV DWORD PTR [ESP+var_2C+0x88],EAX
	MOV EDX, EAX
	MOV EAX,DWORD PTR [ECX]
	MOV DWORD PTR [EDX],EAX
	LEA EAX,DWORD PTR [ESP+var_50+0x88]
	MOV EBX,DWORD PTR [ECX+0x04]
	PUSH EAX
	MOV DWORD PTR [EDX+0x04],EBX
	MOV ECX,DWORD PTR [ECX+0x08]
	MOV DWORD PTR [EDX+0x08],ECX
	LEA ECX,DWORD PTR [ESP+var_2C+0x88]
	MOV EBX,DWORD PTR [ESP+var_2C+0x88]
	CALL_LONG(DWORD PTR [EBX+0x54])
	MOV ECX,DWORD PTR [ESP+var_64+0x88]
	MOV EDX,DWORD PTR [ESP+var_2C+0x88]
	MOV EBX,DWORD PTR [ESP+var_30+0x88]
	MOV EAX,DWORD PTR [ECX+0x04]
	LEA ECX,DWORD PTR [ESP+var_30+0x88]
	PUSH EAX
	PUSH EDX
	CALL_LONG(DWORD PTR [EBX+0x18])
	FCOMP DWORD PTR [offset LEGO1_rdata + 0x3D30]
	FNSTSW AX
	TEST AH,0x01
	JNZ loc_1004A70D
	MOV EAX,DWORD PTR [ESP+var_78+0x88]
	MOV ECX,DWORD PTR [ESP+arg3+0x88]
	MOV DWORD PTR [ESP+var_54+0x88],0x00000000
	MOV EDX,DWORD PTR [ESP+arg2+0x88]
	MOV DWORD PTR [ECX],EAX
	MOV EAX,DWORD PTR [ESP+var_60+0x88]
	MOV DWORD PTR [EDX],EAX
loc_1004A70D:
	XOR ECX, ECX
	MOV EAX,DWORD PTR [ESP+var_58+0x88]
	ADD DWORD PTR [ESP+var_3C+0x88],0x74
	MOV CX,WORD PTR DS:[EAX+0x18]
	INC DWORD PTR [ESP+var_38+0x88]
	CMP ECX,DWORD PTR [ESP+var_38+0x88]
	JG FAR loc_1004A3CF
loc_1004A72A:
	CMP DWORD PTR [ESP+var_54+0x88],0x00
	JZ loc_1004A74D
	MOV EAX,DWORD PTR [ESP+var_74+0x88]
	MOV ECX,DWORD PTR [ESP+arg3+0x88]
	POP EBP
	POP EDI
	POP ESI
	MOV DWORD PTR [ECX],EAX
	MOV EAX, 0xFFFFFFFF
	POP EBX
	ADD ESP, 0x70
	RETN 0x0014
loc_1004A74D:
	XOR EAX, EAX
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x70
	RETN 0x0014
}
}

__declspec(naked) DWORD LEGO1_sub_1004A760(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_1004A770
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_1004A770:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004A780(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_1004A790
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_1004A790:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004A7A0(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	MOV ECX,DWORD PTR [ESP+arg1]
	TEST ECX, ECX
	JZ loc_1004A7B0
	MOV EAX,DWORD PTR [ESP+arg2]
	MOV EDX,DWORD PTR [EAX]
	MOV DWORD PTR [ECX],EDX
loc_1004A7B0:
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004A8D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m49937_proc_1004A937]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB50B0_sub_100B60B0])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3DE8_ptr]
	MOV DWORD PTR [ESI+0x4C],EAX
	MOV DWORD PTR [ESI+0x5C],EAX
	MOV BYTE PTR [ESI+0x59],AL
	MOV DWORD PTR [ESI+0x60],EAX
	MOV DWORD PTR [ESI+0x54],EAX
	MOV DWORD PTR [ESI+0x64],EAX
	MOV DWORD PTR [ESI+0x68],EAX
	MOV DWORD PTR [ESI+0x6C],EAX
	MOV DWORD PTR [ESI+0x70],EAX
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV BYTE PTR [ESI+0x58],AL
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004AA60()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m49ADC_proc_1004AADC]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3DE8_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST EAX, EAX
	JZ loc_1004AAA4
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
loc_1004AAA4:
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x68]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.mABEB0__NotificationManager__YAPAVMxNotificationManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mABDF0_sub_100ACDF0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m49AE6_sub_1004AAE6])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004AAE6()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB5390_loc_100B6390])
}
}

__declspec(naked) DWORD LEGO1_sub_1004ACEC()
{
	enum{
		arg1217214 = 0x4A4AF8,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217214-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49E40_loc_1004AE40])
}
}

__declspec(naked) DWORD LEGO1_sub_1004ACFE()
{
	enum{
		arg1217211 = 0x4A4AEC,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217211-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004AD69()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49D80_loc_1004AD80])
}
}

__declspec(naked) DWORD LEGO1_sub_1004ADC1()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004AE29()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD LEGO1_sub_1004AE81()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m49D80_loc_1004AD80])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004AE90(DWORD arg1, DWORD arg2)
{
	enum{
		arg1 = 0x4,
		arg2 = 0x8,
	};

__asm{
	PUSH 0x0C
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	MOV EDX,DWORD PTR [ESP+arg2+0x4]
	ADD ESP, 0x04
	TEST EDX, EDX
	JZ loc_1004AEAE
	MOV ECX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+0x04],EDX
	RETN 0x0008
loc_1004AEAE:
	MOV DWORD PTR [EAX],EAX
	MOV DWORD PTR [EAX+0x04],EAX
	RETN 0x0008
}
}

__declspec(naked) DWORD LEGO1_sub_1004AFB9()
{
	enum{
		arg1217217 = 0x4A4B04,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217217-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4A0F0_loc_1004B0F0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004B0D9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004B131()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004B34E()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mB7EF0_loc_100B8EF0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004B450()
{
__asm{
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	XOR BL, BL
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],BL
	JZ loc_1004B46C
	MOV EDI,DWORD PTR [offset LEGO1_data + 0x11418]
	SUB EDI,DWORD PTR [ESI+0x50]
	JMP loc_1004B478
loc_1004B46C:
	MOV EDI,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB EDI,DWORD PTR [ESI+0x50]
	SUB EDI,DWORD PTR [EAX+0x08]
loc_1004B478:
	XOR EAX, EAX
	MOV AL,BYTE PTR [ESI+0x58]
	CMP EAX, 0x07
	JA_LONG(offset [LEGO1_text.m4A507_loc_1004B507])
	JMP_LONG(DWORD PTR [offset LEGO1_text.m4A510_proc_1004B510+EAX*4])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B530(DWORD arg1)
{
__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ECX,DWORD PTR [ECX+0x4C]
	TEST ECX, ECX
	JZ loc_1004B55A
	PUSH 0x00
	LEA EAX,DWORD PTR [EDI+0x68]
	PUSH EAX
	LEA ESI,DWORD PTR [EDI+0x70]
	CALL_LONG(offset [LEGO1_text.m69FC0_sub_1006AFC0])
	MOV ECX,DWORD PTR [EDI+0x4C]
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x0000009C])
	MOV DWORD PTR [EDI+0x6C],EAX
	INC DWORD PTR [ESI]
loc_1004B55A:
	MOV AL, 0x01
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B570(DWORD arg1)
{
__asm{
	MOV AL, 0x01
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B580(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	XOR EAX, EAX
	MOV AL,BYTE PTR [ECX+0x59]
	TEST EAX, EAX
	JNZ loc_1004B5AA
	MOV EAX,DWORD PTR [ECX+0x60]
	TEST EAX, EAX
	JZ loc_1004B5AA
	CMP BYTE PTR [EAX+0x15],0x00
	JZ loc_1004B5AA
	MOV EAX,DWORD PTR [EAX+0x20]
	TEST EAX, EAX
	JZ loc_1004B5AA
	MOV ECX,DWORD PTR [ESP+arg1]
	CMP DWORD PTR [EAX],ECX
	JLE loc_1004B5AA
	XOR AL, AL
	RETN 0x0004
loc_1004B5AA:
	MOV AL, 0x01
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B5B0(DWORD arg1)
{
__asm{
	PUSH EBX
	XOR EAX, EAX
	MOV AL,BYTE PTR [ECX+0x59]
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	TEST EAX, EAX
	JNZ loc_1004B5F5
	XOR EDI, EDI
	CMP DWORD PTR [EBX+0x6C],EDI
	JZ loc_1004B5F5
	CMP DWORD PTR [EBX+0x68],EDI
	JZ loc_1004B5F5
	XOR ESI, ESI
	CMP DWORD PTR [EBX+0x70],EDI
	JBE loc_1004B5F5
	XOR EBP, EBP
loc_1004B5D4:
	MOV EAX,DWORD PTR [EBX+0x6C]
	MOV ECX,DWORD PTR [EDI+EAX]
	TEST ECX, ECX
	JZ loc_1004B5E9
	MOV EAX,DWORD PTR [EBX+0x68]
	ADD EAX, EBP
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
loc_1004B5E9:
	ADD EBP, 0x48
	ADD EDI, 0x04
	INC ESI
	CMP DWORD PTR [EBX+0x70],ESI
	JA loc_1004B5D4
loc_1004B5F5:
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B600(DWORD arg1)
{
__asm{
	MOV AL, 0x01
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B610(DWORD arg1)
{
	enum{
		var_8 = -0x8,
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EAX,DWORD PTR [ECX+0x44]
	MOV ESI, ECX
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0xC],ECX
	CMP EAX, ECX
	JZ loc_1004B66A
loc_1004B624:
	MOV EDI,DWORD PTR [ESP+var_4+0xC]
	PUSH offset [LEGO1_data.m71C_str]
	MOV ECX,DWORD PTR [EDI+0x08]
	ADD EDI, 0x08
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JNZ loc_1004B652
	MOV ECX,DWORD PTR [EDI]
	PUSH offset [LEGO1_data.m700_str]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x10])
	TEST AL, AL
	JNZ loc_1004B652
	MOV ECX,DWORD PTR [EDI]
	PUSH 0x01
	JMP loc_1004B656
loc_1004B652:
	MOV ECX,DWORD PTR [EDI]
	PUSH 0x03
loc_1004B656:
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x44])
	MOV EAX,DWORD PTR [ESP+var_8+0x10]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_8+0x10],ECX
	CMP DWORD PTR [ESI+0x44],ECX
	JNZ loc_1004B624
loc_1004B66A:
	CALL_LONG(offset [LEGO1_text.mABED0__Timer__YAPAVMxTimer__XZ])
	CMP BYTE PTR [EAX+0x0C],0x00
	JZ loc_1004B67D
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x11418]
	JMP loc_1004B686
loc_1004B67D:
	MOV EDX,DWORD PTR [offset LEGO1_data + 0x11414]
	SUB EDX,DWORD PTR [EAX+0x08]
loc_1004B686:
	MOV ECX,DWORD PTR [ESI+0x1C]
	PUSH EDX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x38])
	MOV ECX,DWORD PTR [ESI+0x3C]
	TEST ECX, ECX
	JZ loc_1004B69C
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x60])
loc_1004B69C:
	MOV AL, 0x01
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B6B0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	MOV EAX,DWORD PTR [ECX+0x4C]
	TEST EAX, EAX
	JZ loc_1004B6C2
	CMP DWORD PTR [EAX+0x08],0x00
	JZ loc_1004B6C2
	XOR AL, AL
	RETN 0x0004
loc_1004B6C2:
	MOV EAX,DWORD PTR [ESP+arg1]
	MOV DWORD PTR [ECX+0x54],EAX
	MOV AL, 0x01
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004B6D0(DWORD arg1)
{
	enum{
		var_34 = -0x34,
		var_30 = -0x30,
		var_2C = -0x2C,
		var_28 = -0x28,
		var_24 = -0x24,
		var_20 = -0x20,
		var_14 = -0x14,
		var_10 = -0x10,
		var_C = -0xC,
		arg1217258 = 0x4A4BA8,
	};

__asm{
	SUB ESP, 0x30
	PUSH EBX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	MOV EDI, ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EBX,DWORD PTR [EAX+0x6C]
	CALL_LONG(offset [LEGO1_text.m14790_sub_10015790])
	MOV ESI, EAX
	MOV EAX,DWORD PTR [EDI+0x60]
	TEST EAX, EAX
	JZ FAR loc_1004B816
	CMP BYTE PTR [EAX+0x14],0x00
	JZ FAR loc_1004B816
	CMP WORD PTR DS:[EAX+0x12],-0x01
	JZ FAR loc_1004B816
	TEST ESI, ESI
	JZ FAR loc_1004B816
	MOV ECX,DWORD PTR [EDI+0x64]
	TEST ECX, ECX
	JZ FAR loc_1004B80C
	CMP DWORD PTR [EDI+0x4C],0x00
	MOV EAX, 0x00000001
	JZ FAR loc_1004B7CD
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [EDI+0x60]
	CMP BYTE PTR [EAX+0x29],0x00
	MOV EAX, 0x00000000
	JZ FAR loc_1004B7CD
	LEA EAX,DWORD PTR [ESP+var_C+0x40]
	LEA ECX,DWORD PTR [ESP+var_20+0x40]
	MOV DWORD PTR [ESP+var_10+0x40],EAX
	MOV DWORD PTR [ESP+var_24+0x40],ECX
	MOV EAX, offset [LEGO1_rdata.m488_ptr]
	LEA ECX,DWORD PTR [ESP+var_30+0x40]
	MOV DWORD PTR [ESP+var_14+0x40],EAX
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_14+0x44]
	MOV DWORD PTR [ESP+var_28+0x44],EAX
	MOV EAX,DWORD PTR [EBX+0x14]
	ADD EAX, 0x30
	MOV DWORD PTR [ESP+var_2C+0x44],EAX
	MOV DWORD PTR [ESP+var_30+0x44],offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(DWORD PTR [offset LEGO1_rdata.m510_ptr])
	MOV EAX,DWORD PTR [EBX+0x14]
	LEA ECX,DWORD PTR [ESP+var_34+0x44]
	ADD EAX, 0x20
	PUSH ECX
	LEA ECX,DWORD PTR [ESP+var_28+0x44]
	MOV EBP,DWORD PTR [ESP+var_28+0x44]
	MOV DWORD PTR [ESP+var_2C+0x44],EAX
	MOV DWORD PTR [ESP+var_30+0x44],offset [LEGO1_rdata.m518_ptr]
	CALL_LONG(DWORD PTR [EBP+arg1217258-0x4A4B20])
	MOV EAX,DWORD PTR [ESP+var_14+0x44]
	LEA ECX,DWORD PTR [ESP+var_2C+0x44]
	ADD EAX, 0x04
	PUSH ECX
	LEA EDX,DWORD PTR [ESP+var_14+0x44]
	FLD DWORD PTR [EAX]
	FSUB QWORD PTR [offset LEGO1_rdata + 0x3DE0]
	PUSH EDX
	FSTP DWORD PTR [EAX]
	MOV EAX,DWORD PTR [EDI+0x4C]
	MOV ECX,DWORD PTR [EDI+0x64]
	PUSH EAX
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m1EB70_sub_1001FB70])
loc_1004B7CD:
	TEST EAX, EAX
	JZ loc_1004B7F9
	MOV EAX,DWORD PTR [EDI+0x60]
	MOV ECX, EBX
	ADD EAX, 0x2C
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.mA36A0_sub_100A46A0])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	PUSH EBX
	MOV EDX,DWORD PTR [EAX+0x68]
	MOV ECX,DWORD PTR [EDX+0x08]
	CALL_LONG(offset [LEGO1_text.mAA210_sub_100AB210])
	PUSH ESI
	MOV ECX,DWORD PTR [EDI+0x64]
	CALL_LONG(offset [LEGO1_text.m1EA70_sub_1001FA70])
loc_1004B7F9:
	MOV EAX,DWORD PTR [EDI+0x60]
	CMP BYTE PTR [EAX+0x29],0x00
	JZ loc_1004B80C
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x000000A8])
loc_1004B80C:
	MOV DWORD PTR [ESI+0x000000DC],0x00000000
loc_1004B816:
	MOV AL, 0x01
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x30
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1004B830()
{
__asm{
	CMP BYTE PTR [ECX+0x58],0x06
	SBB AL, AL
	INC AL
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004B840()
{
	enum{
		var_4 = -0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH ESI
	PUSH EDI
	MOV EDI,DWORD PTR [ECX+0x1C]
	MOV ESI, ECX
	MOV ECX,DWORD PTR [ECX+0x4C]
	TEST ECX, ECX
	JZ loc_1004B856
	CALL_LONG(offset [LEGO1_text.m6B7A0_sub_1006C7A0])
loc_1004B856:
	MOV EAX,DWORD PTR [ESI+0x44]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0xC],ECX
	CMP EAX, ECX
	JZ loc_1004B883
loc_1004B863:
	MOV EAX,DWORD PTR [ESP+var_4+0xC]
	MOV ECX,DWORD PTR [EAX+0x08]
	CMP DWORD PTR [ESI+0x4C],ECX
	JZ loc_1004B874
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x40])
loc_1004B874:
	MOV EAX,DWORD PTR [ESP+var_4+0xC]
	MOV ECX,DWORD PTR [EAX]
	MOV DWORD PTR [ESP+var_4+0xC],ECX
	CMP DWORD PTR [ESI+0x44],ECX
	JNZ loc_1004B863
loc_1004B883:
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m4A6D0_sub_1004B6D0])
	MOV EAX,DWORD PTR [ESI]
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EAX+0x40])
	TEST EDI, EDI
	JZ loc_1004B8A4
	PUSH EDI
	CALL_LONG(offset [LEGO1_text.mABEF0__Streamer__YAPAVMxStreamer__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.mB88F0_sub_100B98F0])
loc_1004B8A4:
	POP EDI
	POP ESI
	ADD ESP, 0x04
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004B8B0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x60]
	TEST EAX, EAX
	JZ loc_1004B8BB
	MOV AL,BYTE PTR [EAX+0x28]
	RET
loc_1004B8BB:
	MOV AL, 0x01
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004B8C0()
{
__asm{
	PUSH 0x00
	CALL_LONG(offset [LEGO1_text.m4A6D0_sub_1004B6D0])
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004B8D0()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4A934_proc_1004B934]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR EAX, EAX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x34],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3EA0_ptr]
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV DWORD PTR [ESI+0x30],EAX
	MOV DWORD PTR [ESI+0x08],EAX
	MOV DWORD PTR [ESI+0x1C],EAX
	AND BYTE PTR [ESI+0x20],0xFE
	AND BYTE PTR [ESI+0x28],0xFE
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR [ESI+0x24],EAX
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV EAX, ESI
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004BA00()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4AA87_proc_1004BA87]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3EA0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	MOV EAX,DWORD PTR [ECX+0x1C]
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	ADD ESP, 0x04
	MOV ECX,DWORD PTR [EBP+var_14+0x4]
	MOV EAX,DWORD PTR [ECX+0x08]
	TEST EAX, EAX
	JZ loc_1004BA5E
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST ECX, ECX
	JZ loc_1004BA4E
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1004BA4E:
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	MOV ECX,DWORD PTR [EAX+0x08]
	TEST ECX, ECX
	JZ loc_1004BA5E
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX])
loc_1004BA5E:
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	MOV EAX,DWORD PTR [EBP+var_14+0x4]
	PUSH EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x18])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4AA91_sub_1004BA91])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004BA91()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mAD1E0___1MxCore__UAE_XZ])
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004BB70(DWORD arg1, DWORD arg2, DWORD arg3, DWORD arg4)
{
	enum{
		arg1 = 0x4,
		arg3 = 0xC,
		arg4 = 0x10,
	};

__asm{
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [ECX+0x2C],0x00
	MOV ESI, ECX
	JNZ FAR loc_1004BC22
	CMP BYTE PTR [ESP+arg4+0x8],0x00
	JNZ loc_1004BB91
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E470_sub_1007F470])
loc_1004BB91:
	MOV EAX,DWORD PTR [ESP+arg1+0x8]
	MOV CL,BYTE PTR [ESI+0x20]
	MOV DWORD PTR [ESI+0x2C],EAX
	MOV AL,BYTE PTR [ESP+arg3+0x8]
	XOR AL, CL
	AND AL, 0x01
	XOR AL, CL
	MOV BYTE PTR [ESI+0x20],AL
	TEST AL, 0x01
	JZ loc_1004BBCE
	MOV ECX,DWORD PTR [ESI+0x08]
	TEST ECX, ECX
	JZ loc_1004BBCE
	PUSH 0x01
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x54])
	MOV EAX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [EAX+0x1C]
	MOV DWORD PTR [EAX+0x3C],0x00002710
	OR DWORD PTR [EAX+0x30],0x00000200
loc_1004BBCE:
	CALL_LONG(DWORD PTR [offset LEGO1_idata.m580_timeGetTime])
	MOV EDI,DWORD PTR [ESP+arg1+0xC]
	MOV DWORD PTR [ESI+0x000008F8],EAX
	MOV DWORD PTR [ESI+0x000008FC],EDI
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	MOV ECX, EAX
	PUSH EDI
	PUSH ESI
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x14])
	CALL_LONG(offset [LEGO1_text.m14740__InputManager__YAPAVLegoInputManager__XZ])
	MOV BYTE PTR [EAX+0x00000088],0x01
	MOV BYTE PTR [EAX+0x00000336],0x00
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV BYTE PTR [EAX+0x000000E4],0x00
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m3DF40_sub_1003EF40])
	ADD ESP, 0x04
	XOR EAX, EAX
	POP EDI
	POP ESI
	RETN 0x0010
loc_1004BC22:
	MOV EAX, 0xFFFFFFFF
	POP EDI
	POP ESI
	RETN 0x0010
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004BC30(DWORD arg1)
{
	enum{
		var_1C = -0x1C,
		var_18 = -0x18,
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
		arg1 = 0x4,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4ACD4_proc_1004BCD4]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x0C
	PUSH ESI
	MOV ESI, ECX
	CMP DWORD PTR [ECX+0x2C],0x00
	JZ loc_1004BCBC
	MOV DWORD PTR [ESI+0x2C],0x00000000
	AND BYTE PTR [ESI+0x20],0xFE
	CALL_LONG(offset [LEGO1_text.mABEC0__TickleManager__YAPAVMxTickleManager__XZ])
	PUSH ESI
	MOV EDX,DWORD PTR [EAX]
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x18])
	CMP BYTE PTR [EBP+arg1+0x4],0x00
	JZ loc_1004BCBC
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	TEST ECX, ECX
	JZ loc_1004BCBC
	MOV DWORD PTR [EBP+var_1C+0x4],offset [LEGO1_rdata.m16E8_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA EAX,DWORD PTR [EBP+var_1C+0x4]
	MOV DWORD PTR [EBP+var_14+0x4],ESI
	MOV ESI, 0xFFFFFFFF
	PUSH EAX
	MOV DWORD PTR [EBP+var_18+0x4],0x00000018
	MOV DWORD PTR [EBP+var_1C+0x4],offset [LEGO1_rdata.m16E0_ptr]
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x04])
	MOV DWORD PTR [EBP+var_8+0x4],ESI
	CALL_LONG(offset [LEGO1_text.m4ACDE_sub_1004BCDE])
loc_1004BCBC:
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000], EAX
	MOV ESP, EBP
	POP EBP
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1004BCDE()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004BCF0()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [EAX+0x58]
	CALL_LONG(offset [LEGO1_text.mB9640_sub_100BA640])
	PUSH 0x01
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m4AC30_sub_1004BC30])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004BD10()
{
	enum{
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_5C = -0x5C,
		var_2C = -0x2C,
		arg1217224 = 0x4A4B20,
	};

__asm{
	SUB ESP, 0x6C
	PUSH EBX
	PUSH ESI
	MOV AX,WORD PTR DS:[ECX+0x34]
	PUSH EDI
	CMP AX, 0x0028
	PUSH EBP
	MOV ESI, ECX
	JNZ loc_1004BD38
	MOV WORD PTR DS:[ESI+0x34],0x0000
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m4AC30_sub_1004BC30])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x6C
	RET
loc_1004BD38:
	TEST AX, AX
	JNZ loc_1004BD9B
	XOR EAX, EAX
loc_1004BD3F:
	MOV WORD PTR DS:[EAX*2+ESI+0x36],AX
	INC EAX
	CMP EAX, 0x00000280
	JL loc_1004BD3F
	LEA EBX,DWORD PTR [ESI+0x36]
	MOV EDI, 0x00000280
loc_1004BD54:
	ADD EBX, 0x02
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV BP,WORD PTR DS:[EBX-0x02]
	MOV ECX, 0x00000280
	IDIV ECX
	DEC EDI
	LEA EAX,DWORD PTR [EDX*2+ESI+0x36]
	MOV CX,WORD PTR DS:[EAX]
	MOV WORD PTR DS:[EBX-0x02],CX
	MOV WORD PTR DS:[EAX],BP
	JNZ loc_1004BD54
	LEA EBX,DWORD PTR [ESI+0x00000536]
	MOV EDI, 0x000001E0
loc_1004BD84:
	ADD EBX, 0x02
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV ECX, 0x00000280
	IDIV ECX
	MOV WORD PTR DS:[EBX-0x02],DX
	DEC EDI
	JNZ loc_1004BD84
loc_1004BD9B:
	LEA EDI,DWORD PTR [ESP+var_6C+0x7C]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_6C+0x80]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH ECX
	MOV DWORD PTR [ESP+var_6C+0x88],0x0000006C
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	CMP EAX, 0x887601C2
	JNZ loc_1004BDE8
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x6C])
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_7C+0x90]
	PUSH 0x01
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
loc_1004BDE8:
	TEST EAX, EAX
	JNZ FAR loc_1004BEBE
	LEA EAX,DWORD PTR [ESP+var_80+0x90]
	MOV ECX, ESI
	PUSH EAX
	XOR EDI, EDI
	CALL_LONG(offset [LEGO1_text.m4B4D0_sub_1004C4D0])
loc_1004BDFE:
	XOR ECX, ECX
	XOR EAX, EAX
	MOV CX,WORD PTR DS:[EDI*2+ESI+0x36]
	MOV AX,WORD PTR DS:[ESI+0x34]
	SHL EAX, 0x04
	CMP ECX, EAX
	JL loc_1004BE69
	ADD EAX, 0x0F
	CMP EAX, ECX
	JL loc_1004BE69
	XOR ECX, ECX
	MOV EBX, 0x00000008
loc_1004BE20:
	XOR EAX, EAX
	MOV EBP, 0x00000280
	MOV AX,WORD PTR DS:[ECX*2+ESI+0x00000536]
	ADD EAX, EDI
	CDQ
	IDIV EBP
	CMP DWORD PTR [ESP+var_2C+0x90],EBX
	JNZ loc_1004BE4B
	MOV EAX,DWORD PTR [ESP+var_70+0x90]
	IMUL EAX,ECX
	ADD EAX,DWORD PTR [ESP+var_5C+0x90]
	MOV BYTE PTR [EDX+EAX],0x00
	JMP loc_1004BE60
loc_1004BE4B:
	MOV EBP,DWORD PTR [ESP+var_70+0x90]
	MOV EAX,DWORD PTR [ESP+var_5C+0x90]
	IMUL EBP,ECX
	LEA EDX,DWORD PTR [EDX*2+EBP+arg1217224-0x4A4B20]
	MOV WORD PTR DS:[EAX+EDX],0x0000
loc_1004BE60:
	INC ECX
	CMP ECX, 0x000001E0
	JL loc_1004BE20
loc_1004BE69:
	INC EDI
	CMP EDI, 0x00000280
	JL loc_1004BDFE
	LEA EAX,DWORD PTR [ESP+var_80+0x90]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B580_sub_1004C580])
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV ECX,DWORD PTR [ESP+var_5C+0x90]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST BYTE PTR [EAX+0x44],0x02
	JZ loc_1004BEBA
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x58]
	PUSH 0x10
	PUSH offset LEGO1_data + 0x4378
	MOV ECX,DWORD PTR [ESI+0x30]
	MOV EAX,DWORD PTR [EAX+0x2C]
	PUSH ECX
	PUSH 0x00
	PUSH 0x00
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x1C])
loc_1004BEBA:
	INC WORD PTR DS:[ESI+0x34]
loc_1004BEBE:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x6C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004BED0()
{
	enum{
		var_90 = -0x90,
		var_8C = -0x8C,
		var_88 = -0x88,
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_5C = -0x5C,
		var_2C = -0x2C,
	};

__asm{
	MOV AX,WORD PTR DS:[ECX+0x34]
	SUB ESP, 0x7C
	CMP AX, 0x0010
	PUSH EBX
	MOV DWORD PTR [ESP+var_7C+0x80],ECX
	PUSH ESI
	PUSH EDI
	PUSH EBP
	JNZ loc_1004BEFA
	MOV WORD PTR DS:[ECX+0x34],0x0000
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m4AC30_sub_1004BC30])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x7C
	RET
loc_1004BEFA:
	TEST AX, AX
	JNZ loc_1004BF6B
	XOR EAX, EAX
loc_1004BF01:
	MOV EDX,DWORD PTR [ESP+var_7C+0x8C]
	MOV WORD PTR DS:[EAX*2+EDX+0x36],AX
	INC EAX
	CMP EAX, 0x40
	JL loc_1004BF01
	LEA EDI,DWORD PTR [EDX+0x36]
	MOV ESI, 0x00000040
loc_1004BF18:
	ADD EDI, 0x02
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	MOV BX,WORD PTR DS:[EDI-0x02]
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x3F
	XOR EAX, EDX
	SUB EAX, EDX
	MOV EDX,DWORD PTR [ESP+var_7C+0x8C]
	DEC ESI
	LEA EAX,DWORD PTR [EAX*2+EDX+0x36]
	MOV CX,WORD PTR DS:[EAX]
	MOV WORD PTR DS:[EDI-0x02],CX
	MOV WORD PTR DS:[EAX],BX
	JNZ loc_1004BF18
	LEA EDI,DWORD PTR [EDX+0x00000536]
	MOV ESI, 0x00000030
loc_1004BF50:
	ADD EDI, 0x02
	CALL_LONG(offset [LEGO1_text.m8A640_sub_1008B640])
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x3F
	XOR EAX, EDX
	SUB EAX, EDX
	DEC ESI
	MOV WORD PTR DS:[EDI-0x02],AX
	JNZ loc_1004BF50
loc_1004BF6B:
	LEA EDI,DWORD PTR [ESP+var_6C+0x8C]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	MOV EDX,DWORD PTR [ESP+var_7C+0x90]
	PUSH 0x01
	MOV DWORD PTR [ESP+var_6C+0x94],0x0000006C
	MOV EAX,DWORD PTR [EDX+0x30]
	LEA ECX,DWORD PTR [ESP+var_6C+0x94]
	PUSH ECX
	PUSH 0x00
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x64])
	CMP EAX, 0x887601C2
	JNZ loc_1004BFC4
	MOV EDX,DWORD PTR [ESP+var_90+0xA0]
	MOV EAX,DWORD PTR [EDX+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x6C])
	MOV EDX,DWORD PTR [ESP+var_90+0xA0]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_7C+0xA0]
	PUSH 0x01
	MOV EAX,DWORD PTR [EDX+0x30]
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
loc_1004BFC4:
	TEST EAX, EAX
	JNZ FAR loc_1004C159
	LEA EAX,DWORD PTR [ESP+var_80+0xA0]
	MOV ECX,DWORD PTR [ESP+var_90+0xA0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B4D0_sub_1004C4D0])
	MOV DWORD PTR [ESP+var_8C+0xA0],0x00000000
loc_1004BFE2:
	XOR ECX, ECX
	MOV EDX,DWORD PTR [ESP+var_90+0xA0]
	MOV EAX,DWORD PTR [ESP+var_8C+0xA0]
	MOV CX,WORD PTR DS:[EAX*2+EDX+0x36]
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[EDX+0x34]
	SHL EAX, 0x02
	CMP ECX, EAX
	JL FAR loc_1004C0F0
	ADD EAX, 0x03
	CMP EAX, ECX
	JL FAR loc_1004C0F0
	MOV ECX, 0x0000000A
	ADD EDX, 0x00000536
	MOV DWORD PTR [ESP+var_84+0xA0],0x00000000
	MOV DWORD PTR [ESP+var_88+0xA0],EDX
loc_1004C024:
	XOR EDX, EDX
	MOV EAX,DWORD PTR [ESP+var_88+0xA0]
	MOV DX,WORD PTR DS:[EAX]
	MOV EAX,DWORD PTR [ESP+var_8C+0xA0]
	ADD EAX, EDX
	CDQ
	XOR EAX, EDX
	SUB EAX, EDX
	AND EAX, 0x3F
	MOV EDI,DWORD PTR [ESP+var_70+0xA0]
	XOR EAX, EDX
	SUB EAX, EDX
	IMUL EDI,DWORD PTR [ESP+var_84+0xA0]
	LEA EBX,DWORD PTR [EAX*4+EAX]
	MOV EAX,DWORD PTR [ESP+var_2C+0xA0]
	SHR EAX, 0x03
	LEA ESI,DWORD PTR [EBX*2+0x00000000]
	LEA EBX,DWORD PTR [EDI*4+EDI]
	MOV EDX, ESI
	IMUL EDX,EAX
	LEA EDI,DWORD PTR [EBX*2+EDX]
	ADD EDI,DWORD PTR [ESP+var_5C+0xA0]
	CMP EAX, 0x01
	JNZ loc_1004C073
	XOR EDX, EDX
	MOV DL,BYTE PTR [EDI]
	JMP loc_1004C078
loc_1004C073:
	XOR EDX, EDX
	MOV DX,WORD PTR DS:[EDI]
loc_1004C078:
	LEA EDI,DWORD PTR [ECX-0x0A]
	CMP EDI, ECX
	JGE loc_1004C0D8
loc_1004C07F:
	CMP DWORD PTR [ESP+var_2C+0xA0],0x08
	JNZ loc_1004C0AC
	MOV AL, DL
	MOV AH, AL
	MOV AL, DL
	MOV EBX, EAX
	SHL EBX, 0x10
	MOV BX, AX
	MOV EAX, EDI
	IMUL EAX,DWORD PTR [ESP+var_70+0xA0]
	ADD EAX, ESI
	ADD EAX,DWORD PTR [ESP+var_5C+0xA0]
	MOV DWORD PTR [EAX],EBX
	MOV DWORD PTR [EAX+0x04],EBX
	MOV WORD PTR DS:[EAX+0x08],BX
	JMP loc_1004C0D3
loc_1004C0AC:
	MOVZX EBX,DX
	MOV EAX, EDI
	MOV EBP, EBX
	IMUL EAX,DWORD PTR [ESP+var_70+0xA0]
	SHL EBP, 0x10
	LEA EAX,DWORD PTR [ESI*2+EAX]
	MOV BP, BX
	ADD EAX,DWORD PTR [ESP+var_5C+0xA0]
	MOV DWORD PTR [EAX],EBP
	MOV DWORD PTR [EAX+0x04],EBP
	MOV DWORD PTR [EAX+0x08],EBP
	MOV DWORD PTR [EAX+0x0C],EBP
	MOV DWORD PTR [EAX+0x10],EBP
loc_1004C0D3:
	INC EDI
	CMP EDI, ECX
	JL loc_1004C07F
loc_1004C0D8:
	ADD ECX, 0x0A
	INC DWORD PTR [ESP+var_84+0xA0]
	ADD DWORD PTR [ESP+var_88+0xA0],0x02
	CMP ECX, 0x000001EA
	JL FAR loc_1004C024
loc_1004C0F0:
	INC DWORD PTR [ESP+var_8C+0xA0]
	CMP DWORD PTR [ESP+var_8C+0xA0],0x40
	JL FAR loc_1004BFE2
	LEA EAX,DWORD PTR [ESP+var_80+0xA0]
	MOV ECX,DWORD PTR [ESP+var_90+0xA0]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B580_sub_1004C580])
	MOV EDX,DWORD PTR [ESP+var_90+0xA0]
	MOV ECX,DWORD PTR [ESP+var_5C+0xA0]
	PUSH ECX
	MOV EAX,DWORD PTR [EDX+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	TEST BYTE PTR [EAX+0x44],0x02
	JZ loc_1004C151
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EAX,DWORD PTR [EAX+0x58]
	PUSH 0x10
	MOV EDX,DWORD PTR [ESP+var_8C+0xA0]
	PUSH offset LEGO1_data + 0x4378
	MOV EAX,DWORD PTR [EAX+0x2C]
	MOV ECX,DWORD PTR [EDX+0x30]
	PUSH ECX
	PUSH 0x00
	PUSH 0x00
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x1C])
loc_1004C151:
	MOV EDX,DWORD PTR [ESP+var_90+0xA0]
	INC WORD PTR DS:[EDX+0x34]
loc_1004C159:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x7C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004C170()
{
	enum{
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_5C = -0x5C,
		var_2C = -0x2C,
	};

__asm{
	SUB ESP, 0x6C
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP WORD PTR DS:[ESI+0x34],0x00F0
	JNZ loc_1004C194
	MOV WORD PTR DS:[ESI+0x34],0x0000
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m4AC30_sub_1004BC30])
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x6C
	RET
loc_1004C194:
	LEA EDI,DWORD PTR [ESP+var_6C+0x78]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_6C+0x7C]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH ECX
	MOV DWORD PTR [ESP+var_6C+0x84],0x0000006C
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	CMP EAX, 0x887601C2
	JNZ loc_1004C1E1
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x6C])
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_7C+0x8C]
	PUSH 0x01
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
loc_1004C1E1:
	TEST EAX, EAX
	JNZ FAR loc_1004C269
	LEA EAX,DWORD PTR [ESP+var_80+0x8C]
	MOV ECX, ESI
	PUSH EAX
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m4B4D0_sub_1004C4D0])
	MOV BX,WORD PTR DS:[ESI+0x34]
	MOV EDX,DWORD PTR [ESP+var_2C+0x8C]
	IMUL EBX,DWORD PTR [ESP+var_70+0x8C]
	ADD EBX, EBX
	LEA EDX,DWORD PTR [EDX*4+EDX]
	SHL EDX, 0x07
	ADD EBX,DWORD PTR [ESP+var_5C+0x8C]
	SHR EDX, 0x03
	MOV EDI, EBX
	XOR EAX, EAX
	MOV ECX, EDX
	SHR ECX, 0x02
	REP STOSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP STOSB
	ADD EBX,DWORD PTR [ESP+var_70+0x8C]
	MOV EAX,DWORD PTR [ESP+var_2C+0x8C]
	MOV EDI, EBX
	LEA EDX,DWORD PTR [EAX*4+EAX]
	SHL EDX, 0x07
	XOR EAX, EAX
	SHR EDX, 0x03
	MOV ECX, EDX
	SHR ECX, 0x02
	REP STOSD
	MOV ECX, EDX
	AND ECX, 0x03
	REP STOSB
	LEA EAX,DWORD PTR [ESP+var_80+0x8C]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B580_sub_1004C580])
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV ECX,DWORD PTR [ESP+var_5C+0x8C]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	INC WORD PTR DS:[ESI+0x34]
loc_1004C269:
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x6C
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004C270()
{
	enum{
		var_84 = -0x84,
		var_80 = -0x80,
		var_7C = -0x7C,
		var_70 = -0x70,
		var_6C = -0x6C,
		var_5C = -0x5C,
		var_2C = -0x2C,
	};

__asm{
	SUB ESP, 0x70
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	CMP WORD PTR DS:[ESI+0x34],0x00F0
	PUSH EBP
	JNZ loc_1004C296
	MOV WORD PTR DS:[ESI+0x34],0x0000
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m4AC30_sub_1004BC30])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x70
	RET
loc_1004C296:
	LEA EDI,DWORD PTR [ESP+var_6C+0x80]
	XOR EAX, EAX
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_6C+0x84]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH ECX
	MOV DWORD PTR [ESP+var_6C+0x8C],0x0000006C
	PUSH 0x00
	MOV EBX,DWORD PTR [EAX]
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
	CMP EAX, 0x887601C2
	JNZ loc_1004C2E3
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH EAX
	MOV EBX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EBX+0x6C])
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_7C+0x94]
	PUSH 0x01
	PUSH ECX
	MOV EBX,DWORD PTR [EAX]
	PUSH 0x00
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x64])
loc_1004C2E3:
	TEST EAX, EAX
	JNZ FAR loc_1004C3CF
	LEA EAX,DWORD PTR [ESP+var_80+0x94]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B4D0_sub_1004C4D0])
	XOR EDX, EDX
	MOV EBX,DWORD PTR [ESP+var_2C+0x94]
	SHR EBX, 0x03
	MOV DX,WORD PTR DS:[ESI+0x34]
	LEA EAX,DWORD PTR [EBX*4+EBX]
	IMUL EDX,DWORD PTR [ESP+var_70+0x94]
	SHL EAX, 0x07
	ADD EDX,DWORD PTR [ESP+var_5C+0x94]
	MOV ECX, EAX
	MOV EBP, EAX
	SHR ECX, 0x02
	MOV EDI, EDX
	MOV DWORD PTR [ESP+var_84+0x94],EAX
	XOR EAX, EAX
	REP STOSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP STOSB
	MOV AX,WORD PTR DS:[ESI+0x34]
	MOV ECX, 0x000001E0
	SUB ECX, EAX
	LEA EBP,DWORD PTR [EAX+0x01]
	CMP ECX, EBP
	JLE loc_1004C394
loc_1004C33D:
	ADD EDX,DWORD PTR [ESP+var_70+0x94]
	XOR EAX, EAX
	MOV AX,WORD PTR DS:[ESI+0x34]
	MOV ECX, EBX
	IMUL EAX,EBX
	SHR ECX, 0x02
	INC EBP
	LEA EDI,DWORD PTR [EDX+EAX]
	XOR EAX, EAX
	REP STOSD
	MOV ECX, EBX
	AND ECX, 0x03
	REP STOSB
	MOV EAX, 0xFFFFFFFF
	XOR ECX, ECX
	MOV CX,WORD PTR DS:[ESI+0x34]
	SUB EAX, ECX
	MOV ECX, EBX
	IMUL EAX,EBX
	SHR ECX, 0x02
	LEA EDI,DWORD PTR [EDX+EAX+0x00000280]
	XOR EAX, EAX
	REP STOSD
	MOV ECX, EBX
	AND ECX, 0x03
	REP STOSB
	MOV AX,WORD PTR DS:[ESI+0x34]
	MOV ECX, 0x000001E0
	SUB ECX, EAX
	CMP ECX, EBP
	JG loc_1004C33D
loc_1004C394:
	ADD EDX,DWORD PTR [ESP+var_70+0x94]
	MOV EBX,DWORD PTR [ESP+var_84+0x94]
	MOV EDI, EDX
	XOR EAX, EAX
	MOV ECX, EBX
	SHR ECX, 0x02
	REP STOSD
	MOV ECX, EBX
	AND ECX, 0x03
	REP STOSB
	LEA EAX,DWORD PTR [ESP+var_80+0x94]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B580_sub_1004C580])
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV ECX,DWORD PTR [ESP+var_5C+0x94]
	MOV EBX,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	INC WORD PTR DS:[ESI+0x34]
loc_1004C3CF:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x70
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004C3E0()
{
	enum{
		var_80 = -0x80,
		var_7C = -0x7C,
		var_6C = -0x6C,
		var_5C = -0x5C,
	};

__asm{
	SUB ESP, 0x6C
	XOR EAX, EAX
	PUSH ESI
	PUSH EDI
	MOV ESI, ECX
	LEA EDI,DWORD PTR [ESP+var_6C+0x74]
	MOV ECX, 0x0000001B
	PUSH 0x00
	REP STOSD
	LEA ECX,DWORD PTR [ESP+var_6C+0x78]
	PUSH 0x01
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH ECX
	MOV DWORD PTR [ESP+var_6C+0x80],0x0000006C
	PUSH 0x00
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x64])
	CMP EAX, 0x887601C2
	JNZ loc_1004C434
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x6C])
	MOV EAX,DWORD PTR [ESI+0x30]
	PUSH 0x00
	LEA ECX,DWORD PTR [ESP+var_7C+0x88]
	PUSH 0x01
	PUSH ECX
	PUSH 0x00
	PUSH EAX
	MOV EAX,DWORD PTR [EAX]
	CALL_LONG(DWORD PTR [EAX+0x64])
loc_1004C434:
	TEST EAX, EAX
	JNZ loc_1004C461
	LEA EAX,DWORD PTR [ESP+var_80+0x88]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B4D0_sub_1004C4D0])
	LEA EAX,DWORD PTR [ESP+var_80+0x88]
	MOV ECX, ESI
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m4B580_sub_1004C580])
	MOV EAX,DWORD PTR [ESI+0x30]
	MOV ECX,DWORD PTR [ESP+var_5C+0x88]
	MOV ESI,DWORD PTR [EAX]
	PUSH ECX
	PUSH EAX
	CALL_LONG(DWORD PTR [ESI+0x00000080])
loc_1004C461:
	POP EDI
	POP ESI
	ADD ESP, 0x6C
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1__SetWaitIndicator_MxTransitionManager__QAEXPAVMxVideoPresenter___Z(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x08]
	MOV ESI, ECX
	TEST EAX, EAX
	JZ loc_1004C493
	MOV EAX,DWORD PTR [EAX+0x1C]
	AND DWORD PTR [EAX+0x30],0xFFFFFF7F
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x40])
	MOV DWORD PTR [ESI+0x08],0x00000000
loc_1004C493:
	MOV EAX,DWORD PTR [ESP+arg1+0x4]
	TEST EAX, EAX
	JZ loc_1004C4C0
	MOV DWORD PTR [ESI+0x08],EAX
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV ECX,DWORD PTR [ESI+0x08]
	MOV EDX,DWORD PTR [EAX]
	PUSH ECX
	MOV ECX, EAX
	CALL_LONG(DWORD PTR [EDX+0x20])
	MOV ECX,DWORD PTR [ESI+0x08]
	CMP DWORD PTR [ECX+0x08],0x03
	JGE loc_1004C4C4
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	POP ESI
	RETN 0x0004
loc_1004C4C0:
	AND BYTE PTR [ESI+0x20],0xFE
loc_1004C4C4:
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004C4D0(DWORD arg1)
{
	enum{
		var_4 = -0x4,
		arg1 = 0x4,
	};

__asm{
	SUB ESP, 0x04
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	TEST BYTE PTR [EBX+0x20],0x01
	JZ FAR loc_1004C567
	CMP DWORD PTR [EBX+0x08],0x00
	JZ loc_1004C567
	MOV EDX,DWORD PTR [EBX+0x1C]
	TEST EDX, EDX
	JZ loc_1004C567
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	MOV EAX,DWORD PTR [EBX+0x0C]
	MOV EBP,DWORD PTR [EBX+0x14]
	MOV ECX,DWORD PTR [ESI+0x54]
	SHR ECX, 0x03
	SUB EBP, EAX
	INC EBP
	MOV EDI,DWORD PTR [ESI+0x10]
	MOV DWORD PTR [ESP+var_4+0x14],0x00000000
	IMUL EBP,ECX
	IMUL EDI,DWORD PTR [EBX+0x10]
	IMUL EAX,ECX
	ADD EDI,DWORD PTR [ESI+0x24]
	MOV ECX,DWORD PTR [EBX+0x18]
	ADD EAX, EDI
	SUB ECX,DWORD PTR [EBX+0x10]
	INC ECX
	TEST ECX, ECX
	JLE loc_1004C554
loc_1004C528:
	MOV EDI, EAX
	MOV ESI, EDX
	MOV ECX, EBP
	ADD EDX, EBP
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	MOV ECX,DWORD PTR [EBX+0x18]
	SUB ECX,DWORD PTR [EBX+0x10]
	INC DWORD PTR [ESP+var_4+0x14]
	ADD EAX,DWORD PTR [ESI+0x10]
	INC ECX
	CMP ECX,DWORD PTR [ESP+var_4+0x14]
	JG loc_1004C528
loc_1004C554:
	MOV EAX,DWORD PTR [EBX+0x1C]
	PUSH EAX
	CALL_LONG(offset [LEGO1_text.m85260_sub_10086260])
	MOV DWORD PTR [EBX+0x1C],0x00000000
	ADD ESP, 0x04
loc_1004C567:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x04
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004C580(DWORD arg1)
{
	enum{
		var_10 = -0x10,
		var_C = -0xC,
		var_4 = -0x4,
		arg1 = 0x4,
		arg3 = 0xC,
		arg4 = 0x10,
		arg1217224 = 0x4A4B20,
		arg1217233 = 0x4A4B44,
	};

__asm{
	SUB ESP, 0x10
	PUSH EBX
	PUSH ESI
	PUSH EDI
	MOV EBX, ECX
	PUSH EBP
	TEST BYTE PTR [EBX+0x20],0x01
	JZ FAR loc_1004C712
	MOV ECX,DWORD PTR [EBX+0x08]
	TEST ECX, ECX
	JZ FAR loc_1004C712
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x08])
	MOV ECX,DWORD PTR [EBX+0x08]
	CMP DWORD PTR [ECX+0x08],0x03
	JL FAR loc_1004C683
	MOV ESI,DWORD PTR [ESP+arg1+0x20]
	MOV EBP,DWORD PTR [EBX+0x14]
	SUB EBP,DWORD PTR [EBX+0x0C]
	MOV EDI,DWORD PTR [ECX+0x10]
	MOV EAX,DWORD PTR [ESI+0x54]
	INC EBP
	SHR EAX, 0x03
	MOV EDX,DWORD PTR [ECX+0x14]
	MOV DWORD PTR [ESP+var_C+0x20],EAX
	MOV DWORD PTR [ESP+var_4+0x20],EDX
	IMUL EBP,EAX
	MOV EAX,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [EAX+0x00000084])
	MOV ECX,DWORD PTR [EBX+0x08]
	MOV DWORD PTR [ESP+var_10+0x20],EAX
	MOV ESI,DWORD PTR [ECX]
	CALL_LONG(DWORD PTR [ESI+0x00000080])
	MOV EDX,DWORD PTR [ESP+var_4+0x20]
	LEA ECX,DWORD PTR [EAX+EDI-0x01]
	MOV ESI,DWORD PTR [ESP+var_10+0x20]
	MOV DWORD PTR [EBX+0x0C],EDI
	MOV DWORD PTR [EBX+0x10],EDX
	MOV DWORD PTR [EBX+0x14],ECX
	LEA EDX,DWORD PTR [EDX+ESI-0x01]
	MOV ESI,DWORD PTR [ESP+arg1+0x20]
	MOV DWORD PTR [EBX+0x18],EDX
	MOV ECX,DWORD PTR [ESI+0x10]
	SUB EDX,DWORD PTR [ESP+var_4+0x20]
	IMUL ECX,DWORD PTR [ESP+var_4+0x20]
	ADD ECX,DWORD PTR [ESI+0x24]
	INC EDX
	MOV ESI, EDI
	LEA EAX,DWORD PTR [EAX+EDI-0x01]
	IMUL ESI,DWORD PTR [ESP+var_C+0x20]
	ADD ECX, ESI
	SUB EAX, EDI
	INC EAX
	MOV DWORD PTR [ESP+var_10+0x20],ECX
	IMUL EDX,EAX
	IMUL EDX,DWORD PTR [ESP+var_C+0x20]
	PUSH EDX
	CALL_LONG(offset [LEGO1_text.m85240_sub_10086240])
	ADD ESP, 0x04
	MOV DWORD PTR [EBX+0x1C],EAX
	TEST EAX, EAX
	JZ FAR loc_1004C712
	XOR EDX, EDX
	MOV ECX,DWORD PTR [EBX+0x18]
	SUB ECX,DWORD PTR [EBX+0x10]
	INC ECX
	TEST ECX, ECX
	JLE loc_1004C683
loc_1004C656:
	MOV EDI, EAX
	MOV ESI,DWORD PTR [ESP+var_10+0x20]
	MOV ECX, EBP
	INC EDX
	SHR ECX, 0x02
	REP MOVSD
	MOV ECX, EBP
	AND ECX, 0x03
	REP MOVSB
	MOV ESI,DWORD PTR [ESP+arg1+0x20]
	ADD EAX, EBP
	MOV ECX,DWORD PTR [ESI+0x10]
	ADD DWORD PTR [ESP+var_10+0x20],ECX
	MOV ECX,DWORD PTR [EBX+0x18]
	SUB ECX,DWORD PTR [EBX+0x10]
	INC ECX
	CMP ECX, EDX
	JG loc_1004C656
loc_1004C683:
	MOV EAX,DWORD PTR [EBX+0x08]
	MOV ECX,DWORD PTR [EAX+0x1C]
	TEST BYTE PTR [ECX+0x30],0x10
	JZ loc_1004C6D7
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EBP,DWORD PTR [EAX+0x58]
	MOV ESI,DWORD PTR [EBX+0x08]
	MOV EDI,DWORD PTR [EBP+arg1217224-0x4A4B20]
	MOV EBX,DWORD PTR [ESI]
	PUSH 0x00
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x00000084])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV EDX,DWORD PTR [ESI+0x50]
	MOV ESI,DWORD PTR [ESP+arg4+0x20]
	PUSH EAX
	PUSH ECX
	PUSH 0x00
	PUSH 0x00
	MOV ECX, EBP
	PUSH EDX
	PUSH ESI
	CALL_LONG(DWORD PTR [EDI+0x2C])
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0004
loc_1004C6D7:
	CALL_LONG(offset [LEGO1_text.m14720__VideoManager__YAPAVLegoVideoManager__XZ])
	MOV EDI,DWORD PTR [EAX+0x58]
	MOV ESI,DWORD PTR [EBX+0x08]
	MOV EBX,DWORD PTR [ESI]
	MOV ECX, ESI
	MOV EBP,DWORD PTR [EDI]
	CALL_LONG(DWORD PTR [EBX+0x00000084])
	PUSH EAX
	MOV ECX, ESI
	CALL_LONG(DWORD PTR [EBX+0x00000080])
	PUSH EAX
	MOV ECX,DWORD PTR [ESI+0x10]
	MOV EAX,DWORD PTR [ESI+0x14]
	MOV EDX,DWORD PTR [ESI+0x50]
	MOV ESI,DWORD PTR [ESP+arg3+0x20]
	PUSH EAX
	PUSH ECX
	PUSH 0x00
	PUSH 0x00
	MOV ECX, EDI
	PUSH EDX
	PUSH ESI
	CALL_LONG(DWORD PTR [EBP+arg1217233-0x4A4B20])
loc_1004C712:
	POP EBP
	POP EDI
	POP ESI
	POP EBX
	ADD ESP, 0x10
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1004C720()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4B7AC_proc_1004C7AC]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m19200_sub_1001A200])
	XOR EAX, EAX
	MOV ECX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x00000168],AX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3EE0_ptr]
	MOV WORD PTR DS:[ESI+0x0000016A],CX
	MOV DWORD PTR [ESI+0x00000164],EAX
	MOV WORD PTR DS:[ESI+0x0000016C],AX
	MOV DWORD PTR [ESI+0x00000170],ECX
	MOV WORD PTR DS:[ESI+0x0000016E],AX
	MOV DWORD PTR [ESI+0x00000174],ECX
	MOV EAX, ESI
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [ESI+0x0000013C],0x42200000
	MOV DWORD PTR [ESI+0x00000178],0x3F800000
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	POP ESI
	MOV DWORD PTR FS:[0x00000000],ECX
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004C970()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4B9C1_proc_1004C9C1]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m3EE0_ptr]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	PUSH ECX
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4B9CB_sub_1004C9CB])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004C9CB()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m1E10_loc_10002E10])
}
}

__declspec(naked) DWORD LEGO1_sub_1004CC40()
{
__asm{
	PUSH ESI
	PUSH offset [LEGO1_data.mBC_str]
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	MOV DWORD PTR [ESI+0x00000164],EAX
	TEST EAX, EAX
	JNZ loc_1004CC75
	PUSH offset [LEGO1_data.mBC_str]
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3AC00_sub_1003BC00])
	MOV DWORD PTR [ESI+0x00000164],EAX
loc_1004CC75:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004D667()
{
	enum{
		arg1217184 = 0x4A4A80,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217184-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mACA80___1MxDSAction__UAE_XZ])
	MOV EDI, EDI
	JMP_LONG(offset [LEGO1_text.m4C674_proc_1004D674])
}
}

__declspec(naked) DWORD LEGO1_sub_1004D920()
{
__asm{
	PUSH ESI
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m193F0_sub_1001A3F0])
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m147A0_sub_100157A0])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m1EC80_sub_1001FC80])
	MOV EAX,DWORD PTR [ESI+0x54]
	PUSH 0x000000AB
	MOV BYTE PTR [EAX+0x0C],0x00
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000AC
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000AF
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000AE
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000AD
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000B0
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	MOV ECX,DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x000000B1
	PUSH ECX
	CALL_LONG(offset [LEGO1_text.m3DE00_sub_1003EE00])
	ADD ESP, 0x08
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14750_sub_10015750])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m27EA0_sub_10028EA0])
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004DAB0()
{
__asm{
	MOV EAX,DWORD PTR [ECX+0x00000164]
	MOV DWORD PTR [EAX+0x08],0x00000001
	MOV EAX,DWORD PTR [ECX]
	JMP_LONG(DWORD PTR [EAX+0x000000CC])
}
}

__declspec(naked) DWORD LEGO1_sub_1004DAD0()
{
__asm{
	PUSH ESI
	PUSH 0x38
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.m14910_sub_10015910])
	ADD ESP, 0x04
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV EAX,DWORD PTR [EAX+0x08]
	TEST EAX, EAX
	JZ loc_1004DB09
	CMP EAX, 0x02
	JNZ loc_1004DAFD
	PUSH 0x0000039D
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m4CCF0_sub_1004DCF0])
	POP ESI
	RET
loc_1004DAFD:
	PUSH 0x0000038F
	MOV ECX, ESI
	CALL_LONG(offset [LEGO1_text.m4CCF0_sub_1004DCF0])
loc_1004DB09:
	POP ESI
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004DB10()
{
__asm{
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00000190
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000197
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000193
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000192
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000191
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000198
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000196
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000195
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH 0x00
	PUSH 0x00000194
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004DBE0()
{
__asm{
	PUSH EBX
	PUSH ESI
	MOV EAX,DWORD PTR [ECX+0x00000170]
	MOV ESI, ECX
	CMP EAX, -0x01
	JZ loc_1004DC02
	PUSH 0x00
	PUSH EAX
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH EAX
	PUSH 0x05
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1004DC02:
	PUSH offset [LEGO1_data.m154_str]
	XOR EBX, EBX
	CALL_LONG(offset [LEGO1_text.m14760__GameState__YAPAVLegoGameState__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m3ABB0_sub_1003BBB0])
	PUSH 0x01
	MOV DWORD PTR [EAX+0x18],EBX
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV DWORD PTR [EAX+0x08],EBX
	OR DWORD PTR [offset LEGO1_data + 0x1198],0x40
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E700_sub_1005F700])
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV DWORD PTR [EAX+0x0C],0x80000000
	MOV EAX,DWORD PTR [ESI+0x00000164]
	MOV BYTE PTR [EAX+0x10],BL
	MOV WORD PTR DS:[ESI+0x0000016C],BX
	MOV DWORD PTR [ESI+0x00000164],EBX
	MOV WORD PTR DS:[ESI+0x0000016E],BX
	POP ESI
	POP EBX
	RET
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004DC80(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	MOV ESI,DWORD PTR [ESP+arg1+0x14]
	PUSH 0x00
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
	MOV DWORD PTR [EDI+0x00000174],ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004DCB0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	PUSH 0x01
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5E6D0_sub_1005F6D0])
	PUSH 0x01
	PUSH 0x01
	MOV ESI,DWORD PTR [ESP+arg1+0x10]
	PUSH 0x01
	PUSH 0x00
	PUSH 0x00
	PUSH 0x01
	PUSH 0x01
	PUSH 0x00
	PUSH ESI
	CALL_LONG(offset [LEGO1_text.m14770_sub_10015770])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m5FDC0_sub_10060DC0])
	MOV DWORD PTR [EDI+0x00000174],ESI
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD __stdcall LEGO1_sub_1004DCF0(DWORD arg1)
{
	enum{
		arg1 = 0x4,
	};

__asm{
	PUSH ESI
	PUSH EDI
	MOV EDI, ECX
	MOV ESI,DWORD PTR [ESP+arg1+0x8]
	CMP ESI, -0x01
	JZ loc_1004DD10
	PUSH 0x00
	MOV EAX, DWORD PTR [offset LEGO1_data + 0x453C]
	PUSH ESI
	PUSH EAX
	PUSH 0x04
	CALL_LONG(offset [LEGO1_text.m3D430_sub_1003E430])
	ADD ESP, 0x10
loc_1004DD10:
	MOV DWORD PTR [EDI+0x00000170],ESI
	CALL_LONG(offset [LEGO1_text.m14730__BackgroundAudioManager__YAPAVMxBackgroundAudioManager__XZ])
	MOV ECX, EAX
	CALL_LONG(offset [LEGO1_text.m7E570_sub_1007F570])
	POP EDI
	POP ESI
	RETN 0x0004
}
}

__declspec(naked) DWORD LEGO1_sub_1004DD30()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4CDC0_proc_1004DDC0]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mAD1A0___0MxCore__QAE_XZ])
	XOR ECX, ECX
	MOV EAX, 0xFFFFFFFF
	MOV DWORD PTR [EBP+var_8+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],0x00000001
	MOV WORD PTR DS:[ESI+0x12],CX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m6C0_ptr]
	MOV WORD PTR DS:[ESI+0x14],CX
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m3FD8_ptr]
	MOV WORD PTR DS:[ESI+0x16],CX
	MOV DWORD PTR [ESI+0x08],ECX
	MOV WORD PTR DS:[ESI+0x18],CX
	MOV DWORD PTR [ESI+0x0C],ECX
	MOV WORD PTR DS:[ESI+0x1A],CX
	MOV BYTE PTR [ESI+0x10],CL
	MOV WORD PTR DS:[ESI+0x1C],CX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV WORD PTR DS:[ESI+0x1E],CX
	MOV EAX, ESI
	MOV WORD PTR DS:[ESI+0x20],CX
	MOV WORD PTR DS:[ESI+0x22],CX
	MOV WORD PTR DS:[ESI+0x24],CX
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004E0B9()
{
	enum{
		arg1217220 = 0x4A4B10,
	};

__asm{
	MOV ECX,DWORD PTR [EBP+arg1217220-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.m4F40_loc_10005F40])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E163()
{
	enum{
		arg1217218 = 0x4A4B08,
	};

__asm{
	LEA ECX,DWORD PTR [EBP+arg1217218-0x4A4B20]
	JMP_LONG(offset [LEGO1_text.mF4A0_loc_100104A0])
}
}

__declspec(naked) DWORD LEGO1_sub_1004E180()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4D1E9_proc_1004E1E9]
	PUSH EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	PUSH ESI
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV ESI, ECX
	CALL_LONG(offset [LEGO1_text.mB2310_sub_100B3310])
	MOV DWORD PTR [EBP+var_8+0x4],0x00000000
	LEA ECX,DWORD PTR [ESI+0x74]
	CALL_LONG(offset [LEGO1_text.mAD200_sub_100AE200])
	MOV BYTE PTR [EBP+var_8+0x4],0x01
	MOV ECX, ESI
	MOV DWORD PTR [ESI], offset [LEGO1_rdata.m4040_ptr]
	CALL_LONG(offset [LEGO1_text.m4D3B0_sub_1004E3B0])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	MOV EAX, ESI
	MOV ECX,DWORD PTR [EBP+var_10+0x4]
	MOV DWORD PTR FS:[0x00000000],ECX
	POP ESI
	MOV ESP, EBP
	POP EBP
	RET
}
}

__declspec(naked) DWORD LEGO1_sub_1004E340()
{
	enum{
		var_14 = -0x14,
		var_10 = -0x10,
		var_8 = -0x8,
	};

__asm{
	MOV EAX, DWORD PTR FS:[0x00000000]
	PUSH EBP
	MOV EBP, ESP
	PUSH -0x01
	PUSH offset [LEGO1_text.m4D395_proc_1004E395]
	MOV DWORD PTR [ECX], offset [LEGO1_rdata.m4040_ptr]
	PUSH EAX
	XOR EAX, EAX
	MOV DWORD PTR FS:[0x00000000],ESP
	SUB ESP, 0x04
	MOV DWORD PTR [EBP+var_14+0x4],ECX
	MOV DWORD PTR [EBP+var_8+0x4],EAX
	MOV BYTE PTR [EBP+var_8+0x4],AL
	CALL_LONG(offset [LEGO1_text.m4D38A_sub_1004E38A])
	MOV DWORD PTR [EBP+var_8+0x4],0xFFFFFFFF
	CALL_LONG(offset [LEGO1_text.m4D39F_sub_1004E39F])
	MOV EAX,DWORD PTR [EBP+var_10+0x4]
	MOV ESP, EBP
	MOV DWORD PTR FS:[0x00000000], EAX
	POP EBP
	RET
}
}

